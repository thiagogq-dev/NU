[
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/redis/pull/3322",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53cc8d7ce66b971d540341d279aa7b8843bcf482",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/redis/pull/1418",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53cc8d7ce66b971d540341d279aa7b8843bcf482",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "chbrown/rfc6902",
        "CVE_ID": "CVE-2021-4245",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability classified as problematic has been found in chbrown rfc6902. This affects an unknown part of the file pointer.ts. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The exploit has been disclosed to the public and may be used. The name of the patch is c006ce9faa43d31edb34924f1df7b79c137096cf. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215883.",
        "URL": "https://github.com/chbrown/rfc6902/pull/76",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b3fa8360e1d1751a23015b2b37622ede16c6d43",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "curl/curl",
        "CVE_ID": "CVE-2018-1000005",
        "Problem_Type": "CWE-125",
        "Description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
        "URL": "https://github.com/curl/curl/pull/2231",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f1e5a4fa7bc77ea82d11bb258cc3b7207a2db342",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Flask-Middleware/flask-security",
        "CVE_ID": "CVE-2021-21241",
        "Problem_Type": "CWE-352",
        "Description": "The Python \"Flask-Security-Too\" package is used for adding security features to your Flask application. It is an is a independently maintained version of Flask-Security based on the 3.0.0 version of Flask-Security. In Flask-Security-Too from version 3.3.0 and before version 3.4.5, the /login and /change endpoints can return the authenticated user's authentication token in response to a GET request. Since GET requests aren't protected with a CSRF token, this could lead to a malicious 3rd party site acquiring the authentication token. Version 3.4.5 and version 4.0.0 are patched. As a workaround, if you aren't using authentication tokens - you can set the SECURITY_TOKEN_MAX_AGE to \"0\" (seconds) which should make the token unusable.",
        "URL": "https://github.com/Flask-Middleware/flask-security/pull/422",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c05afe837e83f20f59c0fb409ce1240341d1ec41",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2021-44219",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gin-Vue-Admin before 2.4.6 mishandles a SQL database.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/811",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "99f3d4367a7d00148e1de7a16c153ddd4d39c3df",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2020-36567",
        "Problem_Type": "CWE-116",
        "Description": "Unsanitized input in the default logger in github.com/gin-gonic/gin before v1.6.0 allows remote attackers to inject arbitrary log lines.",
        "URL": "https://github.com/gin-gonic/gin/pull/2237",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b4ee29a192b30646f7a182820ccec1ac33ccc6b",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-36188",
        "Problem_Type": "CWE-74",
        "Description": "An issue in langchain v.0.0.64 allows a remote attacker to execute arbitrary code via the PALChain parameter in the Python exec method.",
        "URL": "https://github.com/hwchase17/langchain/pull/6003",
        "Tag": "['Patch']",
        "fix_commit_hash": "2988514f978f43701014244e675357d0e547af96",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-38896",
        "Problem_Type": "CWE-74",
        "Description": "An issue in Harrison Chase langchain v.0.0.194 and before allows a remote attacker to execute arbitrary code via the from_math_prompt and from_colored_object_prompt functions.",
        "URL": "https://github.com/hwchase17/langchain/pull/6003",
        "Tag": "['Patch']",
        "fix_commit_hash": "2988514f978f43701014244e675357d0e547af96",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2015-8898",
        "Problem_Type": "CWE-476",
        "Description": "The WriteImages function in magick/constitute.c in ImageMagick before 6.9.2-4 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image file.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/34",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "abf21a7aa4ae3318a152fe0e138660dfe410af7d",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2016-7540",
        "Problem_Type": "CWE-19",
        "Description": "coders/rgf.c in ImageMagick before 6.9.4-10 allows remote attackers to cause a denial of service (assertion failure) by converting an image to rgf format.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/223",
        "Tag": "['Issue Tracking', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "e4c6ef37f0ccb2269d807c4f08b63b064971eb46",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "intridea/omniauth-oauth2",
        "CVE_ID": "CVE-2012-6134",
        "Problem_Type": "CWE-352",
        "Description": "Cross-site request forgery (CSRF) vulnerability in the omniauth-oauth2 gem 1.1.1 and earlier for Ruby allows remote attackers to hijack the authentication of users for requests that modify session state.",
        "URL": "https://github.com/intridea/omniauth-oauth2/pull/25",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "64f006a93a0673c781be9b0d72fb48c68fcc95a6",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ipython/ipython",
        "CVE_ID": "CVE-2014-3429",
        "Problem_Type": "CWE-94",
        "Description": "IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page.",
        "URL": "https://github.com/ipython/ipython/pull/4845",
        "Tag": "['Patch', 'Issue Tracking']",
        "fix_commit_hash": "dd4135db9f42d196a46553310a8e63ff5658671d",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libuv/libuv",
        "CVE_ID": "CVE-2014-9748",
        "Problem_Type": "CWE-362",
        "Description": "The uv_rwlock_t fallback implementation for Windows XP and Server 2003 in libuv before 1.7.4 does not properly prevent threads from releasing the locks of other threads, which allows attackers to cause a denial of service (deadlock) or possibly have unspecified other impact by leveraging a race condition.",
        "URL": "https://github.com/libuv/libuv/pull/516",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0fba3f3c5445dd09b0ea46f30c77e903ead861e5",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "LuaJIT/LuaJIT",
        "CVE_ID": "CVE-2019-19391",
        "Problem_Type": "CWE-843",
        "Description": "In LuaJIT through 2.0.5, as used in Moonjit before 2.1.2 and other products, debug.getinfo has a type confusion issue that leads to arbitrary memory write or read operations, because certain cases involving valid stack levels and > options are mishandled. NOTE: The LuaJIT project owner states that the debug libary is unsafe by definition and that this is not a vulnerability. When LuaJIT was originally developed, the expectation was that the entire debug library had no security guarantees and thus it made no sense to assign CVEs. However, not all users of later LuaJIT derivatives share this perspective",
        "URL": "https://github.com/LuaJIT/LuaJIT/pull/526",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0968b720b7ba133d723270c1fa8ba4ea3c09e813",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "madler/zlib",
        "CVE_ID": "CVE-2023-45853",
        "Problem_Type": "CWE-190",
        "Description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "URL": "https://github.com/madler/zlib/pull/843",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "1fba755cb2ca5a3761096d2e340c455d5f3f60be",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "matrix-org/matrix-spec-proposals",
        "CVE_ID": "CVE-2022-39236",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Matrix Javascript SDK is the Matrix Client-Server SDK for JavaScript. Starting with version 17.1.0-rc.1, improperly formed beacon events can disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer. This is patched in matrix-js-sdk v19.7.0. Redacting applicable events, waiting for the sync processor to store data, and restarting the client are possible workarounds. Alternatively, redacting the applicable events and clearing all storage will fix the further perceived issues. Downgrading to an unaffected version, noting that such a version may be subject to other vulnerabilities, will additionally resolve the issue.",
        "URL": "https://github.com/matrix-org/matrix-spec-proposals/pull/3488",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9b780e0e6073a16d642094ccf0fd86aa6d31bd4e",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "mscdex/dicer",
        "CVE_ID": "CVE-2022-24434",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
        "URL": "https://github.com/mscdex/dicer/pull/22/commits/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "204800e5885434cdd402ae9e562c3d56d1054b62",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "mscdex/dicer",
        "CVE_ID": "CVE-2022-24434",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
        "URL": "https://github.com/mscdex/dicer/pull/22",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "204800e5885434cdd402ae9e562c3d56d1054b62",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "nodejs/node",
        "CVE_ID": "CVE-2022-29244",
        "Problem_Type": "CWE-200",
        "Description": "npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.",
        "URL": "https://github.com/nodejs/node/pull/43210",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "885bbe42de3fc9c1c4a8ee627579238c80b00cf1",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "nothings/stb",
        "CVE_ID": "CVE-2023-43898",
        "Problem_Type": "CWE-476",
        "Description": "Nothings stb 2.28 was discovered to contain a Null Pointer Dereference via the function stbi__convert_format. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted pic file.",
        "URL": "https://github.com/nothings/stb/pull/1454",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "af4456ba68aa39ba2b41a01ad06de3b4b8ce2e87",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "omniauth/omniauth",
        "CVE_ID": "CVE-2015-9284",
        "Problem_Type": "CWE-352",
        "Description": "The request phase of the OmniAuth Ruby gem (1.9.1 and earlier) is vulnerable to Cross-Site Request Forgery when used as part of the Ruby on Rails framework, allowing accounts to be connected without user intent, user interaction, or feedback to the user. This permits a secondary account to be able to sign into the web application as the primary account.",
        "URL": "https://github.com/omniauth/omniauth/pull/809",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e919007800d14e8b7e6c73f645cc1f8d5a730676",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    }
]