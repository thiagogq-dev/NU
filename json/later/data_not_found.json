[
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/redis/pull/3322",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53cc8d7ce66b971d540341d279aa7b8843bcf482",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/redis/pull/1418",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53cc8d7ce66b971d540341d279aa7b8843bcf482",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "chbrown/rfc6902",
        "CVE_ID": "CVE-2021-4245",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability classified as problematic has been found in chbrown rfc6902. This affects an unknown part of the file pointer.ts. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The exploit has been disclosed to the public and may be used. The name of the patch is c006ce9faa43d31edb34924f1df7b79c137096cf. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215883.",
        "URL": "https://github.com/chbrown/rfc6902/pull/76",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b3fa8360e1d1751a23015b2b37622ede16c6d43",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "curl/curl",
        "CVE_ID": "CVE-2018-1000005",
        "Problem_Type": "CWE-125",
        "Description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
        "URL": "https://github.com/curl/curl/pull/2231",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f1e5a4fa7bc77ea82d11bb258cc3b7207a2db342",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Flask-Middleware/flask-security",
        "CVE_ID": "CVE-2021-21241",
        "Problem_Type": "CWE-352",
        "Description": "The Python \"Flask-Security-Too\" package is used for adding security features to your Flask application. It is an is a independently maintained version of Flask-Security based on the 3.0.0 version of Flask-Security. In Flask-Security-Too from version 3.3.0 and before version 3.4.5, the /login and /change endpoints can return the authenticated user's authentication token in response to a GET request. Since GET requests aren't protected with a CSRF token, this could lead to a malicious 3rd party site acquiring the authentication token. Version 3.4.5 and version 4.0.0 are patched. As a workaround, if you aren't using authentication tokens - you can set the SECURITY_TOKEN_MAX_AGE to \"0\" (seconds) which should make the token unusable.",
        "URL": "https://github.com/Flask-Middleware/flask-security/pull/422",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c05afe837e83f20f59c0fb409ce1240341d1ec41",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2021-44219",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gin-Vue-Admin before 2.4.6 mishandles a SQL database.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/811",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "99f3d4367a7d00148e1de7a16c153ddd4d39c3df",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2020-36567",
        "Problem_Type": "CWE-116",
        "Description": "Unsanitized input in the default logger in github.com/gin-gonic/gin before v1.6.0 allows remote attackers to inject arbitrary log lines.",
        "URL": "https://github.com/gin-gonic/gin/pull/2237",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b4ee29a192b30646f7a182820ccec1ac33ccc6b",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-36188",
        "Problem_Type": "CWE-74",
        "Description": "An issue in langchain v.0.0.64 allows a remote attacker to execute arbitrary code via the PALChain parameter in the Python exec method.",
        "URL": "https://github.com/hwchase17/langchain/pull/6003",
        "Tag": "['Patch']",
        "fix_commit_hash": "2988514f978f43701014244e675357d0e547af96",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-38896",
        "Problem_Type": "CWE-74",
        "Description": "An issue in Harrison Chase langchain v.0.0.194 and before allows a remote attacker to execute arbitrary code via the from_math_prompt and from_colored_object_prompt functions.",
        "URL": "https://github.com/hwchase17/langchain/pull/6003",
        "Tag": "['Patch']",
        "fix_commit_hash": "2988514f978f43701014244e675357d0e547af96",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2015-8898",
        "Problem_Type": "CWE-476",
        "Description": "The WriteImages function in magick/constitute.c in ImageMagick before 6.9.2-4 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image file.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/34",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "abf21a7aa4ae3318a152fe0e138660dfe410af7d",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2016-7540",
        "Problem_Type": "CWE-19",
        "Description": "coders/rgf.c in ImageMagick before 6.9.4-10 allows remote attackers to cause a denial of service (assertion failure) by converting an image to rgf format.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/223",
        "Tag": "['Issue Tracking', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "e4c6ef37f0ccb2269d807c4f08b63b064971eb46",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "intridea/omniauth-oauth2",
        "CVE_ID": "CVE-2012-6134",
        "Problem_Type": "CWE-352",
        "Description": "Cross-site request forgery (CSRF) vulnerability in the omniauth-oauth2 gem 1.1.1 and earlier for Ruby allows remote attackers to hijack the authentication of users for requests that modify session state.",
        "URL": "https://github.com/intridea/omniauth-oauth2/pull/25",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "64f006a93a0673c781be9b0d72fb48c68fcc95a6",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ipython/ipython",
        "CVE_ID": "CVE-2014-3429",
        "Problem_Type": "CWE-94",
        "Description": "IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page.",
        "URL": "https://github.com/ipython/ipython/pull/4845",
        "Tag": "['Patch', 'Issue Tracking']",
        "fix_commit_hash": "dd4135db9f42d196a46553310a8e63ff5658671d",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    }
]