[
    {
        "repo_name": "rust-blockchain/evm",
        "CVE_ID": "CVE-2021-41153",
        "Problem_Type": "CWE-670",
        "Description": "The evm crate is a pure Rust implementation of Ethereum Virtual Machine. In `evm` crate `< 0.31.0`, `JUMPI` opcode's condition is checked after the destination validity check. However, according to Geth and OpenEthereum, the condition check should happen before the destination validity check. This is a **high** severity security advisory if you use `evm` crate for Ethereum mainnet. In this case, you should update your library dependency immediately to on or after `0.31.0`. This is a **low** severity security advisory if you use `evm` crate in Frontier or in a standalone blockchain, because there's no security exploit possible with this advisory. It is **not** recommended to update to on or after `0.31.0` until all the normal chain upgrade preparations have been done. If you use Frontier or other `pallet-evm` based Substrate blockchain, please ensure to update your `spec_version` before updating this. For other blockchains, please make sure to follow a hard-fork process before you update this.",
        "URL": "https://github.com/rust-blockchain/evm/pull/67",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "15a867f05f63c65359b0470f89e047da9571717c",
        "inducing_commit_hash_pyszz": [
            "e7d0cf355aee0cf085083144a08935fbc3063ad1"
        ],
        "inducing_commit_hash_pd": [
            "e7d0cf355aee0cf085083144a08935fbc3063ad1"
        ],
        "matched": [
            "e7d0cf355aee0cf085083144a08935fbc3063ad1"
        ]
    },
    {
        "repo_name": "rust-blockchain/evm",
        "CVE_ID": "CVE-2022-39354",
        "Problem_Type": "CWE-670",
        "Description": "SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use the `is_static` parameter to determine if the call is executed in a static context (via `STATICCALL`), and thus decide if stateful operations should be done. Prior to version 0.36.0, the passed `is_static` parameter was incorrect -- it was only set to `true` if the call came from a direct `STATICCALL` opcode. However, once a static call context is entered, it should stay static. The issue only impacts custom precompiles that actually uses `is_static`. For those affected, the issue can lead to possible incorrect state transitions. Version 0.36.0 contains a patch. There are no known workarounds.",
        "URL": "https://github.com/rust-blockchain/evm/pull/133",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6534c1dd8ad77b53d05032f80e8a5f2de4d37fd2",
        "inducing_commit_hash_pyszz": [
            "51b8c2ce3104265e1fd5bb0fe5cdfd2e0938239c"
        ],
        "inducing_commit_hash_pd": [
            "aff8692dc42b720e739eb120f798edd025cd859a",
            "01bcbd2205a212c34451d3b4fabc962793b057d3",
            "51b8c2ce3104265e1fd5bb0fe5cdfd2e0938239c"
        ],
        "matched": [
            "51b8c2ce3104265e1fd5bb0fe5cdfd2e0938239c"
        ]
    }
]