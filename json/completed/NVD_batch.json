[
    {
        "repo_name": "1Panel-dev/1Panel",
        "CVE_ID": "CVE-2024-24768",
        "Problem_Type": "CWE-311",
        "Description": "1Panel is an open source Linux server operation and maintenance management panel. The HTTPS cookie that comes with the panel does not have the Secure keyword, which may cause the cookie to be sent in plain text if accessed using HTTP. This issue has been patched in version 1.9.6.\n\n",
        "URL": "https://github.com/1Panel-dev/1Panel/pull/3817",
        "Tag": "['Patch']",
        "fix_commit_hash": "1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
        "inducing_commit_hash_pyszz": [
            "10684f9aac872c9ab4b1be8829c891ba8674fd70"
        ],
        "inducing_commit_hash_pd": [
            "5342b758cb20cb0be49a800ff65442a2d86037a9",
            "10684f9aac872c9ab4b1be8829c891ba8674fd70"
        ],
        "matched": [
            "10684f9aac872c9ab4b1be8829c891ba8674fd70"
        ]
    },
    {
        "repo_name": "aaugustin/websockets",
        "CVE_ID": "CVE-2018-1000518",
        "Problem_Type": "CWE-400",
        "Description": "aaugustin websockets version 4 contains a CWE-409: Improper Handling of Highly Compressed Data (Data Amplification) vulnerability in Servers and clients, unless configured with compression=None that can result in Denial of Service by memory exhaustion. This attack appear to be exploitable via Sending a specially crafted frame on an established connection. This vulnerability appears to have been fixed in 5.",
        "URL": "https://github.com/aaugustin/websockets/pull/407",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b6a25ceb3555d0ba69e5961b8d7616e4c1aecb2b",
        "inducing_commit_hash_pyszz": [
            "f83362ef91a6ac2ea89fd8bda4d18ff22ffb7a40"
        ],
        "inducing_commit_hash_pd": [
            "09d443971b6b126eab55d6b961880c54dabdbcdd",
            "cb6f56e70a5e1a27a85e3ea4529a6e6fed223223",
            "f83362ef91a6ac2ea89fd8bda4d18ff22ffb7a40",
            "7e878e6d0e479b7df251aaa65c58922fb71e8a74",
            "2cf56e9af53d8a22ca320d817c657e9bc83dd27d",
            "1e81db7d07412bf521d4be99200b41169b5f4236"
        ],
        "matched": [
            "f83362ef91a6ac2ea89fd8bda4d18ff22ffb7a40"
        ]
    },
    {
        "repo_name": "abhinavsingh/proxy.py",
        "CVE_ID": "CVE-2021-3116",
        "Problem_Type": "CWE-697",
        "Description": "before_upstream_connection in AuthPlugin in http/proxy/auth.py in proxy.py before 2.3.1 accepts incorrect Proxy-Authorization header data because of a boolean confusion (and versus or).",
        "URL": "https://github.com/abhinavsingh/proxy.py/pull/482/commits/9b00093288237f5073c403f2c4f62acfdfa8ed46",
        "Tag": "['Patch']",
        "fix_commit_hash": "bff171ec26d826ae1d22d2466eaf9d8bdbf059d3",
        "inducing_commit_hash_pyszz": [
            "6d3135cab6d2897a10299eb95746f3ff70821c38"
        ],
        "inducing_commit_hash_pd": [
            "ea227b1cdf8befa5d1228ae17b20e715986e2a4c",
            "5bdfd20ce8289b9c2137791a1e10d7e1b5aa39f7",
            "c3cd9be816b2710775d792195bbeed6a898c721a",
            "5d4f73541537282c3dcea6b7c26972a3254cee49",
            "0744cd8e7fc6985f5ab5656685833b85a096ddf0",
            "c943dd7e27eaed3a72c144e9350cef6e1305fcfc",
            "c302537572065154b57df781b87f7c023fb19736",
            "4019e95850523ee53a392d04630c468113c8ba95",
            "e42cfefcf6eab9037fb6257871bef8d37ed1c0ac",
            "397f92e56173f5494a50af0b5537027a5b43f663",
            "b03629fa0df1595eb4995427bc601063be7fdca9",
            "dc560be6ea140ad3eb551922bab637e735200da4",
            "62012ed1814d47ca7489f800de882fa5e2788044",
            "93d8a55c0e39a7d8065dc814e84523277e055cb9",
            "e14548252ca60f754368587a605547be6fd001c6",
            "f3c1ce664edd985e6d480b87faf29747f16f8f5e",
            "8ba63b1821da69de2880b256bde4cb6ff3792185",
            "269484df2e89bc659124177d339d4fc59f280cba",
            "7f9385ed1cbcb2d9e53760ce0c9512cd67c0b19a",
            "e4ba6b16cd68c15c11d75e2da72907463422f9d9",
            "ab1198268c9e845eccaea56b20be32c39b14c2fe",
            "a1bb659488603aae67e43aa5de932284a690ac00",
            "31bd810b6510a2a342baefd696c67f48fbda9968",
            "ad42e0d74df4917b70c2cac3249e0133a3f197d2",
            "a9c8659ffa9ac5c28cb1a776dc625f1a058d26e5",
            "e23444b766aaff5a484deef636d887dcaa30d5e1",
            "807c93f253798433ec1b23f731b87b12f3bc701f",
            "439d58fdc26332496a43dcdc439440cfd1cc6293",
            "bb7006b67ac7b9a4c44417b05b1dea0c8942cc33",
            "ac29e34137203b7d9e1ca29870d329e6f5b0b945",
            "131e9366ac7890373c194718b4687e67ff61cfe5",
            "0cc4e5e625865d1f790059f8f57d9b79c98b73a8",
            "d0f696212e42ab66c627cb8f65130cfd9b438060",
            "91a6942e49a8e06c0d277fac868641c52f42e167",
            "033b7ad24a51c7084190405a983ec11572b5073a",
            "6d3135cab6d2897a10299eb95746f3ff70821c38",
            "f04845cd645e642b92a40ea5650fd805f4f9ad04",
            "9e950436a71140f6046adf483b8156639cd97bb4",
            "0e2194d683e739a6ebcc69f460bf6fed5c9f2fdd",
            "92142a70d98d01a9c1e3cbe987d0f4ce9a13edc3",
            "b7c4c5f17511dd610bd75c073ac08d8b7c7c2b53",
            "3d65366c7bb5be9558489d5c7170bf7f7cfd904b",
            "908c0b585525b9641958fd1664bb9047bb0f1bc5"
        ],
        "matched": [
            "6d3135cab6d2897a10299eb95746f3ff70821c38"
        ]
    },
    {
        "repo_name": "abodelot/jquery.json-viewer",
        "CVE_ID": "CVE-2022-30241",
        "Problem_Type": "CWE-79",
        "Description": "The jquery.json-viewer library through 1.4.0 for Node.js does not properly escape characters such as < in a JSON object, as demonstrated by a SCRIPT element.",
        "URL": "https://github.com/abodelot/jquery.json-viewer/pull/26",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe890813fc3980e60d5ba0f41834c8581b3e6361",
        "inducing_commit_hash_pyszz": [
            "1c700fa3e4a9e85202aa85807fd19f56da80c9af"
        ],
        "inducing_commit_hash_pd": [
            "1c700fa3e4a9e85202aa85807fd19f56da80c9af",
            "dd2db487f7ff1a7df2dd669b116a28908e3cd8e3"
        ],
        "matched": [
            "1c700fa3e4a9e85202aa85807fd19f56da80c9af"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2020-15306",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in OpenEXR before v2.5.2. Invalid chunkCount attributes could cause a heap buffer overflow in getChunkOffsetTableSize() in IlmImf/ImfMisc.cpp.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/738",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a9f8af6e89547bcd370ae3cec2b12849eee0b54",
        "inducing_commit_hash_pyszz": [
            "f580a0ba13dbead561e25dd89e9ce46df941b834"
        ],
        "inducing_commit_hash_pd": [
            "f580a0ba13dbead561e25dd89e9ce46df941b834",
            "6cf09aea90c21f95c651ba91bc617ea351bacfad",
            "9f011ae9ce9b1ca03521ff76e7659d34ee830344"
        ],
        "matched": [
            "f580a0ba13dbead561e25dd89e9ce46df941b834"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20298",
        "Problem_Type": "CWE-787",
        "Description": "A flaw was found in OpenEXR's B44Compressor. This flaw allows an attacker who can submit a crafted file to be processed by OpenEXR, to exhaust all memory accessible to the application. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/843",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "85fd638ae0d5fa132434f4cbf32590261c1dba97",
        "inducing_commit_hash_pyszz": [
            "e08946ade358313859a03fa367f647ef223a192c"
        ],
        "inducing_commit_hash_pd": [
            "e08946ade358313859a03fa367f647ef223a192c"
        ],
        "matched": [
            "e08946ade358313859a03fa367f647ef223a192c"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20300",
        "Problem_Type": "CWE-190",
        "Description": "A flaw was found in OpenEXR's hufUncompress functionality in OpenEXR/IlmImf/ImfHuf.cpp. This flaw allows an attacker who can submit a crafted file that is processed by OpenEXR, to trigger an integer overflow. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/836",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed560b8a932c78d5e8e5990ce36fe7808b35d9f0",
        "inducing_commit_hash_pyszz": [
            "801272c9bf8b84a66c62f1e8a4490ece81da6a56"
        ],
        "inducing_commit_hash_pd": [
            "801272c9bf8b84a66c62f1e8a4490ece81da6a56"
        ],
        "matched": [
            "801272c9bf8b84a66c62f1e8a4490ece81da6a56"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20302",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A flaw was found in OpenEXR's TiledInputFile functionality. This flaw allows an attacker who can submit a crafted single-part non-image to be processed by OpenEXR, to trigger a floating-point exception error. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/842",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b6886cbd972ebe4be8f10e8a0dd50ddffc71c23",
        "inducing_commit_hash_pyszz": [
            "d80f11f4f55100d007ae80a162bf257ec291612c"
        ],
        "inducing_commit_hash_pd": [
            "d80f11f4f55100d007ae80a162bf257ec291612c",
            "9f011ae9ce9b1ca03521ff76e7659d34ee830344"
        ],
        "matched": [
            "d80f11f4f55100d007ae80a162bf257ec291612c"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20303",
        "Problem_Type": "CWE-190",
        "Description": "A flaw found in function dataWindowForTile() of IlmImf/ImfTiledMisc.cpp. An attacker who is able to submit a crafted file to be processed by OpenEXR could trigger an integer overflow, leading to an out-of-bounds write on the heap. The greatest impact of this flaw is to application availability, with some potential impact to data integrity as well.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31472b638bb2bd7020a3465d6e6ddffd564ae0ea",
        "inducing_commit_hash_pyszz": [
            "50e9b31cc1069a787458b368b64e6452f7541da1"
        ],
        "inducing_commit_hash_pd": [
            "50e9b31cc1069a787458b368b64e6452f7541da1",
            "5788a07609d3a24df80afa9d6e95d9c541da70e6"
        ],
        "matched": [
            "50e9b31cc1069a787458b368b64e6452f7541da1"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20304",
        "Problem_Type": "CWE-190",
        "Description": "A flaw was found in OpenEXR's hufDecode functionality. This flaw allows an attacker who can pass a crafted file to be processed by OpenEXR, to trigger an undefined right shift error. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/849",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "51a92d67f53c08230734e74564c807043cbfe41e",
        "inducing_commit_hash_pyszz": [
            "88246d991e0318c043e6f584f7493da08a31f9f8"
        ],
        "inducing_commit_hash_pd": [
            "6e37ef8aed4e20ea834f570845533b65a97a3bc4",
            "7f0c9e256f34cac5a31e9d9cce00ccc898f49f3b",
            "88246d991e0318c043e6f584f7493da08a31f9f8",
            "51845c1e857549d95c6bc27aa1aff37eebe244ed"
        ],
        "matched": [
            "88246d991e0318c043e6f584f7493da08a31f9f8"
        ]
    },
    {
        "repo_name": "acassen/keepalived",
        "CVE_ID": "CVE-2018-19115",
        "Problem_Type": "CWE-787",
        "Description": "keepalived before 2.0.7 has a heap-based buffer overflow when parsing HTTP status codes resulting in DoS or possibly unspecified other impact, because extract_status_code in lib/html.c has no validation of the status code and instead writes an unlimited amount of data to the heap.",
        "URL": "https://github.com/acassen/keepalived/pull/961/commits/f28015671a4b04785859d1b4b1327b367b6a10e9",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f28015671a4b04785859d1b4b1327b367b6a10e9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "33a4dd3613a3ad7717a5faa8f0840817f2070914",
            "e023f42b44e50c5768d09100136cb9a3a8d9bc21"
        ],
        "matched": [
            "33a4dd3613a3ad7717a5faa8f0840817f2070914"
        ]
    },
    {
        "repo_name": "achernya/hesiod",
        "CVE_ID": "CVE-2016-10151",
        "Problem_Type": "CWE-264",
        "Description": "The hesiod_init function in lib/hesiod.c in Hesiod 3.2.1 compares EUID with UID to determine whether to use configurations from environment variables, which allows local users to gain privileges via the (1) HESIOD_CONFIG or (2) HES_DOMAIN environment variable and leveraging certain SUID/SGUID binary.",
        "URL": "https://github.com/achernya/hesiod/pull/9",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "39b21dac9bc6473365de04d94be0da94941c7c73",
        "inducing_commit_hash_pyszz": [
            "fb5778afcc17671282eab183b766c61ccdf41a34"
        ],
        "inducing_commit_hash_pd": [
            "fb5778afcc17671282eab183b766c61ccdf41a34",
            "6b41c0866478cfc716daef55b6cf0c6a4a542c75"
        ],
        "matched": [
            "fb5778afcc17671282eab183b766c61ccdf41a34"
        ]
    },
    {
        "repo_name": "ACINQ/eclair",
        "CVE_ID": "CVE-2021-41591",
        "Problem_Type": "CWE-770",
        "Description": "ACINQ Eclair before 0.6.3 allows loss of funds because of dust HTLC exposure.",
        "URL": "https://github.com/ACINQ/eclair/pull/1985",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "75eafd0e4d4d93ac51e40a56c85e9df87a47d391",
        "inducing_commit_hash_pyszz": [
            "af618bc44fe6054957f65d77000a460c14b41f30"
        ],
        "inducing_commit_hash_pd": [
            "f202587e9c71b2106194c0e6cabc8032f6f67df4",
            "daddfc007fe569c89bb854ef5d672614d397e91e",
            "08c21fa5e919c4033c3606c3abe5e5830b6a230d",
            "84650f8147d4c6a3037d0a5e3d8207a2628cc6d9",
            "5b7a474b6a758aab00bbb651c141eb5c7045d04f",
            "46e48735620d1bbce722c9715af22de783791060",
            "c22596bb9243331c8195998738a89d1b0739bf60",
            "95b34f270f32eabbf0145880850ebf393d96831e",
            "92e53dc9a9b2d9f717ac45889ac954681d1da95b",
            "5b718bffac46fc5907f71a9ef0b172cc72b2d30f",
            "92a094c4987133bf2496a7b3515c7bd89de0d524",
            "4012db582815e4d77b4cb20831bb11db0e90a6a7",
            "af618bc44fe6054957f65d77000a460c14b41f30",
            "06b2337ed905ad72ba7fc0b7d7b110cd6c78ca39",
            "d07a20135312a7461344bda3fbbfd028ab287ac5",
            "22b6bfb0abce4f7f27f91be625e129f0a0beb20d",
            "c7cc536b9da8a6b14ce3f4eeb993fbe00952fa2f",
            "4875d4c879fcfc82560b4f365a2b0b947bd4187b",
            "b728520ad7f3d8f5968c0f5d8d29dbb587ebb4b0",
            "9f2b0368c70e62351ff880044a6a0af946fdaa72",
            "31022ceca52e5e16e0353de3cdbb3c3330d2e574",
            "ab7b373d58e64cade16e6935c25ccfd26dfd27ff",
            "8887ac20433d8e9d12d367e326e516129d5414dc",
            "6b05099f073c1cf74098b690a2c7928f647b8231",
            "768a74558f184477bb0ca30670407178f179b0a1",
            "f061f598036f6b08608c5ebb59f95dbd9600101c"
        ],
        "matched": [
            "af618bc44fe6054957f65d77000a460c14b41f30"
        ]
    },
    {
        "repo_name": "acrontum/filesystem-template",
        "CVE_ID": "CVE-2022-21186",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The package @acrontum/filesystem-template before 0.0.2 are vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.",
        "URL": "https://github.com/acrontum/filesystem-template/pull/14/commits/baeb727b60991ad82d9e63ac660883793abc0acc",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "baeb727b60991ad82d9e63ac660883793abc0acc",
        "inducing_commit_hash_pyszz": [
            "6555a09a7effb6645c67f222189f79b5dec34478"
        ],
        "inducing_commit_hash_pd": [
            "6555a09a7effb6645c67f222189f79b5dec34478",
            "84ea6cbcda7adcf5a1a188fe6082fa2f4d6f6978"
        ],
        "matched": [
            "6555a09a7effb6645c67f222189f79b5dec34478"
        ]
    },
    {
        "repo_name": "actions/runner",
        "CVE_ID": "CVE-2022-39321",
        "Problem_Type": "CWE-78",
        "Description": "GitHub Actions Runner is the application that runs a job from a GitHub Actions workflow. The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered in versions prior to 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4 that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use container actions, job containers, or service containers alongside untrusted user inputs in environment variables may be vulnerable. The Actions Runner has been patched, both on `github.com` and hotfixes for GHES and GHAE customers in versions 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4. GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions. As a workaround, users may consider removing any container actions, job containers, or service containers from their jobs until they are able to upgrade their runner versions.",
        "URL": "https://github.com/actions/runner/pull/2107",
        "Tag": "['Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "96f4f5e76e5b033ee874429f2df541a343ade3c8",
        "inducing_commit_hash_pyszz": [
            "8dc5ca220812447475485490f2103f97f9ea110b"
        ],
        "inducing_commit_hash_pd": [
            "8dc5ca220812447475485490f2103f97f9ea110b",
            "01fd04464d931699c6989f7c366a5ff3e155fe56"
        ],
        "matched": [
            "8dc5ca220812447475485490f2103f97f9ea110b"
        ]
    },
    {
        "repo_name": "actions/runner",
        "CVE_ID": "CVE-2022-39321",
        "Problem_Type": "CWE-78",
        "Description": "GitHub Actions Runner is the application that runs a job from a GitHub Actions workflow. The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered in versions prior to 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4 that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use container actions, job containers, or service containers alongside untrusted user inputs in environment variables may be vulnerable. The Actions Runner has been patched, both on `github.com` and hotfixes for GHES and GHAE customers in versions 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4. GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions. As a workaround, users may consider removing any container actions, job containers, or service containers from their jobs until they are able to upgrade their runner versions.",
        "URL": "https://github.com/actions/runner/pull/2108",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed191b78ae33fb3dbc23b0135a9c4e355163dd31",
        "inducing_commit_hash_pyszz": [
            "5e0c2ef8165ef645e165286e90ce460c1aa17b3c"
        ],
        "inducing_commit_hash_pd": [
            "5e0c2ef8165ef645e165286e90ce460c1aa17b3c",
            "95459dea5f9a131ec084e2e2b53e8c87f61db81e",
            "01fd04464d931699c6989f7c366a5ff3e155fe56"
        ],
        "matched": [
            "5e0c2ef8165ef645e165286e90ce460c1aa17b3c"
        ]
    },
    {
        "repo_name": "activeadmin/activeadmin",
        "CVE_ID": "CVE-2023-50448",
        "Problem_Type": "CWE-1236",
        "Description": "In ActiveAdmin (aka Active Admin) before 2.12.0, a concurrency issue allows a malicious actor to access potentially private data (that belongs to another user) by making CSV export requests at certain specific times.",
        "URL": "https://github.com/activeadmin/activeadmin/pull/7336",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "43d3a4a1a61713683fde7ce84e8ee9534f6c96ed",
        "inducing_commit_hash_pyszz": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ],
        "inducing_commit_hash_pd": [
            "bc791b3e3cf8084e4d9644650cbc7570b97a801a",
            "69f213476129baf55a615d40456fc752bfdfe814",
            "0af41dfdcab1f3974814d27d0b6f32929a0c682d",
            "d00792fbf26fe4f49b0c14147c8fd0c5451b8a14",
            "e9a38801e00ba36609e2961e76783445cab73070",
            "f495d16f3f400e549da6119f4b8213d62bb80c65",
            "11383fd42a5953bbe417b18270cc00dfe8609ad5",
            "d3b25b06318e5b256bf3f71d6b2ed69573896c4a",
            "7bcbd62b5373181b72aac41ce162d5a5df6b1f69",
            "4d14a073d89a9faf8577bd6c19664eb8a0ed0a58",
            "3260bf00067a8223914ce8eaffca107912f6d6d5",
            "cb3959290fa5e65211585df78e2c7bea06eaf881"
        ],
        "matched": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ]
    },
    {
        "repo_name": "activeadmin/activeadmin",
        "CVE_ID": "CVE-2023-51763",
        "Problem_Type": "CWE-1236",
        "Description": "csv_builder.rb in ActiveAdmin (aka Active Admin) before 3.2.0 allows CSV injection.",
        "URL": "https://github.com/activeadmin/activeadmin/pull/8161",
        "Tag": "['Patch']",
        "fix_commit_hash": "697be2b183491beadc8f0b7d8b5bfb44f2387909",
        "inducing_commit_hash_pyszz": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ],
        "inducing_commit_hash_pd": [
            "3fb4c51445567b574f98d5330e9b8848147e36c4",
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ],
        "matched": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ]
    },
    {
        "repo_name": "adaltas/node-printf",
        "CVE_ID": "CVE-2021-23354",
        "Problem_Type": "CWE-1333",
        "Description": "The package printf before 0.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex string /\\%(?:\\(([\\w_.]+)\\)|([1-9]\\d*)\\$)?([0 +\\-\\]*)(\\*|\\d+)?(\\.)?(\\*|\\d+)?[hlL]?([\\%bscdeEfFgGioOuxX])/g in lib/printf.js. The vulnerable regular expression has cubic worst-case time complexity.",
        "URL": "https://github.com/adaltas/node-printf/pull/32",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8502e7c9b0b22555696a2d8ef67722086413a68",
        "inducing_commit_hash_pyszz": [
            "1456b115685791329c6fa6ca4237b7965f10cf82"
        ],
        "inducing_commit_hash_pd": [
            "1456b115685791329c6fa6ca4237b7965f10cf82"
        ],
        "matched": [
            "1456b115685791329c6fa6ca4237b7965f10cf82"
        ]
    },
    {
        "repo_name": "adamghill/django-unicorn",
        "CVE_ID": "CVE-2021-42053",
        "Problem_Type": "CWE-79",
        "Description": "The Unicorn framework through 0.35.3 for Django allows XSS via component.name.",
        "URL": "https://github.com/adamghill/django-unicorn/pull/288/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa5b9835d946bd9893ef02e556859e3ea62cc5e2",
        "inducing_commit_hash_pyszz": [
            "c38e2a8bbb3ec6a8cdba30813282d9159c90f0d2"
        ],
        "inducing_commit_hash_pd": [
            "f91564c3c0d09c37422c7e5a507177f0847e5bbb",
            "c38e2a8bbb3ec6a8cdba30813282d9159c90f0d2"
        ],
        "matched": [
            "c38e2a8bbb3ec6a8cdba30813282d9159c90f0d2"
        ]
    },
    {
        "repo_name": "AEB-labs/cruddl",
        "CVE_ID": "CVE-2022-36084",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "cruddl is software for creating a GraphQL API for a database, using the GraphQL SDL to model a schema. If cruddl starting with version 1.1.0 and prior to versions 2.7.0 and 3.0.2 is used to generate a schema that uses `@flexSearchFulltext`, users of that schema may be able to inject arbitrary AQL queries that will be forwarded to and executed by ArangoDB. Schemas that do not use `@flexSearchFulltext` are not affected. The attacker needs to have `READ` permission to at least one root entity type that has `@flexSearchFulltext` enabled. The issue has been fixed in version 3.0.2 and in version 2.7.0 of cruddl. As a workaround, users can temporarily remove `@flexSearchFulltext` from their schemas.",
        "URL": "https://github.com/AEB-labs/cruddl/pull/253",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e98fcb5bfd52c5d984d2ddad3c17dd392e192879",
        "inducing_commit_hash_pyszz": [
            "efb4d62f097aa90e179d2c2eaa8888a28944a772"
        ],
        "inducing_commit_hash_pd": [
            "0bdc8bd727cac6907eb1e820f3ff08caae1a7e29",
            "d9391cd2083133098596e48068d0c60084dfe76d"
        ],
        "matched": [
            "efb4d62f097aa90e179d2c2eaa8888a28944a772"
        ]
    },
    {
        "repo_name": "ahorner/text-helpers",
        "CVE_ID": "CVE-2020-36624",
        "Problem_Type": "CWE-1022",
        "Description": "A vulnerability was found in ahorner text-helpers up to 1.0.x. It has been declared as critical. This vulnerability affects unknown code of the file lib/text_helpers/translation.rb. The manipulation of the argument link leads to use of web link to untrusted target with window.opener access. The attack can be initiated remotely. Upgrading to version 1.1.0 is able to address this issue. The name of the patch is 184b60ded0e43c985788582aca2d1e746f9405a3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216520.",
        "URL": "https://github.com/ahorner/text-helpers/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "184b60ded0e43c985788582aca2d1e746f9405a3",
        "inducing_commit_hash_pyszz": [
            "db96a7371f29e61bf6b1dd1dc9c5b8f0cea66662"
        ],
        "inducing_commit_hash_pd": [
            "db96a7371f29e61bf6b1dd1dc9c5b8f0cea66662",
            "a2d4c182ba2923d3800ad0d230a786c6d440b362",
            "0f66a6997f56f21575ead42cea93a613cc84d14a"
        ],
        "matched": [
            "db96a7371f29e61bf6b1dd1dc9c5b8f0cea66662"
        ]
    },
    {
        "repo_name": "aimhubio/aim",
        "CVE_ID": "CVE-2021-43775",
        "Problem_Type": "CWE-22",
        "Description": "Aim is an open-source, self-hosted machine learning experiment tracking tool. Versions of Aim prior to 3.1.0 are vulnerable to a path traversal attack. By manipulating variables that reference files with \u00c2\u201cdot-dot-slash (../)\u00c2\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. The vulnerability issue is resolved in Aim v3.1.0.",
        "URL": "https://github.com/aimhubio/aim/pull/1003",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ],
        "matched": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ]
    },
    {
        "repo_name": "aimhubio/aim",
        "CVE_ID": "CVE-2021-43775",
        "Problem_Type": "CWE-22",
        "Description": "Aim is an open-source, self-hosted machine learning experiment tracking tool. Versions of Aim prior to 3.1.0 are vulnerable to a path traversal attack. By manipulating variables that reference files with \u00c2\u201cdot-dot-slash (../)\u00c2\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. The vulnerability issue is resolved in Aim v3.1.0.",
        "URL": "https://github.com/aimhubio/aim/pull/1003/commits/f01266a1a479ef11d7d6c539e7dd89e9d5639738",
        "Tag": "['Patch']",
        "fix_commit_hash": "b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ],
        "matched": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ]
    },
    {
        "repo_name": "aio-libs/aiohttp-session",
        "CVE_ID": "CVE-2018-1000814",
        "Problem_Type": "CWE-613",
        "Description": "aio-libs aiohttp-session version 2.6.0 and earlier contains a Other/Unknown vulnerability in EncryptedCookieStorage and NaClCookieStorage that can result in Non-expiring sessions / Infinite lifespan. This attack appear to be exploitable via Recreation of a cookie post-expiry with the same value.",
        "URL": "https://github.com/aio-libs/aiohttp-session/pull/331",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1b356f01bbab57d041c9a75bacd72fbbf8524728",
        "inducing_commit_hash_pyszz": [
            "9c06ec32471720af3ae6380d0f4cdaa4f597c9d8"
        ],
        "inducing_commit_hash_pd": [
            "70d4d8eb606e38746f31da8fd51e58b4c8256a07",
            "9c06ec32471720af3ae6380d0f4cdaa4f597c9d8"
        ],
        "matched": [
            "9c06ec32471720af3ae6380d0f4cdaa4f597c9d8"
        ]
    },
    {
        "repo_name": "aio-libs/aiohttp",
        "CVE_ID": "CVE-2024-23334",
        "Problem_Type": "CWE-22",
        "Description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. When using aiohttp as a web server and configuring static routes, it is necessary to specify the root path for static files. Additionally, the option 'follow_symlinks' can be used to determine whether to follow symbolic links outside the static root directory. When 'follow_symlinks' is set to True, there is no validation to check if reading a file is within the root directory. This can lead to directory traversal vulnerabilities, resulting in unauthorized access to arbitrary files on the system, even when symlinks are not present.  Disabling follow_symlinks and using a reverse proxy are encouraged mitigations.  Version 3.9.2 fixes this issue.",
        "URL": "https://github.com/aio-libs/aiohttp/pull/8079",
        "Tag": "['Patch']",
        "fix_commit_hash": "1c335944d6a8b1298baf179b7c0b3069f10c514b",
        "inducing_commit_hash_pyszz": [
            "1ae3ae665ba20d1bfb0d0a5b7179e1104b0931d8"
        ],
        "inducing_commit_hash_pd": [
            "1ae3ae665ba20d1bfb0d0a5b7179e1104b0931d8",
            "ee69c4026ae035bd0a488cbe718eaae5d49fc0e1",
            "48a704d955e9ff04c7a969d615da524ae92125d5",
            "8d65873f33e53c4fcb1f2ef0bc242285b0eeab6f"
        ],
        "matched": [
            "1ae3ae665ba20d1bfb0d0a5b7179e1104b0931d8"
        ]
    },
    {
        "repo_name": "aio-libs/aiohttp",
        "CVE_ID": "CVE-2024-23829",
        "Problem_Type": "CWE-444",
        "Description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. Security-sensitive parts of the Python HTTP parser retained minor differences in allowable character sets, that must trigger error handling to robustly match frame boundaries of proxies in order to protect against injection of additional requests. Additionally, validation could trigger exceptions that were not handled consistently with processing of other malformed input.  Being more lenient than internet standards require could, depending on deployment environment, assist in request smuggling. The unhandled exception could cause excessive resource consumption on the application server and/or its logging facilities. This vulnerability exists due to an incomplete fix for CVE-2023-47627. Version 3.9.2 fixes this vulnerability.",
        "URL": "https://github.com/aio-libs/aiohttp/pull/8074",
        "Tag": "['Patch']",
        "fix_commit_hash": "33ccdfb0a12690af5bb49bda2319ec0907fa7827",
        "inducing_commit_hash_pyszz": [
            "493f06797654c383242f0e8007f6e06b818a1fbc"
        ],
        "inducing_commit_hash_pd": [
            "c13f8c623658a2a21053bac3fbdf8cf57ecfb745",
            "493f06797654c383242f0e8007f6e06b818a1fbc",
            "bd5f92437173aae77cb128a1ebb8bf58effd13b5",
            "441c10eaf7ac9ded20aed376715b53dbac9cb3f1",
            "2b813f5316c8637f288839af968cf60bfe8a55d4",
            "454092d178cd3719c6241365c1a7dec5f6e325ed",
            "312f747de91f20fa33af03fd368f857fbd32f36a",
            "3be8a68d750fd9902106e747d11a0622b8650f2c",
            "6ab76b084bf5012b7185046162ed92bedcf073b5"
        ],
        "matched": [
            "493f06797654c383242f0e8007f6e06b818a1fbc"
        ]
    },
    {
        "repo_name": "Airtable/airtable.js",
        "CVE_ID": "CVE-2022-46155",
        "Problem_Type": "CWE-312",
        "Description": "Airtable.js is the JavaScript client for Airtable. Prior to version 0.11.6, Airtable.js had a misconfigured build script in its source package. When the build script is run, it would bundle environment variables into the build target of a transpiled bundle. Specifically, the AIRTABLE_API_KEY and AIRTABLE_ENDPOINT_URL environment variables are inserted during Browserify builds due to being referenced in Airtable.js code. This only affects copies of Airtable.js built from its source, not those installed via npm or yarn. Airtable API keys set in users\u00c2\u2019 environments via the AIRTABLE_API_KEY environment variable may be bundled into local copies of Airtable.js source code if all of the following conditions are met: 1) the user has cloned the Airtable.js source onto their machine, 2) the user runs the `npm prepare` script, and 3) the user' has the AIRTABLE_API_KEY environment variable set. If these conditions are met, a user\u00c2\u2019s local build of Airtable.js would be modified to include the value of the AIRTABLE_API_KEY environment variable, which could then be accidentally shipped in the bundled code. Users who do not meet all three of these conditions are not impacted by this issue. Users should upgrade to Airtable.js version 0.11.6 or higher; or, as a workaround unset the AIRTABLE_API_KEY environment variable in their shell and/or remove it from your .bashrc, .zshrc, or other shell configuration files. Users should also regenerate any Airtable API keys they use, as the keysy may be present in bundled code.",
        "URL": "https://github.com/Airtable/airtable.js/pull/330/commits/b468d8fe48d75e3d5fe46d0ea7770f4658951ed0",
        "Tag": "['Patch']",
        "fix_commit_hash": "b468d8fe48d75e3d5fe46d0ea7770f4658951ed0",
        "inducing_commit_hash_pyszz": [
            "da36c281123f0f92869c408ff0642f2c0fea9cc8"
        ],
        "inducing_commit_hash_pd": [
            "8cebd6c4a9a635533ed0de24e3689b64a181f10c",
            "80040f7dac3d007d0eb666bbcb7d5376cab5c256",
            "da36c281123f0f92869c408ff0642f2c0fea9cc8",
            "169285225f6dcbb24dbe5c50e7ca926fbb4a4269",
            "d92e9962cae11dd8acaa1afbe07e0aebd93d74de",
            "962821ccb76f8609ba2d6b36a19f4a862be16b27",
            "be2e5d54c98a0ee5c99e52d511bd4e68b4cb6227",
            "292503ebc6587124b7718d62cea5c8380c75bd40",
            "dc078372439e395aec29b797ced601b5836667a5",
            "1995e0181f2ed0a3dc277b0a49be4e5c5dcfd20f"
        ],
        "matched": [
            "da36c281123f0f92869c408ff0642f2c0fea9cc8"
        ]
    },
    {
        "repo_name": "ai/nanoid",
        "CVE_ID": "CVE-2021-23566",
        "Problem_Type": "CWE-704",
        "Description": "The package nanoid from 3.0.0 and before 3.1.31 are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.",
        "URL": "https://github.com/ai/nanoid/pull/328",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b7bd9332bc49b6330c7ddb08e5c661833db2575",
        "inducing_commit_hash_pyszz": [
            "c66da356960db2504ba9bf310e54d5cfd8f77431"
        ],
        "inducing_commit_hash_pd": [
            "1c4fe7e93c31ed75abc5c28e6fdf30351c6793f2",
            "c66da356960db2504ba9bf310e54d5cfd8f77431"
        ],
        "matched": [
            "c66da356960db2504ba9bf310e54d5cfd8f77431"
        ]
    },
    {
        "repo_name": "AkashRajpurohit/clipper",
        "CVE_ID": "CVE-2021-28134",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Clipper before 1.0.5 allows remote command execution. A remote attacker may send a crafted IPC message to the exposed vulnerable ipcRenderer IPC interface, which invokes the dangerous openExternal API.",
        "URL": "https://github.com/AkashRajpurohit/clipper/pull/14/commits/28f1492a12234cf1e6af85c78bf22ee2f5090d19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01743af56dab4004b0cabba843c3007145bdea14",
        "inducing_commit_hash_pyszz": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "inducing_commit_hash_pd": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "matched": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ]
    },
    {
        "repo_name": "AkashRajpurohit/clipper",
        "CVE_ID": "CVE-2021-28134",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Clipper before 1.0.5 allows remote command execution. A remote attacker may send a crafted IPC message to the exposed vulnerable ipcRenderer IPC interface, which invokes the dangerous openExternal API.",
        "URL": "https://github.com/AkashRajpurohit/clipper/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01743af56dab4004b0cabba843c3007145bdea14",
        "inducing_commit_hash_pyszz": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "inducing_commit_hash_pd": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "matched": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ]
    },
    {
        "repo_name": "alexcrichton/bzip2-rs",
        "CVE_ID": "CVE-2023-22895",
        "Problem_Type": "CWE-190",
        "Description": "The bzip2 crate before 0.4.4 for Rust allow attackers to cause a denial of service via a large file that triggers an integer overflow in mem.rs. NOTE: this is unrelated to the https://crates.io/crates/bzip2-rs product.",
        "URL": "https://github.com/alexcrichton/bzip2-rs/pull/86",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90c9c182cd5a5ebc75810aebd89b347a7bdf590b",
        "inducing_commit_hash_pyszz": [
            "e5c4e87735ce4a4c830d90e618c26612b8f12c45"
        ],
        "inducing_commit_hash_pd": [
            "e5c4e87735ce4a4c830d90e618c26612b8f12c45"
        ],
        "matched": [
            "e5c4e87735ce4a4c830d90e618c26612b8f12c45"
        ]
    },
    {
        "repo_name": "alibaba/nacos",
        "CVE_ID": "CVE-2021-29441",
        "Problem_Type": "CWE-290",
        "Description": "Nacos is a platform designed for dynamic service discovery and configuration and service management. In Nacos before version 1.4.1, when configured to use authentication (-Dnacos.core.auth.enabled=true) Nacos uses the AuthFilter servlet filter to enforce authentication. This filter has a backdoor that enables Nacos servers to bypass this filter and therefore skip authentication checks. This mechanism relies on the user-agent HTTP header so it can be easily spoofed. This issue may allow any user to carry out any administrative tasks on the Nacos server.",
        "URL": "https://github.com/alibaba/nacos/pull/4703",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cc0be6ae1cee1f2bcd2b19886380a15004eae47",
        "inducing_commit_hash_pyszz": [
            "9734deeefc1639b28fe71f5109bc0464f06ea759"
        ],
        "inducing_commit_hash_pd": [
            "952ee8a3c126877fa46c0267fdabf14d28d281dc",
            "9734deeefc1639b28fe71f5109bc0464f06ea759",
            "1fb1f5f3e37e2b4fafd4ac572b5d3b6d106aada1"
        ],
        "matched": [
            "9734deeefc1639b28fe71f5109bc0464f06ea759"
        ]
    },
    {
        "repo_name": "alibaba/one-java-agent",
        "CVE_ID": "CVE-2022-25842",
        "Problem_Type": "CWE-22",
        "Description": "All versions of package com.alibaba.oneagent:one-java-agent-plugin are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) using a specially crafted archive that holds directory traversal filenames (e.g. ../../evil.exe). The attacker can overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim\u00c2\u2019s machine.",
        "URL": "https://github.com/alibaba/one-java-agent/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e0149bb36488fede2a12cb1ab3c2095e56dd7571",
        "inducing_commit_hash_pyszz": [
            "4d1edcc07f019eb77681fc34170cdaf840157dab"
        ],
        "inducing_commit_hash_pd": [
            "c4c6f3d5ad450a71da0171de20bc7943e80ae1fd",
            "15d91ebfd9df814141c98378497209b930ff9c21",
            "4d1edcc07f019eb77681fc34170cdaf840157dab"
        ],
        "matched": [
            "4d1edcc07f019eb77681fc34170cdaf840157dab"
        ]
    },
    {
        "repo_name": "allegro/bigflow",
        "CVE_ID": "CVE-2023-25392",
        "Problem_Type": "CWE-295",
        "Description": "Allegro Tech BigFlow <1.6 is vulnerable to Missing SSL Certificate Validation.",
        "URL": "https://github.com/allegro/bigflow/pull/357",
        "Tag": "['Patch']",
        "fix_commit_hash": "fab2660b7d5ed98319776dede095d1bf21c88154",
        "inducing_commit_hash_pyszz": [
            "3f26b1e44125edd38b8beb8f1ca877458d36cb41"
        ],
        "inducing_commit_hash_pd": [
            "d390f0aa6bafcb22a924606558400b7bd2ac774d",
            "997a2417cdc3b16d6761de909b87adfb0d3898a1",
            "2710eed8bafcb469fdea7fa3b81f6eb51df77a20",
            "ffb3d61fae88b033a0d7b6fc03b6bbd6705114cf",
            "cb2cf6d794e53bce34022b1e6225b749a7878bb3",
            "3a3cdee3aa864573a1e9d828bfda3c9fa1a667ad",
            "2b359400252e41bf479605d61f34fedc906bd4e6",
            "461532eb29ea613caf9d4ca6ffd53bf300cc249e",
            "74a43eeb175bcd6ac346fa5a5801fdbe406f3c6a",
            "07973c357c10c3cb663ae477c1f285dcb6027f1b",
            "2c8460a5c6c57e95ac681a76c7c67416a0280ced",
            "3f26b1e44125edd38b8beb8f1ca877458d36cb41",
            "0e42834e411cefd34f55015113e011b9245f6488",
            "a3671657ac030b8ccd025284a5314abf5e0197b4",
            "8b762f81f5c390e317650a9e2dcda5eaf64c9866",
            "19d11e71c342f91feeecff3366c007b42f05e42c",
            "ef573884aad2834664b79d3d0816f9cf7cc51d4c",
            "7766d39fe36c0ac1c7168e6ddc5431d7d3f3e1f4",
            "3448ba0e3c093107bd4c4bef9b651d3df549c7b8"
        ],
        "matched": [
            "3f26b1e44125edd38b8beb8f1ca877458d36cb41"
        ]
    },
    {
        "repo_name": "alliedmodders/amxmodx",
        "CVE_ID": "CVE-2020-36639",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability has been found in AlliedModders AMX Mod X on Windows and classified as critical. This vulnerability affects the function cmdVoteMap of the file plugins/adminvote.sma of the component Console Command Handler. The manipulation of the argument amx_votemap leads to path traversal. The patch is identified as a5f2b5539f6d61050b68df8b22ebb343a2862681. It is recommended to apply a patch to fix this issue. VDB-217354 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/alliedmodders/amxmodx/pull/823",
        "Tag": "['Patch']",
        "fix_commit_hash": "a5f2b5539f6d61050b68df8b22ebb343a2862681",
        "inducing_commit_hash_pyszz": [
            "ddf3b6df323f95026c948826a3d34f714ce89d51"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "ddf3b6df323f95026c948826a3d34f714ce89d51"
        ]
    },
    {
        "repo_name": "amro/gibbon",
        "CVE_ID": "CVE-2022-27311",
        "Problem_Type": "CWE-918",
        "Description": "Gibbon v3.4.4 and below allows attackers to execute a Server-Side Request Forgery (SSRF) via a crafted URL.",
        "URL": "https://github.com/amro/gibbon/pull/321",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6933225393d7d261072e0c708365c3750d799381",
        "inducing_commit_hash_pyszz": [
            "b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b"
        ],
        "inducing_commit_hash_pd": [
            "b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b"
        ],
        "matched": [
            "b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b"
        ]
    },
    {
        "repo_name": "angelozerr/lsp4xml",
        "CVE_ID": "CVE-2019-18212",
        "Problem_Type": "CWE-22",
        "Description": "XMLLanguageService.java in XML Language Server (aka lsp4xml) before 0.9.1, as used in Red Hat XML Language Support (aka vscode-xml) before 0.9.1 for Visual Studio and other products, allows a remote attacker to write to arbitrary files via Directory Traversal.",
        "URL": "https://github.com/angelozerr/lsp4xml/pull/567",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3af46f73eefdda66386cb61bf6b7125009d4ecc",
        "inducing_commit_hash_pyszz": [
            "6b37900dc3e45e072612136b4b5c9d1afb959ca2"
        ],
        "inducing_commit_hash_pd": [
            "0796608e831b0a699f44ae3b58528828f06e8dc1",
            "b8e5a7a51bf6147e02da91eb489faa51ce49c14d",
            "6b37900dc3e45e072612136b4b5c9d1afb959ca2",
            "1725db27540ee1655efe94d05278e51ca78108df"
        ],
        "matched": [
            "6b37900dc3e45e072612136b4b5c9d1afb959ca2"
        ]
    },
    {
        "repo_name": "angelozerr/lsp4xml",
        "CVE_ID": "CVE-2019-18213",
        "Problem_Type": "CWE-611",
        "Description": "XML Language Server (aka lsp4xml) before 0.9.1, as used in Red Hat XML Language Support (aka vscode-xml) before 0.9.1 for Visual Studio and other products, allows XXE via a crafted XML document, with resultant SSRF (as well as SMB connection initiation that can lead to NetNTLM challenge/response capture for password cracking). This occurs in extensions/contentmodel/participants/diagnostics/LSPXMLParserConfiguration.java.",
        "URL": "https://github.com/angelozerr/lsp4xml/pull/566",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d172c4daff4c0229493c62812a40be8357584f7b",
        "inducing_commit_hash_pyszz": [
            "ca6bb86c6d3a1f35d86bbf6809d1faa688662a75"
        ],
        "inducing_commit_hash_pd": [
            "ca6bb86c6d3a1f35d86bbf6809d1faa688662a75",
            "0c410432da0fa31b80ef12bc50817e127a375e80",
            "85bf167f68f79d8456f9e3b78bae99a7df6fd395",
            "a293d26d9f8978f290de8f21b28e593d1e47bab6",
            "67b93acb9fa7bd175bc49d6a8f9d62c56bf88700",
            "add7a056ff004dd193cd57e5095fbce8c47231de",
            "66c73310d63c74da10d0d1ba9e1980e7cf62ec78"
        ],
        "matched": [
            "ca6bb86c6d3a1f35d86bbf6809d1faa688662a75"
        ]
    },
    {
        "repo_name": "ansible/ansible-modules-extras",
        "CVE_ID": "CVE-2016-3096",
        "Problem_Type": "CWE-59",
        "Description": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
        "URL": "https://github.com/ansible/ansible-modules-extras/pull/1941/commits/8c6fe646ee79f5e55361b885b7efed5bec72d4a4",
        "Tag": "['Patch']",
        "fix_commit_hash": "7c3999a92a1cd856ff9bc8913a93ff1aee8bffc3",
        "inducing_commit_hash_pyszz": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "inducing_commit_hash_pd": [
            "4446e4642ec652eaa4169c3fa10771d1c778a8f9",
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "matched": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ]
    },
    {
        "repo_name": "ansible/ansible-modules-extras",
        "CVE_ID": "CVE-2016-3096",
        "Problem_Type": "CWE-59",
        "Description": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
        "URL": "https://github.com/ansible/ansible-modules-extras/pull/1941",
        "Tag": "['Patch']",
        "fix_commit_hash": "7c3999a92a1cd856ff9bc8913a93ff1aee8bffc3",
        "inducing_commit_hash_pyszz": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "inducing_commit_hash_pd": [
            "4446e4642ec652eaa4169c3fa10771d1c778a8f9",
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "matched": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2018-16859",
        "Problem_Type": "CWE-532",
        "Description": "Execution of Ansible playbooks on Windows platforms with PowerShell ScriptBlock logging and Module logging enabled can allow for 'become' passwords to appear in EventLogs in plaintext. A local user with administrator privileges on the machine can view these logs and discover the plaintext password. Ansible Engine 2.8 and older are believed to be vulnerable.",
        "URL": "https://github.com/ansible/ansible/pull/49142",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c1f701e6e9df29fe991f98265e2dd76acca4b8c",
        "inducing_commit_hash_pyszz": [
            "2af36412f9a5bb5ad0085cbfe34b71626b197555"
        ],
        "inducing_commit_hash_pd": [
            "8bf1c53b21ee30d426d9cfe1e87461ddc040670a",
            "e972287c359654d65294fa89002a1f900a3a870e",
            "e7d8ebf08038c672a6f9397cc9b9a66465af5547",
            "6373f2b0455ad023aef0f567d9c6469c12ba7f85",
            "b004a6373a743c950bf8afc9fc4625451a7eeb9e",
            "e87cf4a3cc2d74695b226e6ff073da342f72abf2",
            "f0134079e3aaff3a6c8d31ff55cd3d01c82f2bc8",
            "0ee46cb0df007dc2e417666de244afd54d619ed3",
            "36ad934156bd55adb337fc885b68bd661a92f5fa"
        ],
        "matched": [
            "2af36412f9a5bb5ad0085cbfe34b71626b197555"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2018-16876",
        "Problem_Type": "CWE-200",
        "Description": "ansible before versions 2.5.14, 2.6.11, 2.7.5 is vulnerable to a information disclosure flaw in vvv+ mode with no_log on that can lead to leakage of sensible data.",
        "URL": "https://github.com/ansible/ansible/pull/49569",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba4c2ebeac9ee801bfedff05f504c71da0dd2bc2",
        "inducing_commit_hash_pyszz": [
            "673c55f2efce52c155872c80b0bff160e4a7b7b7"
        ],
        "inducing_commit_hash_pd": [
            "673c55f2efce52c155872c80b0bff160e4a7b7b7",
            "1fe67f9f436595003f7951dd88159731e6d82498",
            "9f0be5a5569495a705b4cca94b48a6a8c7437896"
        ],
        "matched": [
            "673c55f2efce52c155872c80b0bff160e4a7b7b7"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-10156",
        "Problem_Type": "CWE-200",
        "Description": "A flaw was discovered in the way Ansible templating was implemented in versions before 2.6.18, 2.7.12 and 2.8.2, causing the possibility of information disclosure through unexpected variable substitution. By taking advantage of unintended variable substitution the content of any variable may be disclosed.",
        "URL": "https://github.com/ansible/ansible/pull/57188",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b9b0b230150eceb442c34c917d9e852d5e8b7371",
        "inducing_commit_hash_pyszz": [
            "c54d79bc131c96e039a8981a7ad4e061cd83d744"
        ],
        "inducing_commit_hash_pd": [
            "62d79568be16084718bda2d890b2b4e1d10cc41d",
            "50f2313b47eed5eb338dc28afcb0ef9cdb34e339",
            "b3e85b76d7f5c109ca932942abd1e3ccbb8ebe8c",
            "ad91793428736f7bb1b9e3e89f82de944cdab2fb",
            "039706a23904fb86bbd770357e6033ccf5dd6f1d",
            "dc48d27dd2c49e95a719d7f7596f0b68e0ddef7f",
            "c54d79bc131c96e039a8981a7ad4e061cd83d744",
            "dd46f953f6c88bc159c532b17e9b5c7e34f216bc"
        ],
        "matched": [
            "c54d79bc131c96e039a8981a7ad4e061cd83d744"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-14846",
        "Problem_Type": "CWE-532",
        "Description": "In Ansible, all Ansible Engine versions up to ansible-engine 2.8.5, ansible-engine 2.7.13, ansible-engine 2.6.19, were logging at the DEBUG level which lead to a disclosure of credentials if a plugin used a library that logged credentials at the DEBUG level. This flaw does not affect Ansible modules, as those are executed in a separate process.",
        "URL": "https://github.com/ansible/ansible/pull/63366",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cb0f535a8b254a2daf69cd067e842fabb2993034",
        "inducing_commit_hash_pyszz": [
            "0089eb81027b325551d5efef900cde841c3c093e"
        ],
        "inducing_commit_hash_pd": [
            "0089eb81027b325551d5efef900cde841c3c093e"
        ],
        "matched": [
            "0089eb81027b325551d5efef900cde841c3c093e"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-3828",
        "Problem_Type": "CWE-22",
        "Description": "Ansible fetch module before versions 2.5.15, 2.6.14, 2.7.8 has a path traversal vulnerability which allows copying and overwriting files outside of the specified destination in the local ansible controller host, by not restricting an absolute path.",
        "URL": "https://github.com/ansible/ansible/pull/52133",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b34d141eede8731e63cbb0312efce31559c44022",
        "inducing_commit_hash_pyszz": [
            "3518a05db6ea2616888dba02863f51b395616647"
        ],
        "inducing_commit_hash_pd": [
            "5766689dd5f0760c5f96173eacb2bce169f17b81"
        ],
        "matched": [
            "3518a05db6ea2616888dba02863f51b395616647"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-10685",
        "Problem_Type": "CWE-459",
        "Description": "A flaw was found in Ansible Engine affecting Ansible Engine versions 2.7.x before 2.7.17 and 2.8.x before 2.8.11 and 2.9.x before 2.9.7 as well as Ansible Tower before and including versions 3.4.5 and 3.5.5 and 3.6.3 when using modules which decrypts vault files such as assemble, script, unarchive, win_copy, aws_s3 or copy modules. The temporary directory is created in /tmp leaves the s ts unencrypted. On Operating Systems which /tmp is not a tmpfs but part of the root partition, the directory is only cleared on boot and the decryp emains when the host is switched off. The system will be vulnerable when the system is not running. So decrypted data must be cleared as soon as possible and the data which normally is encrypted ble.",
        "URL": "https://github.com/ansible/ansible/pull/68433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6452a82452f3a721233b50f62419598206442fd9",
        "inducing_commit_hash_pyszz": [
            "f787be359773cb57f0c3b40bc4e2c0256d06f32c"
        ],
        "inducing_commit_hash_pd": [
            "cdf6e3e4bf44fdab62c2e4ccd3f5fd67ea554548",
            "f787be359773cb57f0c3b40bc4e2c0256d06f32c"
        ],
        "matched": [
            "f787be359773cb57f0c3b40bc4e2c0256d06f32c"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-10691",
        "Problem_Type": "CWE-22",
        "Description": "An archive traversal flaw was found in all ansible-engine versions 2.9.x prior to 2.9.7, when running ansible-galaxy collection install. When extracting a collection .tar.gz file, the directory is created without sanitizing the filename. An attacker could take advantage to overwrite any file within the system.",
        "URL": "https://github.com/ansible/ansible/pull/68596",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a20a52701402a12f91396549df04ac55809f68e9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b6791e6ae3891951fc38518fdb52d53219987498",
            "97f011cf94853fa41e7b1540db1526048c7f71eb"
        ],
        "matched": [
            "b6791e6ae3891951fc38518fdb52d53219987498"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-14332",
        "Problem_Type": "CWE-117",
        "Description": "A flaw was found in the Ansible Engine when using module_args. Tasks executed with check mode (--check-mode) do not properly neutralize sensitive data exposed in the event data. This flaw allows unauthorized users to read this data. The highest threat from this vulnerability is to confidentiality.",
        "URL": "https://github.com/ansible/ansible/pull/71033",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "991714b9d1e878a4c2fda67ffd829724fa7ac67e",
        "inducing_commit_hash_pyszz": [
            "80940a6b1c7b24cc4641625a007bd70921ecb584"
        ],
        "inducing_commit_hash_pd": [
            "80940a6b1c7b24cc4641625a007bd70921ecb584"
        ],
        "matched": [
            "80940a6b1c7b24cc4641625a007bd70921ecb584"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2021-20228",
        "Problem_Type": "CWE-200",
        "Description": "A flaw was found in the Ansible Engine 2.9.18, where sensitive info is not masked by default and is not protected by the no_log feature when using the sub-option feature of the basic.py module. This flaw allows an attacker to obtain sensitive information. The highest threat from this vulnerability is to confidentiality.",
        "URL": "https://github.com/ansible/ansible/pull/73487",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0cdc410dce6658e93c06fa27e0100ddbb11e7015",
        "inducing_commit_hash_pyszz": [
            "3b0e9ded91b6e2cabd77e13e0469b55d7b8de642"
        ],
        "inducing_commit_hash_pd": [
            "305c88700de7fc17de80b2f58fb6d44180573e61",
            "d34a26e30729c39c83dba4a46203c5c100a3eaeb",
            "3b0e9ded91b6e2cabd77e13e0469b55d7b8de642",
            "6e5055e7868414ce1aeab48756177350c4dd6ba0",
            "97a34cf008501088ae012f24e4712e2bc6dd6d4c"
        ],
        "matched": [
            "3b0e9ded91b6e2cabd77e13e0469b55d7b8de642"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2024-0690",
        "Problem_Type": "CWE-116",
        "Description": "An information disclosure flaw was found in ansible-core due to a failure to respect the ANSIBLE_NO_LOG configuration in some scenarios. Information is still included in the output in certain tasks, such as loop items. Depending on the task, this issue may include sensitive information, such as decrypted secret values.",
        "URL": "https://github.com/ansible/ansible/pull/82565",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "6935c8e303440addd3871ecf8e04bde61080b032",
        "inducing_commit_hash_pyszz": [
            "df1001577f68a319a2594de0bb993ec4e91c2068"
        ],
        "inducing_commit_hash_pd": [
            "43153c58310d02223f2cb0964f4255ba1ac4ed53",
            "37a918438b2363a66c5d7a7bb1320b68fd4460c7"
        ],
        "matched": [
            "df1001577f68a319a2594de0bb993ec4e91c2068"
        ]
    },
    {
        "repo_name": "ant-design/ant-design-pro",
        "CVE_ID": "CVE-2019-18350",
        "Problem_Type": "CWE-79",
        "Description": "In Ant Design Pro 4.0.0, reflected XSS in the user/login redirect GET parameter affects the authorization component, leading to execution of JavaScript code in the login after-action script.",
        "URL": "https://github.com/ant-design/ant-design-pro/pull/5461",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "840034ca90a66ebe7835934cffcb85654e86f593",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ad5db1c268100735b5d99624aa75a5cd1be56e2c"
        ],
        "matched": [
            "ad5db1c268100735b5d99624aa75a5cd1be56e2c"
        ]
    },
    {
        "repo_name": "apache/activemq-artemis",
        "CVE_ID": "CVE-2021-4040",
        "Problem_Type": "CWE-787",
        "Description": "A flaw was found in AMQ Broker. This issue can cause a partial interruption to the availability of AMQ Broker via an Out of memory (OOM) condition. This flaw allows an attacker to partially disrupt availability to the broker through a sustained attack of maliciously crafted messages. The highest threat from this vulnerability is system availability.",
        "URL": "https://github.com/apache/activemq-artemis/pull/3871/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "72a4fff1673477d78a85c415d48a2c74afda81fa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "8ecd255f981e5d806173cf86f6fac9c4c7c25167",
            "bac96047f5752647fb0ebf01bacbcfb36f715e06"
        ],
        "matched": [
            "8ecd255f981e5d806173cf86f6fac9c4c7c25167"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-27949",
        "Problem_Type": "CWE-200",
        "Description": "A vulnerability in UI of Apache Airflow allows an attacker to view unmasked secrets in rendered template values for tasks which were not executed (for example when they were depending on past and previous instances of the task failed). This issue affects Apache Airflow prior to 2.3.1.",
        "URL": "https://github.com/apache/airflow/pull/22754",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ce8ea6691820140a0e2d9a5dad5254bc05a5a270",
        "inducing_commit_hash_pyszz": [
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06"
        ],
        "inducing_commit_hash_pd": [
            "ccbaf578aee5fd04580eb07d27fbbd688a2f3080",
            "944dcfbb918050274fd3a1cc51d8fdf460ea2429",
            "866a601b76e219b3c043e1dbbc8fb22300866351"
        ],
        "matched": [
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-38649",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pinot Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Apache Airflow Pinot Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Apache Airflow Pinot Provider is installed (Apache Airflow Pinot Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pinot Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.",
        "URL": "https://github.com/apache/airflow/pull/27641",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d4fd5c6eacab0b88f8660f9d780174434393f1a",
        "inducing_commit_hash_pyszz": [
            "813cd431204b71f4e7c27f2bee9fafcc910da4d0"
        ],
        "inducing_commit_hash_pd": [
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132"
        ],
        "matched": [
            "813cd431204b71f4e7c27f2bee9fafcc910da4d0"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40127",
        "Problem_Type": "CWE-94",
        "Description": "A vulnerability in Example Dags of Apache Airflow allows an attacker with UI access who can trigger DAGs, to execute arbitrary commands via manually provided run_id parameter. This issue affects Apache Airflow Apache Airflow versions prior to 2.4.0.",
        "URL": "https://github.com/apache/airflow/pull/25960",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "372e699c2d1e11f7087b5340454d0a0a6a56fbf5",
        "inducing_commit_hash_pyszz": [
            "28b3056192f55251d88856d20a2439b86800bc77"
        ],
        "inducing_commit_hash_pd": [
            "b63b42429ffea52ec9c9a0ead7dbc258ea4c2900"
        ],
        "matched": [
            "28b3056192f55251d88856d20a2439b86800bc77"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40189",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pig Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Pig Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Pig Provider is installed (Pig Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pig Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.",
        "URL": "https://github.com/apache/airflow/pull/27644",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "be8a62e596a0dc0f935114a9d585007b497312a2",
        "inducing_commit_hash_pyszz": [
            "3e7e42f028279a628d9e15d1ae4b6005593f8afb"
        ],
        "inducing_commit_hash_pd": [
            "2037303eef93fd36ab13746b045d1c1fee6aa143",
            "3e7e42f028279a628d9e15d1ae4b6005593f8afb",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "4bde99f1323d72f6c84c1548079d5e98fc0a2a9a"
        ],
        "matched": [
            "3e7e42f028279a628d9e15d1ae4b6005593f8afb"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40604",
        "Problem_Type": "CWE-134",
        "Description": "In Apache Airflow 2.3.0 through 2.3.4, part of a url was unnecessarily formatted, allowing for possible information extraction.",
        "URL": "https://github.com/apache/airflow/pull/26337",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18386026c28939fa6d91d198c5489c295a05dcd2",
        "inducing_commit_hash_pyszz": [
            "9b3ed1f652fcdf6eaf672e5d15646a0512b852f4"
        ],
        "inducing_commit_hash_pd": [
            "9b3ed1f652fcdf6eaf672e5d15646a0512b852f4",
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68"
        ],
        "matched": [
            "9b3ed1f652fcdf6eaf672e5d15646a0512b852f4"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40754",
        "Problem_Type": "CWE-601",
        "Description": "In Apache Airflow 2.3.0 through 2.3.4, there was an open redirect in the webserver's `/confirm` endpoint.",
        "URL": "https://github.com/apache/airflow/pull/26409",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "56e7555c42f013f789a4b718676ff09b4a9d5135",
        "inducing_commit_hash_pyszz": [
            "df31902533e94b428e1fa19e5014047f0bae6fcc"
        ],
        "inducing_commit_hash_pd": [
            "df31902533e94b428e1fa19e5014047f0bae6fcc"
        ],
        "matched": [
            "df31902533e94b428e1fa19e5014047f0bae6fcc"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40954",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Spark Provider, Apache Airflow allows an attacker to read arbtrary files in the task execution context, without write access to DAG files. This issue affects Spark Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Spark Provider is installed (Spark Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Spark Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version that has lower version of the Spark Provider installed).",
        "URL": "https://github.com/apache/airflow/pull/27646",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "93589288156d56aff4b1f822b77695e3c58e4568",
        "inducing_commit_hash_pyszz": [
            "f5ad26dcdd7bcb724992528dce71056965b94d26"
        ],
        "inducing_commit_hash_pd": [
            "64100d2a2e0b9dafbd2f0b355d414781d98f41c9",
            "d06ab68f2c83ad5dce3cae1c5aa9a9a9f32cf934",
            "399ddb139652fee1bcefe2be09831e71bf5fa832",
            "b113432e7253811f55b373ab73c98079c724ead9",
            "39d90579843ac2627cd3d46f784304adacf372ed",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "3e6babe8ed8f8f281b67aa3f4e03bf3cfc1bcbaa",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "f5ad26dcdd7bcb724992528dce71056965b94d26",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "1f1b46dc011d2988edb66cf9aeaec9dd30c1b0e8",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "f5ad26dcdd7bcb724992528dce71056965b94d26"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-41672",
        "Problem_Type": "CWE-613",
        "Description": "In Apache Airflow, prior to version 2.4.1, deactivating a user wouldn't prevent an already authenticated user from being able to continue using the UI or API.",
        "URL": "https://github.com/apache/airflow/pull/26635",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "59707cdf7eacb698ca375b5220af30a39ca1018c",
        "inducing_commit_hash_pyszz": [
            "1edef28b315809c8367b29f3f1a83984dc6566c4"
        ],
        "inducing_commit_hash_pd": [
            "1edef28b315809c8367b29f3f1a83984dc6566c4",
            "23628534640b8cba4e37a008aec8c6eec6e086b1"
        ],
        "matched": [
            "1edef28b315809c8367b29f3f1a83984dc6566c4"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-43985",
        "Problem_Type": "CWE-601",
        "Description": "In Apache Airflow versions prior to 2.4.2, there was an open redirect in the webserver's `/confirm` endpoint.",
        "URL": "https://github.com/apache/airflow/pull/27143",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "68cb2daa410a72bcfb548587747afc9c5b946d11",
        "inducing_commit_hash_pyszz": [
            "65297673a318660fba76797e50d0c06804dfcafc"
        ],
        "inducing_commit_hash_pd": [
            "5c2bb7b0b0e717b11f093910b443243330ad93ca",
            "65297673a318660fba76797e50d0c06804dfcafc",
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06",
            "178dee9a5ed0cde3d7a7d4a47daeae85408fcd67",
            "a3dfd04ce4224e80c7b32351a744980e72bc10aa"
        ],
        "matched": [
            "65297673a318660fba76797e50d0c06804dfcafc"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-46421",
        "Problem_Type": "CWE-77",
        "Description": "Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in Apache Software Foundation Apache Airflow Hive Provider.This issue affects Apache Airflow Hive Provider: before 5.0.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/28101",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f8481c799ea6bd742a5ccc194b2ff8dbe01eab5",
        "inducing_commit_hash_pyszz": [
            "9953a047c4b0471ceb6effc669dce8d03c2f935b"
        ],
        "inducing_commit_hash_pd": [
            "9953a047c4b0471ceb6effc669dce8d03c2f935b",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b"
        ],
        "matched": [
            "9953a047c4b0471ceb6effc669dce8d03c2f935b"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-46651",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an unauthorized actor to gain access to sensitive information in Connection edit view. This vulnerability is considered low since it requires someone with access to Connection resources specifically updating the connection to exploit it. Users should upgrade to version 2.6.3 or later which has removed the vulnerability.\n",
        "URL": "https://github.com/apache/airflow/pull/32309",
        "Tag": "['Patch']",
        "fix_commit_hash": "d01248382fe45a5f5a7fdeed4082a80c5f814ad8",
        "inducing_commit_hash_pyszz": [
            "208fba009980f66ccda3b238929c6cc90214eda4"
        ],
        "inducing_commit_hash_pd": [
            "208fba009980f66ccda3b238929c6cc90214eda4",
            "1dfae80412377eef0a38637535d6a1d3393cc4fe"
        ],
        "matched": [
            "208fba009980f66ccda3b238929c6cc90214eda4"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-22884",
        "Problem_Type": "CWE-77",
        "Description": "Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in Apache Software Foundation Apache Airflow, Apache Software Foundation Apache Airflow MySQL Provider.This issue affects Apache Airflow: before 2.5.1; Apache Airflow MySQL Provider: before 4.0.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/28811",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "45dd0c484e16ff56800cc9c047f56b4a909d2d0d",
        "inducing_commit_hash_pyszz": [
            "b39468d2878554ba60863656364b4a95eda30685"
        ],
        "inducing_commit_hash_pd": [
            "55ab5db82c4c4bd55b992b43a0f2d1d3febfb715",
            "4b031d39e12110f337151cda6693e2541bf71c2c",
            "057f3ae3a4afedf6d462ecf58b01dd6304d3e135",
            "b39468d2878554ba60863656364b4a95eda30685",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "059eda05f82fefce4410f44f761f945a27d83daf"
        ],
        "matched": [
            "b39468d2878554ba60863656364b4a95eda30685"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-22887",
        "Problem_Type": "CWE-22",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an attacker to perform unauthorized file access outside the intended directory structure by manipulating the run_id parameter. This vulnerability is considered low since it requires an authenticated user to exploit it. It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32293",
        "Tag": "['Patch']",
        "fix_commit_hash": "05bd90f563649f2e9c8f0c85cf5838315a665a02",
        "inducing_commit_hash_pyszz": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ],
        "inducing_commit_hash_pd": [
            "451c7cbc42a83a180c4362693508ed33dd1d1dab",
            "6970b233964ee254bbb343ed8bdc906c2f7bd974",
            "311140616daafe496310d642e4164bc53fbd2ad2",
            "71c64de96248694017897fdb3d9d241e7c980825",
            "1a854465b5b67e29082bb4c3e3e198cfbd67c845",
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b",
            "1a1f352479d6dbff21d73d3c51b1e5d5188e00e3"
        ],
        "matched": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-22888",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an attacker to cause a service disruption by manipulating the run_id parameter. This vulnerability is considered low since it requires an authenticated user to exploit it. It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32293",
        "Tag": "['Patch']",
        "fix_commit_hash": "05bd90f563649f2e9c8f0c85cf5838315a665a02",
        "inducing_commit_hash_pyszz": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ],
        "inducing_commit_hash_pd": [
            "451c7cbc42a83a180c4362693508ed33dd1d1dab",
            "6970b233964ee254bbb343ed8bdc906c2f7bd974",
            "311140616daafe496310d642e4164bc53fbd2ad2",
            "71c64de96248694017897fdb3d9d241e7c980825",
            "1a854465b5b67e29082bb4c3e3e198cfbd67c845",
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b",
            "1a1f352479d6dbff21d73d3c51b1e5d5188e00e3"
        ],
        "matched": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25691",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Google Provider.\n\nThis issue affects Apache Airflow Google Provider versions before 8.10.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29497",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "5e6f8eb4d5fdcaa713022ee46b1ca9bd2e3ab44e",
        "inducing_commit_hash_pyszz": [
            "1f3260354988b304cf31d5e1d945ce91798bed48"
        ],
        "inducing_commit_hash_pd": [
            "828d1cba4d9b85a166debdd8a8dfe363935c22cd",
            "1f3260354988b304cf31d5e1d945ce91798bed48",
            "373c6aa4a208284b5ff72987e4bd8f4e2ada1a1b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "dfecb609c4a9d168390b259d2ff2a0ea3ac9d982",
            "fc440dc3c84ec7c5d3f39038090b214496f95c6a",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "1f3260354988b304cf31d5e1d945ce91798bed48"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25692",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Google Provider.\n\nThis issue affects Apache Airflow Google Provider versions before 8.10.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29499",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "32c571e5926983903ac8b9017c36f14137a797a5",
        "inducing_commit_hash_pyszz": [
            "5d4abbd58c33e7dfa8505e307d43420459d3df55"
        ],
        "inducing_commit_hash_pd": [
            "dfecb609c4a9d168390b259d2ff2a0ea3ac9d982",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "5d4abbd58c33e7dfa8505e307d43420459d3df55"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25693",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Sqoop Provider.\n\nThis issue affects Apache Airflow Sqoop Provider versions before 3.1.1.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29500",
        "Tag": "['Patch']",
        "fix_commit_hash": "655ffb835eb4c5343c3f2b4d37b352248f2768ef",
        "inducing_commit_hash_pyszz": [
            "1d531555ecd594ee7ec2c5d3fc87f8d4bcc2c27e"
        ],
        "inducing_commit_hash_pd": [
            "a9ac2b040b64de1aa5d9c2b9def33334e36a8d22",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132"
        ],
        "matched": [
            "1d531555ecd594ee7ec2c5d3fc87f8d4bcc2c27e"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25695",
        "Problem_Type": "CWE-209",
        "Description": "Generation of Error Message Containing Sensitive Information vulnerability in Apache Software Foundation Apache Airflow.This issue affects Apache Airflow: before 2.5.2.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29501",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "cf814550275bd04326f095cc28f93663daf3404b",
        "inducing_commit_hash_pyszz": [
            "eb5fea7b647e0f4b2338f86eeff6a90e1d6043bc"
        ],
        "inducing_commit_hash_pd": [
            "eb5fea7b647e0f4b2338f86eeff6a90e1d6043bc",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "eb5fea7b647e0f4b2338f86eeff6a90e1d6043bc"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25696",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Hive Provider.\n\nThis issue affects Apache Airflow Hive Provider versions before 5.1.3.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29502",
        "Tag": "['Patch']",
        "fix_commit_hash": "1cb127b9fd22a7dc8e0b82cab8acb7cd4c317c9c",
        "inducing_commit_hash_pyszz": [
            "10796cb7ce52c8ac2f68024e531fdda779547bdf"
        ],
        "inducing_commit_hash_pd": [
            "10796cb7ce52c8ac2f68024e531fdda779547bdf"
        ],
        "matched": [
            "10796cb7ce52c8ac2f68024e531fdda779547bdf"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25754",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Privilege Context Switching Error vulnerability in Apache Software Foundation Apache Airflow.This issue affects Apache Airflow: before 2.6.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29506",
        "Tag": "['Patch']",
        "fix_commit_hash": "18347d36e67894604436f3ef47d273532683b473",
        "inducing_commit_hash_pyszz": [
            "fe46a934fc298ec3ac74e6c40ca7e1872d2482f9"
        ],
        "inducing_commit_hash_pd": [
            "bda39188bd127d0dd933cdff6c7e8d11ec6bf41b",
            "6c6b77a87891ee81ed384124e309dff72a85c02f",
            "b0669b532a7be9aa34a4390951deaa25897c62e6",
            "fe46a934fc298ec3ac74e6c40ca7e1872d2482f9"
        ],
        "matched": [
            "fe46a934fc298ec3ac74e6c40ca7e1872d2482f9"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25956",
        "Problem_Type": "CWE-209",
        "Description": "Generation of Error Message Containing Sensitive Information vulnerability in the Apache Airflow AWS Provider.\n\nThis issue affects Apache Airflow AWS Provider versions before 7.2.1.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29587",
        "Tag": "['Patch']",
        "fix_commit_hash": "46d45e09cb5607ae583929f3eba1923a64631f48",
        "inducing_commit_hash_pyszz": [
            "9ad6d1202d0466d67b920ce8b316fd0e7b68ed88"
        ],
        "inducing_commit_hash_pd": [
            "432977be0cd1e95f623fa5edda2a227798fa2939"
        ],
        "matched": [
            "9ad6d1202d0466d67b920ce8b316fd0e7b68ed88"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-27604",
        "Problem_Type": "CWE-20",
        "Description": "Apache Airflow Sqoop Provider, versions before 4.0.0, is affected by a vulnerability that allows an attacker pass parameters with the connections, which makes it possible to implement RCE attacks via \u00c2\u2018sqoop import --connect\u00c2\u2019, obtain airflow server permissions, etc. The attacker needs to be logged in and have authorization (permissions) to create/edit connections.\n\n It is recommended to upgrade to a version that is not affected.\nThis issue was reported independently by happyhacking-k, And Xie Jianming and LiuHui of Caiji Sec Team also reported it.",
        "URL": "https://github.com/apache/airflow/pull/33039",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "59f5f58e2bfcc8c12b0b44d6c6ce5cfed60b8867",
        "inducing_commit_hash_pyszz": [
            "ddcd30e7c7f5daeab5f74fb3224a4d5e33cec95d"
        ],
        "inducing_commit_hash_pd": [
            "ddcd30e7c7f5daeab5f74fb3224a4d5e33cec95d",
            "655ffb835eb4c5343c3f2b4d37b352248f2768ef",
            "06acf40a4337759797f666d5bb27a5a393b74fed",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "82eb20e9f525c09b7d8b4eea896dedcfb6b04f28",
            "1d531555ecd594ee7ec2c5d3fc87f8d4bcc2c27e",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "ddcd30e7c7f5daeab5f74fb3224a4d5e33cec95d"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-28707",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Drill Provider.This issue affects Apache Airflow Drill Provider: before 2.3.2.\n\n",
        "URL": "https://github.com/apache/airflow/pull/30215",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "63d9b24aad0b4b9397682ddac1ea5824354789b3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "8808b641942e1b81c21db054fd6d36e2031cfab8"
        ],
        "matched": [
            "8808b641942e1b81c21db054fd6d36e2031cfab8"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-29247",
        "Problem_Type": "CWE-79",
        "Description": "Task instance details page in the UI is vulnerable to a stored XSS.This issue affects Apache Airflow: before 2.6.0.\n\n\n",
        "URL": "https://github.com/apache/airflow/pull/30779",
        "Tag": "['Patch']",
        "fix_commit_hash": "9c936208f46735269bec98a2038bd065e5581591",
        "inducing_commit_hash_pyszz": [
            "56a03710a607376a01cb201ec81eb9d87d7418fe"
        ],
        "inducing_commit_hash_pd": [
            "c920b1bd5c880e1dcb2ed7b6c0e2aa14fbd6b71b",
            "0db38ad1a2cf403eb546f027f2e5673610626f47"
        ],
        "matched": [
            "56a03710a607376a01cb201ec81eb9d87d7418fe"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-29247",
        "Problem_Type": "CWE-79",
        "Description": "Task instance details page in the UI is vulnerable to a stored XSS.This issue affects Apache Airflow: before 2.6.0.\n\n\n",
        "URL": "https://github.com/apache/airflow/pull/30447",
        "Tag": "['Patch']",
        "fix_commit_hash": "46c85ec11d224c133da6c45c1186c9aa498a7e75",
        "inducing_commit_hash_pyszz": [
            "324aca410bbbddb22336746338ea8a60ad0b3989"
        ],
        "inducing_commit_hash_pd": [
            "dd386c81f50fe2a93cf0bff0c3da2c66f2dc6e6a",
            "324aca410bbbddb22336746338ea8a60ad0b3989"
        ],
        "matched": [
            "324aca410bbbddb22336746338ea8a60ad0b3989"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-34395",
        "Problem_Type": "CWE-88",
        "Description": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') vulnerability in Apache Software Foundation Apache Airflow ODBC Provider.\nIn OdbcHook, A privilege escalation vulnerability exists in a system due to controllable ODBC driver parameters that allow the loading of arbitrary dynamic-link libraries, resulting in command execution.\nStarting version 4.0.0 driver can be set only from the hook constructor.\nThis issue affects Apache Airflow ODBC Provider: before 4.0.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/31713",
        "Tag": "['Patch']",
        "fix_commit_hash": "2844dad1c762f5c7dd1271866d3661bf66657300",
        "inducing_commit_hash_pyszz": [
            "2a819b11fb8dfba7b3c9b500d07467b455724506"
        ],
        "inducing_commit_hash_pd": [
            "9276310a43d17a9e9e38c2cb83686a15656896b2",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "2a819b11fb8dfba7b3c9b500d07467b455724506"
        ],
        "matched": [
            "2a819b11fb8dfba7b3c9b500d07467b455724506"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-35798",
        "Problem_Type": "CWE-20",
        "Description": "Input Validation vulnerability in Apache Software Foundation Apache Airflow ODBC Provider, Apache Software Foundation Apache Airflow MSSQL Provider.This\u00c2\u00a0vulnerability is considered low since it requires DAG code to use `get_sqlalchemy_connection` and someone with access to connection resources specifically\u00c2\u00a0updating the connection to exploit it.\n\nThis issue affects Apache Airflow ODBC Provider: before 4.0.0; Apache Airflow MSSQL Provider: before 3.4.1.\n\nIt is recommended to\u00c2\u00a0upgrade to a version that is not affected\n\n",
        "URL": "https://github.com/apache/airflow/pull/31984",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b6836986846058e9e5fa271fb7b22ae721020787",
        "inducing_commit_hash_pyszz": [
            "df5a54d21d6991d6cae05c38e1562da2196e76aa"
        ],
        "inducing_commit_hash_pd": [
            "df5a54d21d6991d6cae05c38e1562da2196e76aa",
            "2a819b11fb8dfba7b3c9b500d07467b455724506",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "df5a54d21d6991d6cae05c38e1562da2196e76aa"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-35908",
        "Problem_Type": "CWE-863",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows unauthorized read access to a DAG through the URL.\u00c2\u00a0It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32014",
        "Tag": "['Patch']",
        "fix_commit_hash": "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db",
        "inducing_commit_hash_pyszz": [
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ],
        "inducing_commit_hash_pd": [
            "e2f19505bf3622935480e80bee55bf5b6d80097b"
        ],
        "matched": [
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-36543",
        "Problem_Type": "CWE-1333",
        "Description": "Apache Airflow, versions before 2.6.3, has a vulnerability where an authenticated user can use crafted input to make the current request hang.\u00c2\u00a0It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32060",
        "Tag": "['Patch']",
        "fix_commit_hash": "116e607ddcb32480e57c342f48226545ac6fc315",
        "inducing_commit_hash_pyszz": [
            "1dccaad46b901189c1928cef8419f1ea1160d550"
        ],
        "inducing_commit_hash_pd": [
            "1dccaad46b901189c1928cef8419f1ea1160d550",
            "6970b233964ee254bbb343ed8bdc906c2f7bd974",
            "d67ac5932dabbf06ae733fc57b48491a8029b8c2"
        ],
        "matched": [
            "1dccaad46b901189c1928cef8419f1ea1160d550"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-37379",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, in versions prior to 2.7.0, contains a security vulnerability that can be exploited by an authenticated user possessing Connection edit privileges. This vulnerability allows the user to access connection information and exploit the test connection feature by sending many requests, leading to a denial of service (DoS) condition on the server. Furthermore, malicious actors can leverage this vulnerability to establish harmful connections with the server.\n\nUsers of Apache Airflow are strongly advised to upgrade to version 2.7.0 or newer to mitigate the risk associated with this vulnerability. Additionally, administrators are encouraged to review and adjust user permissions to restrict access to sensitive functionalities, reducing the attack surface.\n\n",
        "URL": "https://github.com/apache/airflow/pull/32052",
        "Tag": "['Patch']",
        "fix_commit_hash": "e4c3ecf8ceaefa17525b495e4bcb5b2f41309603",
        "inducing_commit_hash_pyszz": [
            "d2e5b097e6251e31fb4c9bb5bf16dc9c77b56f75"
        ],
        "inducing_commit_hash_pd": [
            "ecbb366e63f893d6adcedb1942ca02981c6ec536",
            "d2e5b097e6251e31fb4c9bb5bf16dc9c77b56f75"
        ],
        "matched": [
            "d2e5b097e6251e31fb4c9bb5bf16dc9c77b56f75"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39441",
        "Problem_Type": "CWE-295",
        "Description": "Apache Airflow SMTP Provider before 1.3.0, Apache Airflow IMAP Provider before 3.3.0, and\u00c2\u00a0Apache Airflow before 2.7.0 are affected by the\u00c2\u00a0Validation of OpenSSL Certificate vulnerability.\n\nThe default SSL context with SSL library did not check a server's X.509\u00c2\u00a0certificate.\u00c2\u00a0 Instead, the code accepted any certificate, which could\u00c2\u00a0result in the disclosure of mail server credentials or mail contents\u00c2\u00a0when the client connects to an attacker in a MITM position.\n\nUsers are strongly advised to upgrade to Apache Airflow version 2.7.0 or newer, Apache Airflow IMAP Provider version 3.3.0 or newer, and Apache Airflow SMTP Provider version 1.3.0 or newer to mitigate the risk associated with this vulnerability",
        "URL": "https://github.com/apache/airflow/pull/33075",
        "Tag": "['Patch']",
        "fix_commit_hash": "e20325db38fdfdd9db423a345b13d18aab6fe578",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3fac5c35409ccfde771ce08ea8daeaac056b2c10"
        ],
        "matched": [
            "3fac5c35409ccfde771ce08ea8daeaac056b2c10"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39441",
        "Problem_Type": "CWE-295",
        "Description": "Apache Airflow SMTP Provider before 1.3.0, Apache Airflow IMAP Provider before 3.3.0, and\u00c2\u00a0Apache Airflow before 2.7.0 are affected by the\u00c2\u00a0Validation of OpenSSL Certificate vulnerability.\n\nThe default SSL context with SSL library did not check a server's X.509\u00c2\u00a0certificate.\u00c2\u00a0 Instead, the code accepted any certificate, which could\u00c2\u00a0result in the disclosure of mail server credentials or mail contents\u00c2\u00a0when the client connects to an attacker in a MITM position.\n\nUsers are strongly advised to upgrade to Apache Airflow version 2.7.0 or newer, Apache Airflow IMAP Provider version 3.3.0 or newer, and Apache Airflow SMTP Provider version 1.3.0 or newer to mitigate the risk associated with this vulnerability",
        "URL": "https://github.com/apache/airflow/pull/33108",
        "Tag": "['Patch']",
        "fix_commit_hash": "52ca7bfc988f4c9b608f544bc3e9524fd6564639",
        "inducing_commit_hash_pyszz": [
            "032cf7cdbce34ceb0e9380f86e07a6c077470396"
        ],
        "inducing_commit_hash_pd": [
            "44c43363f326d7c04411ad796ce58d30bce64fd7",
            "25a5f553c306549d3d1f0f71f3eee53c72447e41",
            "06acf40a4337759797f666d5bb27a5a393b74fed",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132"
        ],
        "matched": [
            "032cf7cdbce34ceb0e9380f86e07a6c077470396"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39441",
        "Problem_Type": "CWE-295",
        "Description": "Apache Airflow SMTP Provider before 1.3.0, Apache Airflow IMAP Provider before 3.3.0, and\u00c2\u00a0Apache Airflow before 2.7.0 are affected by the\u00c2\u00a0Validation of OpenSSL Certificate vulnerability.\n\nThe default SSL context with SSL library did not check a server's X.509\u00c2\u00a0certificate.\u00c2\u00a0 Instead, the code accepted any certificate, which could\u00c2\u00a0result in the disclosure of mail server credentials or mail contents\u00c2\u00a0when the client connects to an attacker in a MITM position.\n\nUsers are strongly advised to upgrade to Apache Airflow version 2.7.0 or newer, Apache Airflow IMAP Provider version 3.3.0 or newer, and Apache Airflow SMTP Provider version 1.3.0 or newer to mitigate the risk associated with this vulnerability",
        "URL": "https://github.com/apache/airflow/pull/33070",
        "Tag": "['Patch']",
        "fix_commit_hash": "120efc186556b1e9498f90ad436c74e5f4e138e9",
        "inducing_commit_hash_pyszz": [
            "88aa174047e673d0dbe2742b24210731d6a5378f"
        ],
        "inducing_commit_hash_pd": [
            "51e38173f9e50957ebe0879bcafe39eb00bc5ead",
            "88aa174047e673d0dbe2742b24210731d6a5378f"
        ],
        "matched": [
            "88aa174047e673d0dbe2742b24210731d6a5378f"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39508",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Execution with Unnecessary Privileges, : Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Software Foundation Apache Airflow.The \"Run Task\" feature enables authenticated user to bypass some of the restrictions put in place. It allows to execute code in the webserver context as well as allows to bypas limitation of access the user has to certain DAGs. The \"Run Task\" feature is considered dangerous and it has been removed entirely in Airflow 2.6.0\n\nThis issue affects Apache Airflow: before 2.6.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29706",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "101d59c4b88ab979d305b8d96f612c27c8a44aa8",
        "inducing_commit_hash_pyszz": [
            "7dd19731f232d99d2947128c29e393b8ce013741"
        ],
        "inducing_commit_hash_pd": [
            "9c592cbe4300f64be5698d0fc7a79e067b5b6832",
            "1edef28b315809c8367b29f3f1a83984dc6566c4",
            "9510043546d1ac8ac56b67bafa537e4b940d68a4",
            "4c1fcee6ba1559fcb53836ac7fcccd68b1891d93",
            "1e8ac47589967f2a7284faeab0f65b01bfd8202d",
            "aeabef7ba4b4a7f2ca30b72da25aa32c8a86bc8b",
            "49431c9587ef13ff3ff2ff2b8e74d4d2952afe78",
            "51d61a9ec2ee66a7f1b45901a2bb732786341cf4",
            "f74d0ab38e00b83b49e20d410736e2a8c42de095",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "476d0f6e3d2059f56532cda36cdc51aa86bafb37",
            "24d0ecf4ee6dbfd2339847443d4b12033efe9c0f",
            "2bb26a38070a4b949bfb210ef1d5644e016e373a",
            "b333b24a04a752fd25ec48f76dce04a4bb5ed566",
            "4d0fd8ef6adc35f683c7561f05688a65fd7451f4",
            "22b49d334ef0008be7bd3d8481b55b8ab5d71c80",
            "a36cfe049a2c5948b24fde7a878fe19cabede5f7",
            "c6b27e309cbc29c73604969c88c8e8b437af583f",
            "944dcfbb918050274fd3a1cc51d8fdf460ea2429",
            "e29d33b89f7deea6eafb03006c37b60692781e61",
            "411c686800fd5cc5175fdb27a94a20f08a56c001",
            "ffa33e44affdfc9e8a53119a9a6461626d431546",
            "26175ee5d931b8454d61ccbbd5dd585f7288c97b",
            "3d3cc41678297ac113287760ed5fe9968a96f1d9",
            "c030729dcbe35a2a4869e46b57a761c8376ede8d",
            "9b63df8946308ccd7bf7e7ca02766bf09316cf93",
            "b4e9c678d7375401bb548302a2074a215aec5dc0",
            "4cb06219dc6b2c9fb888446165605e63aa16bdaa",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b",
            "3182ba2f402656bfc7d7777f1678161ec5a9cf79",
            "67e8bdd691ded0e88760b3d59b9c58ba43fa9453",
            "88292837ba219c99f94bf3e03c5befda470c83b4",
            "10c9cb5318fd8a9e41a7b4338e5052c8feece7ae",
            "d12dc188d97f83d29bb8bba8b7b10c452f4c159a",
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68",
            "f360414774f1ecb2e0f4e53ebdd623c7435f9a78",
            "2400de2c5ece644cadb870baeea28907fa4dcf58",
            "dbed51e702bf8177800183d2c4f595073aa2339d",
            "72679bef3abee141dd20f75d6ff977bd3978ecc8",
            "1047940ca4363b04044c4963b9c88f7632746407",
            "7dd19731f232d99d2947128c29e393b8ce013741",
            "8d31ca21a74a918a934912ecd47287b7a51193e2"
        ],
        "matched": [
            "7dd19731f232d99d2947128c29e393b8ce013741"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39553",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Drill Provider.\n\nApache Airflow Drill Provider is affected by a vulnerability that allows an attacker to pass in malicious parameters when establishing a connection with DrillHook giving an opportunity to read files on the Airflow server.\nThis issue affects Apache Airflow Drill Provider: before 2.4.3.\nIt is recommended to upgrade to a version that is not affected.\n\n",
        "URL": "https://github.com/apache/airflow/pull/33074",
        "Tag": "['Patch']",
        "fix_commit_hash": "394a727ac2c18d58978bf186a7a92923460ec110",
        "inducing_commit_hash_pyszz": [
            "63d9b24aad0b4b9397682ddac1ea5824354789b3"
        ],
        "inducing_commit_hash_pd": [
            "63d9b24aad0b4b9397682ddac1ea5824354789b3",
            "8808b641942e1b81c21db054fd6d36e2031cfab8",
            "433e0296ad1a5ff1c545aa477fe08000089a6e1e"
        ],
        "matched": [
            "63d9b24aad0b4b9397682ddac1ea5824354789b3"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-40611",
        "Problem_Type": "CWE-863",
        "Description": "Apache Airflow, versions before 2.7.1, is affected by a vulnerability that allows\u00c2\u00a0authenticated and DAG-view authorized Users to modify some DAG run detail values when submitting notes. This could have them alter details such as configuration parameters, start date, etc.\n\nUsers should upgrade to version 2.7.1 or later which has removed the vulnerability.\n",
        "URL": "https://github.com/apache/airflow/pull/33413",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b7a46c970d638028a4a7643ad000dcee951fb9ef",
        "inducing_commit_hash_pyszz": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ],
        "inducing_commit_hash_pd": [
            "866a601b76e219b3c043e1dbbc8fb22300866351",
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1",
            "ac92b17964e698726f687986ded462144a50b831",
            "75d8ff96b4e7736b177c3bb8e949653d6a501736",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-41267",
        "Problem_Type": "CWE-829",
        "Description": "In the Apache Airflow HDFS Provider, versions prior to 4.1.1, a documentation\u00c2\u00a0info pointed users to an install incorrect pip package. As this package name was unclaimed, in theory, an attacker could claim this package and provide code that would be executed when this package was installed. The Airflow team has since taken ownership of the package (neutralizing the risk), and fixed the doc strings in version 4.1.1\n",
        "URL": "https://github.com/apache/airflow/pull/33813",
        "Tag": "['Patch']",
        "fix_commit_hash": "dfa70b942348ba51be7594499ff54030375e4d89",
        "inducing_commit_hash_pyszz": [
            "9a8c2044bd0dab209c1e4cbf11d59297664dab08"
        ],
        "inducing_commit_hash_pd": [
            "9a8c2044bd0dab209c1e4cbf11d59297664dab08",
            "8c37b74a208a808d905c1b86d081d69d7a1aa900"
        ],
        "matched": [
            "9a8c2044bd0dab209c1e4cbf11d59297664dab08"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42663",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.7.2, has a vulnerability that allows an authorized user who has access to read specific DAGs only, to read information about task instances in other DAGs.\nUsers of Apache Airflow are advised to upgrade to version 2.7.2 or newer to mitigate the risk associated with this vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/34315",
        "Tag": "['Patch']",
        "fix_commit_hash": "3df1af4c45705d67598753a96debf5619bbfee04",
        "inducing_commit_hash_pyszz": [
            "5772d4d150518e2986df986f07b0394a0f4458e2"
        ],
        "inducing_commit_hash_pd": [
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68",
            "5772d4d150518e2986df986f07b0394a0f4458e2"
        ],
        "matched": [
            "5772d4d150518e2986df986f07b0394a0f4458e2"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42780",
        "Problem_Type": "CWE-200",
        "Description": "Apache Airflow, versions prior to 2.7.2, contains a security vulnerability that allows authenticated users of Airflow to list warnings for all DAGs, even if the user had no permission to see those DAGs. It would reveal the dag_ids and the stack-traces of import errors for those DAGs with import errors.\nUsers of Apache Airflow are advised to upgrade to version 2.7.2 or newer to mitigate the risk associated with this vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/34355",
        "Tag": "['Patch']",
        "fix_commit_hash": "3570bbfbea69e2965f91b9964ce28bc268c68129",
        "inducing_commit_hash_pyszz": [
            "e35ffaa457eee569d4bc81be16d0db26e0f3e1b3"
        ],
        "inducing_commit_hash_pd": [
            "e35ffaa457eee569d4bc81be16d0db26e0f3e1b3"
        ],
        "matched": [
            "e35ffaa457eee569d4bc81be16d0db26e0f3e1b3"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42781",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.7.3, has a vulnerability that allows an authorized user who has access to read specific DAGs only, to read information about task instances in other DAGs.\u00c2\u00a0 This is a different issue than CVE-2023-42663 but leading to similar outcome.\nUsers of Apache Airflow are advised to upgrade to version 2.7.3 or newer to mitigate the risk associated with this vulnerability.",
        "URL": "https://github.com/apache/airflow/pull/34939",
        "Tag": "['Patch']",
        "fix_commit_hash": "33ec72948f74f56f2adb5e2d388e60e88e8a3fa3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "e2f19505bf3622935480e80bee55bf5b6d80097b"
        ],
        "matched": [
            "e2f19505bf3622935480e80bee55bf5b6d80097b"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42792",
        "Problem_Type": "CWE-668",
        "Description": "Apache Airflow, in versions prior to 2.7.2, contains a security vulnerability that allows an authenticated user with limited access to some DAGs, to craft a request that could give the user write access to various DAG resources for DAGs that the user had no access to, thus, enabling the user to clear DAGs they shouldn't.\n\nUsers of Apache Airflow are strongly advised to upgrade to version 2.7.2 or newer to mitigate the risk associated with this vulnerability.\n",
        "URL": "https://github.com/apache/airflow/pull/34366",
        "Tag": "['Patch']",
        "fix_commit_hash": "4f1b500c47813c54349b7d3e48df0a444fb4826c",
        "inducing_commit_hash_pyszz": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ],
        "inducing_commit_hash_pd": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db",
            "e2f19505bf3622935480e80bee55bf5b6d80097b",
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ],
        "matched": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-45348",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "\nApache Airflow, versions 2.7.0 and 2.7.1, is affected by a vulnerability that allows an authenticated user to retrieve sensitive configuration information when the \"expose_config\" option is set to \"non-sensitive-only\". The `expose_config` option is False by default.\nIt is recommended to upgrade to a version that is not affected.",
        "URL": "https://github.com/apache/airflow/pull/34712",
        "Tag": "['Patch']",
        "fix_commit_hash": "f044589b685855a8fce8f5376bea2564c5a001f7",
        "inducing_commit_hash_pyszz": [
            "4a525e85e31b26d413c986c86d181114bb37bd06"
        ],
        "inducing_commit_hash_pd": [
            "cab342ee010bfd048006ca458c760b37470b6ea5",
            "4a525e85e31b26d413c986c86d181114bb37bd06"
        ],
        "matched": [
            "4a525e85e31b26d413c986c86d181114bb37bd06"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-46215",
        "Problem_Type": "CWE-532",
        "Description": "Insertion of Sensitive Information into Log File vulnerability in Apache Airflow Celery provider, Apache Airflow.\n\nSensitive information logged as clear text when rediss, amqp, rpc protocols are used as Celery result backend\nNote: the\u00c2\u00a0vulnerability is about the information exposed in the logs not about accessing the logs.\n\nThis issue affects Apache Airflow Celery provider: from 3.3.0 through 3.4.0; Apache Airflow: from 1.10.0 through 2.6.3.\n\nUsers are recommended to upgrade Airflow Celery provider to version 3.4.1\u00c2\u00a0and Apache Airlfow to version 2.7.0 which fixes the issue.\n\n",
        "URL": "https://github.com/apache/airflow/pull/34954",
        "Tag": "['Patch']",
        "fix_commit_hash": "dd59e3e63e0db349f40f8d1c91e7f6ef252caa4b",
        "inducing_commit_hash_pyszz": [
            "471fdacd853a5bcb190e1ffc017a4e650097ed69"
        ],
        "inducing_commit_hash_pd": [
            "ee38382efa54565c4b389eaeb536f0d45e12d498",
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68"
        ],
        "matched": [
            "471fdacd853a5bcb190e1ffc017a4e650097ed69"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-46288",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Airflow.This issue affects Apache Airflow from 2.4.0 to 2.7.0.\n\nSensitive configuration information has been exposed to authenticated users with the ability to read configuration via Airflow REST API for configuration even when the expose_config\u00c2\u00a0option is set to non-sensitive-only. The expose_config option is False by default. It is recommended to upgrade to a version that is not affected if you set expose_config\u00c2\u00a0to non-sensitive-only\u00c2\u00a0configuration. This is a different error than CVE-2023-45348\u00c2\u00a0which allows authenticated user to retrieve individual configuration values in 2.7.* by specially crafting their request (solved in 2.7.2).\n\nUsers are recommended to upgrade to version 2.7.2, which fixes the issue and additionally fixes\u00c2\u00a0CVE-2023-45348.\n\n",
        "URL": "https://github.com/apache/airflow/pull/32261",
        "Tag": "['Patch']",
        "fix_commit_hash": "4a525e85e31b26d413c986c86d181114bb37bd06",
        "inducing_commit_hash_pyszz": [
            "ab74d1ba98f0f1d601206164d2b9529681bed4b3"
        ],
        "inducing_commit_hash_pd": [
            "0fdc03b76499dab8a58aeaebcba3dcda0df94a5a",
            "ab74d1ba98f0f1d601206164d2b9529681bed4b3"
        ],
        "matched": [
            "ab74d1ba98f0f1d601206164d2b9529681bed4b3"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-47037",
        "Problem_Type": "CWE-863",
        "Description": "We failed to apply\u00c2\u00a0CVE-2023-40611 in 2.7.1 and this vulnerability was marked as fixed then.\u00c2\u00a0\n\nApache Airflow, versions before 2.7.3, is affected by a vulnerability that allows authenticated and DAG-view authorized Users to modify some DAG run detail values when submitting notes. This could have them alter details such as configuration parameters, start date, etc.\u00c2\u00a0\n\nUsers should upgrade to version 2.7.3 or later which has removed the vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/33413",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b7a46c970d638028a4a7643ad000dcee951fb9ef",
        "inducing_commit_hash_pyszz": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ],
        "inducing_commit_hash_pd": [
            "866a601b76e219b3c043e1dbbc8fb22300866351",
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1",
            "ac92b17964e698726f687986ded462144a50b831",
            "75d8ff96b4e7736b177c3bb8e949653d6a501736",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-47265",
        "Problem_Type": "CWE-79",
        "Description": "Apache Airflow, versions 2.6.0 through 2.7.3 has a stored XSS vulnerability that allows a DAG author to add an unbounded and not-sanitized javascript in the parameter description field of the DAG.\u00c2\u00a0This Javascript can be executed on the client side of any of the user who looks at the tasks in the browser sandbox. While this issue does not allow to exit the browser sandbox or manipulation of the server-side data - more than the DAG author already has, it allows to modify what the user looking at the DAG details sees in the browser - which opens up all kinds of possibilities of misleading other users.\n\nUsers of Apache Airflow are recommended to upgrade to version 2.8.0 or newer to mitigate the risk associated with this vulnerability\n",
        "URL": "https://github.com/apache/airflow/pull/35460",
        "Tag": "['Patch']",
        "fix_commit_hash": "0b995602e6e5894ee31625a4dd0e6aa255d2a651",
        "inducing_commit_hash_pyszz": [
            "2e52d65639f3a07f57d33aad6cce072dc6548a96"
        ],
        "inducing_commit_hash_pd": [
            "8069b500e8487675df0472b4a5df9081dcfa9d6c",
            "da6931561f59a64f6489c56a5675c2cc6e6a2bca",
            "e2455d870056391eed13e32e2d0ed571cc7089b4",
            "9c6f83bb6f3e3b57ae0abbe9eb0582fcde265702",
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06",
            "88363b543f6f963247c332e9d7830bc782ed6e2d",
            "5e470c1fc422a05815a595cdf2544ebc586405cc",
            "2e52d65639f3a07f57d33aad6cce072dc6548a96",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "2e52d65639f3a07f57d33aad6cce072dc6548a96"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-48291",
        "Problem_Type": "CWE-668",
        "Description": "Apache Airflow, in versions prior to 2.8.0, contains a security vulnerability that allows an authenticated user with limited access to some DAGs, to craft a request that could give the user write access to various DAG resources for DAGs that the user had no access to, thus, enabling the user to clear DAGs they shouldn't.\n\nThis is a missing fix for CVE-2023-42792 in Apache Airflow 2.7.2\u00c2\u00a0\n\nUsers of Apache Airflow are strongly advised to upgrade to version 2.8.0 or newer to mitigate the risk associated with this vulnerability.",
        "URL": "https://github.com/apache/airflow/pull/34366",
        "Tag": "['Patch']",
        "fix_commit_hash": "4f1b500c47813c54349b7d3e48df0a444fb4826c",
        "inducing_commit_hash_pyszz": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ],
        "inducing_commit_hash_pd": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db",
            "e2f19505bf3622935480e80bee55bf5b6d80097b",
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ],
        "matched": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-49920",
        "Problem_Type": "CWE-352",
        "Description": "Apache Airflow, version 2.7.0 through 2.7.3, has a vulnerability that allows an attacker to trigger a DAG in a GET request without CSRF validation.\u00c2\u00a0As a result, it was possible for a malicious website opened in the same browser - by the user who also had Airflow UI opened - to trigger the execution of DAGs without the user's consent.\nUsers are advised to upgrade to version 2.8.0 or later which is not affected",
        "URL": "https://github.com/apache/airflow/pull/36026",
        "Tag": "['Patch']",
        "fix_commit_hash": "f5d802791fa5f6b13b635f06a1ea2eccc22a9ba7",
        "inducing_commit_hash_pyszz": [
            "c0362923fd8250328eab6e60f0cf7e855bfd352e"
        ],
        "inducing_commit_hash_pd": [
            "c0362923fd8250328eab6e60f0cf7e855bfd352e",
            "3bcaf3dd7e71993e1a89cf9367bf7c540cc88e75",
            "05bd90f563649f2e9c8f0c85cf5838315a665a02"
        ],
        "matched": [
            "c0362923fd8250328eab6e60f0cf7e855bfd352e"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-50783",
        "Problem_Type": "CWE-284",
        "Description": "Apache Airflow, versions before 2.8.0, is affected by a vulnerability that allows an authenticated user without the variable edit permission, to update a variable.\nThis flaw compromises the integrity of variable management, potentially leading to unauthorized data modification.\nUsers are recommended to upgrade to 2.8.0, which fixes this issue",
        "URL": "https://github.com/apache/airflow/pull/33932",
        "Tag": "['Patch']",
        "fix_commit_hash": "0e1c106d7cd0703125528a691088e42e17c99929",
        "inducing_commit_hash_pyszz": [
            "1b4c6bed94580eab656cc476e99a4980813b11ca"
        ],
        "inducing_commit_hash_pd": [
            "c030729dcbe35a2a4869e46b57a761c8376ede8d",
            "4a344f13d26ecbb627bb9968895b290bfd86e4da",
            "1b4c6bed94580eab656cc476e99a4980813b11ca",
            "d2cbf92290ac6b43930acdc58999f5a48640de49"
        ],
        "matched": [
            "1b4c6bed94580eab656cc476e99a4980813b11ca"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-51702",
        "Problem_Type": "CWE-532",
        "Description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
        "URL": "https://github.com/apache/airflow/pull/29498",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b5296b74361bfe2449033eca5f732c4a4377f6bb",
        "inducing_commit_hash_pyszz": [
            "3d2c96e3f5d238955bccba190726d0fba860eb7a"
        ],
        "inducing_commit_hash_pd": [
            "971039454a3684d0ea7261dfe91f34ac4b62af72",
            "3d2c96e3f5d238955bccba190726d0fba860eb7a",
            "246d778e6b8042850ef8510bd25c52b1198030f1"
        ],
        "matched": [
            "3d2c96e3f5d238955bccba190726d0fba860eb7a"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-51702",
        "Problem_Type": "CWE-532",
        "Description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
        "URL": "https://github.com/apache/airflow/pull/30110",
        "Tag": "['Patch']",
        "fix_commit_hash": "274d9c3508179ae8b0f705d9787e8200be7718e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ec5b4feb59816e4a13f779ad83d51206bf5ee0d9"
        ],
        "matched": [
            "ec5b4feb59816e4a13f779ad83d51206bf5ee0d9"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-51702",
        "Problem_Type": "CWE-532",
        "Description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
        "URL": "https://github.com/apache/airflow/pull/36492",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "8fb55f2127be379bf25ed5fd6d2933417e8da439",
        "inducing_commit_hash_pyszz": [
            "5da4afe908df22d3bb812d531ac437066dd5b816"
        ],
        "inducing_commit_hash_pd": [
            "a1b99fe5364977739b7d8f22a880eeb9d781958b",
            "ec5b4feb59816e4a13f779ad83d51206bf5ee0d9",
            "5da4afe908df22d3bb812d531ac437066dd5b816",
            "fc0e5a4d42ee882ca5bc20ea65be38b2c739644d",
            "f9e9d23457cba5d3e18b5bdb7b65ecc63735b65b"
        ],
        "matched": [
            "5da4afe908df22d3bb812d531ac437066dd5b816"
        ]
    },
    {
        "repo_name": "apache/brpc",
        "CVE_ID": "CVE-2024-23452",
        "Problem_Type": "CWE-444",
        "Description": "Request smuggling vulnerability in HTTP server in Apache bRPC 0.9.5~1.7.0 on all platforms allows attacker to smuggle request.\n\nVulnerability Cause Description:\n\nThe http_parser does not comply with the RFC-7230 HTTP 1.1 specification.\n\nAttack\u00c2\u00a0scenario:\nIf a message is received with both a Transfer-Encoding and a Content-Length header field, such a message might indicate an attempt to perform request smuggling or response splitting.\nOne particular attack scenario is that a bRPC made http server on the backend receiving requests in one persistent connection from frontend server that uses TE to parse request with the logic that 'chunk' is contained in the TE field. in that case an attacker can smuggle a request into the connection to the backend server.\u00c2\u00a0\n\nSolution:\nYou can choose one solution from below:\n1. Upgrade bRPC to version 1.8.0, which fixes this issue. Download link:  https://github.com/apache/brpc/releases/tag/1.8.0\n 2. Apply this patch:\u00c2\u00a0 https://github.com/apache/brpc/pull/2518 \n\n",
        "URL": "https://github.com/apache/brpc/pull/2518",
        "Tag": "['Patch']",
        "fix_commit_hash": "09b960026089d5efe22416b8cb7ec777663ca1e0",
        "inducing_commit_hash_pyszz": [
            "68432abe28f6cd64fbf7045127e7436c7062f1d0"
        ],
        "inducing_commit_hash_pd": [
            "68432abe28f6cd64fbf7045127e7436c7062f1d0",
            "308b3c81e12d2068b540488044d4a862cf256da8",
            "be19c28e502579a508bdd47f2b2c9c1f00cefa54",
            "29ac770af8244fd1aaaf92134bf2133a246e2837",
            "79981559623c8fca93ae8c32fc9dc62131acef09",
            "691b8a159425a5344c2feb9cb5bdbfa34b7f1687"
        ],
        "matched": [
            "68432abe28f6cd64fbf7045127e7436c7062f1d0"
        ]
    },
    {
        "repo_name": "apache/dolphinscheduler",
        "CVE_ID": "CVE-2023-49068",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache DolphinScheduler.This issue affects Apache DolphinScheduler: before 3.2.1.\n\nUsers are recommended to upgrade to version 3.2.1, which fixes the issue. At the time of disclosure of this advisory, this version has not yet been released. In the mean time, we recommend you make sure the logs are only available to trusted operators.\n\n",
        "URL": "https://github.com/apache/dolphinscheduler/pull/15192",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7308888c703fbe227887d2426273100582096134",
        "inducing_commit_hash_pyszz": [
            "8ae401e3d74a76ac8ce64f3f92427934309387dd"
        ],
        "inducing_commit_hash_pd": [
            "8d12dc0702622783a48f178e7028cbc7ef5b82e1"
        ],
        "matched": [
            "8ae401e3d74a76ac8ce64f3f92427934309387dd"
        ]
    },
    {
        "repo_name": "apache/dolphinscheduler",
        "CVE_ID": "CVE-2023-49299",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache DolphinScheduler. An\u00c2\u00a0authenticated user can cause arbitrary, unsandboxed javascript to be executed on the server.This issue affects Apache DolphinScheduler: until 3.1.9.\n\nUsers are recommended to upgrade to version 3.1.9, which fixes the issue.\n\n",
        "URL": "https://github.com/apache/dolphinscheduler/pull/15228",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b5eddc0ce85d379080a51bf2162477f7d8c1b7d2",
        "inducing_commit_hash_pyszz": [
            "a55612e4f718fb35401b7393d2eb2862f725b37b"
        ],
        "inducing_commit_hash_pd": [
            "cf91544b99e158c9e97360c7234fd24bc488151a",
            "a55612e4f718fb35401b7393d2eb2862f725b37b",
            "b49b91c45d1c9e1ed1906b49d1fef63d753ca1ac",
            "2e1768aae6100bb05804c29c974bfaa274e2636f",
            "e34c65d5a676ad4ff9b8eca5c5446d578b0b39b3",
            "8d12dc0702622783a48f178e7028cbc7ef5b82e1"
        ],
        "matched": [
            "a55612e4f718fb35401b7393d2eb2862f725b37b"
        ]
    },
    {
        "repo_name": "apache/dolphinscheduler",
        "CVE_ID": "CVE-2023-49620",
        "Problem_Type": "CWE-862",
        "Description": "Before DolphinScheduler version 3.1.0, the login user could delete UDF function in the resource center unauthorized (which almost used in sql task), with\u00c2\u00a0unauthorized\u00c2\u00a0access vulnerability (IDOR), but after version 3.1.0 we fixed this issue. We mark this cve as moderate level because it still requires user login to operate, please upgrade to version 3.1.0 to avoid this\u00c2\u00a0vulnerability",
        "URL": "https://github.com/apache/dolphinscheduler/pull/10307",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a4948f58e671ab263060da1de255af3ecd2530ac",
        "inducing_commit_hash_pyszz": [
            "7ac8ea493cf6f458097c695baa500dd0c22b3bb8"
        ],
        "inducing_commit_hash_pd": [
            "a409306601891c08d76f7bbfdc842012db1af537",
            "676a952bcbeba1790b03954915ec352cd920b6d1",
            "7ac8ea493cf6f458097c695baa500dd0c22b3bb8",
            "403a4a20f2a6e12f1448c0950ae58c37c3213806",
            "ae32da326287191df63f9a08493d60edb80853b2",
            "ba039dc252a2ddfe316297a2955f0ea9f966432a",
            "15ae4dfa742f2ccbe71b45f384d14221a4c38d88",
            "0344b21dbc32c8ff98801e536c03191d1b1f5f3d",
            "f5675170311ccc3cc8e6f88e74c956220297e8cd",
            "ef4ec213e3851f82e0fd5d3010973c4e3816d543",
            "070424fc7825d0452827482a8d4815cb543d0b65",
            "0fc419ed8f073217f5ee4e42b9f6e18cfda2eb32",
            "c7e80e42d79f56e237d296d430386860724588ff",
            "3f9dcd5d4489197b22027d752e2c0bd0d453c30c",
            "503be5f4007cc05bdcab268eb6f63c5cd72344fb",
            "0afb780718f47c28364019d53e3b2e154a9d0603",
            "9ae29a756f0aeed894c80f5e495d786ccf03f41f",
            "58b55d40142521c4d7485bc1b0aa050e31888567",
            "0e3cafec1d0a6529c6bb5371429a9b51bd60fd5a",
            "53ab6f7b92f531984037023a4808d41fe3a42fc3",
            "dc6c18902a864cb5a00f57d6fc9a9d91fbd3bbe8",
            "fe9967b00566f88c68993a290a54d2b991840527",
            "996790ce9ea48bd96aed6687d31afe931fc70893",
            "081adf4aaa7a11a4068acf123985fb5550138ec9",
            "38c965ddc990b68b9f3d4948fa5091af58a49a4b",
            "a53195fa15f2a8e66db60bb1f2143ddab36adb4e",
            "733acdfd76c10cd1948da7a96e222bbbfd62b777",
            "fe521723392f9f699afc763ba9c1ddb06f846f5a",
            "2b519f31e919e5ccf8d58b747e27594eb2d7306d",
            "b5636b043ff8cd3927c7e98b1347f23d26927b88",
            "701b535ae6a9fdd7c67797528fb9ff8f650db514",
            "fb422af73217e0ec699a6a9e1504b09eaf5f9d7e"
        ],
        "matched": [
            "7ac8ea493cf6f458097c695baa500dd0c22b3bb8"
        ]
    },
    {
        "repo_name": "apache/incubator-nuttx-apps",
        "CVE_ID": "CVE-2021-34125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Yuneec Mantis Q and PX4-Autopilot v 1.11.3 and below allow attacker to gain access to sensitive information via various nuttx commands.",
        "URL": "https://github.com/apache/incubator-nuttx-apps/pull/647/commits/2fc1157f8585acc39f13a31612ebf890f41e76ca",
        "Tag": "['Patch']",
        "fix_commit_hash": "6f4b1339986345fda940c611c2df6936aedf8014",
        "inducing_commit_hash_pyszz": [
            "08ff009855bc94c9449c984fdefacc72da400314"
        ],
        "inducing_commit_hash_pd": [
            "08ff009855bc94c9449c984fdefacc72da400314"
        ],
        "matched": [
            "08ff009855bc94c9449c984fdefacc72da400314"
        ]
    },
    {
        "repo_name": "apache/incubator-nuttx",
        "CVE_ID": "CVE-2021-34125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Yuneec Mantis Q and PX4-Autopilot v 1.11.3 and below allow attacker to gain access to sensitive information via various nuttx commands.",
        "URL": "https://github.com/apache/incubator-nuttx/pull/3292/commits/016873788280ca815ba886195535bbe601de6e48",
        "Tag": "['Patch']",
        "fix_commit_hash": "4bb624b8a16b35f7908d2af7a89331dd1349eff2",
        "inducing_commit_hash_pyszz": [
            "342cbe58ddda1483b9876a7260a8b3493d7452d0"
        ],
        "inducing_commit_hash_pd": [
            "6f94e4e9e7b8868930ce93b65330fedbee3af2c9",
            "6c25f3d142c1eb0ca0f4a97516bdfbb949794d74",
            "422888733b39e1a39b3050001455cfee875f23a4",
            "51b19d5f3885f647b874e0f37c1e0136b7dbb323",
            "9ea6d9aec5443b355570c5c78d5a9154076c0968",
            "0188bc49cebbcd8b57df28d2d827753556b88e16",
            "8491cd65bca944709fd3b6fc85e0927cb579c917",
            "be5c20cdae1b86231e7ee3445544bc51a8fc823d",
            "5bb3fbd69b2fcd6608acce5071c4cc927c01335f",
            "1185ff1fc6414067ae42ef64ef27b69d50c96751",
            "90f38af8dce11db13b85dffacddc44e305c730ac",
            "a7a258e05e351c5abe6ca816c5fed2c9830adaa6",
            "342cbe58ddda1483b9876a7260a8b3493d7452d0",
            "21e0daede1e5de0120e3841143ca1dff28de1635"
        ],
        "matched": [
            "342cbe58ddda1483b9876a7260a8b3493d7452d0"
        ]
    },
    {
        "repo_name": "apache/incubator-superset",
        "CVE_ID": "CVE-2018-8021",
        "Problem_Type": "CWE-502",
        "Description": "Versions of Superset prior to 0.23 used an unsafe load method from the pickle library to deserialize data leading to possible remote code execution. Note Superset 0.23 was released prior to any Superset release under the Apache Software Foundation.",
        "URL": "https://github.com/apache/incubator-superset/pull/4243",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c72a7ae4fc0a8bac1f037a79efa90e1c5549710",
        "inducing_commit_hash_pyszz": [
            "2ab6a411f4b9fa75bc86b83f4aa4e3707e90e002"
        ],
        "inducing_commit_hash_pd": [
            "11a8e3591d281a8cde6fb0ab57ed54ec97035e23",
            "2969cc9993325acc730b794f9d0d0b07fe1a60ec",
            "73cd2ea3b17574f8fef1112aa5e5b39f843882f6",
            "ac577806071c415eda071aad466322e37eb5b81b"
        ],
        "matched": [
            "2ab6a411f4b9fa75bc86b83f4aa4e3707e90e002"
        ]
    },
    {
        "repo_name": "apache/submarine",
        "CVE_ID": "CVE-2023-46302",
        "Problem_Type": "CWE-502",
        "Description": "Apache Software Foundation Apache Submarine has a bug when serializing against yaml. The bug is caused by snakeyaml  https://nvd.nist.gov/vuln/detail/CVE-2022-1471 .\n\nApache Submarine uses JAXRS to define REST endpoints.  In order to\nhandle YAML requests (using application/yaml content-type), it defines\na YamlEntityProvider entity provider that will process all incoming\nYAML requests.  In order to unmarshal the request, the readFrom method\nis invoked, passing the entityStream containing the user-supplied data in `submarine-server/server-core/src/main/java/org/apache/submarine/server/utils/YamlUtils.java`.\n \nWe have now fixed this issue in the new version by replacing to `jackson-dataformat-yaml`.\nThis issue affects Apache Submarine: from 0.7.0 before 0.8.0.\u00c2\u00a0Users are recommended to upgrade to version 0.8.0, which fixes this issue.\nIf using the version smaller than 0.8.0  and not want to upgrade, you can try cherry-pick PR  https://github.com/apache/submarine/pull/1054  and rebuild the submart-server image to fix this.\n\n",
        "URL": "https://github.com/apache/submarine/pull/1054",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "1845140883b4bd3228385a556982cbadc19595b6",
        "inducing_commit_hash_pyszz": [
            "bc4bf08864ccd0a966f05c79936790f8ba1ff104"
        ],
        "inducing_commit_hash_pd": [
            "1a58d0a596cf73265faf577f2456e10431338642",
            "d3b59cd90808117469d786d03466fbb2ae6c0416",
            "bc4bf08864ccd0a966f05c79936790f8ba1ff104",
            "3d2a3e67530d2836ae9be8e5f9549bb30dcc53ca",
            "206efd9f6c2995f52059423ceb1e96e18786e76e",
            "02c070a41d4af0027249e5ddf09642d0e0d492fe",
            "48cdf7bbc82af714a5a5485c92d7da4f2fba3891",
            "b2c7e81f0123b736fc16cc498886c6062e68a4fb",
            "b08a6b6dd2b3d585f6768d3d1b3c680435c371f6"
        ],
        "matched": [
            "bc4bf08864ccd0a966f05c79936790f8ba1ff104"
        ]
    },
    {
        "repo_name": "apache/superset",
        "CVE_ID": "CVE-2023-36387",
        "Problem_Type": "CWE-863",
        "Description": "An improper default REST API permission for Gamma users in Apache Superset up to and including 2.1.0 allows for an authenticated Gamma user to test database connections.\n",
        "URL": "https://github.com/apache/superset/pull/24185",
        "Tag": "['Patch']",
        "fix_commit_hash": "8fab3dbff419165dbd55b197c6e9ed04fe227296",
        "inducing_commit_hash_pyszz": [
            "790ac5ef870815978f56ce81b806d43c18421940"
        ],
        "inducing_commit_hash_pd": [
            "790ac5ef870815978f56ce81b806d43c18421940",
            "31f406a526b1ca8e7a72b8f8429c148636426ef9"
        ],
        "matched": [
            "790ac5ef870815978f56ce81b806d43c18421940"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3251",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c4e4379a615b2a3252c6febfdb72afd9db5ee6ac",
        "inducing_commit_hash_pyszz": [
            "03d110c25d1a0e4f10af3a422452d7cae1495614"
        ],
        "inducing_commit_hash_pd": [
            "a1651345d11f228dfb392cc79169760e80d25f06",
            "c385cc39ffe785787d9fbf60e4faff72fc58d2dd",
            "4fb3b6eb3286793a6996aef6e106beb1b7df719f",
            "65477944357bdb8bef778dda91ff1319271d9172",
            "03d110c25d1a0e4f10af3a422452d7cae1495614",
            "bf34e291c82e9f7b8adc782f735a292829e09186",
            "dc6e42c63d553c58689df4d50a4de4657dba8660",
            "af76977adb9f3c0296a232688bbcb5a1421a6768",
            "70599abf90c5f67d9d6c4e320cba3289f1b3df5e"
        ],
        "matched": [
            "03d110c25d1a0e4f10af3a422452d7cae1495614"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3231",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "44af6e5ba6d323354da0dd00f35aa7920d477805",
        "inducing_commit_hash_pyszz": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "inducing_commit_hash_pd": [
            "65477944357bdb8bef778dda91ff1319271d9172",
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "matched": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3201",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe9c1276aba6768e78b72a486c07e7b853214b09",
        "inducing_commit_hash_pyszz": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "inducing_commit_hash_pd": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "matched": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3192",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "08512deb11a610ae7084ce678b19bd637e30b3e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "a1651345d11f228dfb392cc79169760e80d25f06",
            "65477944357bdb8bef778dda91ff1319271d9172",
            "c10495e5db9e636be3d18cb47c41dfd12b4f0ec4"
        ],
        "matched": [
            "a1651345d11f228dfb392cc79169760e80d25f06"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8022",
        "Problem_Type": "CWE-20",
        "Description": "A carefully crafted invalid TLS handshake can cause Apache Traffic Server (ATS) to segfault. This affects version 6.2.2. To resolve this issue users running 6.2.2 should upgrade to 6.2.3 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/2147",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2a112d0eda562c705c2621d1b6fbc5bf3218fc75",
        "inducing_commit_hash_pyszz": [
            "c128363e2ce3ad435769221466627f7fbff86cb8"
        ],
        "inducing_commit_hash_pd": [
            "a1651345d11f228dfb392cc79169760e80d25f06",
            "2b48fd327bb3e8a5ae66f5acad9169a08e740ecb",
            "a48fe23bd03fdb6965fce99254689a95b022cd89",
            "c128363e2ce3ad435769221466627f7fbff86cb8",
            "01a15380d56d1024217bb393c4c2c28a81b9e7a7"
        ],
        "matched": [
            "c128363e2ce3ad435769221466627f7fbff86cb8"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8040",
        "Problem_Type": "CWE-668",
        "Description": "Pages that are rendered using the ESI plugin can have access to the cookie header when the plugin is configured not to allow access. This affects Apache Traffic Server (ATS) versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3926",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f4a5b7a3eb4904d59913d4b38e54a4caeecceae",
        "inducing_commit_hash_pyszz": [
            "7773395bc218b26890f01e0ef12b576a13416fdb"
        ],
        "inducing_commit_hash_pd": [
            "7773395bc218b26890f01e0ef12b576a13416fdb"
        ],
        "matched": [
            "7773395bc218b26890f01e0ef12b576a13416fdb"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/apache/trafficserver/pull/10564",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b28ad74f117307e8de206f1de70c3fa716f90682",
        "inducing_commit_hash_pyszz": [
            "6550d81849b66a1f52c73bdce15b2c03d93cac29"
        ],
        "inducing_commit_hash_pd": [
            "edccb98c97f15abce60ddb795e8429ce940c1414",
            "0d2ad23921061c4117104b64d15bc17cae79c9fe",
            "6550d81849b66a1f52c73bdce15b2c03d93cac29",
            "5cd7b75d0f50f8da50119a4044314cc187905ae7",
            "46422dfaf007eccbda03183557805902ac853cef",
            "f2ebbcee400c3c91aa789382d7f7243797ed733c",
            "4810f98e746c2ac0f777bca0351b31f82fc0594d",
            "ef0f0e1ae1b9574695050ec370c6f40ccba6c25c",
            "490495431f1f11e9e52cff12df54d51115cef2c0",
            "2aae7251b793c9db3cb3ddd71f666e872522732f",
            "9c05e64df3e9eb00f786a42e29bfbdb4ffa76ec1",
            "e6291181b4eb6bc98b57fa1cd86ec07fd2d59928",
            "0e6e5c151cde5f06c15e295f663a98b2b7d37a6d",
            "11041d9368de4e68a6447d23d1fa9d04c7bbc7c7",
            "d430efe76ba0726ae64e8da9b8853c986d18af40",
            "50441b39e6631389ef95c4133f06bbf94544879c",
            "7bef8ca0b8a80efda417616d995a89c2b8eed119",
            "0ecd3fb1223019a37715f3b4db957fe8ca6cda13",
            "22733a32b81346cd758b69377c61d3569a63c13a",
            "693b3cb465d2867379a80e882899aca8ea98f389",
            "d91a8ca17bb17b08ce7f040b868e3c286a7bb0a6",
            "f2b45853cba1c49024e3985c3aa09b777dda7360",
            "cbbdd53cc2836df415bb3970edd7bf17b65e30eb",
            "83d1f110debd9d3ebbc827ee1138e69544b95559",
            "9c09dbc118f7ce22ce6a89ac88c7532f83ee23b0",
            "4208ecb8719add76aa46ab2005ff9424531e2e73",
            "91f1bb7b54827f80bd5b976e83e25bc86e4e3a3b",
            "aa5ead6edc46e46baa3832f512951ebe9ca83463",
            "923932fc5144a14ee334477dabf418545af1ae2c",
            "3db54378720e6f4c66e265c28b7c0d445afe5849",
            "adf9151d85b68ba5472eb29fa77f2a3dc184dec7",
            "0c53eaec1348cb71f2e9e8319c6803b53620a325",
            "07fb9130cdd458965a8631ff7cd2f1376d6ac689",
            "16172a4e79865d1201a51e85aeb72df8b0609986"
        ],
        "matched": [
            "6550d81849b66a1f52c73bdce15b2c03d93cac29"
        ]
    },
    {
        "repo_name": "apereo/cas",
        "CVE_ID": "CVE-2020-7226",
        "Problem_Type": "CWE-770",
        "Description": "CiphertextHeader.java in Cryptacular 1.2.3, as used in Apereo CAS and other products, allows attackers to trigger excessive memory allocation during a decode operation, because the nonce array length associated with \"new byte\" may depend on untrusted input within the header of encoded data.",
        "URL": "https://github.com/apereo/cas/pull/4685",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0def99e37feb0d403b7eb2299c864bbf1ecf8d7c",
        "inducing_commit_hash_pyszz": [
            "70a074905ad24e6cca5f048f23a11a6b4dd905e0"
        ],
        "inducing_commit_hash_pd": [
            "a22072e7f258f547be12d8fc4637388f883383de"
        ],
        "matched": [
            "70a074905ad24e6cca5f048f23a11a6b4dd905e0"
        ]
    },
    {
        "repo_name": "apolloconfig/apollo",
        "CVE_ID": "CVE-2023-25570",
        "Problem_Type": "CWE-306",
        "Description": "Apollo is a configuration management system. Prior to version 2.1.0, there are potential security issues if users expose apollo-configservice to the internet, which is not recommended. This is because there is no authentication feature enabled for the built-in eureka service. Malicious hackers may access eureka directly to mock apollo-configservice and apollo-adminservice. Login authentication for eureka was added in version 2.1.0. As a workaround, avoid exposing apollo-configservice to the internet.",
        "URL": "https://github.com/apolloconfig/apollo/pull/4663",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7df79bf8df6960433ed4ff782a54e3dfc74632bd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "52f0084e9135e8641f5c0f3a89a164285645555d",
            "0be1e7037f59a8cec12ecb9e1eb340bc7957c43a"
        ],
        "matched": [
            "52f0084e9135e8641f5c0f3a89a164285645555d"
        ]
    },
    {
        "repo_name": "apollographql/router",
        "CVE_ID": "CVE-2023-45812",
        "Problem_Type": "CWE-754",
        "Description": "The Apollo Router is a configurable, high-performance graph router written in Rust to run a federated supergraph that uses Apollo Federation. Affected versions are subject to a Denial-of-Service (DoS) type vulnerability which causes the Router to panic and terminate when a multi-part response is sent. When users send queries to the router that uses the `@defer` or Subscriptions, the Router will panic. To be vulnerable, users of Router must have a coprocessor with `coprocessor.supergraph.response` configured in their `router.yaml` and also to support either `@defer` or Subscriptions. Apollo Router version 1.33.0 has a fix for this vulnerability which was introduced in PR #4014. Users are advised to upgrade. Users unable to upgrade should avoid using the coprocessor supergraph response or disable defer and subscriptions support and continue to use the coprocessor supergraph response.",
        "URL": "https://github.com/apollographql/router/pull/4014",
        "Tag": "['Patch']",
        "fix_commit_hash": "b917b8c117b46a2d508428c0856f4927dfcfc341",
        "inducing_commit_hash_pyszz": [
            "cf19df6b744043f3b60f55b86a75a3b26d0fd610"
        ],
        "inducing_commit_hash_pd": [
            "cf19df6b744043f3b60f55b86a75a3b26d0fd610"
        ],
        "matched": [
            "cf19df6b744043f3b60f55b86a75a3b26d0fd610"
        ]
    },
    {
        "repo_name": "apple/swift-nio",
        "CVE_ID": "CVE-2023-31136",
        "Problem_Type": "CWE-522",
        "Description": "PostgresNIO is a Swift client for PostgreSQL. Any user of PostgresNIO prior to version 1.14.2 connecting to servers with TLS enabled is vulnerable to a man-in-the-middle attacker injecting false responses to the client's first few queries, despite the use of TLS certificate verification and encryption. The vulnerability is addressed in PostgresNIO versions starting from 1.14.2. There are no known workarounds for unpatched users.",
        "URL": "https://github.com/apple/swift-nio/pull/2419",
        "Tag": "['Patch']",
        "fix_commit_hash": "546eaa261ec5028b9cc5c7fa883fba9dd5881a3b",
        "inducing_commit_hash_pyszz": [
            "1f94a6e62057745b490e89752a257e2812cd5f26"
        ],
        "inducing_commit_hash_pd": [
            "1f94a6e62057745b490e89752a257e2812cd5f26"
        ],
        "matched": [
            "1f94a6e62057745b490e89752a257e2812cd5f26"
        ]
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2018-20552",
        "Problem_Type": "CWE-125",
        "Description": "Tcpreplay before 4.3.1 has a heap-based buffer over-read in packet2tree in tree.c.",
        "URL": "https://github.com/appneta/tcpreplay/pull/532/commits/6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "inducing_commit_hash_pyszz": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "inducing_commit_hash_pd": [
            "68f67b1a3a4d319543692afb5bd5b191ec984287",
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "matched": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ]
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2018-20553",
        "Problem_Type": "CWE-125",
        "Description": "Tcpreplay before 4.3.1 has a heap-based buffer over-read in get_l2len in common/get.c.",
        "URL": "https://github.com/appneta/tcpreplay/pull/532/commits/6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "inducing_commit_hash_pyszz": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "inducing_commit_hash_pd": [
            "68f67b1a3a4d319543692afb5bd5b191ec984287",
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "matched": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ]
    },
    {
        "repo_name": "appsmithorg/appsmith",
        "CVE_ID": "CVE-2022-38298",
        "Problem_Type": "CWE-918",
        "Description": "Appsmith v1.7.11 was discovered to allow attackers to execute an authenticated Server-Side Request Forgery (SSRF) via redirecting incoming requests to the AWS internal metadata endpoint.",
        "URL": "https://github.com/appsmithorg/appsmith/pull/15782",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0967b516b69a6e9438a19f8f6953cf1d7d2d9aa6",
        "inducing_commit_hash_pyszz": [
            "d7411be855570e5dcae2e1d47b9571f0b81b8c05"
        ],
        "inducing_commit_hash_pd": [
            "71a8936e107baa5f8030359381cb31fd047363ed",
            "d7411be855570e5dcae2e1d47b9571f0b81b8c05"
        ],
        "matched": [
            "d7411be855570e5dcae2e1d47b9571f0b81b8c05"
        ]
    },
    {
        "repo_name": "appsmithorg/appsmith",
        "CVE_ID": "CVE-2022-38299",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue in the Elasticsearch plugin of Appsmith v1.7.11 allows attackers to connect disallowed hosts to the AWS/GCP internal metadata endpoint.",
        "URL": "https://github.com/appsmithorg/appsmith/pull/15834",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c1dbca67796f635711ff84ea9f8b4365039efa39",
        "inducing_commit_hash_pyszz": [
            "5c1ad6403e12a97a3c6ad8945bd02bd48445b88d"
        ],
        "inducing_commit_hash_pd": [
            "828339605657c978388415c011e21295ab19a503",
            "e6b77a129961251a6a19a03f6d4e1a73027c4614",
            "91e308665bb28fcf34e931a11fba7713db832e87",
            "52bfd258248c8c8b3ab9597a2d5eb0d5291551e7",
            "5c1ad6403e12a97a3c6ad8945bd02bd48445b88d",
            "6df4dafead811b3a9484fe8fbd152cd1c642d00b",
            "217e36aaa992ed5599d177a28161673e1cc496fa",
            "eeaa26a7ccb907dc7814dfb3aee9135b467c5f9a",
            "fa1a0549fffa0577389548ef4d3c979492caa8ce",
            "0bb99dd087d100cf51643f32f31f39ce3ae06e29",
            "a00c144e85d51af9e5b1c5e691fcd28bf5b967a0",
            "470f2fafcdfd7502910e32a02fd67db85a0cf136",
            "247e5d7ea4ad40f49c880a740414d19aa65588e0"
        ],
        "matched": [
            "5c1ad6403e12a97a3c6ad8945bd02bd48445b88d"
        ]
    },
    {
        "repo_name": "ardatan/graphql-tools",
        "CVE_ID": "CVE-2021-23326",
        "Problem_Type": "CWE-78",
        "Description": "This affects the package @graphql-tools/git-loader before 6.2.6. The use of exec and execSync in packages/loaders/git/src/load-git.ts allows arbitrary command injection.",
        "URL": "https://github.com/ardatan/graphql-tools/pull/2470",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a966beee8ca8b2f4adfe93318b96e4a5c501eac",
        "inducing_commit_hash_pyszz": [
            "df6e0aed3294b76e3774f0f290870904cf8695f5"
        ],
        "inducing_commit_hash_pd": [
            "df6e0aed3294b76e3774f0f290870904cf8695f5",
            "ae7c968deb2e6f51024a385abfc6455c0db5a5df",
            "479892bd7b7caa3e7ff843c2a589a24d32d48aeb"
        ],
        "matched": [
            "df6e0aed3294b76e3774f0f290870904cf8695f5"
        ]
    },
    {
        "repo_name": "arendst/Tasmota",
        "CVE_ID": "CVE-2022-43294",
        "Problem_Type": "CWE-787",
        "Description": "Tasmota before commit 066878da4d4762a9b6cb169fdf353e804d735cfd was discovered to contain a stack overflow via the ClientPortPtr parameter at lib/libesp32/rtsp/CRtspSession.cpp.",
        "URL": "https://github.com/arendst/Tasmota/pull/16802/commits/066878da4d4762a9b6cb169fdf353e804d735cfd",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "066878da4d4762a9b6cb169fdf353e804d735cfd",
        "inducing_commit_hash_pyszz": [
            "d092879f710f77123e67743b97016375d93e8962"
        ],
        "inducing_commit_hash_pd": [
            "d092879f710f77123e67743b97016375d93e8962"
        ],
        "matched": [
            "d092879f710f77123e67743b97016375d93e8962"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2020-11576",
        "Problem_Type": "CWE-203",
        "Description": "Fixed in v1.5.1, Argo version v1.5.0 was vulnerable to a user-enumeration vulnerability which allowed attackers to determine the usernames of valid (non-SSO) accounts because /api/v1/session returned 401 for an existing username and 404 otherwise.",
        "URL": "https://github.com/argoproj/argo-cd/pull/3215",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c2be618276369c0a9e60a49d9b8151f0136fde7",
        "inducing_commit_hash_pyszz": [
            "fdf7566bb7488fed194858f383a3424a8a770c51"
        ],
        "inducing_commit_hash_pd": [
            "fa4b76161211727b63b1abda66a587aa5fd048ba",
            "cbf9585d8451b550bf4359c71072aa01b2b9b87f",
            "0f2a88102dcd3212161454f8d431445e1cdee538",
            "20adad76ef811773c06231b0dd38a733d956cb34",
            "19906ded5b6cb1ac3144156c1a37bf7c82958ca2",
            "dc8a2f5d6228b6b6cd139bdcd7c99ef5fdc98adf",
            "7b6b945cbf46af11cef182a92d7fe72fcb1354d3",
            "abf6888dd505a1a79444155b316cf53169b6f343",
            "5cedfb8ead830e4cdea73e83b9d17e0f618c9529",
            "dc662da3d605bd7189ce6c06b0dbc1661d4bf2fb",
            "b2b5eea3431b076bc185a5c8af4683c6f2c3838a",
            "173ecd9397a6a91c85931675874b0a9550be1346",
            "fdf7566bb7488fed194858f383a3424a8a770c51",
            "00134d2faf736927c010c691862a5cd5601f490b",
            "0479fcdf82b1719fd97767ea74509063e9308b0a",
            "4f6b686ed7a49103e2bdd08b2baefd7811887ba2",
            "66b4f3a685782f423b3b09456c13d85a58cbc879",
            "0ea0404044f69c7f70ff3c7e61ea0eef0f611df5",
            "48ef2e919e52ccf1f13a5816a0bd09246d542f45",
            "212ca9e37ee93366a6f95c54593fe572b5413c8b",
            "416969730235593181ab88dc0d6efb80ff0e7902",
            "d715ac9e53dfaa7dbe6377bcc65cb77481158b00",
            "134469c5f0c7d08d68c3bbe1d4a5d03f7244d4d1",
            "eb7f942acbad6ae2b88130e42215e9359f352353",
            "456ae3ab841ffb48e5f45c1a25ee36f15e45c02d",
            "7d86b51246503f9a082359efffb5649bf8b046f3",
            "4296a87e6b5f498a55a47e1af4d0fed7f3c2493b",
            "60fedf09850060c4337ecfdd2d21ab148ffbd3f2",
            "09067585faf419e51a549a9c4c38192b41c598c3",
            "6bc98f91b146ab56cd9cbdd66d756cb281730c59",
            "7fd326eb21d4c1de01dfb38b2565688d0abe4a90",
            "ac938fe8a3af46f7aac07d607bfdd0a375e74103",
            "062b13e92a2ae38408a5b2a007accb46ab84ca8d",
            "670921df902855b209094b59f32ce3e051a847fd",
            "f8a4d662f2f86db193092addbda1ab3972a0194b",
            "5be6db4689856aa5e5d9d7aecaf1c9c1594d3651",
            "5953080c96b3de29844039faa0cc61ec25b28907",
            "66f64fbf151fa450a7023958b967231d30899cb3"
        ],
        "matched": [
            "fdf7566bb7488fed194858f383a3424a8a770c51"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2021-23347",
        "Problem_Type": "CWE-79",
        "Description": "The package github.com/argoproj/argo-cd/cmd before 1.7.13, from 1.8.0 and before 1.8.6 are vulnerable to Cross-site Scripting (XSS) the SSO provider connected to Argo CD would have to send back a malicious error message containing JavaScript to the user.",
        "URL": "https://github.com/argoproj/argo-cd/pull/5563",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e896c0e4b46974288f61f612701c34d171e05456",
        "inducing_commit_hash_pyszz": [
            "dc662da3d605bd7189ce6c06b0dbc1661d4bf2fb"
        ],
        "inducing_commit_hash_pd": [
            "5c7a3329f390e61f63b2f0565c364cdfa7d48d41"
        ],
        "matched": [
            "dc662da3d605bd7189ce6c06b0dbc1661d4bf2fb"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2023-25163",
        "Problem_Type": "CWE-532",
        "Description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v2.6.0-rc1 have an output sanitization bug which leaks repository access credentials in error messages. These error messages are visible to the user, and they are logged. The error message is visible when a user attempts to create or update an Application via the Argo CD API (and therefor the UI or CLI). The user must have `applications, create` or `applications, update` RBAC access to reach the code which may produce the error. The user is not guaranteed to be able to trigger the error message. They may attempt to spam the API with requests to trigger a rate limit error from the upstream repository. If the user has `repositories, update` access, they may edit an existing repository to introduce a URL typo or otherwise force an error message. But if they have that level of access, they are probably intended to have access to the credentials anyway. A patch for this vulnerability has been released in version 2.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/argoproj/argo-cd/pull/12320",
        "Tag": "['Patch']",
        "fix_commit_hash": "17167fc2e7e28a5b25151c8a269ea17477038aba",
        "inducing_commit_hash_pyszz": [
            "5515b8ce9ddd2133c4b49c01d771122e5738ee39"
        ],
        "inducing_commit_hash_pd": [
            "c6fa942e945977afe2ae78c86670d5bb667b609e"
        ],
        "matched": [
            "5515b8ce9ddd2133c4b49c01d771122e5738ee39"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2023-40029",
        "Problem_Type": "CWE-532",
        "Description": "Argo CD is a declarative continuous deployment for Kubernetes. Argo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in`kubectl.kubernetes.io/last-applied-configuration` annotation. pull request #7139 introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the `kubectl.kubernetes.io/last-applied-configuration` annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have `clusters, get` RBAC access. **Note:** In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive. The bug has been patched in versions 2.8.3, 2.7.14, and 2.6.15. Users are advised to upgrade. Users unable to upgrade should update/deploy cluster secret with `server-side-apply` flag which does not use or rely on `kubectl.kubernetes.io/last-applied-configuration` annotation. Note: annotation for existing secrets will require manual removal.\n\n",
        "URL": "https://github.com/argoproj/argo-cd/pull/7139",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "7122b83fc346ec2729227405a2f9c2aa84b0bf80",
        "inducing_commit_hash_pyszz": [
            "49a854a738c8a4da91bf8fee3bdd2bd3dddb77aa"
        ],
        "inducing_commit_hash_pd": [
            "58ac345f2bd4054a12b4991a8909c56a035867d9",
            "10d05cdb60fe65770809e58eee400b5d92764228",
            "49a854a738c8a4da91bf8fee3bdd2bd3dddb77aa",
            "12ec99ad01a945e045225e5c239f8ee203e8139a"
        ],
        "matched": [
            "49a854a738c8a4da91bf8fee3bdd2bd3dddb77aa"
        ]
    },
    {
        "repo_name": "argoproj/argo-events",
        "CVE_ID": "CVE-2022-31054",
        "Problem_Type": "CWE-787",
        "Description": "Argo Events is an event-driven workflow automation framework for Kubernetes. Prior to version 1.7.1, several `HandleRoute` endpoints make use of the deprecated `ioutil.ReadAll()`. `ioutil.ReadAll()` reads all the data into memory. As such, an attacker who sends a large request to the Argo Events server will be able to crash it and cause denial of service. A patch for this vulnerability has been released in Argo Events version 1.7.1.",
        "URL": "https://github.com/argoproj/argo-events/pull/1966",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "143f8beb81e87af523dd15a6de850c5e6a0e8f59",
        "inducing_commit_hash_pyszz": [
            "c70a1d11cd2818f6164bbcfef510d9ba10ef7cdc"
        ],
        "inducing_commit_hash_pd": [
            "22de2c470487dcd3f6e2255727e522b305df2d4c",
            "28a5c2be7638580cde71598e8a9f58edf3283857",
            "d3673d8ef952e3442377c193f1f3508d114b7fb5",
            "fdc8eef12c488cc9854313289cc004bcbdd85f47",
            "c16a1c597ff03b58d460307f50baede16fd059d4",
            "21cb5b5d0780549bd2837f408683c6fa6335f2da",
            "9d4a5c52dcd332a4fa462f739fc28d7e134ad6b7",
            "3cf92547cce01a26dc58e5634837936fcea901e2",
            "6939b1b46b7e3e997091a48124c99791f1011458",
            "89897386b74f62c61baf0d5dc320dab6ead67428",
            "af1f8557caaed0f081bac3a9172c51c793f65ffb",
            "8f96b097242b8380de84c9ee670923746e962f61",
            "38d6adc939e6ddbbae99eafc3f65da83040185c3",
            "fcf4944fc0b4f899eb4c20bb15fb3b68c763c102",
            "92968e2d987800eb053d7bd0249f02bfee948a90",
            "b5e5d8e8b3186660e3f456ed3c36919a10d96acf",
            "849a9ffb74cc402d20dedf0b57380bda4f09bb71",
            "f493709fe2427ee0bd35159d2137bbc004ceacfb",
            "6a9358204a065cf902b289d2f7cccad11c3c362c",
            "feeaf5d0420f6949ccaf1904a8dcd58c65a176ac",
            "0019098f333aa964c4380b6dd5a69afb12a1dcdf",
            "b839fd052e19aa80d538190a532ebb206ed527ad",
            "f02d2cd7bdac456bb8ba6b3de4a97831c403c7af",
            "d6e6aed65b1f538f3148ec01ec95820924d26e29",
            "1cf98ab45ad1ae189da7a89fd453252f0e8e890b",
            "4ba0855140e3d5397736132767aac2255b0f1da9",
            "12ae7b2e80f84faa0bafa476512473c59bbcb5be",
            "93cd06d67d3a80c009d28ca426dfa74936edba4b",
            "58cc0930603dfd4a685eb904e17610bbc2ca8637",
            "145fd9a940833c6e5b398994305d85847215d957",
            "feed8019901222470e02c693ee7216f59ecb9a50",
            "2f027680621e8d7696a917764fd12519c757025e",
            "f91e05905ae55094912ff1153b80fd3736db7727",
            "88dc8b117f49504085c3b9d14dda5a1e2d46411d",
            "28e23ce27180b0e457034548da635e198ab0ca83",
            "160657f18961af7006567947f82b2b06c0808921",
            "2363cc1f448ebc689b6cde967ca90b6a5461cef7",
            "c70a1d11cd2818f6164bbcfef510d9ba10ef7cdc",
            "437cb88b1b840cd7402c048c6b5ac0e927caf3e8",
            "099ed605dd80db9f3b607c7987d945b428068095",
            "6b7b466bbff7e22227e33dd955ad4e5cd3755f02"
        ],
        "matched": [
            "c70a1d11cd2818f6164bbcfef510d9ba10ef7cdc"
        ]
    },
    {
        "repo_name": "argoproj/argo-workflows",
        "CVE_ID": "CVE-2022-29164",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. In affected versions an attacker can create a workflow which produces a HTML artifact containing an HTML file that contains a script which uses XHR calls to interact with the Argo Server API. The attacker emails the deep-link to the artifact to their victim. The victim opens the link, the script starts running. As the script has access to the Argo Server API (as the victim), so may read information about the victim\u00c2\u2019s workflows, or create and delete workflows. Note the attacker must be an insider: they must have access to the same cluster as the victim and must already be able to run their own workflows. The attacker must have an understanding of the victim\u00c2\u2019s system. We have seen no evidence of this in the wild. We urge all users to upgrade to the fixed versions.",
        "URL": "https://github.com/argoproj/argo-workflows/pull/8585",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "87470e1c2bf703a9110e97bb755614ce8757fdcc",
        "inducing_commit_hash_pyszz": [
            "3d892d9b481c5eefeb309b462b3f166a31335bc4"
        ],
        "inducing_commit_hash_pd": [
            "284adfe16aeb11536a1c98f1956fdeb76dac4f1c",
            "3d892d9b481c5eefeb309b462b3f166a31335bc4"
        ],
        "matched": [
            "3d892d9b481c5eefeb309b462b3f166a31335bc4"
        ]
    },
    {
        "repo_name": "ariabuckles/simple-markdown",
        "CVE_ID": "CVE-2019-25102",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability, which was classified as problematic, was found in simple-markdown 0.6.0. Affected is an unknown function of the file simple-markdown.js. The manipulation with the input <<<<<<<<<<:/:/:/:/:/:/:/:/:/:/ leads to inefficient regular expression complexity. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 0.6.1 is able to address this issue. The patch is identified as 015a719bf5cdc561feea05500ecb3274ef609cd2. It is recommended to upgrade the affected component. VDB-220638 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/ariabuckles/simple-markdown/pull/73",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "015a719bf5cdc561feea05500ecb3274ef609cd2",
        "inducing_commit_hash_pyszz": [
            "90ef64a857169e68e7a9fde396b57b061372f396"
        ],
        "inducing_commit_hash_pd": [
            "90ef64a857169e68e7a9fde396b57b061372f396"
        ],
        "matched": [
            "90ef64a857169e68e7a9fde396b57b061372f396"
        ]
    },
    {
        "repo_name": "arvidn/libtorrent",
        "CVE_ID": "CVE-2016-7164",
        "Problem_Type": "CWE-20",
        "Description": "The construct function in puff.cpp in Libtorrent 1.1.0 allows remote torrent trackers to cause a denial of service (segmentation fault and crash) via a crafted GZIP response.",
        "URL": "https://github.com/arvidn/libtorrent/pull/1022",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "debf3c6e3688aab8394fe5c47737625faffe6f9e",
        "inducing_commit_hash_pyszz": [
            "a1f59f6cf197e08e6c2b658762996f944d5f2ca8"
        ],
        "inducing_commit_hash_pd": [
            "a1f59f6cf197e08e6c2b658762996f944d5f2ca8",
            "43c41ddfb1c0ae9503c66e152afc0bf8361c59df",
            "c0b0f3d1087061434823598ad5c4be7e9dec055e",
            "2910a4a10cd3208c446bd82c1702f2da1054ae5b",
            "f9c9d0ad0d19ad96a5aee38c0b346d2651af06ee"
        ],
        "matched": [
            "a1f59f6cf197e08e6c2b658762996f944d5f2ca8"
        ]
    },
    {
        "repo_name": "Asymmetric-InfoSec/Power-Response",
        "CVE_ID": "CVE-2019-15519",
        "Problem_Type": "CWE-22",
        "Description": "Power-Response before 2019-02-02 allows directory traversal (up to the application's main directory) via a plugin.",
        "URL": "https://github.com/Asymmetric-InfoSec/Power-Response/pull/156",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fc65f0630fe3935a6cdcdf84ff271893f30a0f2a",
        "inducing_commit_hash_pyszz": [
            "d6c3a454d96852b4b5cfa16d39d9223d128e5315"
        ],
        "inducing_commit_hash_pd": [
            "d6c3a454d96852b4b5cfa16d39d9223d128e5315"
        ],
        "matched": [
            "d6c3a454d96852b4b5cfa16d39d9223d128e5315"
        ]
    },
    {
        "repo_name": "auth0/node-auth0",
        "CVE_ID": "CVE-2020-15125",
        "Problem_Type": "CWE-209",
        "Description": "In auth0 (npm package) versions before 2.27.1, a DenyList of specific keys that should be sanitized from the request object contained in the error object is used. The key for Authorization header is not sanitized and in certain cases the Authorization header value can be logged exposing a bearer token. You are affected by this vulnerability if you are using the auth0 npm package, and you are using a Machine to Machine application authorized to use Auth0's management API",
        "URL": "https://github.com/auth0/node-auth0/pull/507/commits/62ca61b3348ec8e74d7d00358661af1a8bc98a3c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62ca61b3348ec8e74d7d00358661af1a8bc98a3c",
        "inducing_commit_hash_pyszz": [
            "a186023560ab5509e486b53b5db6aad690407ad8"
        ],
        "inducing_commit_hash_pd": [
            "a186023560ab5509e486b53b5db6aad690407ad8"
        ],
        "matched": [
            "a186023560ab5509e486b53b5db6aad690407ad8"
        ]
    },
    {
        "repo_name": "autovance/ftp-srv",
        "CVE_ID": "CVE-2020-26299",
        "Problem_Type": "CWE-22",
        "Description": "ftp-srv is an open-source FTP server designed to be simple yet configurable. In ftp-srv before version 4.4.0 there is a path-traversal vulnerability. Clients of FTP servers utilizing ftp-srv hosted on Windows machines can escape the FTP user's defined root folder using the expected FTP commands, for example, CWD and UPDR. When windows separators exist within the path (`\\`), `path.resolve` leaves the upper pointers intact and allows the user to move beyond the root folder defined for that user. We did not take that into account when creating the path resolve function. The issue is patched in version 4.4.0 (commit 457b859450a37cba10ff3c431eb4aa67771122e3).",
        "URL": "https://github.com/autovance/ftp-srv/pull/224",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "457b859450a37cba10ff3c431eb4aa67771122e3",
        "inducing_commit_hash_pyszz": [
            "c0e132b70e3b92c4008622db93ccb0babaff56d0"
        ],
        "inducing_commit_hash_pd": [
            "c0e132b70e3b92c4008622db93ccb0babaff56d0",
            "0b9167e1e44f41306925879a234f3d914a8b13f7",
            "185e473edc1efef86fc898d89957d87ee69d6afe",
            "c9b437157910c5a9ddb94ea1f3eff7a3a256c6c8",
            "7fb43a5790c4e15c24173b66524efec008142ef8",
            "87a2138cb37049b2e475be332acb1febcda6b5aa"
        ],
        "matched": [
            "c0e132b70e3b92c4008622db93ccb0babaff56d0"
        ]
    },
    {
        "repo_name": "aws-amplify/aws-sdk-android",
        "CVE_ID": "CVE-2022-4725",
        "Problem_Type": "CWE-918",
        "Description": "A vulnerability was found in AWS SDK 2.59.0. It has been rated as critical. This issue affects the function XpathUtils of the file aws-android-sdk-core/src/main/java/com/amazonaws/util/XpathUtils.java of the component XML Parser. The manipulation leads to server-side request forgery. Upgrading to version 2.59.1 is able to address this issue. The name of the patch is c3e6d69422e1f0c80fe53f2d757b8df97619af2b. It is recommended to upgrade the affected component. The identifier VDB-216737 was assigned to this vulnerability.",
        "URL": "https://github.com/aws-amplify/aws-sdk-android/pull/3100",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3e6d69422e1f0c80fe53f2d757b8df97619af2b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1d353ec1e168347942a456849623ecae5799ae5d"
        ],
        "matched": [
            "1d353ec1e168347942a456849623ecae5799ae5d"
        ]
    },
    {
        "repo_name": "awslabs/aws-dataall",
        "CVE_ID": "CVE-2023-36467",
        "Problem_Type": "CWE-94",
        "Description": "AWS data.all is an open source development framework to help users build a data marketplace on Amazon Web Services. data.all versions 1.2.0 through 1.5.1 do not prevent remote code execution when a user injects Python commands into the \u00c2\u2018Template\u00c2\u2019 field when configuring a data pipeline. The issue can only be triggered by authenticated users. A fix for this issue is available in data.all version 1.5.2 and later. There is no recommended work around.",
        "URL": "https://github.com/awslabs/aws-dataall/pull/472",
        "Tag": "['Patch']",
        "fix_commit_hash": "b59cf9ee9bfa3db63960f874d885aa6bf76077a3",
        "inducing_commit_hash_pyszz": [
            "31d790fccec6ab98949b55f4eded12b44e0792dc"
        ],
        "inducing_commit_hash_pd": [
            "490273490fabafeba5e0a8e7521c0be3cc042421",
            "aa966b56d470f4c89bfdd20896d3e04e3fcf7744",
            "3f836afd000b20d9ee1c6d1f3724cf8b331663cc",
            "5a4007cf5b7816f1b1f17853a3a5c0608c778f2b",
            "f100e05f7bccdef2bd9bd5e6bce2cd62f3131dd5",
            "2f4d87974f4ca141abdc75102019b9801dddb01d",
            "219553f5b9e5b23ad4d5c1971e1787fea50db9cd",
            "71eb85fc85ea0f9d9cc8ce318cefd8135344ce5f",
            "a206637c948b9d259f9d19cecf7ed071f673de52"
        ],
        "matched": [
            "31d790fccec6ab98949b55f4eded12b44e0792dc"
        ]
    },
    {
        "repo_name": "awslabs/sockeye",
        "CVE_ID": "CVE-2021-43811",
        "Problem_Type": "CWE-94",
        "Description": "Sockeye is an open-source sequence-to-sequence framework for Neural Machine Translation built on PyTorch. Sockeye uses YAML to store model and data configurations on disk. Versions below 2.3.24 use unsafe YAML loading, which can be made to execute arbitrary code embedded in config files. An attacker can add malicious code to the config file of a trained model and attempt to convince users to download and run it. If users run the model, the embedded code will run locally. The issue is fixed in version 2.3.24.",
        "URL": "https://github.com/awslabs/sockeye/pull/964",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35dd717a80ae1f04128d79bd0bcf340e2e9d1427",
        "inducing_commit_hash_pyszz": [
            "565cc71d42ef983eb17d07f3c7befce67c1331ce"
        ],
        "inducing_commit_hash_pd": [
            "565cc71d42ef983eb17d07f3c7befce67c1331ce",
            "2d458b2a2a4b05b3437a1895209675969bf6befd"
        ],
        "matched": [
            "565cc71d42ef983eb17d07f3c7befce67c1331ce"
        ]
    },
    {
        "repo_name": "aws/aws-sdk-js",
        "CVE_ID": "CVE-2020-28472",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects the package @aws-sdk/shared-ini-file-loader before 1.0.0-rc.9; the package aws-sdk before 2.814.0. If an attacker submits a malicious INI file to an application that parses it with loadSharedConfigFiles , they will pollute the prototype on the application. This can be exploited further depending on the context.",
        "URL": "https://github.com/aws/aws-sdk-js/pull/3585/commits/7d72aff2a941173733fcb6741b104cd83d3bc611",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dd83d672170e8cc0c52a20df29a43e7663e5336a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "515fcbcbcc4b01a05ace7b98c1284387f70cb541"
        ],
        "matched": [
            "515fcbcbcc4b01a05ace7b98c1284387f70cb541"
        ]
    },
    {
        "repo_name": "Azure/azure-cli",
        "CVE_ID": "CVE-2022-39327",
        "Problem_Type": "CWE-78",
        "Description": "Azure CLI is the command-line interface for Microsoft Azure. In versions previous to 2.40.0, Azure CLI contains a vulnerability for potential code injection. Critical scenarios are where a hosting machine runs an Azure CLI command where parameter values have been provided by an external source. The vulnerability is only applicable when the Azure CLI command is run on a Windows machine and with any version of PowerShell and when the parameter value contains the `&` or `|` symbols. If any of these prerequisites are not met, this vulnerability is not applicable. Users should upgrade to version 2.40.0 or greater to receive a a mitigation for the vulnerability.",
        "URL": "https://github.com/Azure/azure-cli/pull/24015",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f309cf7e55dc102c0f3b34baeca08eb897ea0e5",
        "inducing_commit_hash_pyszz": [
            "a55f924c39b80a71f46210ad83a43e7e9093d336"
        ],
        "inducing_commit_hash_pd": [
            "a55f924c39b80a71f46210ad83a43e7e9093d336"
        ],
        "matched": [
            "a55f924c39b80a71f46210ad83a43e7e9093d336"
        ]
    },
    {
        "repo_name": "bagisto/bagisto",
        "CVE_ID": "CVE-2023-36236",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting vulnerability in webkil Bagisto v.1.5.0 and before allows an attacker to execute arbitrary code via a crafted SVG file uplad.",
        "URL": "https://github.com/bagisto/bagisto/pull/4764/commits/7bbf0c4bb565fc2601f031f9bbcdfa06e24dbd45",
        "Tag": "['Patch']",
        "fix_commit_hash": "7bbf0c4bb565fc2601f031f9bbcdfa06e24dbd45",
        "inducing_commit_hash_pyszz": [
            "b37fe3d7a174d4429c73bfb1d5bc9864af9aaf80"
        ],
        "inducing_commit_hash_pd": [
            "f9b51f83676bf8460317d2e110c994b5a45a6e8d",
            "ceccbf9db2aee098704ebefc2ed0071ddfe1472d",
            "b37fe3d7a174d4429c73bfb1d5bc9864af9aaf80"
        ],
        "matched": [
            "b37fe3d7a174d4429c73bfb1d5bc9864af9aaf80"
        ]
    },
    {
        "repo_name": "bcit-ci/CodeIgniter",
        "CVE_ID": "CVE-2016-10131",
        "Problem_Type": "CWE-74",
        "Description": "system/libraries/Email.php in CodeIgniter before 3.1.3 allows remote attackers to execute arbitrary code by leveraging control over the email->from field to insert sendmail command-line arguments.",
        "URL": "https://github.com/bcit-ci/CodeIgniter/pull/4966",
        "Tag": "['Patch']",
        "fix_commit_hash": "d9367b6acf96cbc407147bd4422c2cbb941ccaa1",
        "inducing_commit_hash_pyszz": [
            "8db01f13809a92bac7bc95b02893175d7654d627"
        ],
        "inducing_commit_hash_pd": [
            "e9d2dc85b9cb255aae235635576972e4b7dbd5a8",
            "8db01f13809a92bac7bc95b02893175d7654d627",
            "58dfc089bf5b0ca35c2ff244e5bfdff726f9adcd",
            "d261b1e89c3d4d5191036d5a5660ef6764e593a0"
        ],
        "matched": [
            "8db01f13809a92bac7bc95b02893175d7654d627"
        ]
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2020-12443",
        "Problem_Type": "CWE-22",
        "Description": "BigBlueButton before 2.2.6 allows remote attackers to read arbitrary files because the presfilename (lowercase) value can be a .pdf filename while the presFilename (mixed case) value has a ../ sequence. This can be leveraged for privilege escalation via a directory traversal to bigbluebutton.properties. NOTE: this issue exists because of an ineffective mitigation to CVE-2020-12112 in which there was an attempted fix within an NGINX configuration file, without considering that the relevant part of NGINX is case-insensitive.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/9259/commits/b21ca8355a57286a1e6df96984b3a4c57679a463",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b21ca8355a57286a1e6df96984b3a4c57679a463",
        "inducing_commit_hash_pyszz": [
            "dbd86eb096c8436d6e3dce162e3472a5b8414d6b"
        ],
        "inducing_commit_hash_pd": [
            "dbd86eb096c8436d6e3dce162e3472a5b8414d6b",
            "cb152bf864ec6d491b38608ad311a12f40502c08",
            "b6e31375961ef2a6a1dcce184eceb648912e322e"
        ],
        "matched": [
            "dbd86eb096c8436d6e3dce162e3472a5b8414d6b"
        ]
    },
    {
        "repo_name": "bigbluebutton/greenlight",
        "CVE_ID": "CVE-2020-26163",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "BigBlueButton Greenlight before 2.5.6 allows HTTP header (Host and Origin) attacks, which can result in Account Takeover if a victim follows a spoofed password-reset link.",
        "URL": "https://github.com/bigbluebutton/greenlight/pull/1543",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6fc402e40ba998b2b5d94e09df7c693407d54a3e",
        "inducing_commit_hash_pyszz": [
            "8b2c47253659cf348b04840cea67857978af64cb"
        ],
        "inducing_commit_hash_pd": [
            "01b8dbbd0e344e3df4a3ff4ff87ca467a8377634"
        ],
        "matched": [
            "8b2c47253659cf348b04840cea67857978af64cb"
        ]
    },
    {
        "repo_name": "bigbluebutton/greenlight",
        "CVE_ID": "CVE-2020-27642",
        "Problem_Type": "CWE-79",
        "Description": "A cross-site scripting (XSS) vulnerability exists in the 'merge account' functionality in admins.js in BigBlueButton Greenlight 2.7.6.",
        "URL": "https://github.com/bigbluebutton/greenlight/pull/2214",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7c57f4b93ab9bdcc01b2bc41646f3aea0f2ef4c7",
        "inducing_commit_hash_pyszz": [
            "005c738e4d774e71b5692926663bd5ab893e4749"
        ],
        "inducing_commit_hash_pd": [
            "005c738e4d774e71b5692926663bd5ab893e4749"
        ],
        "matched": [
            "005c738e4d774e71b5692926663bd5ab893e4749"
        ]
    },
    {
        "repo_name": "bigbluebutton/greenlight",
        "CVE_ID": "CVE-2022-31039",
        "Problem_Type": "CWE-863",
        "Description": "Greenlight is a simple front-end interface for your BigBlueButton server. In affected versions an attacker can view any room's settings even though they are not authorized to do so. Only the room owner and administrator should be able to view a room's settings. This issue has been patched in release version 2.12.6.",
        "URL": "https://github.com/bigbluebutton/greenlight/pull/3508",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cbc407111efe1ea7c0adf6f7b5e03044af5b115c",
        "inducing_commit_hash_pyszz": [
            "09de6b6739dbc3e5fd7190d556a1c2f1bf5c3809"
        ],
        "inducing_commit_hash_pd": [
            "60cf5f7440f3a5c21adc6fede3aab59a73428ec3"
        ],
        "matched": [
            "09de6b6739dbc3e5fd7190d556a1c2f1bf5c3809"
        ]
    },
    {
        "repo_name": "binance-chain/tss-lib",
        "CVE_ID": "CVE-2020-12118",
        "Problem_Type": "CWE-276",
        "Description": "The keygen protocol implementation in Binance tss-lib before 1.2.0 allows attackers to generate crafted h1 and h2 parameters in order to compromise a signing round or obtain sensitive information from other parties.",
        "URL": "https://github.com/binance-chain/tss-lib/pull/89",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c66e035bc1d25ceb1fd4dbf08a8f1a3bae3c4402",
        "inducing_commit_hash_pyszz": [
            "ff66cb6821225b1e2df5f5556681989497f5d123"
        ],
        "inducing_commit_hash_pd": [
            "ff66cb6821225b1e2df5f5556681989497f5d123"
        ],
        "matched": [
            "ff66cb6821225b1e2df5f5556681989497f5d123"
        ]
    },
    {
        "repo_name": "bitcoin/bitcoin",
        "CVE_ID": "CVE-2021-3401",
        "Problem_Type": "CWE-88",
        "Description": "Bitcoin Core before 0.19.0 might allow remote attackers to execute arbitrary code when another application unsafely passes the -platformpluginpath argument to the bitcoin-qt program, as demonstrated by an x-scheme-handler/bitcoin handler for a .desktop file or a web browser. NOTE: the discoverer states \"I believe that this vulnerability cannot actually be exploited.\"",
        "URL": "https://github.com/bitcoin/bitcoin/pull/16578",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a2714a5c69f0b0506689af04c3e785f71ee0915d",
        "inducing_commit_hash_pyszz": [
            "7e4bd19785ff9120b7242ff9f15231868aaf7db4"
        ],
        "inducing_commit_hash_pd": [
            "17780d6f35a3951f649c3b7766b9283d9c18e39f",
            "7e4bd19785ff9120b7242ff9f15231868aaf7db4",
            "ca20b65cc04825bb317f1a59d02c77912f6bf097",
            "202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
            "099e4b9ad3d9967051d5c3d45c6315d1b30fea05"
        ],
        "matched": [
            "7e4bd19785ff9120b7242ff9f15231868aaf7db4"
        ]
    },
    {
        "repo_name": "bitwarden/clients",
        "CVE_ID": "CVE-2023-38840",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Bitwarden Desktop 2023.7.0 and below allows an attacker with local access to obtain sensitive information via the Bitwarden.exe process.",
        "URL": "https://github.com/bitwarden/clients/pull/5813",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "61d5b2df9c43c048c772c4d72c1c64a047a9b432",
        "inducing_commit_hash_pyszz": [
            "df59f99ec649c1f4a75456e1e5a3c0f98de0e9c1"
        ],
        "inducing_commit_hash_pd": [
            "60878cd4ed9b1989860a918b62ce72529232560f",
            "193434461dbd9c48fe5dcbad95693470aec422ac",
            "8c905f8746fb9b4eaf7cfd1fe5b68c457b1d1442",
            "92809488a519e47351716c8a51a4b991a022c328",
            "2011131bb20a967fdcc54be73bed9b2ccb63565c"
        ],
        "matched": [
            "df59f99ec649c1f4a75456e1e5a3c0f98de0e9c1"
        ]
    },
    {
        "repo_name": "blackducksoftware/hub-rest-api-python",
        "CVE_ID": "CVE-2020-27589",
        "Problem_Type": "CWE-295",
        "Description": "Synopsys hub-rest-api-python (aka blackduck on PyPI) version 0.0.25 - 0.0.52 does not validate SSL certificates in certain cases.",
        "URL": "https://github.com/blackducksoftware/hub-rest-api-python/pull/113/commits/273b27d0de1004389dd8cf43c40b1197c787e7cd",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "273b27d0de1004389dd8cf43c40b1197c787e7cd",
        "inducing_commit_hash_pyszz": [
            "42e2e81b6be1017ed4d5719b5aace264293b75d8"
        ],
        "inducing_commit_hash_pd": [
            "42e2e81b6be1017ed4d5719b5aace264293b75d8",
            "1fdd3f80dea5ab30c7f1ead0b7f3d0439cb9e4bb",
            "8f3b5162ea5582637ce0b6b6c4120526d807c70f",
            "054b6a2c364ff1ac0f766553a608a935016cccf0"
        ],
        "matched": [
            "42e2e81b6be1017ed4d5719b5aace264293b75d8"
        ]
    },
    {
        "repo_name": "BlogoText/blogotext",
        "CVE_ID": "CVE-2017-14957",
        "Problem_Type": "CWE-79",
        "Description": "Stored XSS vulnerability via a comment in inc/conv.php in BlogoText before 3.7.6 allows an unauthenticated attacker to inject JavaScript. If the victim is an administrator, an attacker can (for example) change global settings or create/delete posts. It is also possible to execute JavaScript against unauthenticated users of the blog.",
        "URL": "https://github.com/BlogoText/blogotext/pull/320/commits/1a283cc8ad2cda37e0a6aff8f4558b98ecbfd9c2",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "54819de7b6e8563bc63cd5e95946393b5396995a",
        "inducing_commit_hash_pyszz": [
            "fc1b95de2cb553f36950a0bbfd4beb859b2b15bc"
        ],
        "inducing_commit_hash_pd": [
            "d80a4bdc44303a5849250164c055e54fb41305f5",
            "47f0866db86953ec2a0c6bd6d15416a8f3049ab0",
            "fc1b95de2cb553f36950a0bbfd4beb859b2b15bc",
            "d1b8e209bdeebd89b1aea4ea6fcd6d33d29d3113"
        ],
        "matched": [
            "fc1b95de2cb553f36950a0bbfd4beb859b2b15bc"
        ]
    },
    {
        "repo_name": "bmeck/node-cookiejar",
        "CVE_ID": "CVE-2022-25901",
        "Problem_Type": "CWE-1333",
        "Description": "Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the Cookie.parse function, which uses an insecure regular expression.\n\n",
        "URL": "https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eaa00021caf6ae09449dde826108153b578348e5",
        "inducing_commit_hash_pyszz": [
            "a9a320c3c49d65df491f5721969cfbf9e128d9af"
        ],
        "inducing_commit_hash_pd": [
            "a9a320c3c49d65df491f5721969cfbf9e128d9af"
        ],
        "matched": [
            "a9a320c3c49d65df491f5721969cfbf9e128d9af"
        ]
    },
    {
        "repo_name": "bonitasoft/bonita-connector-webservice",
        "CVE_ID": "CVE-2020-36640",
        "Problem_Type": "CWE-611",
        "Description": "A vulnerability, which was classified as problematic, was found in bonitasoft bonita-connector-webservice up to 1.3.0. This affects the function TransformerConfigurationException of the file src/main/java/org/bonitasoft/connectors/ws/SecureWSConnector.java. The manipulation leads to xml external entity reference. Upgrading to version 1.3.1 is able to address this issue. The patch is named a12ad691c05af19e9061d7949b6b828ce48815d5. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217443.",
        "URL": "https://github.com/bonitasoft/bonita-connector-webservice/pull/17",
        "Tag": "['Patch']",
        "fix_commit_hash": "a12ad691c05af19e9061d7949b6b828ce48815d5",
        "inducing_commit_hash_pyszz": [
            "7dc59b935d7341dd5014737e454d1f60fabc4f47"
        ],
        "inducing_commit_hash_pd": [
            "ca86fbdc51e12b722ada81fc87493bb8accf9699",
            "e9e6447ea66508a38fbe270c7b0b45796ed6feae",
            "8fd1e925c2208e47d242a1e586126b0cd4b4226e",
            "7dc59b935d7341dd5014737e454d1f60fabc4f47",
            "24c938e90a523b91b1347c47f308e01dce8c9698",
            "4315cf7648e8318252e21d661f27d15013719829"
        ],
        "matched": [
            "7dc59b935d7341dd5014737e454d1f60fabc4f47"
        ]
    },
    {
        "repo_name": "braintree/sanitize-url",
        "CVE_ID": "CVE-2021-23648",
        "Problem_Type": "CWE-79",
        "Description": "The package @braintree/sanitize-url before 6.0.0 are vulnerable to Cross-site Scripting (XSS) due to improper sanitization in sanitizeUrl function.",
        "URL": "https://github.com/braintree/sanitize-url/pull/40",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f7371cebfbd4283d96f94f3256c4fc772eb1c7b",
        "inducing_commit_hash_pyszz": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "inducing_commit_hash_pd": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "matched": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ]
    },
    {
        "repo_name": "braintree/sanitize-url",
        "CVE_ID": "CVE-2021-23648",
        "Problem_Type": "CWE-79",
        "Description": "The package @braintree/sanitize-url before 6.0.0 are vulnerable to Cross-site Scripting (XSS) due to improper sanitization in sanitizeUrl function.",
        "URL": "https://github.com/braintree/sanitize-url/pull/40/commits/e5afda45d9833682b705f73fc2c1265d34832183",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5afda45d9833682b705f73fc2c1265d34832183",
        "inducing_commit_hash_pyszz": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "inducing_commit_hash_pd": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "matched": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ]
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2023-52263",
        "Problem_Type": "CWE-601",
        "Description": "Brave Browser before 1.59.40 does not properly restrict the schema for WebUI factory and redirect. This is related to browser/brave_content_browser_client.cc and browser/ui/webui/brave_web_ui_controller_factory.cc.",
        "URL": "https://github.com/brave/brave-core/pull/19820/commits/9da202f7f4bc80b6975909b684bbc0764a31c4e9",
        "Tag": "['Patch']",
        "fix_commit_hash": "9da202f7f4bc80b6975909b684bbc0764a31c4e9",
        "inducing_commit_hash_pyszz": [
            "b9c495302067d721fefd6157efb103c7efcd2489"
        ],
        "inducing_commit_hash_pd": [
            "b9c495302067d721fefd6157efb103c7efcd2489"
        ],
        "matched": [
            "b9c495302067d721fefd6157efb103c7efcd2489"
        ]
    },
    {
        "repo_name": "brix/crypto-js",
        "CVE_ID": "CVE-2020-36732",
        "Problem_Type": "CWE-330",
        "Description": "The crypto-js package before 3.2.1 for Node.js generates random numbers by concatenating the string \"0.\" with an integer, which makes the output more predictable than necessary.",
        "URL": "https://github.com/brix/crypto-js/pull/257/commits/e4ac157d8b75b962d6538fc0b996e5d4d5a9466b",
        "Tag": "['Patch']",
        "fix_commit_hash": "e4ac157d8b75b962d6538fc0b996e5d4d5a9466b",
        "inducing_commit_hash_pyszz": [
            "b405ff597fb3ac76a7bdfbc72dca10ba1079b1d5"
        ],
        "inducing_commit_hash_pd": [
            "b405ff597fb3ac76a7bdfbc72dca10ba1079b1d5"
        ],
        "matched": [
            "b405ff597fb3ac76a7bdfbc72dca10ba1079b1d5"
        ]
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0493",
        "Problem_Type": "CWE-74",
        "Description": "Improper Neutralization of Equivalent Special Elements in GitHub repository btcpayserver/btcpayserver prior to 1.7.5.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4545/commits/02070d65836cd24627929b3403efbae8de56039a",
        "Tag": "['Patch']",
        "fix_commit_hash": "a3203e57755ca2e6ff9d049e3e3672cdfff16ea0",
        "inducing_commit_hash_pyszz": [
            "a9ad0fde9e49166d9f8db0c622dc4d5af9316998"
        ],
        "inducing_commit_hash_pd": [
            "3f6212e799798f84480f888b7dee903b3a39230c",
            "fc8a5ff95f5087a6b4d1232f861eaa143c1bc242",
            "51c486c15a58279f38134ddeb42db2167e8e8eb8",
            "cadcb586a795743abb4fe66561c498a6181f4c51",
            "273bc78db337c82dd46ea56a754f6d4d8e760c79",
            "f8e6b51e9d1b1391a64ce95d73868faf0280bec2",
            "a8adac9c5a231aa65c823e303744bfd3e8e29f3c",
            "c46a69e1bd1ba84599967f0cb1fd34b9ee28b8ef",
            "defb9120fd5be75323c98d6a8c714b09e5e68f90",
            "e8291eb00e87aa2d1b8bd5de37b0b85969c796b1",
            "b7b2f16925abffdac7d64dac99067b7953e1c6ac",
            "022cd666ebbd3d47d9e083ac8c4650cd0b527499",
            "c3f73c0de3821d0abfb455e0e2197eb48543013a",
            "a9ad0fde9e49166d9f8db0c622dc4d5af9316998",
            "8e5a9251d6beebef06f9f54c1e91f48540a5cccc",
            "48ac996d77a2ef5df167752afc21ef52c212b9f0",
            "2d4aa52fa59775795968610f75e2412d538fea3d",
            "c71e671311b2cacaf1c99f177dbfc84d02e41e34",
            "7a787fc94536d22bbbde9271201f8b65d6e79732",
            "a9e08dd5877036dc12fad9ca62a613d83dd81c8e",
            "06db29dd437e84bc07f996bffa18fafbe5323863",
            "2abc35058bee8b7c22866e3547bcf7bb09eabce6"
        ],
        "matched": [
            "a9ad0fde9e49166d9f8db0c622dc4d5af9316998"
        ]
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0748",
        "Problem_Type": "CWE-601",
        "Description": "Open Redirect in GitHub repository btcpayserver/btcpayserver prior to 1.7.6.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4575/commits/c2cfa17e9619046b43987627b8429541d2834109",
        "Tag": "['Patch']",
        "fix_commit_hash": "f2ced20c420c827f5c2ebf1fb405b35056687914",
        "inducing_commit_hash_pyszz": [
            "5c8ca15ee2fe27764a0a75fac7bba50c1610d016"
        ],
        "inducing_commit_hash_pd": [
            "f1a222fbb3e68fe25c8c614b7722ccb2bacf0bc6",
            "b9fdd5453892a6af044ec9882efa74f28ae11801",
            "a3203e57755ca2e6ff9d049e3e3672cdfff16ea0",
            "2e6246e385fccf606ecd3171644f8410b3ec61e2",
            "300d84c5d8de24f841b46a3bd6c0029ccd058fda",
            "181d4d5ea438adde018db7a07e402439a6675d69",
            "39beacf88448b7bb8f527337ffebf8d7dab886b1"
        ],
        "matched": [
            "5c8ca15ee2fe27764a0a75fac7bba50c1610d016"
        ]
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0879",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site Scripting (XSS) - Stored in GitHub repository btcpayserver/btcpayserver prior to 1.7.12.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4635/commits/f2f3b245c4d8980d8e54e4708c796df82332c3d7",
        "Tag": "['Patch']",
        "fix_commit_hash": "fea27b900c0a9be2b8ae0079b8445499361cad88",
        "inducing_commit_hash_pyszz": [
            "4df2f1f756dcb1013a469bacad7c6550823792b7"
        ],
        "inducing_commit_hash_pd": [
            "f9f1a22e3b790308fd60da780603cb41cba4904e",
            "6972e8a3dbd854b14f134a2c6bb6918063182e42",
            "5faa756f1c0bb19bf31dff801ce68f4b13d3fd0e",
            "17f3b4125b108828cfc882fa079f2b3060c0fd76",
            "4df2f1f756dcb1013a469bacad7c6550823792b7",
            "a4ee1e98055b54af11355facf309739ec00c8f81"
        ],
        "matched": [
            "4df2f1f756dcb1013a469bacad7c6550823792b7"
        ]
    },
    {
        "repo_name": "BuilderIO/qwik",
        "CVE_ID": "CVE-2023-1283",
        "Problem_Type": "CWE-94",
        "Description": "Code Injection in GitHub repository builderio/qwik prior to 0.21.0.\n\n",
        "URL": "https://github.com/BuilderIO/qwik/pull/3249/commits/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66",
        "Tag": "['Patch']",
        "fix_commit_hash": "014ad5bfba4c966893460f7b1e5e4e4e0b69c139",
        "inducing_commit_hash_pyszz": [
            "d046926d89f75ef28d4b72f885f386091708a1ea"
        ],
        "inducing_commit_hash_pd": [
            "d046926d89f75ef28d4b72f885f386091708a1ea",
            "f665a275a8790b228565a7cf6eb4657ce4cbbe5a",
            "5597152b5f3ae8e03a3fa9a229b689ef9157ba0b",
            "ebd890c868d665448e0d912be42f74b404e7bd30",
            "3ac5665141208ccfac04f0d0a670415885d89d1d",
            "6c6299013ddf2cb262de1acfeeb644f93a97b83c"
        ],
        "matched": [
            "d046926d89f75ef28d4b72f885f386091708a1ea"
        ]
    },
    {
        "repo_name": "BuilderIO/qwik",
        "CVE_ID": "CVE-2023-2307",
        "Problem_Type": "CWE-352",
        "Description": "Cross-Site Request Forgery (CSRF) in GitHub repository builderio/qwik prior to 0.104.0.\n\n",
        "URL": "https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57",
        "Tag": "['Patch']",
        "fix_commit_hash": "f434d335277418f5bd8dd90fae5cb089e1230cb8",
        "inducing_commit_hash_pyszz": [
            "f00017ae38db5b7ac902c498610b35d5a2b0e1b9"
        ],
        "inducing_commit_hash_pd": [
            "f00017ae38db5b7ac902c498610b35d5a2b0e1b9"
        ],
        "matched": [
            "f00017ae38db5b7ac902c498610b35d5a2b0e1b9"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasm-micro-runtime",
        "CVE_ID": "CVE-2023-52284",
        "Problem_Type": "CWE-415",
        "Description": "Bytecode Alliance wasm-micro-runtime (aka WebAssembly Micro Runtime or WAMR) before 1.3.0 can have an \"double free or corruption\" error for a valid WebAssembly module because push_pop_frame_ref_offset is mishandled.",
        "URL": "https://github.com/bytecodealliance/wasm-micro-runtime/pull/2590",
        "Tag": "['Patch']",
        "fix_commit_hash": "6382162711a9cfaedc63de9065b0bc6eda8123f3",
        "inducing_commit_hash_pyszz": [
            "6415e1b0063010acb8bc6d3e8f36e5e2ccc71249"
        ],
        "inducing_commit_hash_pd": [
            "03d45f1d62dbcfdff1cb0893318ab5d4298f726a",
            "6415e1b0063010acb8bc6d3e8f36e5e2ccc71249",
            "a0bb761beb665646fefea53aca5766e93d9dd89a",
            "7a287fd1a90836bb3de86eba9889cd689bd493ab",
            "752826a667b359002a25ec8b7ebe1942fbfe2710"
        ],
        "matched": [
            "6415e1b0063010acb8bc6d3e8f36e5e2ccc71249"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasmtime",
        "CVE_ID": "CVE-2022-31104",
        "Problem_Type": "CWE-682",
        "Description": "Wasmtime is a standalone runtime for WebAssembly. In affected versions wasmtime's implementation of the SIMD proposal for WebAssembly on x86_64 contained two distinct bugs in the instruction lowerings implemented in Cranelift. The aarch64 implementation of the simd proposal is not affected. The bugs were presented in the `i8x16.swizzle` and `select` WebAssembly instructions. The `select` instruction is only affected when the inputs are of `v128` type. The correspondingly affected Cranelift instructions were `swizzle` and `select`. The `swizzle` instruction lowering in Cranelift erroneously overwrote the mask input register which could corrupt a constant value, for example. This means that future uses of the same constant may see a different value than the constant itself. The `select` instruction lowering in Cranelift wasn't correctly implemented for vector types that are 128-bits wide. When the condition was 0 the wrong instruction was used to move the correct input to the output of the instruction meaning that only the low 32 bits were moved and the upper 96 bits of the result were left as whatever the register previously contained (instead of the input being moved from). The `select` instruction worked correctly if the condition was nonzero, however. This bug in Wasmtime's implementation of these instructions on x86_64 represents an incorrect implementation of the specified semantics of these instructions according to the WebAssembly specification. The impact of this is benign for hosts running WebAssembly but represents possible vulnerabilities within the execution of a guest program. For example a WebAssembly program could take unintended branches or materialize incorrect values internally which runs the risk of exposing the program itself to other related vulnerabilities which can occur from miscompilations. We have released Wasmtime 0.38.1 and cranelift-codegen (and other associated cranelift crates) 0.85.1 which contain the corrected implementations of these two instructions in Cranelift. If upgrading is not an option for you at this time, you can avoid the vulnerability by disabling the Wasm simd proposal. Additionally the bug is only present on x86_64 hosts. Other aarch64 hosts are not affected. Note that s390x hosts don't yet implement the simd proposal and are not affected.",
        "URL": "https://github.com/bytecodealliance/wasmtime/pull/4318",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dc2fe0ac6790d5e7c3eff5da984ecc9722fb2e4d",
        "inducing_commit_hash_pyszz": [
            "e3eb098c99a08285e9ead0a86c9d5877625a5dba"
        ],
        "inducing_commit_hash_pd": [
            "e3eb098c99a08285e9ead0a86c9d5877625a5dba",
            "f50d905152954335a1e351aec3fc309b0ab1e4d5"
        ],
        "matched": [
            "e3eb098c99a08285e9ead0a86c9d5877625a5dba"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasmtime",
        "CVE_ID": "CVE-2022-31104",
        "Problem_Type": "CWE-682",
        "Description": "Wasmtime is a standalone runtime for WebAssembly. In affected versions wasmtime's implementation of the SIMD proposal for WebAssembly on x86_64 contained two distinct bugs in the instruction lowerings implemented in Cranelift. The aarch64 implementation of the simd proposal is not affected. The bugs were presented in the `i8x16.swizzle` and `select` WebAssembly instructions. The `select` instruction is only affected when the inputs are of `v128` type. The correspondingly affected Cranelift instructions were `swizzle` and `select`. The `swizzle` instruction lowering in Cranelift erroneously overwrote the mask input register which could corrupt a constant value, for example. This means that future uses of the same constant may see a different value than the constant itself. The `select` instruction lowering in Cranelift wasn't correctly implemented for vector types that are 128-bits wide. When the condition was 0 the wrong instruction was used to move the correct input to the output of the instruction meaning that only the low 32 bits were moved and the upper 96 bits of the result were left as whatever the register previously contained (instead of the input being moved from). The `select` instruction worked correctly if the condition was nonzero, however. This bug in Wasmtime's implementation of these instructions on x86_64 represents an incorrect implementation of the specified semantics of these instructions according to the WebAssembly specification. The impact of this is benign for hosts running WebAssembly but represents possible vulnerabilities within the execution of a guest program. For example a WebAssembly program could take unintended branches or materialize incorrect values internally which runs the risk of exposing the program itself to other related vulnerabilities which can occur from miscompilations. We have released Wasmtime 0.38.1 and cranelift-codegen (and other associated cranelift crates) 0.85.1 which contain the corrected implementations of these two instructions in Cranelift. If upgrading is not an option for you at this time, you can avoid the vulnerability by disabling the Wasm simd proposal. Additionally the bug is only present on x86_64 hosts. Other aarch64 hosts are not affected. Note that s390x hosts don't yet implement the simd proposal and are not affected.",
        "URL": "https://github.com/bytecodealliance/wasmtime/pull/4317",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8bb07523e22df1ab3cbd265c77e836bf84186eb7",
        "inducing_commit_hash_pyszz": [
            "24f145cd1e27a346b64f3d66db63a582435bcd5f"
        ],
        "inducing_commit_hash_pd": [
            "7bd96c8e2f148b33e61feed0320a98c4deec0426",
            "a0318f36f0289bcb76175035f5d5e781bd6ce80e",
            "ead8a835c4ea27c0e7d30deb88c83a853b3b0f03",
            "f87c61176acd0ca977261423b4663ef456b2e720",
            "24f145cd1e27a346b64f3d66db63a582435bcd5f"
        ],
        "matched": [
            "24f145cd1e27a346b64f3d66db63a582435bcd5f"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasmtime",
        "CVE_ID": "CVE-2023-41880",
        "Problem_Type": "CWE-193",
        "Description": "Wasmtime is a standalone runtime for WebAssembly. Wasmtime versions from 10.0.0 to versions 10.02, 11.0.2, and 12.0.1 contain a miscompilation of the WebAssembly `i64x2.shr_s` instruction on x86_64 platforms when the shift amount is a constant value that is larger than 32. Only x86_64 is affected so all other targets are not affected by this. The miscompilation results in the instruction producing an incorrect result, namely the low 32-bits of the second lane of the vector are derived from the low 32-bits of the second lane of the input vector instead of the high 32-bits. The primary impact of this issue is that any WebAssembly program using the `i64x2.shr_s` with a constant shift amount larger than 32 may produce an incorrect result.\n\nThis issue is not an escape from the WebAssembly sandbox. Execution of WebAssembly guest programs will still behave correctly with respect to memory sandboxing and isolation from the host. Wasmtime considers non-spec-compliant behavior as a security issue nonetheless.\n\nThis issue was discovered through fuzzing of Wasmtime's code generator Cranelift.\n\nWasmtime versions 10.0.2, 11.0.2, and 12.0.2 are all patched to no longer have this miscompilation. This issue only affects x86_64 hosts and the only workaround is to either scan for this pattern in wasm modules which is nontrivial or to disable the SIMD proposal for WebAssembly. Users prior to 10.0.0 are unaffected by this vulnerability.",
        "URL": "https://github.com/bytecodealliance/wasmtime/pull/6372",
        "Tag": "['Patch', 'Product']",
        "fix_commit_hash": "fe99d461f7fece31d0149b61398c05c08413787c",
        "inducing_commit_hash_pyszz": [
            "c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794"
        ],
        "inducing_commit_hash_pd": [
            "cae3b26623e98044c4cc96a18ef2bd50edf01da4",
            "3bfbb3226e35c09f50ea936f7d603397a1bb5f86",
            "c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794",
            "f04decc4a13c2bd119ee4cd0248eb6dbcc7e6261",
            "7454f1f3af05ff27bbe3c1392a0957ac1d4e0fab",
            "b077854b57b3aa25295e37ad55a21300e7768c7c",
            "e8881b2cc0cfaf960ab7e1094aaddeb02a73a702",
            "795b0aaf9ac5b9005c6f2d41ee76f71f1caad853",
            "c26a65a854733735207f641bb7ff23ba574a1f6f",
            "a0318f36f0289bcb76175035f5d5e781bd6ce80e",
            "87b63174b113094b862f4beb52f3d9d3a444f355",
            "dc86e7a6dcf95358ccc90e443c7dd2c3d751f76b"
        ],
        "matched": [
            "c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794"
        ]
    },
    {
        "repo_name": "Cacti/cacti",
        "CVE_ID": "CVE-2020-14424",
        "Problem_Type": "CWE-79",
        "Description": "Cacti before 1.2.18 allows remote attackers to trigger XSS via template import for the midwinter theme.",
        "URL": "https://github.com/Cacti/cacti/pull/4261",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d12800ab479ad95a091bc577f28fd99ec95eb64c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "6896a1ecdda6a8b247942f40947ac8029a55396f"
        ],
        "matched": [
            "6896a1ecdda6a8b247942f40947ac8029a55396f"
        ]
    },
    {
        "repo_name": "caddyserver/caddy",
        "CVE_ID": "CVE-2022-29718",
        "Problem_Type": "CWE-601",
        "Description": "Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.",
        "URL": "https://github.com/caddyserver/caddy/pull/4499",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3fe2c73dd04f7769a9d9673236cb94b79ac45659",
        "inducing_commit_hash_pyszz": [
            "e7457b43e4703080ae8713ada798ce3e20b83690"
        ],
        "inducing_commit_hash_pd": [
            "e7457b43e4703080ae8713ada798ce3e20b83690"
        ],
        "matched": [
            "e7457b43e4703080ae8713ada798ce3e20b83690"
        ]
    },
    {
        "repo_name": "canonical/cloud-init",
        "CVE_ID": "CVE-2020-8631",
        "Problem_Type": "CWE-330",
        "Description": "cloud-init through 19.4 relies on Mersenne Twister for a random password, which makes it easier for attackers to predict passwords, because rand_str in cloudinit/util.py calls the random.choice function.",
        "URL": "https://github.com/canonical/cloud-init/pull/204",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e2f7356effc9e9cccc5ae945846279804eedc46",
        "inducing_commit_hash_pyszz": [
            "a456f4fdc26eba06ee98ffe2eeeafc6e15a39e88"
        ],
        "inducing_commit_hash_pd": [
            "a456f4fdc26eba06ee98ffe2eeeafc6e15a39e88"
        ],
        "matched": [
            "a456f4fdc26eba06ee98ffe2eeeafc6e15a39e88"
        ]
    },
    {
        "repo_name": "canonical/cloud-init",
        "CVE_ID": "CVE-2020-8632",
        "Problem_Type": "CWE-521",
        "Description": "In cloud-init through 19.4, rand_user_password in cloudinit/config/cc_set_passwords.py has a small default pwlen value, which makes it easier for attackers to guess passwords.",
        "URL": "https://github.com/canonical/cloud-init/pull/189",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42788bf24a1a0a5421a2d00a7f59b59e38ba1a14",
        "inducing_commit_hash_pyszz": [
            "818ac2e096ecf14f11f4adb9de0155e3e2f8a93f"
        ],
        "inducing_commit_hash_pd": [
            "818ac2e096ecf14f11f4adb9de0155e3e2f8a93f"
        ],
        "matched": [
            "818ac2e096ecf14f11f4adb9de0155e3e2f8a93f"
        ]
    },
    {
        "repo_name": "canonical/subiquity",
        "CVE_ID": "CVE-2023-5182",
        "Problem_Type": "CWE-532",
        "Description": "Sensitive data could be exposed in logs of subiquity version 23.09.1 and earlier. An attacker in the adm group could use this information to find hashed passwords and possibly escalate their privilege.",
        "URL": "https://github.com/canonical/subiquity/pull/1820/commits/62e126896fb063808767d74d00886001e38eaa1c",
        "Tag": "['Patch']",
        "fix_commit_hash": "62e126896fb063808767d74d00886001e38eaa1c",
        "inducing_commit_hash_pyszz": [
            "b7349241a984597fad43490a47fd71d9a1cb0804"
        ],
        "inducing_commit_hash_pd": [
            "b7349241a984597fad43490a47fd71d9a1cb0804"
        ],
        "matched": [
            "b7349241a984597fad43490a47fd71d9a1cb0804"
        ]
    },
    {
        "repo_name": "caolan/forms",
        "CVE_ID": "CVE-2021-23388",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package forms before 1.2.1, from 1.3.0 and before 1.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via email validation.",
        "URL": "https://github.com/caolan/forms/pull/214/commits/d4bd5b5febfe49c1f585f162e04ec810f8dc47a0",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d4bd5b5febfe49c1f585f162e04ec810f8dc47a0",
        "inducing_commit_hash_pyszz": [
            "eff0c5597c27ae4bc5675d07e78485b18a3b8b88"
        ],
        "inducing_commit_hash_pd": [
            "c7f1b194effcf2e9c2947e08cde8835867861d12",
            "72aada4b7429d1fdf51b734d213fcc0fe5561611",
            "eff0c5597c27ae4bc5675d07e78485b18a3b8b88"
        ],
        "matched": [
            "eff0c5597c27ae4bc5675d07e78485b18a3b8b88"
        ]
    },
    {
        "repo_name": "CapsAdmin/pac3",
        "CVE_ID": "CVE-2022-4881",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in CapsAdmin PAC3. It has been rated as problematic. Affected by this issue is some unknown functionality of the file lua/pac3/core/shared/http.lua. The manipulation of the argument url leads to cross site scripting. The attack may be launched remotely. The patch is identified as 8fc9e12dfa21d757be6eb4194c763e848b299ac0. It is recommended to apply a patch to fix this issue. VDB-217646 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/CapsAdmin/pac3/pull/1210",
        "Tag": "['Patch']",
        "fix_commit_hash": "67d934925607bc61764871ce2b719e1b03f98078",
        "inducing_commit_hash_pyszz": [
            "888e0b199a2272413cc86c4660651163fa060306"
        ],
        "inducing_commit_hash_pd": [
            "01aa879f155bbdf6673548e99c4d27f6159c0038",
            "888e0b199a2272413cc86c4660651163fa060306"
        ],
        "matched": [
            "888e0b199a2272413cc86c4660651163fa060306"
        ]
    },
    {
        "repo_name": "caronc/apprise",
        "CVE_ID": "CVE-2021-39229",
        "Problem_Type": "CWE-400",
        "Description": "Apprise is an open source library which allows you to send a notification to almost all of the most popular notification services available. In affected versions users who use Apprise granting them access to the IFTTT plugin (which just comes out of the box) are subject to a denial of service attack on an inefficient regular expression. The vulnerable regular expression is [here](https://github.com/caronc/apprise/blob/0007eade20934ddef0aba38b8f1aad980cfff253/apprise/plugins/NotifyIFTTT.py#L356-L359). The problem has been patched in release version 0.9.5.1. Users who are unable to upgrade are advised to remove `apprise/plugins/NotifyIFTTT.py` to eliminate the service.",
        "URL": "https://github.com/caronc/apprise/pull/436",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e20fce630d55e4ca9b0a1e325a5fea6997489831",
        "inducing_commit_hash_pyszz": [
            "6d9069e106038f4e309c02e3a2358add366b9e22"
        ],
        "inducing_commit_hash_pd": [
            "6d9069e106038f4e309c02e3a2358add366b9e22"
        ],
        "matched": [
            "6d9069e106038f4e309c02e3a2358add366b9e22"
        ]
    },
    {
        "repo_name": "casdoor/casdoor",
        "CVE_ID": "CVE-2022-24124",
        "Problem_Type": "CWE-89",
        "Description": "The query API in Casdoor before 1.13.1 has a SQL injection vulnerability related to the field and value parameters, as demonstrated by api/get-organizations.",
        "URL": "https://github.com/casdoor/casdoor/pull/442",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5ec0c7a89005819960d8fe07f5ddda13d1371b8c",
        "inducing_commit_hash_pyszz": [
            "9b6131890c2b7e4e65449c7a7f75a1221b14d0b9"
        ],
        "inducing_commit_hash_pd": [
            "a093f3af5a52e63c2123b7ccb34926689654d03d",
            "9b6131890c2b7e4e65449c7a7f75a1221b14d0b9",
            "10a85f23861c32b0911d6c33896f214229d511b8",
            "ff22bf507f36479fa4e5daf1a6576cbfbcc30b6e",
            "ba1646a0c399c1c07cf39a1ee8a74b5f5cee6272"
        ],
        "matched": [
            "9b6131890c2b7e4e65449c7a7f75a1221b14d0b9"
        ]
    },
    {
        "repo_name": "ceph/ceph-iscsi-cli",
        "CVE_ID": "CVE-2018-14649",
        "Problem_Type": "CWE-77",
        "Description": "It was found that ceph-isci-cli package as shipped by Red Hat Ceph Storage 2 and 3 is using python-werkzeug in debug shell mode. This is done by setting debug=True in file /usr/bin/rbd-target-api provided by ceph-isci-cli package. This allows unauthenticated attackers to access this debug shell and escalate privileges. Once an attacker has successfully connected to this debug shell they will be able to execute arbitrary commands remotely. These commands will run with the same privileges as of user executing the application which is using python-werkzeug with debug shell mode enabled. In - Red Hat Ceph Storage 2 and 3, ceph-isci-cli package runs python-werkzeug library with root level permissions.",
        "URL": "https://github.com/ceph/ceph-iscsi-cli/pull/121/commits/c3812075e30c76a800a961e7291087d357403f6b",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "c3812075e30c76a800a961e7291087d357403f6b",
        "inducing_commit_hash_pyszz": [
            "568fee49c8f89bf9e83756998fba48c8f2dde898"
        ],
        "inducing_commit_hash_pd": [
            "568fee49c8f89bf9e83756998fba48c8f2dde898"
        ],
        "matched": [
            "568fee49c8f89bf9e83756998fba48c8f2dde898"
        ]
    },
    {
        "repo_name": "cgriego/active_attr",
        "CVE_ID": "CVE-2021-4250",
        "Problem_Type": "CWE-404",
        "Description": "A vulnerability classified as problematic has been found in cgriego active_attr up to 0.15.2. This affects the function call of the file lib/active_attr/typecasting/boolean_typecaster.rb of the component Regex Handler. The manipulation of the argument value leads to denial of service. The exploit has been disclosed to the public and may be used. Upgrading to version 0.15.3 is able to address this issue. The name of the patch is dab95e5843b01525444b82bd7b336ef1d79377df. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216207.",
        "URL": "https://github.com/cgriego/active_attr/pull/185",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dab95e5843b01525444b82bd7b336ef1d79377df",
        "inducing_commit_hash_pyszz": [
            "a72f71b7781093f41757b6099298663d9822b43b"
        ],
        "inducing_commit_hash_pd": [
            "a72f71b7781093f41757b6099298663d9822b43b"
        ],
        "matched": [
            "a72f71b7781093f41757b6099298663d9822b43b"
        ]
    },
    {
        "repo_name": "ChainSafe/lodestar",
        "CVE_ID": "CVE-2022-29219",
        "Problem_Type": "CWE-190",
        "Description": "Lodestar is a TypeScript implementation of the Ethereum Consensus specification. Prior to version 0.36.0, there is a possible consensus split given maliciously-crafted `AttesterSlashing` or `ProposerSlashing` being included on-chain. Because the developers represent `uint64` values as native javascript `number`s, there is an issue when those variables with large (greater than 2^53) `uint64` values are included on chain. In those cases, Lodestar may view valid_`AttesterSlashing` or `ProposerSlashing` as invalid, due to rounding errors in large `number` values. This causes a consensus split, where Lodestar nodes are forked away from the main network. Similarly, Lodestar may consider invalid `ProposerSlashing` as valid, thus including in proposed blocks that will be considered invalid by the network. Version 0.36.0 contains a fix for this issue. As a workaround, use `BigInt` to represent `Slot` and `Epoch` values in `AttesterSlashing` and `ProposerSlashing` objects. `BigInt` is too slow to be used in all `Slot` and `Epoch` cases, so one may carefully use `BigInt` just where necessary for consensus.",
        "URL": "https://github.com/ChainSafe/lodestar/pull/3977",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8f60b6a4cd28d475ef1b5acf0f2608a5865c992",
        "inducing_commit_hash_pyszz": [
            "7f46f05b4ba4d2110cf96a64276b47bdcde50d33"
        ],
        "inducing_commit_hash_pd": [
            "fbd16b63170b2ab8f063c171e05bb7be594ab063",
            "f0f46706b561dc5ed13af1f667f296731473abf4",
            "aa5ccb7c30e8253de02b14bb85e706b838d299bf",
            "7e1fb2f76bd6935e9ee6c0a66de32ed30a2c4aa8",
            "3d1fd18660e4645d4a21efea10cf9a8244b57d1c",
            "dc1e87e9b9b89b3de540904cffb3bda6fb49b7ec",
            "6d991057ea7218a1462eb9d7674b97da32dceb32",
            "a5bacf7b5d80a49d80c548aabbb3b460bd5bcaee",
            "e363db6d16e06afc09e52d612f51096358da111a",
            "9d0ecec6617acfd8676d0c783dd467801d11c70a",
            "c57624690bec05e24d1eb37f697e37e555ab7204",
            "6b65c80a294fe000d1c1c9befac87f398f6cc737",
            "34b2e1bf25e0baffd49aae024eada9fa7f8a72c0",
            "14422d70d2ba8185755a4213c37f55d303e79594",
            "1d0fd8d78d8822d958b68f510d274103b318756d",
            "f9d7db5f46beb432179d7a98b644a0dab86415e4",
            "a7bd5fb895c7e9626579e81112aeb17a99b08677",
            "df2cb2713fa6affceecdce4a2ce7e3a45acc67dc",
            "d8816b55afac7617be14d10c0126389d180edc96",
            "f1bcb4d1c3ec96ff9af2f644050bd885418740a7",
            "7f46f05b4ba4d2110cf96a64276b47bdcde50d33",
            "7579f7fbc3957924df8be5e697149a34bfc3b2f8"
        ],
        "matched": [
            "7f46f05b4ba4d2110cf96a64276b47bdcde50d33"
        ]
    },
    {
        "repo_name": "chansen/p5-http-tiny",
        "CVE_ID": "CVE-2023-31486",
        "Problem_Type": "CWE-295",
        "Description": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
        "URL": "https://github.com/chansen/p5-http-tiny/pull/153",
        "Tag": "['Patch']",
        "fix_commit_hash": "77f557ef84698efeb6eed04e4a9704eaf85b741d",
        "inducing_commit_hash_pyszz": [
            "02e188abccd2fa8f037e564fc6f8e9d81471c0eb"
        ],
        "inducing_commit_hash_pd": [
            "c753a31ef389eb6e35925cf8e02d560ac0ef0a98",
            "541cee60ead8f87a2f96bc2feb8a2f8392d59c50",
            "02e188abccd2fa8f037e564fc6f8e9d81471c0eb",
            "750a167a129320c0f8b2fe921e2595a4e8710ed8",
            "c5b58fb507b4275bcbccac27c2e39a78cf845fa6",
            "e637cfd00b54b56bf436be74abd83f456919b000",
            "5378322d46c98f422720ccd8e1765f4602d2fb0e",
            "293d20c3358cc7d9913fdc00cd7f46fcfd52cd21",
            "a1beb4ec5b9cdc8a86aff5898a0266f8dff588ae"
        ],
        "matched": [
            "02e188abccd2fa8f037e564fc6f8e9d81471c0eb"
        ]
    },
    {
        "repo_name": "chanzuckerberg/idseq-web",
        "CVE_ID": "CVE-2019-15568",
        "Problem_Type": "CWE-89",
        "Description": "idseq-web before 2019-07-01 in Infectious Disease Sequencing Platform IDseq allows SQL injection via tax_levels.",
        "URL": "https://github.com/chanzuckerberg/idseq-web/pull/2372",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5e0901a9bd161312cf8bb57004830ac32921f976",
        "inducing_commit_hash_pyszz": [
            "55b54e586a82c83e7ce2a0b500e017aea8583390"
        ],
        "inducing_commit_hash_pd": [
            "55b54e586a82c83e7ce2a0b500e017aea8583390",
            "a44899f13bcce65aab2cc9d2e4a8026d9705fa65"
        ],
        "matched": [
            "55b54e586a82c83e7ce2a0b500e017aea8583390"
        ]
    },
    {
        "repo_name": "chartjs/Chart.js",
        "CVE_ID": "CVE-2020-7746",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package chart.js before 2.9.4. The options parameter is not properly sanitized when it is processed. When the options are processed, the existing options (or the defaults options) are deeply merged with provided options. However, during this operation, the keys of the object being set are not checked, leading to a prototype pollution.",
        "URL": "https://github.com/chartjs/Chart.js/pull/7920",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d92605aa6c29add400c4c551413fc2306c15e8d",
        "inducing_commit_hash_pyszz": [
            "d6a5ea0d3629f8687ccd12637f221bd3c68451d1"
        ],
        "inducing_commit_hash_pd": [
            "d6a5ea0d3629f8687ccd12637f221bd3c68451d1",
            "889ecd560bba46a81a29ca29d02f0691aaadc8d2",
            "0697d0de9073c456565c9deeb20cb36d85e858c9",
            "16bcd6adc579cb3deae16ea915680bc219924cdc"
        ],
        "matched": [
            "d6a5ea0d3629f8687ccd12637f221bd3c68451d1"
        ]
    },
    {
        "repo_name": "chipsalliance/rocket-chip",
        "CVE_ID": "CVE-2022-34632",
        "Problem_Type": "CWE-327",
        "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.",
        "URL": "https://github.com/chipsalliance/rocket-chip/pull/2950/commits/4f8114374d8824dfdec03f576a8cd68bebce4e56",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4f8114374d8824dfdec03f576a8cd68bebce4e56",
        "inducing_commit_hash_pyszz": [
            "185cac830746df9a22465e3267e6d47e01567bc3"
        ],
        "inducing_commit_hash_pd": [
            "185cac830746df9a22465e3267e6d47e01567bc3"
        ],
        "matched": [
            "185cac830746df9a22465e3267e6d47e01567bc3"
        ]
    },
    {
        "repo_name": "chipsalliance/rocket-chip",
        "CVE_ID": "CVE-2022-34632",
        "Problem_Type": "CWE-327",
        "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.",
        "URL": "https://github.com/chipsalliance/rocket-chip/pull/2950#issuecomment-1106745660",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4ecc497ccb72ff56a3bbeb07244a5545de8770d9",
        "inducing_commit_hash_pyszz": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ],
        "inducing_commit_hash_pd": [
            "9949347569beae5ee1a60071b03fb49acf2bd52c",
            "049fc8dc24b947e68072f38e78ac036a1a8648f0",
            "e80340198a621c40bd5007ad71229b9df8d967c4",
            "832e56d3c7b6aa3db6659478a373a9c8e4f31b6e",
            "b48744896186dfdbb898065126173a44e587fbd0",
            "9fea4c83da18d2b204968c10deac8bfd49f75c2f",
            "42a58abafe25263a1679b5f98cfddfcfa2d956d1",
            "661f8e635b0d67a851cc953d0d93b71af959b32b",
            "b5f8ae2a928bcd43abfb6d180445b17a18ce9330",
            "185cac830746df9a22465e3267e6d47e01567bc3",
            "e5e77a0fcc5e11e467cb098cab8f0a59ae3a6bc9",
            "f428f8b8686b4bc949c5b46859a9957c4cb1bdf6",
            "dee8934d7724ae1741a8b8f16f36ae178861046c",
            "e8b0aaacba124234b6ab191bb6936cf73d7fbdd2",
            "7ae44d4905745de24f57a107cf4731c2d65ab7eb",
            "a0e5a20b60b17fa3fff2dd26e37aad8b227a7817",
            "b5ff43609275176480311c90b60d4ba7a3dfbcc2",
            "9aa724706e1163c277326371a706a65719dc9c35",
            "1bc5e01f665dae5b75854ac5601354580d0c78d8",
            "9ade0e41cc343e996a1161b67007eaa16f549d9f",
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40",
            "d345788be93832e0523e6a147029032c17f2d24b",
            "4c62a179f4e5085b65d1096ff4cca2bf198fedfe",
            "e203b8b3787780471ed68c3315998e973bbe0d83",
            "12da135df51ed89467d6a509cf5a2b3816116d2d",
            "c921fc34a9f65e2fe10e43ff8d2f2bdcd9ead715",
            "a59fc3bdaa9bd208fbad18d662842efda29ae3a4",
            "c3018812b56f8bfe245fb0a3681c2e22395b47d9",
            "27bbecf359489261d208c6fb6daabf3b212f0267",
            "4c595d175c2c3d3dfa721a78a4a2a9fab009621b",
            "335e2c8a1ebef0182d81ec7d46f08d4ec94b475c",
            "63b76488fd69e84623f4c173b48959c9b36c6b12",
            "53a162c826fd4298766ba2b67154937e27231e3e",
            "29bc361d6c298fec7f3d9c3fe9573937a3890d85",
            "04a108710bfbe4b401587485744ff00d8cbf5077",
            "fcfedefc09db3397edec730c64bc5043d35f7e09",
            "e8c8d2af7141102adf8ccc65b929e740ce7ce189",
            "a50a1f7d50a74ad65f4d61f143cdc103f1769878",
            "2b24881d24c2f8cd06b7248db2bf9479455f4adc",
            "52d6b0b1a55249bd12ba2fb747c4b78e4cdfa121",
            "c06e2d16e4791bdd4bb36e661d36bec21c627c89",
            "edc804f3fd78bc4f8f80efa1e75a549d63e446ad",
            "6181de4cc952fed21f7754ebbfc70c5153a1ca60",
            "daefbd0228a1b4c0c0f954d51b4b6cf0621ae336",
            "c61b2a65618db72dffd2be9c8a0477117329bc70",
            "058396aefe4103046406be63e1a4c0178c4d13b3",
            "84576650b57133b28bd4e2d3a57cb2d512dae5a5",
            "f4524e4c91e708e80e6d6df36941b71169748687",
            "3e10eabd87ab4066dce4322c4346e50425ef0847",
            "cc447c8110e1fb8674fda9aec510aed3fe88b3a0"
        ],
        "matched": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ]
    },
    {
        "repo_name": "chipsalliance/rocket-chip",
        "CVE_ID": "CVE-2022-34632",
        "Problem_Type": "CWE-327",
        "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.",
        "URL": "https://github.com/chipsalliance/rocket-chip/pull/2950#issuecomment-1107055607",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4ecc497ccb72ff56a3bbeb07244a5545de8770d9",
        "inducing_commit_hash_pyszz": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ],
        "inducing_commit_hash_pd": [
            "9949347569beae5ee1a60071b03fb49acf2bd52c",
            "049fc8dc24b947e68072f38e78ac036a1a8648f0",
            "e80340198a621c40bd5007ad71229b9df8d967c4",
            "832e56d3c7b6aa3db6659478a373a9c8e4f31b6e",
            "b48744896186dfdbb898065126173a44e587fbd0",
            "9fea4c83da18d2b204968c10deac8bfd49f75c2f",
            "42a58abafe25263a1679b5f98cfddfcfa2d956d1",
            "661f8e635b0d67a851cc953d0d93b71af959b32b",
            "b5f8ae2a928bcd43abfb6d180445b17a18ce9330",
            "185cac830746df9a22465e3267e6d47e01567bc3",
            "e5e77a0fcc5e11e467cb098cab8f0a59ae3a6bc9",
            "f428f8b8686b4bc949c5b46859a9957c4cb1bdf6",
            "dee8934d7724ae1741a8b8f16f36ae178861046c",
            "e8b0aaacba124234b6ab191bb6936cf73d7fbdd2",
            "7ae44d4905745de24f57a107cf4731c2d65ab7eb",
            "a0e5a20b60b17fa3fff2dd26e37aad8b227a7817",
            "b5ff43609275176480311c90b60d4ba7a3dfbcc2",
            "9aa724706e1163c277326371a706a65719dc9c35",
            "1bc5e01f665dae5b75854ac5601354580d0c78d8",
            "9ade0e41cc343e996a1161b67007eaa16f549d9f",
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40",
            "d345788be93832e0523e6a147029032c17f2d24b",
            "4c62a179f4e5085b65d1096ff4cca2bf198fedfe",
            "e203b8b3787780471ed68c3315998e973bbe0d83",
            "12da135df51ed89467d6a509cf5a2b3816116d2d",
            "c921fc34a9f65e2fe10e43ff8d2f2bdcd9ead715",
            "a59fc3bdaa9bd208fbad18d662842efda29ae3a4",
            "c3018812b56f8bfe245fb0a3681c2e22395b47d9",
            "27bbecf359489261d208c6fb6daabf3b212f0267",
            "4c595d175c2c3d3dfa721a78a4a2a9fab009621b",
            "335e2c8a1ebef0182d81ec7d46f08d4ec94b475c",
            "63b76488fd69e84623f4c173b48959c9b36c6b12",
            "53a162c826fd4298766ba2b67154937e27231e3e",
            "29bc361d6c298fec7f3d9c3fe9573937a3890d85",
            "04a108710bfbe4b401587485744ff00d8cbf5077",
            "fcfedefc09db3397edec730c64bc5043d35f7e09",
            "e8c8d2af7141102adf8ccc65b929e740ce7ce189",
            "a50a1f7d50a74ad65f4d61f143cdc103f1769878",
            "2b24881d24c2f8cd06b7248db2bf9479455f4adc",
            "52d6b0b1a55249bd12ba2fb747c4b78e4cdfa121",
            "c06e2d16e4791bdd4bb36e661d36bec21c627c89",
            "edc804f3fd78bc4f8f80efa1e75a549d63e446ad",
            "6181de4cc952fed21f7754ebbfc70c5153a1ca60",
            "daefbd0228a1b4c0c0f954d51b4b6cf0621ae336",
            "c61b2a65618db72dffd2be9c8a0477117329bc70",
            "058396aefe4103046406be63e1a4c0178c4d13b3",
            "84576650b57133b28bd4e2d3a57cb2d512dae5a5",
            "f4524e4c91e708e80e6d6df36941b71169748687",
            "3e10eabd87ab4066dce4322c4346e50425ef0847",
            "cc447c8110e1fb8674fda9aec510aed3fe88b3a0"
        ],
        "matched": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ]
    },
    {
        "repo_name": "chjj/marked",
        "CVE_ID": "CVE-2016-10531",
        "Problem_Type": "CWE-79",
        "Description": "marked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.",
        "URL": "https://github.com/chjj/marked/pull/592/commits/2cff85979be8e7a026a9aca35542c470cf5da523",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cff85979be8e7a026a9aca35542c470cf5da523",
        "inducing_commit_hash_pyszz": [
            "613bf6ac63e9a1e4071f4b304050dc084d6b3ccb"
        ],
        "inducing_commit_hash_pd": [
            "613bf6ac63e9a1e4071f4b304050dc084d6b3ccb"
        ],
        "matched": [
            "613bf6ac63e9a1e4071f4b304050dc084d6b3ccb"
        ]
    },
    {
        "repo_name": "cilium/cilium",
        "CVE_ID": "CVE-2023-41332",
        "Problem_Type": "CWE-755",
        "Description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In Cilium clusters where Cilium's Layer 7 proxy has been disabled, creating workloads with `policy.cilium.io/proxy-visibility` annotations (in Cilium >= v1.13) or `io.cilium.proxy-visibility` annotations (in Cilium <= v1.12) causes the Cilium agent to segfault on the node to which the workload is assigned. Existing traffic on the affected node will continue to flow, but the Cilium agent on the node will not able to process changes to workloads running on the node. This will also prevent workloads from being able to start on the affected node. The denial of service will be limited to the node on which the workload is scheduled, however an attacker may be able to schedule workloads on the node of their choosing, which could lead to targeted attacks. This issue has been resolved in Cilium versions 1.14.2, 1.13.7, and 1.12.14. Users unable to upgrade can avoid this denial of service attack by enabling the Layer 7 proxy.\n\n",
        "URL": "https://github.com/cilium/cilium/pull/27597",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "3f23ba713082afc12903f6e127e41d507cd71977",
        "inducing_commit_hash_pyszz": [
            "be2306d404be851b31385bc1474d9ebe6dd8a1fd"
        ],
        "inducing_commit_hash_pd": [
            "be2306d404be851b31385bc1474d9ebe6dd8a1fd",
            "ea404cf458aeed02bbaad27326838b9b135ec892"
        ],
        "matched": [
            "be2306d404be851b31385bc1474d9ebe6dd8a1fd"
        ]
    },
    {
        "repo_name": "cilium/cilium",
        "CVE_ID": "CVE-2023-41333",
        "Problem_Type": "CWE-306",
        "Description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An attacker with the ability to create or modify CiliumNetworkPolicy objects in a particular namespace is able to affect traffic on an entire Cilium cluster, potentially bypassing policy enforcement in other namespaces. By using a crafted `endpointSelector` that uses the `DoesNotExist` operator on the `reserved:init` label, the attacker can create policies that bypass namespace restrictions and affect the entire Cilium cluster. This includes potentially allowing or denying all traffic. This attack requires API server access, as described in the Kubernetes API Server Attacker section of the Cilium Threat Model. This issue has been resolved in Cilium versions 1.14.2, 1.13.7, and 1.12.14. As a workaround an admission webhook can be used to prevent the use of `endpointSelectors` that use the `DoesNotExist` operator on the `reserved:init` label in CiliumNetworkPolicies.\n",
        "URL": "https://github.com/cilium/cilium/pull/28007",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "642768d631d4e5d1a07a74f3a904e0f8fc1a1c6f",
        "inducing_commit_hash_pyszz": [
            "b667f010fb814df3e056f18c39933e02e4b93bfb"
        ],
        "inducing_commit_hash_pd": [
            "8e25d64386426ea97fa7b3a35f77d074ef4a7546"
        ],
        "matched": [
            "b667f010fb814df3e056f18c39933e02e4b93bfb"
        ]
    },
    {
        "repo_name": "cloudflare/lua-resty-json",
        "CVE_ID": "CVE-2023-3040",
        "Problem_Type": "CWE-125",
        "Description": "A debug function in the lua-resty-json package, up to commit id 3ef9492bd3a44d9e51301d6adc3cd1789c8f534a (merged in PR #14) contained an out of bounds access bug that could have allowed an attacker to launch a DoS if the function was used to parse untrusted input data. It is important to note that because this debug function was only used in tests and demos, it was not exploitable in a normal environment.\n",
        "URL": "https://github.com/cloudflare/lua-resty-json/pull/14",
        "Tag": "['Patch']",
        "fix_commit_hash": "424bcdd7af825d57911f8d78708dadf5d71094a4",
        "inducing_commit_hash_pyszz": [
            "0a93a67d14d1f58f56c1a7b315970794cac3a599"
        ],
        "inducing_commit_hash_pd": [
            "0a93a67d14d1f58f56c1a7b315970794cac3a599"
        ],
        "matched": [
            "0a93a67d14d1f58f56c1a7b315970794cac3a599"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7078",
        "Problem_Type": "CWE-918",
        "Description": "Sending specially crafted HTTP requests to Miniflare's server could result in arbitrary HTTP and WebSocket requests being sent from the server. If Miniflare was configured to listen on external network interfaces (as was the default in wrangler\u00c2\u00a0until 3.19.0), an attacker on the local network could access other local servers.\n\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4532",
        "Tag": "['Patch']",
        "fix_commit_hash": "311ffbd5064f8301ac6f0311bbe5630897923b93",
        "inducing_commit_hash_pyszz": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ],
        "inducing_commit_hash_pd": [
            "d282e9c6de4042ce39a6f34230b8759c07684c91",
            "a3ce6fc2aa24976932a694e79b436b5f7a428c02",
            "3ac91e839d59166be081a3ec4cb32d7422373fb0",
            "7fbe1937b311f36077c92814207bbb15ef3878d6",
            "9e632cddeace54aa8fbc9695621002889c3daa03"
        ],
        "matched": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7079",
        "Problem_Type": "CWE-287",
        "Description": "Sending specially crafted HTTP requests and inspector messages to Wrangler's dev server could result in any file on the user's computer being accessible over the local network. An attacker that could trick any user on the local network into opening a malicious website could also read any file.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4532",
        "Tag": "['Patch']",
        "fix_commit_hash": "311ffbd5064f8301ac6f0311bbe5630897923b93",
        "inducing_commit_hash_pyszz": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ],
        "inducing_commit_hash_pd": [
            "d282e9c6de4042ce39a6f34230b8759c07684c91",
            "a3ce6fc2aa24976932a694e79b436b5f7a428c02",
            "3ac91e839d59166be081a3ec4cb32d7422373fb0",
            "7fbe1937b311f36077c92814207bbb15ef3878d6",
            "9e632cddeace54aa8fbc9695621002889c3daa03"
        ],
        "matched": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7079",
        "Problem_Type": "CWE-287",
        "Description": "Sending specially crafted HTTP requests and inspector messages to Wrangler's dev server could result in any file on the user's computer being accessible over the local network. An attacker that could trick any user on the local network into opening a malicious website could also read any file.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4535",
        "Tag": "['Patch']",
        "fix_commit_hash": "29df8e17545bf3926b6d61678b596be809d40c6d",
        "inducing_commit_hash_pyszz": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ],
        "inducing_commit_hash_pd": [
            "eebad0d9e593237b4db61047c94e2ec5b47a7b3c",
            "310281a48a1de2997b1c055711f4ad47f3aa29e1"
        ],
        "matched": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7080",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The V8 inspector intentionally allows arbitrary code execution within the Workers sandbox for debugging. wrangler dev would previously start an inspector server listening on all network interfaces. This would allow an attacker on the local network to connect to the inspector and run arbitrary code. Additionally, the inspector server did not validate Origin/Host headers, granting an attacker that can trick any user on the local network into opening a malicious website the ability to run code. If wrangler dev --remote was being used, an attacker could access production resources if they were bound to the worker.\n\nThis issue was fixed in wrangler@3.19.0 and wrangler@2.20.2. Whilst wrangler dev's inspector server listens on local interfaces by default as of wrangler@3.16.0, an  SSRF vulnerability in miniflare https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-fwvg-2739-22v7 \u00c2\u00a0(CVE-2023-7078) allowed access from the local network until wrangler@3.18.0. wrangler@3.19.0 and wrangler@2.20.2 introduced validation for the Origin/Host headers.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4437",
        "Tag": "['Patch']",
        "fix_commit_hash": "05b1bbd2f5b8e60268e30c276067c3a3ae1239cf",
        "inducing_commit_hash_pyszz": [
            "6ccc4fa672204ec671a1c99db04b4acbd52d5f20"
        ],
        "inducing_commit_hash_pd": [
            "eebad0d9e593237b4db61047c94e2ec5b47a7b3c",
            "6ccc4fa672204ec671a1c99db04b4acbd52d5f20",
            "ebc1aa579a4e884cf2b1889a5245b5ad86716144",
            "88f15f61cad2a69c07e26203cc84ddb2da42deb3",
            "5fd080c88ee7991cde107f8723f06ea2fd2c651d"
        ],
        "matched": [
            "6ccc4fa672204ec671a1c99db04b4acbd52d5f20"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7080",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The V8 inspector intentionally allows arbitrary code execution within the Workers sandbox for debugging. wrangler dev would previously start an inspector server listening on all network interfaces. This would allow an attacker on the local network to connect to the inspector and run arbitrary code. Additionally, the inspector server did not validate Origin/Host headers, granting an attacker that can trick any user on the local network into opening a malicious website the ability to run code. If wrangler dev --remote was being used, an attacker could access production resources if they were bound to the worker.\n\nThis issue was fixed in wrangler@3.19.0 and wrangler@2.20.2. Whilst wrangler dev's inspector server listens on local interfaces by default as of wrangler@3.16.0, an  SSRF vulnerability in miniflare https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-fwvg-2739-22v7 \u00c2\u00a0(CVE-2023-7078) allowed access from the local network until wrangler@3.18.0. wrangler@3.19.0 and wrangler@2.20.2 introduced validation for the Origin/Host headers.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4535",
        "Tag": "['Patch']",
        "fix_commit_hash": "29df8e17545bf3926b6d61678b596be809d40c6d",
        "inducing_commit_hash_pyszz": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ],
        "inducing_commit_hash_pd": [
            "eebad0d9e593237b4db61047c94e2ec5b47a7b3c",
            "310281a48a1de2997b1c055711f4ad47f3aa29e1"
        ],
        "matched": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7080",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The V8 inspector intentionally allows arbitrary code execution within the Workers sandbox for debugging. wrangler dev would previously start an inspector server listening on all network interfaces. This would allow an attacker on the local network to connect to the inspector and run arbitrary code. Additionally, the inspector server did not validate Origin/Host headers, granting an attacker that can trick any user on the local network into opening a malicious website the ability to run code. If wrangler dev --remote was being used, an attacker could access production resources if they were bound to the worker.\n\nThis issue was fixed in wrangler@3.19.0 and wrangler@2.20.2. Whilst wrangler dev's inspector server listens on local interfaces by default as of wrangler@3.16.0, an  SSRF vulnerability in miniflare https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-fwvg-2739-22v7 \u00c2\u00a0(CVE-2023-7078) allowed access from the local network until wrangler@3.18.0. wrangler@3.19.0 and wrangler@2.20.2 introduced validation for the Origin/Host headers.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4550",
        "Tag": "['Patch']",
        "fix_commit_hash": "63708a94fb7a055bf15fa963f2d598b47b11d3c0",
        "inducing_commit_hash_pyszz": [
            "311ffbd5064f8301ac6f0311bbe5630897923b93"
        ],
        "inducing_commit_hash_pd": [
            "9a1c65c820a08974bfbc167e0d7511b2b15f4fa9",
            "29df8e17545bf3926b6d61678b596be809d40c6d",
            "311ffbd5064f8301ac6f0311bbe5630897923b93"
        ],
        "matched": [
            "311ffbd5064f8301ac6f0311bbe5630897923b93"
        ]
    },
    {
        "repo_name": "ClusterLabs/libqb",
        "CVE_ID": "CVE-2023-39976",
        "Problem_Type": "CWE-120",
        "Description": "log_blackbox.c in libqb before 2.0.8 allows a buffer overflow via long log messages because the header size is not considered.",
        "URL": "https://github.com/ClusterLabs/libqb/pull/490",
        "Tag": "['Patch']",
        "fix_commit_hash": "1bbaa929b77113532785c408dd1b41cd0521ffc8",
        "inducing_commit_hash_pyszz": [
            "0ec02f9ac589e9e21e447f4406ec104ade01ef73"
        ],
        "inducing_commit_hash_pd": [
            "951c9826f8a744f92329496350aaeaf10070c82b",
            "0ec02f9ac589e9e21e447f4406ec104ade01ef73"
        ],
        "matched": [
            "0ec02f9ac589e9e21e447f4406ec104ade01ef73"
        ]
    },
    {
        "repo_name": "codex-team/editor.js",
        "CVE_ID": "CVE-2022-23474",
        "Problem_Type": "CWE-79",
        "Description": "Editor.js is a block-style editor with clean JSON output. Versions prior to 2.26.0 are vulnerable to Code Injection via pasted input. The processHTML method passes pasted input into wrapper\u00c2\u2019s innerHTML. This issue is patched in version 2.26.0.",
        "URL": "https://github.com/codex-team/editor.js/pull/2100",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f659015be6de8e6f0c322c5ff4d1a4532d2f29a2",
        "inducing_commit_hash_pyszz": [
            "6c0555a3229a16641709cdc83ec248af87f3c77a"
        ],
        "inducing_commit_hash_pd": [
            "29db87525b1b4bdd2c884005b357ab14f46a1ed6",
            "ff91466b148eb58f935c4449bf700a627a785d79",
            "61242ab6a62a3b14efdf5921fdc2c475b3625eaf",
            "581289c03e83b149e633fb4f4573d278ace7450f",
            "ac93017c706f091fd3014c3edb248db4e03f55dd",
            "cb86bf446b12b6f32b3e59cb05b0cf294dcf12c6",
            "577da8fa22b85e80bac3e59c2fc3ef8101455451",
            "6c0555a3229a16641709cdc83ec248af87f3c77a",
            "63eeec0f3b3e05025c6f2875a1eb2a4c03a24c8c",
            "bcdfcdadbc444921aee62b38516329cda3c96a70",
            "be6f9b78f265c3d553c799c99e59c9916bf29e17",
            "669c11eaa5ef8dd2e5df721c4eaa590e38c9c392",
            "a88dc8e30ba64dd854aaaf769a37074dff01449d",
            "a67e699991d0326f3a5d0f6b723607d49adf80bf",
            "4cfcb656a81dc9ae6daf0841ac094f68c4368e15"
        ],
        "matched": [
            "6c0555a3229a16641709cdc83ec248af87f3c77a"
        ]
    },
    {
        "repo_name": "Codiad/Codiad",
        "CVE_ID": "CVE-2017-11366",
        "Problem_Type": "CWE-78",
        "Description": "components/filemanager/class.filemanager.php in Codiad before 2.8.4 is vulnerable to remote command execution because shell commands can be embedded in parameter values, as demonstrated by search_file_type.",
        "URL": "https://github.com/Codiad/Codiad/pull/1013/commits/b3645b4c6718cef6de7003f41aafe7bfcc0395d1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3645b4c6718cef6de7003f41aafe7bfcc0395d1",
        "inducing_commit_hash_pyszz": [
            "a4bcfdfc3952a6f2ea1a78638e349243678d1f70"
        ],
        "inducing_commit_hash_pd": [
            "40a9dc37e21889bfd54af4785f48d50fa9e5880e",
            "26484e06f552ebf9b1f87413a747e2c038f2cc4d"
        ],
        "matched": [
            "a4bcfdfc3952a6f2ea1a78638e349243678d1f70"
        ]
    },
    {
        "repo_name": "Cog-Creators/Red-DiscordBot",
        "CVE_ID": "CVE-2020-15140",
        "Problem_Type": "CWE-74",
        "Description": "In Red Discord Bot before version 3.3.11, a RCE exploit has been discovered in the Trivia module: this exploit allows Discord users with specifically crafted usernames to inject code into the Trivia module's leaderboard command. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information. This critical exploit has been fixed on version 3.3.11.",
        "URL": "https://github.com/Cog-Creators/Red-DiscordBot/pull/4175/commits/9ab536235bafc2b42c3c17d7ce26f1cc64482a81",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c9e4c18f179509d3cd9a9d003a9ae071c5011396",
        "inducing_commit_hash_pyszz": [
            "897adbf5ac15e43463761694c603707f6721783d"
        ],
        "inducing_commit_hash_pd": [
            "897adbf5ac15e43463761694c603707f6721783d"
        ],
        "matched": [
            "897adbf5ac15e43463761694c603707f6721783d"
        ]
    },
    {
        "repo_name": "Cog-Creators/Red-DiscordBot",
        "CVE_ID": "CVE-2020-15147",
        "Problem_Type": "CWE-74",
        "Description": "Red Discord Bot before versions 3.3.12 and 3.4 has a Remote Code Execution vulnerability in the Streams module. This exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information. As a workaround, unloading the Trivia module with `unload streams` can render this exploit not accessible. It is highly recommended updating to 3.3.12 or 3.4 to completely patch this issue.",
        "URL": "https://github.com/Cog-Creators/Red-DiscordBot/pull/4183/commits/e269ea0d3bc88417163c18431b1df38a9be92bfc",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bf581b9f9711f89aafe838815e719a54b6b45924",
        "inducing_commit_hash_pyszz": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "inducing_commit_hash_pd": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "matched": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ]
    },
    {
        "repo_name": "Cog-Creators/Red-DiscordBot",
        "CVE_ID": "CVE-2020-15147",
        "Problem_Type": "CWE-74",
        "Description": "Red Discord Bot before versions 3.3.12 and 3.4 has a Remote Code Execution vulnerability in the Streams module. This exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information. As a workaround, unloading the Trivia module with `unload streams` can render this exploit not accessible. It is highly recommended updating to 3.3.12 or 3.4 to completely patch this issue.",
        "URL": "https://github.com/Cog-Creators/Red-DiscordBot/pull/4183",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bf581b9f9711f89aafe838815e719a54b6b45924",
        "inducing_commit_hash_pyszz": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "inducing_commit_hash_pd": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "matched": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ]
    },
    {
        "repo_name": "combust/mleap",
        "CVE_ID": "CVE-2023-5245",
        "Problem_Type": "CWE-22",
        "Description": "FileUtil.extract() enumerates all zip file entries and extracts each file without validating whether file paths in the archive are outside the intended directory.\n\nWhen creating an instance of TensorflowModel using the saved_model format and an exported tensorflow model, the apply() function invokes the vulnerable implementation of FileUtil.extract().\n\nArbitrary file creation can directly lead to code execution\n\n",
        "URL": "https://github.com/combust/mleap/pull/866#issuecomment-1738032225",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "35bf420cf3db3a23e287c342b6b310172610f8a9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "9f18e651a5a2ca9a3ecd000375d7e37a13e68f2a"
        ],
        "matched": [
            "9f18e651a5a2ca9a3ecd000375d7e37a13e68f2a"
        ]
    },
    {
        "repo_name": "cometbft/cometbft",
        "CVE_ID": "CVE-2023-34450",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. An internal modification made in versions 0.34.28 and 0.37.1 to the way struct `PeerState` is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places. The first is via logs, setting the `consensus` logging module to \"debug\" level (should not happen in production), and setting the log output format to JSON. The second is via RPC `dump_consensus_state`.\n\nCase 1, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.\n\nIn case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.\n\nThe theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one `PeerState` struct. If `dump_consensus_state` is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different `PeerState` structs) and the chain will progress again. Then, the same process can be repeated.\n\nAs the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with two nodes decreases. Only the first `PeerState` struct will deadlock, and not the others (RPC `dump_consensus_state` accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).\n\nThis regression was fixed in versions 0.34.29 and 0.37.2. Some workarounds are available. For case 1 (hitting the deadlock via logs), either don't set the log output to \"json\", leave at \"plain\", or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher. For case 2 (hitting the deadlock via RPC `dump_consensus_state`), do not expose `dump_consensus_state` RPC endpoint to the public internet (e.g., via rules in one's nginx setup).",
        "URL": "https://github.com/cometbft/cometbft/pull/524",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "587bc0b18d281f9949174c2ae9b57a65c3e356bb",
        "inducing_commit_hash_pyszz": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ],
        "inducing_commit_hash_pd": [
            "d2c05bc5b9d1a909e3e4a23732a9fdee0c7543ea",
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ],
        "matched": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ]
    },
    {
        "repo_name": "cometbft/cometbft",
        "CVE_ID": "CVE-2023-34450",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. An internal modification made in versions 0.34.28 and 0.37.1 to the way struct `PeerState` is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places. The first is via logs, setting the `consensus` logging module to \"debug\" level (should not happen in production), and setting the log output format to JSON. The second is via RPC `dump_consensus_state`.\n\nCase 1, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.\n\nIn case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.\n\nThe theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one `PeerState` struct. If `dump_consensus_state` is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different `PeerState` structs) and the chain will progress again. Then, the same process can be repeated.\n\nAs the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with two nodes decreases. Only the first `PeerState` struct will deadlock, and not the others (RPC `dump_consensus_state` accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).\n\nThis regression was fixed in versions 0.34.29 and 0.37.2. Some workarounds are available. For case 1 (hitting the deadlock via logs), either don't set the log output to \"json\", leave at \"plain\", or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher. For case 2 (hitting the deadlock via RPC `dump_consensus_state`), do not expose `dump_consensus_state` RPC endpoint to the public internet (e.g., via rules in one's nginx setup).",
        "URL": "https://github.com/cometbft/cometbft/pull/865",
        "Tag": "['Patch']",
        "fix_commit_hash": "f6ea09171a2bf9f695f59b65f5c51e4a8c168015",
        "inducing_commit_hash_pyszz": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ],
        "inducing_commit_hash_pd": [
            "88cbf477e789882dbc43bb3e92935ce24a0e118a"
        ],
        "matched": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ]
    },
    {
        "repo_name": "CompassionCH/compassion-switzerland",
        "CVE_ID": "CVE-2019-15564",
        "Problem_Type": "CWE-89",
        "Description": "The Compassion Switzerland addons 10.01.4 for Odoo allow SQL injection in models/partner_compassion.py.",
        "URL": "https://github.com/CompassionCH/compassion-switzerland/pull/897",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "668d7b9f7b5946fee4add6e2abce2b40e652ef7a",
        "inducing_commit_hash_pyszz": [
            "0307c40a306a5f934f29f6bfeaac88abc24c56a4"
        ],
        "inducing_commit_hash_pd": [
            "0307c40a306a5f934f29f6bfeaac88abc24c56a4"
        ],
        "matched": [
            "0307c40a306a5f934f29f6bfeaac88abc24c56a4"
        ]
    },
    {
        "repo_name": "containerbuildsystem/osbs-client",
        "CVE_ID": "CVE-2019-10135",
        "Problem_Type": "CWE-502",
        "Description": "A flaw was found in the yaml.load() function in the osbs-client versions since 0.46 before 0.56.1. Insecure use of the yaml.load() function allowed the user to load any suspicious object for code execution via the parsing of malicious YAML files.",
        "URL": "https://github.com/containerbuildsystem/osbs-client/pull/865",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dee8ff1ea3a17bc93ead059b9567ae0ff965592c",
        "inducing_commit_hash_pyszz": [
            "43fcd4c62d3b5a6db1c8b6f9efd179ee30227970"
        ],
        "inducing_commit_hash_pd": [
            "903024e73e9781a8c092d95611f825edbbd24ebc",
            "43fcd4c62d3b5a6db1c8b6f9efd179ee30227970"
        ],
        "matched": [
            "43fcd4c62d3b5a6db1c8b6f9efd179ee30227970"
        ]
    },
    {
        "repo_name": "containous/traefik",
        "CVE_ID": "CVE-2019-12452",
        "Problem_Type": "CWE-522",
        "Description": "types/types.go in Containous Traefik 1.7.x through 1.7.11, when the --api flag is used and the API is publicly reachable and exposed without sufficient access control (which is contrary to the API documentation), allows remote authenticated users to discover password hashes by reading the Basic HTTP Authentication or Digest HTTP Authentication section, or discover a key by reading the ClientTLS section. These can be found in the JSON response to a /api request.",
        "URL": "https://github.com/containous/traefik/pull/4918",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "51287d9316b7506f0bab8ffcf6db517b38566390",
        "inducing_commit_hash_pyszz": [
            "a953d3ad893a3ffe39edf2c8860498e7ad5e45f6"
        ],
        "inducing_commit_hash_pd": [
            "a953d3ad893a3ffe39edf2c8860498e7ad5e45f6"
        ],
        "matched": [
            "a953d3ad893a3ffe39edf2c8860498e7ad5e45f6"
        ]
    },
    {
        "repo_name": "containous/traefik",
        "CVE_ID": "CVE-2020-15129",
        "Problem_Type": "CWE-601",
        "Description": "In Traefik before versions 1.7.26, 2.2.8, and 2.3.0-rc3, there exists a potential open redirect vulnerability in Traefik's handling of the \"X-Forwarded-Prefix\" header. The Traefik API dashboard component doesn't validate that the value of the header \"X-Forwarded-Prefix\" is a site relative path and will redirect to any header provided URI. Successful exploitation of an open redirect can be used to entice victims to disclose sensitive information. Active Exploitation of this issue is unlikely as it would require active header injection, however the Traefik team addressed this issue nonetheless to prevent abuse in e.g. cache poisoning scenarios.",
        "URL": "https://github.com/containous/traefik/pull/7109",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e63db782c11c7b8bfce30be4c902e7ef8f9f33d2",
        "inducing_commit_hash_pyszz": [
            "b385ffaee7f0de1073955a123d8397853c563f0b"
        ],
        "inducing_commit_hash_pd": [
            "9ebe3c38b2083ce1b58d921d7f8c6f7ff5a4559f",
            "9c651ae913fc8b7ca0f5732ee16b9e68260705c0"
        ],
        "matched": [
            "b385ffaee7f0de1073955a123d8397853c563f0b"
        ]
    },
    {
        "repo_name": "containous/traefik",
        "CVE_ID": "CVE-2020-9321",
        "Problem_Type": "CWE-295",
        "Description": "configurationwatcher.go in Traefik 2.x before 2.1.4 and TraefikEE 2.0.0 mishandles the purging of certificate contents from providers before logging.",
        "URL": "https://github.com/containous/traefik/pull/6281",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b498c7bcbb255af649a4842511a585929ca14d3f",
        "inducing_commit_hash_pyszz": [
            "51486b18fa8f0e06f05c1d32f8272cc0dcdd6d38"
        ],
        "inducing_commit_hash_pd": [
            "424e2a9439f8f3b00d7f9f19ed1df3b6d3c8c570"
        ],
        "matched": [
            "51486b18fa8f0e06f05c1d32f8272cc0dcdd6d38"
        ]
    },
    {
        "repo_name": "containrrr/shoutrrr",
        "CVE_ID": "CVE-2022-25891",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package github.com/containrrr/shoutrrr/pkg/util before 0.6.0 are vulnerable to Denial of Service (DoS) via the util.PartitionMessage function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.",
        "URL": "https://github.com/containrrr/shoutrrr/pull/242",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a27056f9d7522a8b493216195cb7634bf4b5c42",
        "inducing_commit_hash_pyszz": [
            "17f842b5b665f922774b867402598bfc438572ee"
        ],
        "inducing_commit_hash_pd": [
            "87324a2a0627ad74b8bd2850e0c711afa5c56d22",
            "8d401466680c0dbe416efca2d6253e2f965bab1a",
            "80c2c2162f213e55384e0192f937dfe3cda7ad53",
            "6083d9f71520f9641a6c0d95801763c9412b2215",
            "9ef6db2fc5f5163db48f6e9b71b415df08c15730",
            "2e825c7a428eb9543d5f27e19eb6abf4cdc2a618",
            "5afd1add67015042d85d223c20d6b199cd7e19a6",
            "e19ba77b42fe64ec77cf972fcb59d93fb9318aea",
            "17f842b5b665f922774b867402598bfc438572ee"
        ],
        "matched": [
            "17f842b5b665f922774b867402598bfc438572ee"
        ]
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-35926",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. Because of insufficient validation of IPv6 neighbor discovery options in Contiki-NG, attackers can send neighbor solicitation packets that trigger an out-of-bounds read. The problem exists in the module os/net/ipv6/uip-nd6.c, where memory read operations from the main packet buffer, <code>uip_buf</code>, are not checked if they go out of bounds. In particular, this problem can occur when attempting to read the 2-byte option header and the Source Link-Layer Address Option (SLLAO). This attack requires ipv6 be enabled for the network. The problem has been patched in the develop branch of Contiki-NG. The upcoming 4.8 release of Contiki-NG will include the patch.Users unable to upgrade may apply the patch in Contiki-NG PR #1654.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1654/commits/a4597001d50a04f4b9c78f323ba731e2f979802c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a4597001d50a04f4b9c78f323ba731e2f979802c",
        "inducing_commit_hash_pyszz": [
            "e9e31e9fd11070d04cec5e37fd47c3c145bb82df"
        ],
        "inducing_commit_hash_pd": [
            "5c30aed81444c600a20154f0d2ae733ce95fd666",
            "e9e31e9fd11070d04cec5e37fd47c3c145bb82df",
            "fd3d6c44d0875896742174015c902a535f8cd200"
        ],
        "matched": [
            "e9e31e9fd11070d04cec5e37fd47c3c145bb82df"
        ]
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-34100",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. When reading the TCP MSS option value from an incoming packet, the Contiki-NG OS does not verify that certain buffer indices to read from are within the bounds of the IPv6 packet buffer, uip_buf. In particular, there is a 2-byte buffer read in the module os/net/ipv6/uip6.c. The buffer is indexed using 'UIP_IPTCPH_LEN + 2 + c' and 'UIP_IPTCPH_LEN + 3 + c', but the uip_buf buffer may not have enough data, resulting in a 2-byte read out of bounds. The problem has been patched in the \"develop\" branch of Contiki-NG, and is expected to be included in release 4.9. Users are advised to watch for the 4.9 release and to upgrade when it becomes available. There are no workarounds for this vulnerability aside from manually patching with the diff in commit `cde4e9839`.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2434/commits/cde4e98398a2f5b994972c8459342af3ba93b98e",
        "Tag": "['Patch']",
        "fix_commit_hash": "cde4e98398a2f5b994972c8459342af3ba93b98e",
        "inducing_commit_hash_pyszz": [
            "8456c544d8a4cf9d1cf78cc7a8757dd35eed314c"
        ],
        "inducing_commit_hash_pd": [
            "8456c544d8a4cf9d1cf78cc7a8757dd35eed314c",
            "72b4d38ab35e199709ddedd34f93342af2724040",
            "ea32ab0f12ec1b5dd717d01d6526c49eb4514809",
            "2e8264010ba5635182a3d415b0d5cc45d6b96c64"
        ],
        "matched": [
            "8456c544d8a4cf9d1cf78cc7a8757dd35eed314c"
        ]
    },
    {
        "repo_name": "coreos/coreos-installer",
        "CVE_ID": "CVE-2021-20319",
        "Problem_Type": "CWE-347",
        "Description": "An improper signature verification vulnerability was found in coreos-installer. A specially crafted gzip installation image can bypass the image signature verification and as a consequence can lead to the installation of unsigned content. An attacker able to modify the original installation image can write arbitrary data, and achieve full access to the node being installed.",
        "URL": "https://github.com/coreos/coreos-installer/pull/659/commits/ad243c6f0eff2835b2da56ca5f7f33af76253c89",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ad243c6f0eff2835b2da56ca5f7f33af76253c89",
        "inducing_commit_hash_pyszz": [
            "20f277601f0df9600c72c85e8ba2609814c55731"
        ],
        "inducing_commit_hash_pd": [
            "20f277601f0df9600c72c85e8ba2609814c55731",
            "596e65780ec627ff119d9256b5b18013e99e8211"
        ],
        "matched": [
            "20f277601f0df9600c72c85e8ba2609814c55731"
        ]
    },
    {
        "repo_name": "cortexproject/cortex",
        "CVE_ID": "CVE-2021-31232",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The Alertmanager in CNCF Cortex before 1.8.1 has a local file disclosure vulnerability when -experimental.alertmanager.enable-api is used. The HTTP basic auth password_file can be used as an attack vector to send any file content via a webhook. The alertmanager templates can be used as an attack vector to send any file content because the alertmanager can load any text file specified in the templates list.",
        "URL": "https://github.com/cortexproject/cortex/pull/4129/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5fc0350f7c74e496fba86e5d29837e4e019d7458",
        "inducing_commit_hash_pyszz": [
            "206c9cd4bf9cbc96b812e81cdca1c16b4e7bc4c7"
        ],
        "inducing_commit_hash_pd": [
            "f485bc89b3895f95082499b8320636849c274ccf",
            "56fafbe79924606a121c3b5e6a990193c3a5a319",
            "48d7f25d2d0fab873967c7e678f2c067f9e42e99",
            "04ec41354a342d5cd861b1652e3320f5bfa39911",
            "41c303a6bf067eec9ff3b110bafabda2e39bd4f1",
            "206c9cd4bf9cbc96b812e81cdca1c16b4e7bc4c7"
        ],
        "matched": [
            "206c9cd4bf9cbc96b812e81cdca1c16b4e7bc4c7"
        ]
    },
    {
        "repo_name": "cortexproject/cortex",
        "CVE_ID": "CVE-2021-36157",
        "Problem_Type": "CWE-22",
        "Description": "An issue was discovered in Grafana Cortex through 1.9.0. The header value X-Scope-OrgID is used to construct file paths for rules files, and if crafted to conduct directory traversal such as ae ../../sensitive/path/in/deployment pathname, then Cortex will attempt to parse a rules file at that location and include some of the contents in the error message. (Other Cortex API requests can also be sent a malicious OrgID header, e.g., tricking the ingester into writing metrics to a different location, but the effect is nuisance rather than information disclosure.)",
        "URL": "https://github.com/cortexproject/cortex/pull/4375",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d9e1f81f40c607b9e97c2fc6db70ae54679917c4",
        "inducing_commit_hash_pyszz": [
            "04a6011b17def800bc6329d589c57d7a3599972b"
        ],
        "inducing_commit_hash_pd": [
            "b7a062f0be3da86d4e12fa6a0d374897855290d6",
            "04a6011b17def800bc6329d589c57d7a3599972b"
        ],
        "matched": [
            "04a6011b17def800bc6329d589c57d7a3599972b"
        ]
    },
    {
        "repo_name": "cosmos/ethermint",
        "CVE_ID": "CVE-2021-25835",
        "Problem_Type": "CWE-294",
        "Description": "Cosmos Network Ethermint <= v0.4.0 is affected by a cross-chain transaction replay vulnerability in the EVM module. Since ethermint uses the same chainIDEpoch and signature schemes with ethereum for compatibility, a verified signature in ethereum is still valid in ethermint with the same msg content and chainIDEpoch, which enables \"cross-chain transaction replay\" attack.",
        "URL": "https://github.com/cosmos/ethermint/pull/692",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d7bdbd7488644f0aaeee5cdcdc119c863f199f72",
        "inducing_commit_hash_pyszz": [
            "cb96bc4ea337f153245d744725fc44a9207677b4"
        ],
        "inducing_commit_hash_pd": [
            "7f648d2c55a3420c47df9722f57dd9d4c238bdac",
            "4501bbccdc8c99532372698d4f48bc66f7de2843",
            "cb96bc4ea337f153245d744725fc44a9207677b4"
        ],
        "matched": [
            "cb96bc4ea337f153245d744725fc44a9207677b4"
        ]
    },
    {
        "repo_name": "crossbario/autobahn-python",
        "CVE_ID": "CVE-2020-35678",
        "Problem_Type": "CWE-601",
        "Description": "Autobahn|Python before 20.12.3 allows redirect header injection.",
        "URL": "https://github.com/crossbario/autobahn-python/pull/1439",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f7b7ad5c1066bdcc551775b73da15dca5c111623",
        "inducing_commit_hash_pyszz": [
            "09a15133fe72451ae5f4a21cbd5178fee3c540c1"
        ],
        "inducing_commit_hash_pd": [
            "09a15133fe72451ae5f4a21cbd5178fee3c540c1"
        ],
        "matched": [
            "09a15133fe72451ae5f4a21cbd5178fee3c540c1"
        ]
    },
    {
        "repo_name": "crypto-org-chain/cronos",
        "CVE_ID": "CVE-2021-43839",
        "Problem_Type": "CWE-670",
        "Description": "Cronos is a commercial implementation of a blockchain. In Cronos nodes running versions before v0.6.5, it is possible to take transaction fees from Cosmos SDK's FeeCollector for the current block by sending a custom crafted MsgEthereumTx. This problem has been patched in Cronos v0.6.5. There are no tested workarounds. All validator node operators are recommended to upgrade to Cronos v0.6.5 at their earliest possible convenience.",
        "URL": "https://github.com/crypto-org-chain/cronos/pull/270",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "150ef237b37ac28c8136e1c0f494932860b9ebe8",
        "inducing_commit_hash_pyszz": [
            "10cda16653c64a7048acd232166a0a7489c6d584"
        ],
        "inducing_commit_hash_pd": [
            "10cda16653c64a7048acd232166a0a7489c6d584"
        ],
        "matched": [
            "10cda16653c64a7048acd232166a0a7489c6d584"
        ]
    },
    {
        "repo_name": "ctripcorp/apollo",
        "CVE_ID": "CVE-2020-15170",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "apollo-adminservice before version 1.7.1 does not implement access controls. If users expose apollo-adminservice to internet(which is not recommended), there are potential security issues since apollo-adminservice is designed to work in intranet and it doesn't have access control built-in. Malicious hackers may access apollo-adminservice apis directly to access/edit the application's configurations. To fix the potential issue without upgrading, simply follow the advice that do not expose apollo-adminservice to internet.",
        "URL": "https://github.com/ctripcorp/apollo/pull/3233/commits/ae9ba6cfd32ed80469f162e5e3583e2477862ddf",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ff6ddd47f9be87ad77a6a169cc46996cc5d89dd",
        "inducing_commit_hash_pyszz": [
            "04c94da1997f3d1500ee3b4b57602f91687b70f7"
        ],
        "inducing_commit_hash_pd": [
            "847b949bdf9f1d0b909605ea7fb917d920ffbaf0",
            "d9275527670ec22ae1aae2b8d1e298b6ebd65462",
            "7ccb24471d3956d69fd22353d4908684ca0201db",
            "04c94da1997f3d1500ee3b4b57602f91687b70f7",
            "b2b9dcd0a214056d8c1e2ca3791941f19f73904e",
            "32aac0bd066a0f9a38253646ad2a195ca7d2ff35",
            "42edb9da963df986538edcda4ff58d474fb3abed",
            "a81d7287014ab8bfc327040a66ac8a5d5510b7e9",
            "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
            "7f6ed42bef207b514dcaf9fae8a0fc8554ca1b35",
            "72923ce6eaf47a51d41ad3656795cf83b28430e1"
        ],
        "matched": [
            "04c94da1997f3d1500ee3b4b57602f91687b70f7"
        ]
    },
    {
        "repo_name": "cuberite/cuberite",
        "CVE_ID": "CVE-2019-15516",
        "Problem_Type": "CWE-22",
        "Description": "Cuberite before 2019-06-11 allows webadmin directory traversal via ....// because the protection mechanism simply removes one ../ substring.",
        "URL": "https://github.com/cuberite/cuberite/pull/4341",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "85006d10f5b4f8fb2e95be479d0b7c28a42d1d46",
        "inducing_commit_hash_pyszz": [
            "af8c96026d458481543ead176bd15651857826bd"
        ],
        "inducing_commit_hash_pd": [
            "af8c96026d458481543ead176bd15651857826bd",
            "017235e15ccdfca901d63793c5544626e730ec48"
        ],
        "matched": [
            "af8c96026d458481543ead176bd15651857826bd"
        ]
    },
    {
        "repo_name": "cyface/django-termsandconditions",
        "CVE_ID": "CVE-2022-4589",
        "Problem_Type": "CWE-601",
        "Description": "A vulnerability has been found in cyface Terms and Conditions Module up to 2.0.9 and classified as problematic. Affected by this vulnerability is the function returnTo of the file termsandconditions/views.py. The manipulation leads to open redirect. The attack can be launched remotely. Upgrading to version 2.0.10 is able to address this issue. The name of the patch is 03396a1c2e0af95e12a45c5faef7e47a4b513e1a. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216175.",
        "URL": "https://github.com/cyface/django-termsandconditions/pull/239",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "03396a1c2e0af95e12a45c5faef7e47a4b513e1a",
        "inducing_commit_hash_pyszz": [
            "0a0f7ac5ded705d4083a0ffa0db4909557412d04"
        ],
        "inducing_commit_hash_pd": [
            "9b42f29f8174f11ee727d04d8396046d1b3e9d0e",
            "0a0f7ac5ded705d4083a0ffa0db4909557412d04"
        ],
        "matched": [
            "0a0f7ac5ded705d4083a0ffa0db4909557412d04"
        ]
    },
    {
        "repo_name": "DaSchTour/matomo-mediawiki-extension",
        "CVE_ID": "CVE-2017-20175",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in DaSchTour matomo-mediawiki-extension up to 2.4.2 on MediaWiki. This affects an unknown part of the file Piwik.hooks.php of the component Username Handler. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 2.4.3 is able to address this issue. The patch is named 681324e4f518a8af4bd1f93867074c728eb9923d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-220203.",
        "URL": "https://github.com/DaSchTour/matomo-mediawiki-extension/pull/17",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "681324e4f518a8af4bd1f93867074c728eb9923d",
        "inducing_commit_hash_pyszz": [
            "011b327d430fcf2cca1eb3180b56b74af8274beb"
        ],
        "inducing_commit_hash_pd": [
            "011b327d430fcf2cca1eb3180b56b74af8274beb",
            "ad2591c52963ceb02bfdb2001ee75ba7a1e581eb"
        ],
        "matched": [
            "011b327d430fcf2cca1eb3180b56b74af8274beb"
        ]
    },
    {
        "repo_name": "DataDog/guarddog",
        "CVE_ID": "CVE-2022-23531",
        "Problem_Type": "CWE-22",
        "Description": "GuardDog is a CLI tool to identify malicious PyPI packages. Versions prior to 0.1.5 are vulnerable to Relative Path Traversal when scanning a specially-crafted local PyPI package. Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed due to a path traversal vulnerability when extracting the .tar.gz file of the package being scanned, which exists by design in the tarfile.TarFile.extractall function. This issue is patched in version 0.1.5.",
        "URL": "https://github.com/DataDog/guarddog/pull/89/commits/a56aff58264cb6b7855d71b00dc10c39a5dbd306",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "98af5c8c1e9c15fa888c900252e76116b0ec25d1",
        "inducing_commit_hash_pyszz": [
            "1c517ffafcf8907b159146ae51d897cd3bcddbfe"
        ],
        "inducing_commit_hash_pd": [
            "ec34524ef25033eaf463779bc1c241dd7edaf63d",
            "fb5e142bd03c563ada77828ba2293e6c8db01386",
            "d18e306832423705326a65f69ec298528c90e9fd",
            "1c517ffafcf8907b159146ae51d897cd3bcddbfe",
            "0a79b79ed7fb2f5b4e16e355eb5b2f6c845b5c06",
            "b36c5fa25c64032899dcc376247c44bf7db1d0bb"
        ],
        "matched": [
            "1c517ffafcf8907b159146ae51d897cd3bcddbfe"
        ]
    },
    {
        "repo_name": "datahub-project/datahub",
        "CVE_ID": "CVE-2024-22409",
        "Problem_Type": "CWE-276",
        "Description": "DataHub is an open-source metadata platform. In affected versions a low privileged user could remove a user, edit group members, or edit another user's profile information. The default privileges gave too many broad permissions to low privileged users. These have been constrained in PR #9067 to prevent abuse. This issue can result in privilege escalation for lower privileged users up to admin privileges, potentially, if a group with admin privileges exists. May not impact instances that have modified default privileges. This issue has been addressed in datahub version 0.12.1. Users are advised to upgrade.",
        "URL": "https://github.com/datahub-project/datahub/pull/9067",
        "Tag": "['Patch']",
        "fix_commit_hash": "582eebe739ef7f8fc7651a78eee9306143360b68",
        "inducing_commit_hash_pyszz": [
            "80f0fdee98688619d43adaf2d37b20a538cde8e2"
        ],
        "inducing_commit_hash_pd": [
            "43deb7080af17486f66a7b1249af17035e595494",
            "944be9a1da17b06ebc3ec6accd985c3ad57f52f8",
            "7fef9a514aa8ca7224d524d3d6b9c51917425521",
            "ea92b86e6ab4cbb18742fb8db6bc11fae8970cdb",
            "ccb09a69669e24624afbeca486220aa106dabfb7",
            "73cd2f995d2cec182ed399621dbb672f3c058ebf",
            "902929293d3745489d5cfca89e0fc9863dfce3c5",
            "f49666a230a87f82858ba5bea7e2ed087b1947d5",
            "fdee7a787bdd90dd0825b54e4737649b15b738c8",
            "80f0fdee98688619d43adaf2d37b20a538cde8e2",
            "0ff7bea0430655673055d15bf45691b22791256b",
            "df69e762895b39d3d06d40e7a7965a057f76d32a",
            "8002fd8eb6493582af4c2d7aa4c7520258fb34d8",
            "2ef26e8b740cc2392a933468fe689c9c7f075f04",
            "e12d910648267701e5146355e71f2658e83719f7"
        ],
        "matched": [
            "80f0fdee98688619d43adaf2d37b20a538cde8e2"
        ]
    },
    {
        "repo_name": "debug-js/debug",
        "CVE_ID": "CVE-2017-20165",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The identifier of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability.",
        "URL": "https://github.com/debug-js/debug/pull/504",
        "Tag": "['Patch']",
        "fix_commit_hash": "c38a0166c266a679c8de012d4eaccec3f944e685",
        "inducing_commit_hash_pyszz": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ],
        "inducing_commit_hash_pd": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ],
        "matched": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ]
    },
    {
        "repo_name": "deis/workflow-manager",
        "CVE_ID": "CVE-2016-15036",
        "Problem_Type": "CWE-362",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Deis Workflow Manager up to 2.3.2. It has been classified as problematic. This affects an unknown part. The manipulation leads to race condition. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 2.3.3 is able to address this issue. The patch is named 31fe3bccbdde134a185752e53380330d16053f7f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-248847. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/deis/workflow-manager/pull/94",
        "Tag": "['Patch']",
        "fix_commit_hash": "31fe3bccbdde134a185752e53380330d16053f7f",
        "inducing_commit_hash_pyszz": [
            "16c821d05dd0d514b97d52a3e74decdf41c18a00"
        ],
        "inducing_commit_hash_pd": [
            "84206b2cac6e5065b6c0bda84a269f1582a06b66"
        ],
        "matched": [
            "16c821d05dd0d514b97d52a3e74decdf41c18a00"
        ]
    },
    {
        "repo_name": "denoland/deno",
        "CVE_ID": "CVE-2023-26103",
        "Problem_Type": "CWE-1333",
        "Description": "Versions of the package deno before 1.31.0 are vulnerable to Regular Expression Denial of Service (ReDoS) due to the upgradeWebSocket function, which contains regexes in the form of /s*,s*/, used for splitting the Connection/Upgrade header. A specially crafted Connection/Upgrade header can be used to significantly slow down a web socket server.\n\n",
        "URL": "https://github.com/denoland/deno/pull/17722",
        "Tag": "['Patch']",
        "fix_commit_hash": "cf06a7c7e672880e1b38598fe445e2c50b4a9d06",
        "inducing_commit_hash_pyszz": [
            "6268703487da02d66552d1e1a42858aa273def90"
        ],
        "inducing_commit_hash_pd": [
            "6268703487da02d66552d1e1a42858aa273def90",
            "74c7559d2029539eb6ab7459c06061c00b3e0c1a"
        ],
        "matched": [
            "6268703487da02d66552d1e1a42858aa273def90"
        ]
    },
    {
        "repo_name": "denosaurs/emoji",
        "CVE_ID": "CVE-2023-30858",
        "Problem_Type": "CWE-1333",
        "Description": "The Denosaurs emoji package provides emojis for dinosaurs. Starting in version 0.1.0 and prior to version 0.3.0, the reTrimSpace regex has 2nd degree polynomial inefficiency, leading to a delayed response given a big payload. The issue has been patched in 0.3.0. As a workaround, avoid using the `replace`, `unemojify`, or `strip` functions.",
        "URL": "https://github.com/denosaurs/emoji/pull/11",
        "Tag": "['Patch']",
        "fix_commit_hash": "a61ec134727eb9c7ede85ebad89e0d20074ead7c",
        "inducing_commit_hash_pyszz": [
            "a0cb846f6a0a8e8256ff787e56ea6531d0a93d88"
        ],
        "inducing_commit_hash_pd": [
            "9352224eafb390f1b336593d8e1253b07daff5f6",
            "e8d11b0e85fd6c92f92ad654e892fc21892cddbc",
            "a0cb846f6a0a8e8256ff787e56ea6531d0a93d88"
        ],
        "matched": [
            "a0cb846f6a0a8e8256ff787e56ea6531d0a93d88"
        ]
    },
    {
        "repo_name": "dexidp/dex",
        "CVE_ID": "CVE-2024-23656",
        "Problem_Type": "CWE-326",
        "Description": "Dex is an identity service that uses OpenID Connect to drive authentication for other apps. Dex 2.37.0 serves HTTPS with insecure TLS 1.0 and TLS 1.1. `cmd/dex/serve.go` line 425 seemingly sets TLS 1.2 as minimum version, but the whole `tlsConfig` is ignored after `TLS cert reloader` was introduced in v2.37.0. Configured cipher suites are not respected either. This issue is fixed in Dex 2.38.0.",
        "URL": "https://github.com/dexidp/dex/pull/2964",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "074ee4f964144116b71b3fbff5fa44b542fd94d0",
        "inducing_commit_hash_pyszz": [
            "9cffca70f2e6cbe58db47603637404918c5f4716"
        ],
        "inducing_commit_hash_pd": [
            "f0186ff2651e83c8097d79b96ee9cc71c2dbaf38",
            "d9487e553bf5bc9347f76a96eebf37fbca3bd6cc",
            "50086e68638ab4995dfd2a3cd36a7274515d4083",
            "42dfd3ecec40b551d903edeb524b3f9277abe1a5",
            "46f48b33a10426405a78d3dc9d60ade74e0436b2",
            "9cffca70f2e6cbe58db47603637404918c5f4716",
            "59f8b02d473782f56a62005ef30e58851116ce8e"
        ],
        "matched": [
            "9cffca70f2e6cbe58db47603637404918c5f4716"
        ]
    },
    {
        "repo_name": "dfinity/candid",
        "CVE_ID": "CVE-2023-6245",
        "Problem_Type": "CWE-835",
        "Description": "The Candid library causes a Denial of Service while \nparsing a specially crafted payload with 'empty' data type. For example,\n if the payload is `record { * ; empty }` and the canister interface expects `record { * }` then the Rust candid decoder treats empty as an extra field required by the type.  The problem with the type empty is that the candid Rust library wrongly categorizes empty as a recoverable error when skipping the field and thus causing an infinite decoding loop.\n\n\nCanisters using affected versions of candid\n are exposed to denial of service by causing the decoding to run \nindefinitely until the canister traps due to reaching maximum \ninstruction limit per execution round. Repeated exposure to the payload \nwill result in degraded performance of the canister. Note: Canisters written in Motoko are unaffected.\n\n\n\n",
        "URL": "https://github.com/dfinity/candid/pull/478",
        "Tag": "['Patch']",
        "fix_commit_hash": "b233dbc2d2bcc79c9fc574dd5968269df680b073",
        "inducing_commit_hash_pyszz": [
            "a8322be53bfced317bdf4ffff5dbc428d24dc612"
        ],
        "inducing_commit_hash_pd": [
            "a8322be53bfced317bdf4ffff5dbc428d24dc612",
            "ea2c72f57e4b1cde99fad3b61308c0e979a65e3a",
            "3dc90282aac93aa76cc68ed7099f585dfa4525f7"
        ],
        "matched": [
            "a8322be53bfced317bdf4ffff5dbc428d24dc612"
        ]
    },
    {
        "repo_name": "dgraph-io/dgraph",
        "CVE_ID": "CVE-2023-31135",
        "Problem_Type": "CWE-326",
        "Description": "Dgraph is an open source distributed GraphQL database. Existing Dgraph audit logs are vulnerable to brute force attacks due to nonce collisions. The first 12 bytes come from a baseIv which is initialized when an audit log is created. The last 4 bytes come from the length of the log line being encrypted. This is problematic because two log lines will often have the same length, so due to these collisions we are reusing the same nonce many times. All audit logs generated by versions of Dgraph <v23.0.0 are affected. Attackers must have access to the system the logs are stored on. Dgraph users should upgrade to v23.0.0. Users unable to upgrade should store existing audit logs in a secure location and for extra security, encrypt using an external tool like `gpg`.",
        "URL": "https://github.com/dgraph-io/dgraph/pull/8323",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9e723adfd3ddc2a1c9feda6c352ea35acc923bfd",
        "inducing_commit_hash_pyszz": [
            "6770abb62baaa67b824c8d5b9c12e80edeff45fe"
        ],
        "inducing_commit_hash_pd": [
            "be9ce74e8c7dac0b0fa856e447a5fa6736022f50",
            "f893f96f389218fe26bc638828d7fa57c61afec8",
            "b85ff4ef5547a12572a8cb1730721d84ffbc468d",
            "4e4842624d26bb24caa08019d7be834bc59e282b",
            "a43743c773362c4261f7766a41f9f15a88ee100a",
            "e0af8b163e888642cf075fe3e9f1ffb62a8395b4",
            "2f053bf9002a2e842e71db994057caf51d7176eb"
        ],
        "matched": [
            "6770abb62baaa67b824c8d5b9c12e80edeff45fe"
        ]
    },
    {
        "repo_name": "dhis2/dhis2-core",
        "CVE_ID": "CVE-2021-39179",
        "Problem_Type": "CWE-89",
        "Description": "DHIS 2 is an information system for data capture, management, validation, analytics and visualization. A SQL Injection vulnerability in the Tracker component in DHIS2 Server allows authenticated remote attackers to execute arbitrary SQL commands via unspecified vectors. This vulnerability affects the `/api/trackedEntityInstances` and `/api/trackedEntityInstances/query` API endpoints in all DHIS2 versions 2.34, 2.35, and 2.36. It also affects versions 2.32 and 2.33 which have reached _end of support_ - exceptional security updates have been added to the latest *end of support* builds for these versions. Versions 2.31 and older are unaffected. The system is vulnerable to attack only from users that are logged in to DHIS2, and there is no known way of exploiting the vulnerability without first being logged in as a DHIS2 user. The vulnerability is not exposed to a non-malicious user - the vulnerability requires a conscious attack to be exploited. A successful exploit of this vulnerability could allow the malicious user to read, edit and delete data in the DHIS2 instance. There are no known exploits of the security vulnerabilities addressed by these patch releases. Security patches are available in DHIS2 versions 2.32-EOS, 2.33-EOS, 2.34.7, 2.35.7, and 2.36.4. There is no straightforward known workaround for DHIS2 instances using the Tracker functionality other than upgrading the affected DHIS2 server to one of the patches in which this vulnerability has been fixed. For implementations which do NOT use Tracker functionality, it may be possible to block all network access to POST to the `/api/trackedEntityInstances`, and `/api/trackedEntityInstances/query` endpoints as a temporary workaround while waiting to upgrade.",
        "URL": "https://github.com/dhis2/dhis2-core/pull/8771",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "16674ac75127b0e83691c6b1c9ce745e67ab58b6",
        "inducing_commit_hash_pyszz": [
            "0e50dc49af9cf60f26745d83972e69807413b09c"
        ],
        "inducing_commit_hash_pd": [
            "0e50dc49af9cf60f26745d83972e69807413b09c",
            "0888f55a0f2272e80a7044dc959f93679636f74f"
        ],
        "matched": [
            "0e50dc49af9cf60f26745d83972e69807413b09c"
        ]
    },
    {
        "repo_name": "dhis2/dhis2-core",
        "CVE_ID": "CVE-2022-24848",
        "Problem_Type": "CWE-89",
        "Description": "DHIS2 is an information system for data capture, management, validation, analytics and visualization. A SQL injection security vulnerability affects the `/api/programs/orgUnits?programs=` API endpoint in DHIS2 versions prior to 2.36.10.1 and 2.37.6.1. The system is vulnerable to attack only from users that are logged in to DHIS2, and there is no known way of exploiting the vulnerability without first being logged in as a DHIS2 user. The vulnerability is not exposed to a non-malicious user and requires a conscious attack to be exploited. A successful exploit of this vulnerability could allow the malicious user to read, edit and delete data in the DHIS2 instance's database. Security patches are now available for DHIS2 versions 2.36.10.1 and 2.37.6.1. One may apply mitigations at the web proxy level as a workaround. More information about these mitigations is available in the GitHub Security Advisory.",
        "URL": "https://github.com/dhis2/dhis2-core/pull/10953",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9a16b53d63ff2fba2740ad2aad59693006e728e0",
        "inducing_commit_hash_pyszz": [
            "0194e8f4a613218929ed537a92a1e72502b27010"
        ],
        "inducing_commit_hash_pd": [
            "0194e8f4a613218929ed537a92a1e72502b27010"
        ],
        "matched": [
            "0194e8f4a613218929ed537a92a1e72502b27010"
        ]
    },
    {
        "repo_name": "dilab/resumable.php",
        "CVE_ID": "CVE-2023-52086",
        "Problem_Type": "CWE-434",
        "Description": "resumable.php (aka PHP backend for resumable.js) 0.1.4 before 3c6dbf5 allows arbitrary file upload anywhere in the filesystem via ../ in multipart/form-data content to upload.php. (File overwrite hasn't been possible with the code available in GitHub in recent years, however.)",
        "URL": "https://github.com/dilab/resumable.php/pull/39/commits/d3552efd403e2d87407934477eee642836cab3b4",
        "Tag": "['Patch']",
        "fix_commit_hash": "d3552efd403e2d87407934477eee642836cab3b4",
        "inducing_commit_hash_pyszz": [
            "8679f55545ae96cd7eea8f12d4bbfff83cf0073c"
        ],
        "inducing_commit_hash_pd": [
            "43e884aa6f33c5be6e81172deae7b860cab372c7",
            "899daa875ebbf1e7d5680b1c6e16efa3f63ded5f",
            "8679f55545ae96cd7eea8f12d4bbfff83cf0073c",
            "6f2302a52fdca8898aa28dba1bdfe3bc84193324",
            "c65f46874b9013f9f4df474587af4f7199d3e795",
            "9a286b646cb40ec924044bed9e5cdd5d21eeaa45"
        ],
        "matched": [
            "8679f55545ae96cd7eea8f12d4bbfff83cf0073c"
        ]
    },
    {
        "repo_name": "dilab/resumable.php",
        "CVE_ID": "CVE-2023-52086",
        "Problem_Type": "CWE-434",
        "Description": "resumable.php (aka PHP backend for resumable.js) 0.1.4 before 3c6dbf5 allows arbitrary file upload anywhere in the filesystem via ../ in multipart/form-data content to upload.php. (File overwrite hasn't been possible with the code available in GitHub in recent years, however.)",
        "URL": "https://github.com/dilab/resumable.php/pull/27/commits/3e3c94d0302bb399a7611b4738a5a4dd0832a926",
        "Tag": "['Patch']",
        "fix_commit_hash": "3e3c94d0302bb399a7611b4738a5a4dd0832a926",
        "inducing_commit_hash_pyszz": [
            "b8f5a7a7ab68968d6670dd059d99993c88590d34"
        ],
        "inducing_commit_hash_pd": [
            "b8f5a7a7ab68968d6670dd059d99993c88590d34"
        ],
        "matched": [
            "b8f5a7a7ab68968d6670dd059d99993c88590d34"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2022-24814",
        "Problem_Type": "CWE-79",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. Prior to version 9.7.0, unauthorized JavaScript (JS) can be executed by inserting an iframe into the rich text html interface that links to a file uploaded HTML file that loads another uploaded JS file in its script tag. This satisfies the regular content security policy header, which in turn allows the file to run any arbitrary JS. This issue was resolved in version 9.7.0. As a workaround, disable the live embed in the what-you-see-is-what-you-get by adding `{ \"media_live_embeds\": false }` to the _Options Overrides_ option of the Rich Text HTML interface.",
        "URL": "https://github.com/directus/directus/pull/12020",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8df6d96531fea4ee747594d0b047d2a676714be",
        "inducing_commit_hash_pyszz": [
            "ec86d5412d45136915d9b622b4a890dd26932b10"
        ],
        "inducing_commit_hash_pd": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0",
            "29b0fb9b8b68cc6ab3d42a368817d6d34f94f730",
            "7833160348967e0b5d61d29965bac3fb4d25a519",
            "ec86d5412d45136915d9b622b4a890dd26932b10"
        ],
        "matched": [
            "ec86d5412d45136915d9b622b4a890dd26932b10"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2022-26969",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Directus before 9.7.0, the default settings of CORS_ORIGIN and CORS_ENABLED are true.",
        "URL": "https://github.com/directus/directus/pull/12022",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "826404bcbe769f9bcd526baec41e696237b78ebb",
        "inducing_commit_hash_pyszz": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0"
        ],
        "inducing_commit_hash_pd": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0",
            "606f81dd0bc4b50235c0cf3f5f7761691986e5fa",
            "7830453cfc8bc053c6f64fe2f13de5b098244329"
        ],
        "matched": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-27474",
        "Problem_Type": "CWE-79",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. Instances relying on an allow-listed reset URL are vulnerable to an HTML injection attack through the use of query parameters in the reset URL. An attacker could exploit this to email users urls to the servers domain but which may contain malicious code. The problem has been resolved and released under version 9.23.0. People relying on a custom password reset URL should upgrade to 9.23.0 or later, or remove the custom reset url from the configured allow list. Users are advised to upgrade. Users unable to upgrade may disable the custom reset URL allow list as a workaround.",
        "URL": "https://github.com/directus/directus/pull/17120",
        "Tag": "['Patch']",
        "fix_commit_hash": "0f9f0d8fc42a269aa2573efd67dd22b069b4fa83",
        "inducing_commit_hash_pyszz": [
            "e259fb496c77a4859fb1523e6e588d970b5ecc1f"
        ],
        "inducing_commit_hash_pd": [
            "7dfc5dc6afa342909179b2835c7fccb4f300a045",
            "e259fb496c77a4859fb1523e6e588d970b5ecc1f"
        ],
        "matched": [
            "e259fb496c77a4859fb1523e6e588d970b5ecc1f"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-27481",
        "Problem_Type": "CWE-200",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. In versions prior to 9.16.0 users with read access to the `password` field in `directus_users` can extract the argon2 password hashes by brute forcing the export functionality combined with a `_starts_with` filter. This allows the user to enumerate the password hashes. Accounts cannot be taken over unless the hashes can be reversed which is unlikely with current hardware. This problem has been patched by preventing any hashed/concealed field to be filtered against with the `_starts_with` or other string operator in version 9.16.0. Users are advised to upgrade. Users unable to upgrade may mitigate this issue by ensuring that no user has `read` access to the `password` field in `directus_users`.",
        "URL": "https://github.com/directus/directus/pull/15010",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3586409a0bcea70cb5e5d27c9e1d1629e4c720e9",
        "inducing_commit_hash_pyszz": [
            "62a19b40d5894e937b1522693b789ac5bf5667a7"
        ],
        "inducing_commit_hash_pd": [
            "92e1ee77bd34118dce69e91c44d9cfcfbd208f37",
            "bf72917a4ce7b47e76cdda095291f62e644a4706",
            "62a19b40d5894e937b1522693b789ac5bf5667a7",
            "9e93342af0a6b0689a6d23ea144a02eb1940d372",
            "246c55266b78ae063408dbc1b04d1797bd85e476",
            "f90c31b798940163da641fbc8659d29222585e13",
            "b2d8b2319ad4777de7b406a85b9f8ed15f8ec756",
            "3dedf1cb3f814a13333d47d7fdba794ae7abede5",
            "933537240046e257d38b41692bffa2ad07c81831"
        ],
        "matched": [
            "62a19b40d5894e937b1522693b789ac5bf5667a7"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-27481",
        "Problem_Type": "CWE-200",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. In versions prior to 9.16.0 users with read access to the `password` field in `directus_users` can extract the argon2 password hashes by brute forcing the export functionality combined with a `_starts_with` filter. This allows the user to enumerate the password hashes. Accounts cannot be taken over unless the hashes can be reversed which is unlikely with current hardware. This problem has been patched by preventing any hashed/concealed field to be filtered against with the `_starts_with` or other string operator in version 9.16.0. Users are advised to upgrade. Users unable to upgrade may mitigate this issue by ensuring that no user has `read` access to the `password` field in `directus_users`.",
        "URL": "https://github.com/directus/directus/pull/14829",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3dedf1cb3f814a13333d47d7fdba794ae7abede5",
        "inducing_commit_hash_pyszz": [
            "b62456fca8b901eaf5a785706299463670288b48"
        ],
        "inducing_commit_hash_pd": [
            "92e1ee77bd34118dce69e91c44d9cfcfbd208f37",
            "79b7fc9d4cc0469507ce6df208357527aa51f0c9"
        ],
        "matched": [
            "b62456fca8b901eaf5a785706299463670288b48"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-38503",
        "Problem_Type": "CWE-863",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. Starting in version 10.3.0 and prior to version 10.5.0, the permission filters (i.e. `user_created IS $CURRENT_USER`) are not properly checked when using GraphQL subscription resulting in unauthorized users getting event on their subscription which they should not be receiving according to the permissions. This can be any collection but out-of-the box the `directus_users` collection is configured with such a permissions filter allowing you to get updates for other users when changes happen. Version 10.5.0 contains a patch. As a workaround, disable GraphQL subscriptions.",
        "URL": "https://github.com/directus/directus/pull/19155",
        "Tag": "['Patch']",
        "fix_commit_hash": "4cc55b86ba5ae318577a79f98f2afb6966289996",
        "inducing_commit_hash_pyszz": [
            "9974cb6050b9c1242e88fd220ae82fe24a2730a5"
        ],
        "inducing_commit_hash_pd": [
            "cfddabd9ee87e60d1f478549099da7197e664a1f"
        ],
        "matched": [
            "9974cb6050b9c1242e88fd220ae82fe24a2730a5"
        ]
    },
    {
        "repo_name": "discourse/discourse-assign",
        "CVE_ID": "CVE-2022-24866",
        "Problem_Type": "CWE-200",
        "Description": "Discourse Assign is a plugin for assigning users to a topic in Discourse, an open-source messaging platform. Prior to version 1.0.1, the UserBookmarkSerializer serialized the whole User / Group object, which leaked some private information. The data was only being serialized to people who could view assignment info, which is limited to staff by default. For the vast majority of sites, this data was only leaked to trusted staff member, but for sites with assign features enabled publicly, the data was accessible to more people than just staff. Version 1.0.1 contains a patch. There are currently no known workarounds.",
        "URL": "https://github.com/discourse/discourse-assign/pull/320",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de36236dbc26744f5b21b7b59a5f7be093b3186c",
        "inducing_commit_hash_pyszz": [
            "1a1dffc5e85eb9fe93b81e20d2a9379e9f008a5f"
        ],
        "inducing_commit_hash_pd": [
            "1a1dffc5e85eb9fe93b81e20d2a9379e9f008a5f",
            "d807491df2d1170dadac7b8c19bbdf49d23dbc6f",
            "c396605d2fc18c6d05743ce3ca750ca8a37ba21b"
        ],
        "matched": [
            "1a1dffc5e85eb9fe93b81e20d2a9379e9f008a5f"
        ]
    },
    {
        "repo_name": "discourse/discourse-calendar",
        "CVE_ID": "CVE-2022-31059",
        "Problem_Type": "CWE-79",
        "Description": "Discourse Calendar is a calendar plugin for Discourse, an open-source messaging app. Prior to version 1.0.1, parsing and rendering of Event names can be susceptible to cross-site scripting (XSS) attacks. This vulnerability only affects sites which have modified or disabled Discourse\u00c2\u2019s default Content Security Policy. This issue is patched in version 1.0.1 of the Discourse Calendar plugin. As a workaround, ensure that the Content Security Policy is enabled, and has not been modified in a way which would make it more vulnerable to XSS attacks.",
        "URL": "https://github.com/discourse/discourse-calendar/pull/280",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2719b9e81994e961bf8c4e12b4556dc9777dd62f",
        "inducing_commit_hash_pyszz": [
            "45712d30b91a21f4bf332da3ccbeae068fecd173"
        ],
        "inducing_commit_hash_pd": [
            "5665832fe75997ae57e959d897cbdf28dcb99743",
            "45712d30b91a21f4bf332da3ccbeae068fecd173",
            "2f45fd7633094c076f39d14229b69a4601499ce5"
        ],
        "matched": [
            "45712d30b91a21f4bf332da3ccbeae068fecd173"
        ]
    },
    {
        "repo_name": "discourse/discourse-chat",
        "CVE_ID": "CVE-2022-36057",
        "Problem_Type": "CWE-79",
        "Description": "Discourse-Chat is an asynchronous messaging plugin for the Discourse open-source discussion platform. Users of Discourse Chat can be affected by admin users inserting HTML into chat titles and descriptions, causing a Cross-Site Scripting (XSS) attack. Version 0.9 contains a patch for this issue.",
        "URL": "https://github.com/discourse/discourse-chat/pull/1205",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d16780c6faba692006baf0cf07201ea1a433b1a",
        "inducing_commit_hash_pyszz": [
            "44e246b383c6320b0798e6090597b8ba761aee5c"
        ],
        "inducing_commit_hash_pd": [
            "b102d0255bc7a099ca25892a8aab1acdb944030f",
            "791292db2077968cb1bf4f2309eb445d0f3723d3",
            "2a2b62ea91d4e11e96714b8770b9fbe323da5a4b",
            "a3c06974e164e614b8982810d12af89689826db8",
            "f898aa7ff51d457e231c9a4c7098626ee6fcdfe3",
            "472d355dc1b510c82b560bd78a85a77cedab0141",
            "7b44725ebbc01ac17aa7bc7a62e9313a6937b2e0",
            "35154b7c8f93ccb110f0f92d49b2f09a888588a7",
            "0343846dea5c083e13969e97cd0355d56a9fc270",
            "424fc5e1ac4625b997806c01484b357b99b49bc8",
            "58c3a16a8c6be8e66ec2f8ba9c5a39021439212b",
            "ae515c5198d4d44df09f33b461ee2646668f4e0a",
            "3fb370223c05ad90aee0eb4232e261ddb49cd9ac",
            "3541cad4668c636c351d72ce520c2a139f4806b2",
            "4e31929504169cfd2f6b9f128363f932ae296f63",
            "63c914122c8c958a54b8de7634fc6d916c622baa",
            "c0fb68729bc7b3d28cfba02409517503b432f4ef",
            "1389d41a1abbc10c12c2d029a4e087119a051b02",
            "44e246b383c6320b0798e6090597b8ba761aee5c",
            "99ace596225b42e7ee7d9d54195bb75bc9643923"
        ],
        "matched": [
            "44e246b383c6320b0798e6090597b8ba761aee5c"
        ]
    },
    {
        "repo_name": "discourse/discourse-jira",
        "CVE_ID": "CVE-2023-44384",
        "Problem_Type": "CWE-918",
        "Description": "Discourse-jira is a Discourse plugin allows Jira projects, issue types, fields and field options will be synced automatically. An administrator user can make an SSRF attack by setting the Jira URL to an arbitrary location and enabling the `discourse_jira_verbose_log` site setting. A moderator user could manipulate the request path to the Jira API, allowing them to perform arbitrary GET requests using the Jira API credentials, potentially with elevated permissions, used by the application. ",
        "URL": "https://github.com/discourse/discourse-jira/pull/50",
        "Tag": "['Patch']",
        "fix_commit_hash": "8a2d3ad228883199fd5f081cc93d173c88e2e48f",
        "inducing_commit_hash_pyszz": [
            "75a1cd53c5c99f0fee526ca8f655d9dbcb64c431"
        ],
        "inducing_commit_hash_pd": [
            "ed04ef2606a967a7f1af57cbcb47ae0f24d17dbb",
            "9ae23f536423f26266f6b374d52b591aaf5ef501",
            "2562de21fe3c2fac7e0dab2c2a1d9c108273bc96",
            "75a1cd53c5c99f0fee526ca8f655d9dbcb64c431"
        ],
        "matched": [
            "75a1cd53c5c99f0fee526ca8f655d9dbcb64c431"
        ]
    },
    {
        "repo_name": "discourse/discourse-mermaid-theme-component",
        "CVE_ID": "CVE-2022-46180",
        "Problem_Type": "CWE-79",
        "Description": "Discourse Mermaid (discourse-mermaid-theme-component) allows users of Discourse, open-source forum software, to create graphs using the Mermaid syntax. Users of discourse-mermaid-theme-component version 1.0.0 who can create posts are able to inject arbitrary HTML on that post. The issue has been fixed on the `main` branch of the GitHub repository, with 1.1.0 named as a patched version. Admins can update the theme component through the admin UI. As a workaround, admins can temporarily disable discourse-mermaid-theme-component.",
        "URL": "https://github.com/discourse/discourse-mermaid-theme-component/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c10bc4a08bf865cee20e5d5dffba535762813f0f",
        "inducing_commit_hash_pyszz": [
            "de76512840fe893f1412ed426978a40b13310352"
        ],
        "inducing_commit_hash_pd": [
            "de76512840fe893f1412ed426978a40b13310352",
            "57b35ac13a441d87207c5c29f2fb91b221fec72c"
        ],
        "matched": [
            "de76512840fe893f1412ed426978a40b13310352"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2019-15515",
        "Problem_Type": "CWE-352",
        "Description": "Discourse 2.3.2 sends the CSRF token in the query string.",
        "URL": "https://github.com/discourse/discourse/pull/8026",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d59746cdc1c5b5aec36829882fb3ae952dc32eb8",
        "inducing_commit_hash_pyszz": [
            "bb3fb37650e05b5087f5630a1ac0f50068b6d8c2"
        ],
        "inducing_commit_hash_pd": [
            "03a7d532cf8f09b12573b21ef013c21100d52728",
            "44391ee8ab7431ca572b6c340d6e770cdadd51b3",
            "84d4c81a26bb585f67809c6f8af25c2a385de754"
        ],
        "matched": [
            "bb3fb37650e05b5087f5630a1ac0f50068b6d8c2"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2020-24327",
        "Problem_Type": "CWE-918",
        "Description": "Server Side Request Forgery (SSRF) vulnerability exists in Discourse 2.3.2 and 2.6 via the email function. When writing an email in an editor, you can upload pictures of remote websites.",
        "URL": "https://github.com/discourse/discourse/pull/10509",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f043dc89accf920adb3724fd9b2197b29953cdb",
        "inducing_commit_hash_pyszz": [
            "5fc5a7f5ae8c3cf1a89c1a685258e9e942de1508"
        ],
        "inducing_commit_hash_pd": [
            "5fc5a7f5ae8c3cf1a89c1a685258e9e942de1508"
        ],
        "matched": [
            "5fc5a7f5ae8c3cf1a89c1a685258e9e942de1508"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2021-41095",
        "Problem_Type": "CWE-79",
        "Description": "Discourse is an open source discussion platform. There is a cross-site scripting (XSS) vulnerability in versions 2.7.7 and earlier of the `stable` branch, versions 2.8.0.beta6 and earlier of the `beta` branch, and versions 2.8.0.beta6 and earlier of the `tests-passed` branch. Rendering of some error messages that contain user input can be susceptible to XSS attacks. This vulnerability only affects sites which have blocked watched words that contain HTML tags, modified or disabled Discourse's default Content Security Policy. This issue is patched in the latest `stable`, `beta` and `tests-passed` versions of Discourse. As a workaround, avoid modifying or disabling Discourse\u00c2\u2019s default Content Security Policy, and blocking watched words containing HTML tags.",
        "URL": "https://github.com/discourse/discourse/pull/14434/commits/40b776b9d39c41d9273d01eecf8fe03aa39fcb59",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1f57b29147f570178d4317cca9e61449d7c62856",
        "inducing_commit_hash_pyszz": [
            "f331b5eab28be2654db7b8f99ea105b0b58c6a0f"
        ],
        "inducing_commit_hash_pd": [
            "f331b5eab28be2654db7b8f99ea105b0b58c6a0f",
            "f14c6d81f498e94654388df2ff132b18c5156c3d"
        ],
        "matched": [
            "f331b5eab28be2654db7b8f99ea105b0b58c6a0f"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-23548",
        "Problem_Type": "CWE-1333",
        "Description": "Discourse is an option source discussion platform. Prior to version 2.8.14 on the `stable` branch and version 2.9.0.beta16 on the `beta` and `tests-passed` branches, parsing posts can be susceptible to regular expression denial of service (ReDoS) attacks. This issue is patched in versions 2.8.14 and 2.9.0.beta16. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/19737",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "918dd4d63596ac5ea1ae5f9a55d1533e2400db5c",
        "inducing_commit_hash_pyszz": [
            "f8ded9cec9255a297d988b821dc596e133d86d78"
        ],
        "inducing_commit_hash_pd": [
            "f8ded9cec9255a297d988b821dc596e133d86d78",
            "bb93a345eb3e33c51852ea92510293a19598fa61"
        ],
        "matched": [
            "f8ded9cec9255a297d988b821dc596e133d86d78"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-23641",
        "Problem_Type": "CWE-835",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.1 in the `stable` branch, 2.9.0.beta2 in the `beta` branch, and 2.9.0.beta2 in the `tests-passed` branch, users can trigger a Denial of Service attack by posting a streaming URL. Parsing Oneboxes in the background job trigger an infinite loop, which cause memory leaks. This issue is patched in version 2.8.1 of the `stable` branch, 2.9.0.beta2 of the `beta` branch, and 2.9.0.beta2 of the `tests-passed` branch. As a workaround, disable onebox in admin panel completely or specify allow list of domains that will be oneboxed.",
        "URL": "https://github.com/discourse/discourse/pull/15927",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a34075d205a8857e29574ffd82aaece0c467565e",
        "inducing_commit_hash_pyszz": [
            "53abcd825d2abbd2065796c974314f0952b26041"
        ],
        "inducing_commit_hash_pd": [
            "53abcd825d2abbd2065796c974314f0952b26041",
            "68d0916eb53a44e7a5b4e7c9f57277a647dfa45d"
        ],
        "matched": [
            "53abcd825d2abbd2065796c974314f0952b26041"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-24782",
        "Problem_Type": "CWE-200",
        "Description": "Discourse is an open source discussion platform. Versions 2.8.2 and prior in the `stable` branch, 2.9.0.beta3 and prior in the `beta` branch, and 2.9.0.beta3 and prior in the `tests-passed` branch are vulnerable to a data leak. Users can request an export of their own activity. Sometimes, due to category settings, they may have category membership for a secure category. The name of this secure category is shown to the user in the export. The same thing occurs when the user's post has been moved to a secure category. A patch for this issue is available in the `main` branch of Discourse's GitHub repository and is anticipated to be part of future releases.",
        "URL": "https://github.com/discourse/discourse/pull/16273",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9d5737fd28374cc876c070f6c3a931a8071ec356",
        "inducing_commit_hash_pyszz": [
            "26ec4fd25b4d8a7622beb1c361bc4debc5c9eff2"
        ],
        "inducing_commit_hash_pd": [
            "7e0c1fb039dfa2663ae42e60ee85ae5ec1cc2935",
            "26ec4fd25b4d8a7622beb1c361bc4debc5c9eff2",
            "a1dd761bd97e748bff5b21d7347ff2a642409fc2",
            "c5dc729e778e5ec9705dcf761295483822f9cef0",
            "a8560d741f07afb25e0ec23cb45d054154d9fada",
            "4aed861336d61f1428e2310693fdee3090d54cd9"
        ],
        "matched": [
            "26ec4fd25b4d8a7622beb1c361bc4debc5c9eff2"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-31025",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users.",
        "URL": "https://github.com/discourse/discourse/pull/16974",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
        "inducing_commit_hash_pyszz": [
            "36e0e6a322aaf768ac79c539d85f202de01fd231"
        ],
        "inducing_commit_hash_pd": [
            "36e0e6a322aaf768ac79c539d85f202de01fd231",
            "ea05a68df7eee15c9db55c26d55efb21bb17247f",
            "b3d769ff4f013b40059751476193898483d115e9",
            "528cfea079a5555e92b1d546a199e03fd6528790",
            "b2a0d34bb783d251ae61881e5d4b9b9aafdf9c09",
            "13f3de4bf673802eb8ec595d36587b4524773209",
            "355d51afde190b884dbb9b81ebc836a16b48d98c",
            "973a7c9d3a3d6ded8a9aa633e1e8222378c8be2e",
            "dbb3ddc7a62b86ee5744be8c81656d4d2fd2d5e7",
            "1aef6de4b0feb08528f8dec2288503e376318871",
            "dffc3a2f8efe5c230fa660dc055a290ab6ef827d",
            "dde0fcc658ae639d71b36f098269b996c367058f",
            "b58867b6e936a5247304e9f06f827cf5012a92ed",
            "eb9155f3fef34ae7b474bdf3d2655bd1a043cbd3",
            "14f9d40e486c39e74abfacdebbda86db1a8afd70",
            "a78c64db351431bae1e74d03c097c25b23fa4af8"
        ],
        "matched": [
            "36e0e6a322aaf768ac79c539d85f202de01fd231"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-31025",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users.",
        "URL": "https://github.com/discourse/discourse/pull/16984",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0fa0094531efc82d9371f90a02aa804b176d59cf",
        "inducing_commit_hash_pyszz": [
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9"
        ],
        "inducing_commit_hash_pd": [
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
            "fa8cd629f1ad4c64308e3e5c1d93f3ae78b2815a"
        ],
        "matched": [
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-36066",
        "Problem_Type": "CWE-434",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.9 on the `stable` branch and prior to 2.9.0.beta10 on the `beta` and `tests-passed` branches, admins can upload a maliciously crafted Zip or Gzip Tar archive to write files at arbitrary locations and trigger remote code execution. The problem is patched in version 2.8.9 on the `stable` branch and version 2.9.0.beta10 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/18421",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b27d5626d208a22c516a0adfda7554b67b493835",
        "inducing_commit_hash_pyszz": [
            "01bc465db819d5ba0e433a8226c80a9bd38b593d"
        ],
        "inducing_commit_hash_pd": [
            "01bc465db819d5ba0e433a8226c80a9bd38b593d",
            "5357ab332472b1ad63c51e3b8db89e302174624d",
            "10565e4623c7b27760d6a6cc5412b5352fc63bd9",
            "fa66290b61d0e14a5a367c01eb955289ae791068"
        ],
        "matched": [
            "01bc465db819d5ba0e433a8226c80a9bd38b593d"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-36068",
        "Problem_Type": "CWE-862",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.9 on the `stable` branch and prior to 2.9.0.beta10 on the `beta` and `tests-passed` branches, a moderator can create new and edit existing themes by using the API when they should not be able to do so. The problem is patched in version 2.8.9 on the `stable` branch and version 2.9.0.beta10 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/18418",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ae1e536e83940d58f1c79b835c75c249121c46b6",
        "inducing_commit_hash_pyszz": [
            "e51de4cc25757cc03d960eb8ff3393217c706468"
        ],
        "inducing_commit_hash_pd": [
            "39e679d3cb208755231c99d8b5a56f077e9a256f",
            "a3e8c3cd7ba5b8e0ea5d89e6eded3f995ab24aba",
            "bc0b9af576c7a99f4f89be0bf10aa3c9b3697c77",
            "def7348777832f454c92f07c75ced769b5ae1718",
            "e51de4cc25757cc03d960eb8ff3393217c706468"
        ],
        "matched": [
            "e51de4cc25757cc03d960eb8ff3393217c706468"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-39226",
        "Problem_Type": "CWE-770",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.9 on the `stable` branch and prior to 2.9.0.beta10 on the `beta` and `tests-passed` branches, a malicious actor can add large payloads of text into the Location and Website fields of a user profile, which causes issues for other users when loading that profile. A fix to limit the length of user input for these fields is included in version 2.8.9 on the `stable` branch and version 2.9.0.beta10 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/18302",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e69f7d2fd9c977dedbdb17f6813651e2a45bfb71",
        "inducing_commit_hash_pyszz": [
            "5a4c35f62714d2d72bc0ee57a10e08116bdc476a"
        ],
        "inducing_commit_hash_pd": [
            "5a4c35f62714d2d72bc0ee57a10e08116bdc476a",
            "ba148e082df2dfecafa6ee32bf4a64dcf80affc3"
        ],
        "matched": [
            "5a4c35f62714d2d72bc0ee57a10e08116bdc476a"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-39232",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is an open source discussion platform. Starting with version 2.9.0.beta5 and prior to version 2.9.0.beta10, an incomplete quote can generate a JavaScript error which will crash the current page in the browser in some cases. Version 2.9.0.beta10 added a fix and tests to ensure incomplete quotes won't break the app. As a workaround, the quote can be fixed via the rails console.",
        "URL": "https://github.com/discourse/discourse/pull/18311",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eab33af5bf19827527fe79134d865b5c727f6530",
        "inducing_commit_hash_pyszz": [
            "20740f196cd56f3db776e6439e00b7466f76dcd1"
        ],
        "inducing_commit_hash_pd": [
            "20740f196cd56f3db776e6439e00b7466f76dcd1"
        ],
        "matched": [
            "20740f196cd56f3db776e6439e00b7466f76dcd1"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-39356",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is a platform for community discussion. Users who receive an invitation link that is not scoped to a single email address can enter any non-admin user's email and gain access to their account when accepting the invitation. All users should upgrade to the latest version. A workaround is temporarily disabling invitations with `SiteSetting.max_invites_per_day = 0` or scope them to individual email addresses.",
        "URL": "https://github.com/discourse/discourse/pull/18817",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "07ef1a80a1461123d602c57e366974aed265a91e",
        "inducing_commit_hash_pyszz": [
            "d600c36036c5c3b53787067682128ae2d86311bf"
        ],
        "inducing_commit_hash_pd": [
            "a842b71a0556c06b38bdda7b848f6b7c33b5f262",
            "51483e1aef1f0d93d00c1d22ae4c8188686ae46a",
            "355d51afde190b884dbb9b81ebc836a16b48d98c",
            "dffc3a2f8efe5c230fa660dc055a290ab6ef827d",
            "534008ba24cc18fb21c1b88d43960b379962c5fb",
            "9969631cef89290b00edcf236df1ddd8fc756bdd",
            "033d6b64374dce833ecb073fbf824428d3a78bcd",
            "ff44515a18bb9132aa6bd22c85d5a6a91f6efb70",
            "1253afdf959051b84d15d37e133dc7875ef520cb",
            "bcd6efa98c6d9fa7d3d5cc46f42174e3ab0abecc",
            "8335c8dc1a30a2be87173e9d844b6890d1d00225",
            "ef68e11137e35cde505e9cee45ea32f88feeee48",
            "c047640ad4547cef87bf2c2a8326e210d0b276dd",
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
            "40f6ceb6f2256540806733e16facdbf239a402be",
            "9aa2723d57cf9edaad0873ba64d3d1e5a9d7fdc7",
            "81e5352e013f34a86806248f57c61cec1f51a7b9",
            "0591d5be11051efae50516211384cc24618dd813",
            "3094459cd979e95067e5299e08fc94cf3f8ea0d3",
            "528cfea079a5555e92b1d546a199e03fd6528790",
            "f25eda13fa76a817731457e62b277b423fd2d9c7",
            "ce04db861033c906830fd07ae98b3d0cb375c753",
            "91b6b5eee7a193b9adcff07131c8e1904e29b61a",
            "2d8ebe989a130ba5a21b194d0450a8602c2e2895",
            "7179fbab7734bff42f4c6338ea971a7624df50f8",
            "d0fbb27f3ece024762629257032387a34741ab05",
            "d600c36036c5c3b53787067682128ae2d86311bf",
            "ea05a68df7eee15c9db55c26d55efb21bb17247f",
            "bea7a8a4d1ab28a52540551f8c7fa909be7bc8a0",
            "584c6a2e8bc705072b09a9c4b55126d6f8ed4ad2",
            "88f9bb3dc99eab61108ce1140bbf3153fc054542",
            "115859964d6e3e92d6d933ffe8e1b330b12a3aca",
            "2d904ade6dfb260c85e2437247eafe86c7ade3b9",
            "474ff94df3c6dda7f8b12628c62985c7f9f2db27"
        ],
        "matched": [
            "d600c36036c5c3b53787067682128ae2d86311bf"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-46168",
        "Problem_Type": "CWE-359",
        "Description": "Discourse is an option source discussion platform. Prior to version 2.8.14 on the `stable` branch and version 2.9.0.beta15 on the `beta` and `tests-passed` branches, recipients of a group SMTP email could see the email addresses of all other users inside the group SMTP topic. Most of the time this is not an issue as they are likely already familiar with one another's email addresses. This issue is patched in versions 2.8.14 and 2.9.0.beta15. The fix is that someone sending emails out via group SMTP to non-staged users masks those emails with blind carbon copy (BCC). Staged users are ones that have likely only interacted with the group via email, and will likely include other people who were CC'd on the original email to the group. As a workaround, disable group SMTP for any groups that have it enabled.",
        "URL": "https://github.com/discourse/discourse/pull/19724",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7bd83ef6b5bd36a57d64abd3547d4bf4caf8579f",
        "inducing_commit_hash_pyszz": [
            "0f688f45bddaac17b2840ab9eed6b2dec2a7f9cf"
        ],
        "inducing_commit_hash_pd": [
            "87684f7c5e7e48841743d38df8a57ed827715b47",
            "0f688f45bddaac17b2840ab9eed6b2dec2a7f9cf"
        ],
        "matched": [
            "0f688f45bddaac17b2840ab9eed6b2dec2a7f9cf"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23616",
        "Problem_Type": "CWE-400",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches, when submitting a membership request, there is no character limit for the reason provided with the request. This could potentially allow a user to flood the database with a large amount of data. However it is unlikely this could be used as part of a DoS attack, as the paths reading back the reasons are only available to administrators. Starting in version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches, a limit of 280 characters has been introduced for membership requests.",
        "URL": "https://github.com/discourse/discourse/pull/19993",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5745d34c20c31a221039d8913f33064433003ea",
        "inducing_commit_hash_pyszz": [
            "a9613163b54ae5729765a7e3d4ccc23563202cb7"
        ],
        "inducing_commit_hash_pd": [
            "371bbadb92c02a43ae2ea362ead53cf6a4e575de"
        ],
        "matched": [
            "a9613163b54ae5729765a7e3d4ccc23563202cb7"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23620",
        "Problem_Type": "CWE-200",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches, the contents of latest/top routes for restricted tags can be accessed by unauthorized users. This issue is patched in version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20004",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "105fee978d73b0ec23ff814a09d1c0c9ace95164",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ],
        "matched": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23621",
        "Problem_Type": "CWE-1333",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches, a malicious user can cause a regular expression denial of service using a carefully crafted user agent. This issue is patched in version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20002",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "6d92c3cbdac431db99a450f360a3048bb3aaf458",
        "inducing_commit_hash_pyszz": [
            "254f48e5681a8674e7c8a4e1b1a0fe7a501f237e"
        ],
        "inducing_commit_hash_pd": [
            "254f48e5681a8674e7c8a4e1b1a0fe7a501f237e"
        ],
        "matched": [
            "254f48e5681a8674e7c8a4e1b1a0fe7a501f237e"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23622",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, the count of topics displayed for a tag is a count of all regular topics regardless of whether the topic is in a read restricted category or not. As a result, any users can technically poll a sensitive tag to determine if a new topic is created in a category which the user does not have excess to. \n\nIn version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, the count of topics displayed for a tag defaults to only counting regular topics which are not in read restricted categories. Staff users will continue to see a count of all topics regardless of the topic's category read restrictions.",
        "URL": "https://github.com/discourse/discourse/pull/20004",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "105fee978d73b0ec23ff814a09d1c0c9ace95164",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ],
        "matched": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23624",
        "Problem_Type": "CWE-200",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches, someone can use the `exclude_tag param` to filter out topics and deduce which ones were using a specific hidden tag. This affects any Discourse site using hidden tags in public categories. This issue is patched in version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches. As a workaround, secure any categories that are using hidden tags, change any existing hidden tags to not include private data, or remove any hidden tags currently in use.",
        "URL": "https://github.com/discourse/discourse/pull/20006",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f55e0fe7910149c431861c18ce407d1be0d6091a",
        "inducing_commit_hash_pyszz": [
            "e3c724f79fb05c66e3240cb8fd85b24ce8725ca3"
        ],
        "inducing_commit_hash_pd": [
            "64171730827c58df26a7ad75f0e58f17c2add118",
            "e3c724f79fb05c66e3240cb8fd85b24ce8725ca3"
        ],
        "matched": [
            "e3c724f79fb05c66e3240cb8fd85b24ce8725ca3"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-25172",
        "Problem_Type": "CWE-79",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, a maliciously crafted URL can be included in a user's full name field to to carry out cross-site scripting attacks on sites with a disabled or overly permissive CSP (Content Security Policy). Discourse's default CSP prevents this vulnerability. The vulnerability is patched in version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches. As a workaround, enable and/or restore your site's CSP to the default one provided with Discourse.",
        "URL": "https://github.com/discourse/discourse/pull/20008",
        "Tag": "['Patch']",
        "fix_commit_hash": "c186a46910431020e8efc425dec2133e7a99fa9a",
        "inducing_commit_hash_pyszz": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "inducing_commit_hash_pd": [
            "102909edb3376d41398a8ca89d821b2e670bcecc",
            "da9b837da090f1b0e2a960d461a5a79788b301ed",
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "matched": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-25172",
        "Problem_Type": "CWE-79",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, a maliciously crafted URL can be included in a user's full name field to to carry out cross-site scripting attacks on sites with a disabled or overly permissive CSP (Content Security Policy). Discourse's default CSP prevents this vulnerability. The vulnerability is patched in version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches. As a workaround, enable and/or restore your site's CSP to the default one provided with Discourse.",
        "URL": "https://github.com/discourse/discourse/pull/20009",
        "Tag": "['Patch']",
        "fix_commit_hash": "1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
        "inducing_commit_hash_pyszz": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "inducing_commit_hash_pd": [
            "102909edb3376d41398a8ca89d821b2e670bcecc",
            "da9b837da090f1b0e2a960d461a5a79788b301ed",
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "matched": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28107",
        "Problem_Type": "CWE-770",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches, a user logged as an administrator can request backups multiple times, which will eat up all the connections to the DB. If this is done on a site using multisite, then it can affect the whole cluster. The vulnerability is patched in version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20700",
        "Tag": "['Patch']",
        "fix_commit_hash": "78a3efa7104eed6dd3ed7a06a71e2705337d9e61",
        "inducing_commit_hash_pyszz": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ],
        "inducing_commit_hash_pd": [
            "925a15c9aa8a9d0acff3986310d4ee13bc23625c",
            "578c8e861bf4d5860ae7c2a54bd3c09a833d3910",
            "e7c972ac890ef9f452da5bd091dadc5a6b14925c",
            "0bc1fa8aa4ea5393193cc5c44adbf7eee24cd395",
            "52be5b378208ed70f22fe18466f833916f347c54",
            "cb932d6ee1b3b3571e4d4d9118635e2dbf58f0ef",
            "84d4c81a26bb585f67809c6f8af25c2a385de754",
            "b0c92bb0b925a2406e309de97a320ccbcff9bedd",
            "c94a2bc69b9fcbc39435066a35f0263390a8257c",
            "b981041f6f79585953fded3797c821901e5bb9dd",
            "8626268366117cb94aa606949ea52f84eadd5887",
            "1a8ca68ea3eed9b218c762593aef5c70584c91a7",
            "c8661674d4f471143326333caf2ee6c149234ee6"
        ],
        "matched": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28107",
        "Problem_Type": "CWE-770",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches, a user logged as an administrator can request backups multiple times, which will eat up all the connections to the DB. If this is done on a site using multisite, then it can affect the whole cluster. The vulnerability is patched in version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20701",
        "Tag": "['Patch']",
        "fix_commit_hash": "0bd64788d2b4680c04fbef76314a24884d65fed9",
        "inducing_commit_hash_pyszz": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ],
        "inducing_commit_hash_pd": [
            "925a15c9aa8a9d0acff3986310d4ee13bc23625c",
            "578c8e861bf4d5860ae7c2a54bd3c09a833d3910",
            "e7c972ac890ef9f452da5bd091dadc5a6b14925c",
            "0bc1fa8aa4ea5393193cc5c44adbf7eee24cd395",
            "52be5b378208ed70f22fe18466f833916f347c54",
            "cb932d6ee1b3b3571e4d4d9118635e2dbf58f0ef",
            "84d4c81a26bb585f67809c6f8af25c2a385de754",
            "b0c92bb0b925a2406e309de97a320ccbcff9bedd",
            "c94a2bc69b9fcbc39435066a35f0263390a8257c",
            "b981041f6f79585953fded3797c821901e5bb9dd",
            "8626268366117cb94aa606949ea52f84eadd5887",
            "1a8ca68ea3eed9b218c762593aef5c70584c91a7",
            "c8661674d4f471143326333caf2ee6c149234ee6"
        ],
        "matched": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28111",
        "Problem_Type": "CWE-918",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.1.0.beta3 of the `beta` and `tests-passed` branches, attackers are able to bypass Discourse's server-side request forgery (SSRF) protection for private IPv4 addresses by using a IPv4-mapped IPv6 address. The issue is patched in the latest beta and tests-passed version of Discourse. version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20710",
        "Tag": "['Patch']",
        "fix_commit_hash": "5103d249aaecace4780d8271ad1af0fb2a060843",
        "inducing_commit_hash_pyszz": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "inducing_commit_hash_pd": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "matched": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28112",
        "Problem_Type": "CWE-918",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.1.0.beta3 of the `beta` and `tests-passed` branches, some user provided URLs were being passed to FastImage without SSRF protection. Insufficient protections could enable attackers to trigger outbound network connections from the Discourse server to private IP addresses. This affects any site running the `tests-passed` or `beta` branches versions 3.1.0.beta2 and prior. This issue is patched in version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20710",
        "Tag": "['Patch']",
        "fix_commit_hash": "5103d249aaecace4780d8271ad1af0fb2a060843",
        "inducing_commit_hash_pyszz": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "inducing_commit_hash_pd": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "matched": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ]
    },
    {
        "repo_name": "DIYgod/RSSHub",
        "CVE_ID": "CVE-2023-22493",
        "Problem_Type": "CWE-918",
        "Description": "RSSHub is an open source RSS feed generator. RSSHub is vulnerable to Server-Side Request Forgery (SSRF) attacks. This vulnerability allows an attacker to send arbitrary HTTP requests from the server to other servers or resources on the network. An attacker can exploit this vulnerability by sending a request to the affected routes with a malicious URL. An attacker could also use this vulnerability to send requests to internal or any other servers or resources on the network, potentially gain access to sensitive information that would not normally be accessible and amplifying the impact of the attack. The patch for this issue can be found in commit a66cbcf.",
        "URL": "https://github.com/DIYgod/RSSHub/pull/11588",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a66cbcf6eebc700bf97ab097f404f16ab415506a",
        "inducing_commit_hash_pyszz": [
            "7ed6b92f4101ef0b7d52b95f3d74de43bd0abba3"
        ],
        "inducing_commit_hash_pd": [
            "cff988ad9f231ddf3087c912fb245637894e7314",
            "1501116b4626e220f97f2ce0174383405099ebe8",
            "5db837d6dc027a245eee9a5f0b2385f489a3ef3c",
            "7ed6b92f4101ef0b7d52b95f3d74de43bd0abba3",
            "0481bff2846867d0c7f2fee8f6adff34753e2850",
            "b2137fc283f004c9b4693d243983414b6c0c2300"
        ],
        "matched": [
            "7ed6b92f4101ef0b7d52b95f3d74de43bd0abba3"
        ]
    },
    {
        "repo_name": "DMTF/libspdm",
        "CVE_ID": "CVE-2023-32690",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "libspdm is a sample implementation that follows the DMTF SPDM specifications. Prior to versions 2.3.3 and 3.0, following a successful CAPABILITIES response, a libspdm Requester stores the Responder's CTExponent into its context without validation. If the Requester sends a request message that requires a cryptography operation by the Responder, such as CHALLENGE, libspdm will calculate the timeout value using the Responder's unvalidated CTExponent.\n\nA patch is available in version 2.3.3. A workaround is also available. After completion of VCA, the Requester can check the value of the Responder's CTExponent. If it greater than or equal to 64, then the Requester can stop communication with the Responder.",
        "URL": "https://github.com/DMTF/libspdm/pull/2069",
        "Tag": "['Patch']",
        "fix_commit_hash": "e9a62040ba556f64ea2041f506f1e49766b48d14",
        "inducing_commit_hash_pyszz": [
            "c3e88495a289f7e49e84676ab97681acf1671ef8"
        ],
        "inducing_commit_hash_pd": [
            "451002061874c3b606237b3ce3dc94066682ad6e",
            "674374968bb9796ba7cfcac360d466384910af6d",
            "3fecc262b38a779d03914d8181f8b841f1e91dce",
            "c3e88495a289f7e49e84676ab97681acf1671ef8"
        ],
        "matched": [
            "c3e88495a289f7e49e84676ab97681acf1671ef8"
        ]
    },
    {
        "repo_name": "docsifyjs/docsify",
        "CVE_ID": "CVE-2020-7680",
        "Problem_Type": "CWE-79",
        "Description": "docsify prior to 4.11.4 is susceptible to Cross-site Scripting (XSS). Docsify.js uses fragment identifiers (parameters after # sign) to load resources from server-side .md files. Due to lack of validation here, it is possible to provide external URLs after the /#/ (domain.com/#//attacker.com) and render arbitrary JavaScript/HTML inside docsify page.",
        "URL": "https://github.com/docsifyjs/docsify/pull/1128",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "714ef29afe779a6db5c4761ebaacdfc70ee2d8dd",
        "inducing_commit_hash_pyszz": [
            "4a8f2c5bfa7a086e99cc3cb52a75d1564815150a"
        ],
        "inducing_commit_hash_pd": [
            "75c72e917bdacbf70aae124f812edcefc651a5ab",
            "f82f41900eca32c31015fad6f313b55b9bae7a22",
            "0e54ea1177e1819317c1de048e4bce539808e8e4",
            "a39b2147334d2ee81ed9da239c437706f56344f1",
            "049726e11e7a043a5519e6889208962befe39ffd",
            "4a8f2c5bfa7a086e99cc3cb52a75d1564815150a",
            "820abeb0fdb75273e2dc60230136355d0fdd25d6",
            "fd86c727af34eb3eaedbb4476e5adf4572b8d966",
            "94bc4155342d0f81fa8300c91b0679c50fd066ed",
            "615205cfdb7aea8f37a1ec5dd928105eeef56357",
            "b8a4e6ba1b887b4509578d253eff92ba77c1d091",
            "90bba6036770b14b046e199bd73779b925423d2c"
        ],
        "matched": [
            "4a8f2c5bfa7a086e99cc3cb52a75d1564815150a"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3475",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "608e9bbe537aba314b124ceef70f9b606ab7e121",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3476",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1204a4399b37adad4469174e14d554ab43c47918",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3474",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9cfd14b0a07ee2eed354cd59fec0e6cd663bf899",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3477",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "356c8bd5cbfab7a10d2ac1d4c3bf9839222b5b52",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3478",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba8b7d44901724c24af6d64705ecfab472473f3d",
        "inducing_commit_hash_pyszz": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7"
        ],
        "matched": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2022-2414",
        "Problem_Type": "CWE-611",
        "Description": "Access to external entities when parsing XML documents can lead to XML external entity (XXE) attacks. This flaw allows a remote attacker to potentially retrieve the content of arbitrary files by sending specially crafted HTTP requests.",
        "URL": "https://github.com/dogtagpki/pki/pull/4021",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4e893243d72ad766558c10c907841f5f9c047055",
        "inducing_commit_hash_pyszz": [
            "5bb7933dd00f11ec87237d3bad7756989abb59ee"
        ],
        "inducing_commit_hash_pd": [
            "5bb7933dd00f11ec87237d3bad7756989abb59ee"
        ],
        "matched": [
            "5bb7933dd00f11ec87237d3bad7756989abb59ee"
        ]
    },
    {
        "repo_name": "dompdf/dompdf",
        "CVE_ID": "CVE-2022-28368",
        "Problem_Type": "CWE-79",
        "Description": "Dompdf 1.2.1 allows remote code execution via a .php file in the src:url field of an @font-face Cascading Style Sheets (CSS) statement (within an HTML input file).",
        "URL": "https://github.com/dompdf/dompdf/pull/2808",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4c70e1025bcd9b7694b95dd552499bd83cd6141d",
        "inducing_commit_hash_pyszz": [
            "13c8123b3aff4b223c8c96fa17d7c0c5e0717660"
        ],
        "inducing_commit_hash_pd": [
            "13c8123b3aff4b223c8c96fa17d7c0c5e0717660"
        ],
        "matched": [
            "13c8123b3aff4b223c8c96fa17d7c0c5e0717660"
        ]
    },
    {
        "repo_name": "dpgaspar/Flask-AppBuilder",
        "CVE_ID": "CVE-2022-21659",
        "Problem_Type": "CWE-203",
        "Description": "Flask-AppBuilder is an application development framework, built on top of the Flask web framework. In affected versions there exists a user enumeration vulnerability. This vulnerability allows for a non authenticated user to enumerate existing accounts by timing the response time from the server when you are logging in. Users are advised to upgrade to version 3.4.4 as soon as possible. There are no known workarounds for this issue.",
        "URL": "https://github.com/dpgaspar/Flask-AppBuilder/pull/1775",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e2b744c258ff62ece9d5ac7172c3b4644ff4c2fe",
        "inducing_commit_hash_pyszz": [
            "0cd154d8a24c92840e0bd42bde945d3c3efea557"
        ],
        "inducing_commit_hash_pd": [
            "0cd154d8a24c92840e0bd42bde945d3c3efea557",
            "47887470933fef06f48df5cdd1704119072b3282"
        ],
        "matched": [
            "0cd154d8a24c92840e0bd42bde945d3c3efea557"
        ]
    },
    {
        "repo_name": "dpgaspar/Flask-AppBuilder",
        "CVE_ID": "CVE-2022-24776",
        "Problem_Type": "CWE-601",
        "Description": "Flask-AppBuilder is an application development framework, built on top of the Flask web framework. Flask-AppBuilder contains an open redirect vulnerability when using database authentication login page on versions below 3.4.5. This issue is fixed in version 3.4.5. There are currently no known workarounds.",
        "URL": "https://github.com/dpgaspar/Flask-AppBuilder/pull/1804",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8a18281002d55a50416cf98dad8d75c4c218dbb8",
        "inducing_commit_hash_pyszz": [
            "f12d3a6706f00a9864716427bdb5679b45e7b8e5"
        ],
        "inducing_commit_hash_pd": [
            "c46cac37a7f55b1963984ddc18255888bbc39ab5",
            "009f2c8cebb9913abf5cffbb20e86058df18b7cb",
            "dae4dd47d51e1e2eb5894bce55221c1d26864c3b",
            "6af28521589599b1dbafd6313256229ee9a4fa74",
            "f12d3a6706f00a9864716427bdb5679b45e7b8e5",
            "a9882e71295f4cb6f7c643722a3f2c64ebfacaec",
            "db1816483f7d1a7c035326c773276355e7365a38",
            "e09e629f1f3c2836cc0a1b25f004a9728e700825",
            "772a16c43fbd538b68648d9f51b4cf25b515eb18"
        ],
        "matched": [
            "f12d3a6706f00a9864716427bdb5679b45e7b8e5"
        ]
    },
    {
        "repo_name": "dpgaspar/Flask-AppBuilder",
        "CVE_ID": "CVE-2023-34110",
        "Problem_Type": "CWE-209",
        "Description": "Flask-AppBuilder is an application development framework, built on top of Flask. Prior to version 4.3.2, an authenticated malicious actor with Admin privileges, could by adding a special character on the add, edit User forms trigger a database error, this error is surfaced back to this actor on the UI. On certain database engines this error can include the entire user row including the pbkdf2:sha256 hashed password. This vulnerability has been fixed in version 4.3.2.\n",
        "URL": "https://github.com/dpgaspar/Flask-AppBuilder/pull/2045",
        "Tag": "['Patch']",
        "fix_commit_hash": "ae25ad4c87a9051ebe4a4e8f02aee73232642626",
        "inducing_commit_hash_pyszz": [
            "0d634131d1d76c5ea90d69e24fa40104546def63"
        ],
        "inducing_commit_hash_pd": [
            "6f0d7dd871c8456b71d46364b8c345415ee2eb77",
            "e379f688cda6fe74524d3a4506b50a9f70147a21",
            "9ba9407f13309a2a0bd800bdc582872a39b90585",
            "b4c8bca85b900e98b64f45b774051c99d8154b82",
            "9dd1244bcdced5ca82e1b143da290d99d0d16ccb",
            "292fdb40fc313bb263e849a507f9693bb1593872",
            "db1816483f7d1a7c035326c773276355e7365a38",
            "c12b3370fa427b64105fbf31b29e31c673210a84",
            "51c6ad0208477fdb8cd6a9dd9cdcd3c87412a90e",
            "1a248f965873afa35d5fd15182eca7664e7985b9",
            "e2e97381e03871670940ce8f12c91479bd32560c",
            "b27ef73b4f88b5b2fee677d3b6b348b6e84cab85",
            "32d8df985fdfbf8fe71d75e5ca7f25af92e4a036",
            "d4f46552ae5d5bc370b0080271938c942cfa6b08"
        ],
        "matched": [
            "0d634131d1d76c5ea90d69e24fa40104546def63"
        ]
    },
    {
        "repo_name": "drogonframework/drogon",
        "CVE_ID": "CVE-2022-25297",
        "Problem_Type": "CWE-552",
        "Description": "This affects the package drogonframework/drogon before 1.7.5. The unsafe handling of file names during upload using HttpFile::save() method may enable attackers to write files to arbitrary locations outside the designated target folder.",
        "URL": "https://github.com/drogonframework/drogon/pull/1174",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c785326c63a34aa1799a639ae185bc9453cb447",
        "inducing_commit_hash_pyszz": [
            "f522d2d70efeb5e1e7e027322e4ca1379322de6b"
        ],
        "inducing_commit_hash_pd": [
            "6a3f72f2e58df291ecf6e72bc5a5379c201b46c2",
            "aa26e9a90388b6a6fe5356e2d12b6f6091c82818",
            "f522d2d70efeb5e1e7e027322e4ca1379322de6b",
            "d888816997969435b907bec3881df7f4229f3583",
            "0b5075bfa9e6f124e78bfe042d26d17bce96dda2"
        ],
        "matched": [
            "f522d2d70efeb5e1e7e027322e4ca1379322de6b"
        ]
    },
    {
        "repo_name": "drogonframework/drogon",
        "CVE_ID": "CVE-2022-3959",
        "Problem_Type": "CWE-330",
        "Description": "A vulnerability, which was classified as problematic, has been found in drogon up to 1.8.1. Affected by this issue is some unknown functionality of the component Session Hash Handler. The manipulation leads to small space of random values. The attack may be launched remotely. Upgrading to version 1.8.2 is able to address this issue. The name of the patch is c0d48da99f66aaada17bcd28b07741cac8697647. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-213464.",
        "URL": "https://github.com/drogonframework/drogon/pull/1433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0d48da99f66aaada17bcd28b07741cac8697647",
        "inducing_commit_hash_pyszz": [
            "b654e35e51907281d6b24d214577f759ff05e96c"
        ],
        "inducing_commit_hash_pd": [
            "5c9799c15ae747b954dbd70ccf680a76a761d9b8",
            "e5fe92c67aab308489de81335902d9d95d05c095",
            "784eb81014adb75bacdf1c24913f03ec842631ba",
            "cfe1681b0f1eacd11cb6684bf7bacb3d330c9df3",
            "be08aba9d1dcb651b3933bbfb7e2f1f926147112",
            "40ffb2d2af70ff532b36b57f2a4cf3cfb44b309d",
            "b654e35e51907281d6b24d214577f759ff05e96c"
        ],
        "matched": [
            "b654e35e51907281d6b24d214577f759ff05e96c"
        ]
    },
    {
        "repo_name": "dromara/hertzbeat",
        "CVE_ID": "CVE-2022-39337",
        "Problem_Type": "CWE-284",
        "Description": "Hertzbeat is an open source, real-time monitoring system with custom-monitoring, high performance cluster, prometheus-like and agentless. Hertzbeat versions 1.20 and prior have a permission bypass vulnerability. System authentication can be bypassed and invoke interfaces without authorization. Version 1.2.1 contains a patch for this issue.",
        "URL": "https://github.com/dromara/hertzbeat/pull/382",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "56628f42205e2d8f2f4ea5879fad8e079d279a7a",
        "inducing_commit_hash_pyszz": [
            "5198378dc6d9f013083447970bbb337272f1ce48"
        ],
        "inducing_commit_hash_pd": [
            "5198378dc6d9f013083447970bbb337272f1ce48"
        ],
        "matched": [
            "5198378dc6d9f013083447970bbb337272f1ce48"
        ]
    },
    {
        "repo_name": "dropbox/merou",
        "CVE_ID": "CVE-2022-4768",
        "Problem_Type": "CWE-74",
        "Description": "A vulnerability was found in Dropbox merou. It has been classified as critical. Affected is the function add_public_key of the file grouper/public_key.py of the component SSH Public Key Handler. The manipulation of the argument public_key_str leads to injection. It is possible to launch the attack remotely. The name of the patch is d93087973afa26bc0a2d0a5eb5c0fde748bdd107. It is recommended to apply a patch to fix this issue. VDB-216906 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/dropbox/merou/pull/673",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
        "inducing_commit_hash_pyszz": [
            "d06926cf5d2efab12b4fea7c2a0884578c7ab725"
        ],
        "inducing_commit_hash_pd": [
            "91c1f8f946ed6aa5cd3061cc903e72c8e0e08641"
        ],
        "matched": [
            "d06926cf5d2efab12b4fea7c2a0884578c7ab725"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-11002",
        "Problem_Type": "CWE-74",
        "Description": "dropwizard-validation before versions 2.0.3 and 1.3.21 has a remote code execution vulnerability. A server-side template injection was identified in the self-validating feature enabling attackers to inject arbitrary Java EL expressions, leading to Remote Code Execution (RCE) vulnerability. If you are using a self-validating bean an upgrade to Dropwizard 1.3.21/2.0.3 or later is strongly recommended. The changes introduced in Dropwizard 1.3.19 and 2.0.2 for CVE-2020-5245 unfortunately did not fix the underlying issue completely. The issue has been fixed in dropwizard-validation 1.3.21 and 2.0.3 or later. We strongly recommend upgrading to one of these versions.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3209",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74e211514db951a67b0e9ff75b0102704d4b2049",
        "inducing_commit_hash_pyszz": [
            "28479f743a9d0aab6d0e963fc07f3dd98e8c8236"
        ],
        "inducing_commit_hash_pd": [
            "28479f743a9d0aab6d0e963fc07f3dd98e8c8236",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb",
            "98fa28a60b235d9c600fac578227086fc86b42df"
        ],
        "matched": [
            "28479f743a9d0aab6d0e963fc07f3dd98e8c8236"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-11002",
        "Problem_Type": "CWE-74",
        "Description": "dropwizard-validation before versions 2.0.3 and 1.3.21 has a remote code execution vulnerability. A server-side template injection was identified in the self-validating feature enabling attackers to inject arbitrary Java EL expressions, leading to Remote Code Execution (RCE) vulnerability. If you are using a self-validating bean an upgrade to Dropwizard 1.3.21/2.0.3 or later is strongly recommended. The changes introduced in Dropwizard 1.3.19 and 2.0.2 for CVE-2020-5245 unfortunately did not fix the underlying issue completely. The issue has been fixed in dropwizard-validation 1.3.21 and 2.0.3 or later. We strongly recommend upgrading to one of these versions.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3208",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5a512f7abf965275f2a6b913ac4fe778e424242",
        "inducing_commit_hash_pyszz": [
            "d87d1e4f8e20f6494c0232bf8560c961b46db634"
        ],
        "inducing_commit_hash_pd": [
            "98fa28a60b235d9c600fac578227086fc86b42df",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb",
            "d87d1e4f8e20f6494c0232bf8560c961b46db634"
        ],
        "matched": [
            "d87d1e4f8e20f6494c0232bf8560c961b46db634"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-5245",
        "Problem_Type": "CWE-74",
        "Description": "Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature. The issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3160",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "28479f743a9d0aab6d0e963fc07f3dd98e8c8236",
        "inducing_commit_hash_pyszz": [
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb"
        ],
        "inducing_commit_hash_pd": [
            "98fa28a60b235d9c600fac578227086fc86b42df",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb"
        ],
        "matched": [
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-5245",
        "Problem_Type": "CWE-74",
        "Description": "Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature. The issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3157",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d87d1e4f8e20f6494c0232bf8560c961b46db634",
        "inducing_commit_hash_pyszz": [
            "1bb0cfa5c856bcc7be24c7f7a8ce68b8388af8ea"
        ],
        "inducing_commit_hash_pd": [
            "98fa28a60b235d9c600fac578227086fc86b42df",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb",
            "1bb0cfa5c856bcc7be24c7f7a8ce68b8388af8ea",
            "89712d2346c3a08e9a986a4e256ceff6b37a3cb5"
        ],
        "matched": [
            "1bb0cfa5c856bcc7be24c7f7a8ce68b8388af8ea"
        ]
    },
    {
        "repo_name": "dutchcoders/transfer.sh",
        "CVE_ID": "CVE-2021-33496",
        "Problem_Type": "CWE-79",
        "Description": "Dutchcoders transfer.sh before 1.2.4 allows XSS via an inline view.",
        "URL": "https://github.com/dutchcoders/transfer.sh/pull/373",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9df18fdc69de2e71f30d8c1e6bfab2fda2e52eb4",
        "inducing_commit_hash_pyszz": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ],
        "inducing_commit_hash_pd": [
            "9ba5c5a8a749de16c8ca038d591319f571be922d",
            "b36711c1eaa26bf3d6350d061a4907a3fe8da517",
            "a90d29700d855505489c4ab533aa70dbf1b1aee3",
            "0c9c6e342475063d8370a7cb4db911d44f216346"
        ],
        "matched": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ]
    },
    {
        "repo_name": "dutchcoders/transfer.sh",
        "CVE_ID": "CVE-2021-33497",
        "Problem_Type": "CWE-22",
        "Description": "Dutchcoders transfer.sh before 1.2.4 allows Directory Traversal for deleting files.",
        "URL": "https://github.com/dutchcoders/transfer.sh/pull/373",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9df18fdc69de2e71f30d8c1e6bfab2fda2e52eb4",
        "inducing_commit_hash_pyszz": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ],
        "inducing_commit_hash_pd": [
            "9ba5c5a8a749de16c8ca038d591319f571be922d",
            "b36711c1eaa26bf3d6350d061a4907a3fe8da517",
            "a90d29700d855505489c4ab533aa70dbf1b1aee3",
            "0c9c6e342475063d8370a7cb4db911d44f216346"
        ],
        "matched": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ]
    },
    {
        "repo_name": "ebkalderon/renderdoc-rs",
        "CVE_ID": "CVE-2019-16142",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in the renderdoc crate before 0.5.0 for Rust. Multiple exposed methods take self by immutable reference, which is incompatible with a multi-threaded application.",
        "URL": "https://github.com/ebkalderon/renderdoc-rs/pull/32",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "22351fe532cf480e26a7ad8717d86a023da8f1d6",
        "inducing_commit_hash_pyszz": [
            "db2d5628506ec89027317c9a6ed1038028428965"
        ],
        "inducing_commit_hash_pd": [
            "db2d5628506ec89027317c9a6ed1038028428965",
            "0333df222d2fe611e1f857a1c9a6469ce1e56718"
        ],
        "matched": [
            "db2d5628506ec89027317c9a6ed1038028428965"
        ]
    },
    {
        "repo_name": "eclipse-ee4j/jersey",
        "CVE_ID": "CVE-2021-28168",
        "Problem_Type": "CWE-668",
        "Description": "Eclipse Jersey 2.28 to 2.33 and Eclipse Jersey 3.0.0 to 3.0.1 contains a local information disclosure vulnerability. This is due to the use of the File.createTempFile which creates a file inside of the system temporary directory with the permissions: -rw-r--r--. Thus the contents of this file are viewable by all other users locally on the system. As such, if the contents written is security sensitive, it can be disclosed to other local users.",
        "URL": "https://github.com/eclipse-ee4j/jersey/pull/4712",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f3cadb38dcc5b20e515706fae68dce533ad6c737",
        "inducing_commit_hash_pyszz": [
            "8c60fd2734c333cbca4dc9e0ab7d81306494532a"
        ],
        "inducing_commit_hash_pd": [
            "12a057315292a624ceb31b58bd04eec3cb19a819"
        ],
        "matched": [
            "8c60fd2734c333cbca4dc9e0ab7d81306494532a"
        ]
    },
    {
        "repo_name": "eclipse-ee4j/parsson",
        "CVE_ID": "CVE-2023-4043",
        "Problem_Type": "CWE-834",
        "Description": "In Eclipse Parsson before versions 1.1.4 and 1.0.5, Parsing JSON from untrusted sources can lead malicious actors to exploit the fact that the built-in support for parsing numbers with large scale in Java has a number of edge cases where the input text of a number can lead to much larger processing time than one would expect.\n\n\nTo mitigate the risk, parsson put in place a size limit for the numbers as well as their scale.\n\n\n",
        "URL": "https://github.com/eclipse-ee4j/parsson/pull/100",
        "Tag": "['Patch']",
        "fix_commit_hash": "9dd5ad5f871f7b93654073a3f8ce3e1d9b8d9b31",
        "inducing_commit_hash_pyszz": [
            "d0ec79badd44a940c82842954430762a2199f4e1"
        ],
        "inducing_commit_hash_pd": [
            "bd5c4b23b8ebc16e74ba67c3b425a306ceb362b9",
            "d0ec79badd44a940c82842954430762a2199f4e1",
            "7f2ed19115d65ec984518218d721fb3941a8eb6e"
        ],
        "matched": [
            "d0ec79badd44a940c82842954430762a2199f4e1"
        ]
    },
    {
        "repo_name": "eclipse-pde/eclipse.pde",
        "CVE_ID": "CVE-2023-4218",
        "Problem_Type": "CWE-611",
        "Description": "In Eclipse IDE versions < 2023-09 (4.29) some files with xml content are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review a foreign repository or patch).\n",
        "URL": "https://github.com/eclipse-pde/eclipse.pde/pull/632/",
        "Tag": "['Patch']",
        "fix_commit_hash": "c8754be8f6e23e9c5aebf6bf11b59515e98d262d",
        "inducing_commit_hash_pyszz": [
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7"
        ],
        "inducing_commit_hash_pd": [
            "531b9cdfe7e1fd18eca42231da628159bc09416e",
            "b98dd4669c0a65e589035ec0ef175a3e64d0b1db",
            "3db055f8cf1dc3125a1f2c653e961a0398426cf0",
            "4ddd95fd03846d5463f76e16c9614a8efb8cbdd2",
            "d4a49972c4610da37f102c8755a54e88d73f86b5",
            "34b8e38ef25242a4992f61c8676569a8dcffc7f7",
            "936a67b0beabf2e180f3d0a8c4c959aee5817e08",
            "af1475d7364cae6871f9893fdb94bccb4a54d2d9",
            "b7a1243ac2eda65a22b7d4e9a3693ed71d4e8d77",
            "5355197c4641e4c732aad6680b3855c82015ca2a",
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7",
            "0825ca4eac7477e4ba1b3c64e2e3854f454ff2dd",
            "cd863fb7c4634e1575a626e5ad3322ad3562b556",
            "11373448adb006eee481c1123433ad3ff363f678",
            "3bf3959be37c02d758ea6eb5920fe8846e5876c3",
            "adeec57e5db6b18957c474a81e5eb362b49e3d83",
            "dc6c597f7fb5b5237b2042f58c8485ff850fe816",
            "379b87515bb33f7cde4f3dea6c8d571855c08658",
            "c980fbe8457f5d2e3f0a8a4b6e141438a735a774",
            "0913ae34521df68f96046b687db2d2bac7aeb37d",
            "5767f82c5bf4e85ada790437a9a0b45ff7712abe",
            "191f4b658066895e107293e85a0b8917fc96f591"
        ],
        "matched": [
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7"
        ]
    },
    {
        "repo_name": "eclipse-pde/eclipse.pde",
        "CVE_ID": "CVE-2023-4218",
        "Problem_Type": "CWE-611",
        "Description": "In Eclipse IDE versions < 2023-09 (4.29) some files with xml content are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review a foreign repository or patch).\n",
        "URL": "https://github.com/eclipse-pde/eclipse.pde/pull/667/",
        "Tag": "['Patch']",
        "fix_commit_hash": "7d66ed1cf12e84ab689f701d77e5108c190c2083",
        "inducing_commit_hash_pyszz": [
            "c8754be8f6e23e9c5aebf6bf11b59515e98d262d"
        ],
        "inducing_commit_hash_pd": [
            "2c364765d8b9a58ce79f57c3306b2f6fe7c7387e",
            "52c8c7a61a253773865e493c8fa1fb253cf39181",
            "acb48aaf8c736f5a12d1e9a3e296e5562961d5c3",
            "3db055f8cf1dc3125a1f2c653e961a0398426cf0",
            "e5217a8297fe7f8e78776da2da154d790306710e",
            "1f9254e084b3120f94e2a3f42c0d72dced201de1",
            "2aba9fdd580dc972328e77753b5b2c2877a694d4",
            "34b8e38ef25242a4992f61c8676569a8dcffc7f7",
            "47275134d4ca6c439428e0f5ff6ecec631731028",
            "0b41575786d9e493a07917d1918fe063460428b6",
            "5355197c4641e4c732aad6680b3855c82015ca2a",
            "40dfe90043bfaf39c8dac2fbc72b220162ab1d51",
            "66daaef898fd42e295517ebd6ff785d025405f21",
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7",
            "043752b64774b1e2bda509ecb0f4cdb55c72b255",
            "cd863fb7c4634e1575a626e5ad3322ad3562b556",
            "11373448adb006eee481c1123433ad3ff363f678",
            "bed6ce90e3916e76de844819681e599cafc5537e",
            "adeec57e5db6b18957c474a81e5eb362b49e3d83",
            "094feaaf10f881a20f4cdbb43831d3233f461b2c",
            "7dd409f50ac3da2b432dd990be2e4a8e40c02fe4",
            "0fab6a7eb36b715db39c74abe5a49254fefa4a9f",
            "56610fc586da8959c786fe7d08cb9da88efdeb26",
            "22c05f142881289b22e11436831f244d2db36f29",
            "ca8e5dacb615ebc9275d2205e586e4496bfc0a5a",
            "cc647f6bd81bcdb8a449b706c8d3d71024c43222",
            "0913ae34521df68f96046b687db2d2bac7aeb37d",
            "495c721097fd8703c544a8a69b7c64694d3b871d",
            "c8754be8f6e23e9c5aebf6bf11b59515e98d262d",
            "c07b0cdc28a4206abd133ba23d82ddb0dcfd9767",
            "cbe310c77dc8fcb9d13ac0a840863221b8e21d5d",
            "6f073b67691cd9293efe1e4373ac0872a80cd20d",
            "d27848be3abb2b602c36022a2b3878e143e6fe0f",
            "a2d67302f2d0f1aade9092a9dda4a447fb56c49b",
            "38d8b079e70204db721156832f6fc0ea8f91e99f",
            "65bcec620266f6f603010436b13d1104ff78a067",
            "210a927f015c0fd197ca1381f8083f31f6c87897"
        ],
        "matched": [
            "c8754be8f6e23e9c5aebf6bf11b59515e98d262d"
        ]
    },
    {
        "repo_name": "eclipse-platform/eclipse.platform",
        "CVE_ID": "CVE-2023-4218",
        "Problem_Type": "CWE-611",
        "Description": "In Eclipse IDE versions < 2023-09 (4.29) some files with xml content are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review a foreign repository or patch).\n",
        "URL": "https://github.com/eclipse-platform/eclipse.platform/pull/761",
        "Tag": "['Patch']",
        "fix_commit_hash": "d0ec0a8a6c1d8dbf19151bbb290a48b86edb1c28",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5dc372a0c5002b7f22e5d49eaa1cbf0916455daf"
        ],
        "matched": [
            "5dc372a0c5002b7f22e5d49eaa1cbf0916455daf"
        ]
    },
    {
        "repo_name": "eclipse-rap/org.eclipse.rap",
        "CVE_ID": "CVE-2023-4760",
        "Problem_Type": "CWE-22",
        "Description": "In Eclipse RAP versions from 3.0.0 up to and including 3.25.0, Remote Code Execution is possible on Windows when using the FileUpload component.\n\n\n\n\n\n\nThe reason for this is a not completely secure extraction of the file name in the FileUploadProcessor.stripFileName(String name) method. As soon as this finds a / in the path, everything before it is removed, but potentially \\ (backslashes) coming further back are kept.\n\nFor example, a file name such as /..\\..\\webapps\\shell.war can be used to upload a file to a Tomcat server under Windows, which is then saved as ..\\..\\webapps\\shell.war in its webapps directory and can then be executed.\n\n\n",
        "URL": "https://github.com/eclipse-rap/org.eclipse.rap/pull/141",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "221bb60a5833026d520541292977bcd5c4aa219f",
        "inducing_commit_hash_pyszz": [
            "5c9baadf6a211a8604ae9bdb1c6dce9b55fd5330"
        ],
        "inducing_commit_hash_pd": [
            "574a2f1cea7b7a256a9641534388dbc5bbcfe941",
            "aae43ee30a56dd5571a48b4a10add1bbfcdd4709"
        ],
        "matched": [
            "5c9baadf6a211a8604ae9bdb1c6dce9b55fd5330"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-26049",
        "Problem_Type": "CWE-200",
        "Description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9352",
        "Tag": "['Patch']",
        "fix_commit_hash": "1be1401bafb4c46fae3c234c8e93743a661dcf21",
        "inducing_commit_hash_pyszz": [
            "eef2481b59294b5783f3c4a3ea24f3262252c294"
        ],
        "inducing_commit_hash_pd": [
            "18c97123630b37d9275f00e001f9cd83a21fe90c",
            "fba010d33d2302ec2b7356da16a6bb71a1c11fdf",
            "dea2c340a40d60635ef620b51c3bf83baeb18a4f",
            "8dcd7e44d8e0a9042d5e1103715992774e0ae6fa",
            "c1c241349e76f38588c372723abe85dd13522094",
            "eef2481b59294b5783f3c4a3ea24f3262252c294",
            "318045cd876dd4fb050ee980a601d5e81ba1ab87"
        ],
        "matched": [
            "eef2481b59294b5783f3c4a3ea24f3262252c294"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-26049",
        "Problem_Type": "CWE-200",
        "Description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9339",
        "Tag": "['Patch']",
        "fix_commit_hash": "7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd",
        "inducing_commit_hash_pyszz": [
            "36ef97535303c06eabe7c5fa09dbe2f19a956695"
        ],
        "inducing_commit_hash_pd": [
            "012bfddddc2e9992adfc8ba69d4c98160f1d0f66",
            "18c97123630b37d9275f00e001f9cd83a21fe90c",
            "8dcd7e44d8e0a9042d5e1103715992774e0ae6fa",
            "fba010d33d2302ec2b7356da16a6bb71a1c11fdf",
            "1b1b2509475855012f72ff730b595a004751a53b",
            "c1c241349e76f38588c372723abe85dd13522094",
            "b7a7a53a18bd60c132d0a3e050bfa1125b924d42",
            "715a637c2b84f6af64abcd1605b8ab4760ef1a7f",
            "9fe27eb8e3d1ff96839f5dc33c8645974926967f",
            "254dc887435af950ec224aa97843b458f6e55d88",
            "26169491c9c6bf5a00cca26a357c962691548ff8",
            "eef2481b59294b5783f3c4a3ea24f3262252c294",
            "36ef97535303c06eabe7c5fa09dbe2f19a956695",
            "d37038496efc463591b7de5ed4322844149d7fb3",
            "925d38b9db21508c74a1e7f5beb0ff9f7bede909",
            "318045cd876dd4fb050ee980a601d5e81ba1ab87",
            "eaf22630538d18653c3f4409c9d21936f245a07f"
        ],
        "matched": [
            "36ef97535303c06eabe7c5fa09dbe2f19a956695"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36479",
        "Problem_Type": "CWE-149",
        "Description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.\n",
        "URL": "https://github.com/eclipse/jetty.project/pull/9516",
        "Tag": "['Patch']",
        "fix_commit_hash": "6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c",
        "inducing_commit_hash_pyszz": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5"
        ],
        "inducing_commit_hash_pd": [
            "2ea7843d867b69b61691541cadc8f091b14a7d28",
            "78cd94edb32f6bf250ce856f76cb8d9209b43b1d",
            "877815e1959963f051a1c425405b0a4360f8a9e7",
            "bf2740148a46278580985c4312b0c812b81093d5",
            "ccff4b834627dcb05dfaffd0f3ac1bd37bf85ce6",
            "6deb6a6446c866ca2791073580b0a69f806afebf",
            "767faece5c4692748d1ac8e130b2e4c5faa1ff20",
            "5a0811b328031c4da35c060bbcf33c5bdf3f04c5",
            "76a362d9ad1cdf9a8688e39c04aeeae06e2b81d9",
            "f7f7e0af7545e060f6508c7fe07b858fd58ebc3b",
            "0a32147e89a6ff8377c589ed1dc0f55142f02cdc",
            "b7a7a53a18bd60c132d0a3e050bfa1125b924d42",
            "bca7e75d9f0a1d0af376b4243d3ea3a4ab736e94",
            "5a1263b4bd03533ec8d6b055f4a5cdc051c6d574",
            "3d0300e60df9df6b8c8fd158b5dc80533bf58c62",
            "aea99b14aaff9a41337fab4427170814a53d85dd",
            "04acdb72f041a15267bb79c36d8fc4d517beaadb",
            "b9f45e9426d16c6a075e96df127775d37bd6d331",
            "57604d09558443dd80346f7bc63980481c2dea3c",
            "e7274e3bb128531f15dfd177b1ebef77bc548370",
            "fea8bb794dd85605b2c429ef41a505cc39361dc5",
            "77779ed6d8247536473d8c644cf8d13f78f543ca",
            "36c807c2f31d124b16b6981f66c472766e8a58ae",
            "65202e9abe2c56a05b45140e46c70a94b4119cbb",
            "5309b4b225b60dc021ca7a0b79f228528e489f2f",
            "da627b843fe81fa0fe52a046c1be8595630e9ae7"
        ],
        "matched": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36479",
        "Problem_Type": "CWE-149",
        "Description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.\n",
        "URL": "https://github.com/eclipse/jetty.project/pull/9889",
        "Tag": "['Patch']",
        "fix_commit_hash": "c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c",
        "inducing_commit_hash_pyszz": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ],
        "inducing_commit_hash_pd": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5",
            "da627b843fe81fa0fe52a046c1be8595630e9ae7"
        ],
        "matched": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36479",
        "Problem_Type": "CWE-149",
        "Description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.\n",
        "URL": "https://github.com/eclipse/jetty.project/pull/9888",
        "Tag": "['Patch']",
        "fix_commit_hash": "ec7e1fd173481e526db4092f558aa2b5aab57580",
        "inducing_commit_hash_pyszz": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ],
        "inducing_commit_hash_pd": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5",
            "da627b843fe81fa0fe52a046c1be8595630e9ae7"
        ],
        "matched": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-41900",
        "Problem_Type": "CWE-287",
        "Description": "Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9528",
        "Tag": "['Patch']",
        "fix_commit_hash": "24b7d06fd5ce5468caa3eaa93688879fb2900fda",
        "inducing_commit_hash_pyszz": [
            "58c230e26c7c226738b93ba3cdc508d7db05b507"
        ],
        "inducing_commit_hash_pd": [
            "b8af57153a5469e36f8a4c3786c1e3fd923ec4d3",
            "4bc32e314bd0a81f3f3be02bc71c1bd94258c619",
            "d33b96f4110b0cedd97af021bca28e6d58338d03",
            "cff6bb444a2f7e985febffda3d5b85dea4909d7d",
            "b3912d54feb441671b26a1eb5964306ea4dccbc0",
            "85cdc0d6c4c7dc860959178280f26c23ba400f99",
            "e9f260f4c3d32f0f9318ba3f075775b23fabb299",
            "58c230e26c7c226738b93ba3cdc508d7db05b507",
            "5f2c96dc582031a5dd99269cc65c8c80695a8301"
        ],
        "matched": [
            "58c230e26c7c226738b93ba3cdc508d7db05b507"
        ]
    },
    {
        "repo_name": "eclipse/milo",
        "CVE_ID": "CVE-2022-25897",
        "Problem_Type": "CWE-770",
        "Description": "The package org.eclipse.milo:sdk-server before 0.6.8 are vulnerable to Denial of Service (DoS) when bypassing the limitations for excessive memory consumption by sending multiple CloseSession requests with the deleteSubscription parameter equal to False.",
        "URL": "https://github.com/eclipse/milo/pull/1031",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7038e89a651771615b07342422e61e6e58e76730",
        "inducing_commit_hash_pyszz": [
            "d7ff6a26d586dcf617876727de8061676ff60680"
        ],
        "inducing_commit_hash_pd": [
            "21d3765c436b43e793a8137daf14b9b4df101840",
            "d7ff6a26d586dcf617876727de8061676ff60680",
            "65c2a94976830d366ad99235ec3a4a872cd54f84"
        ],
        "matched": [
            "d7ff6a26d586dcf617876727de8061676ff60680"
        ]
    },
    {
        "repo_name": "eclipse/rdf4j",
        "CVE_ID": "CVE-2018-20227",
        "Problem_Type": "CWE-22",
        "Description": "RDF4J 2.4.2 allows Directory Traversal via ../ in an entry in a ZIP archive.",
        "URL": "https://github.com/eclipse/rdf4j/pull/1211/commits/df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "6a4648c7294ac88b148c50cdb846345361323af4"
        ],
        "matched": [
            "6a4648c7294ac88b148c50cdb846345361323af4"
        ]
    },
    {
        "repo_name": "eclipse/wakaama",
        "CVE_ID": "CVE-2021-41040",
        "Problem_Type": "CWE-125",
        "Description": "In Eclipse Wakaama, ever since its inception until 2021-01-14, the CoAP parsing code does not properly sanitize network-received data.",
        "URL": "https://github.com/eclipse/wakaama/pull/640",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b5bbe367919d6906e1a1a78b2c4b82f1b5e60fc1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b1691d28c56b28ca1c317e79f365c3c282f8135e"
        ],
        "matched": [
            "b1691d28c56b28ca1c317e79f365c3c282f8135e"
        ]
    },
    {
        "repo_name": "edgexfoundry/edgex-go",
        "CVE_ID": "CVE-2022-31066",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "EdgeX Foundry is an open source project for building a common open framework for Internet of Things edge computing. Prior to version 2.1.1, the /api/v2/config endpoint exposes message bus credentials to local unauthenticated users. In security-enabled mode, message bus credentials are supposed to be kept in the EdgeX secret store and require authentication to access. This vulnerability bypasses the access controls on message bus credentials when running in security-enabled mode. (No credentials are required when running in security-disabled mode.) As a result, attackers could intercept data or inject fake data into the EdgeX message bus. Users should upgrade to EdgeXFoundry Kamakura release (2.2.0) or to the June 2022 EdgeXFoundry LTS Jakarta release (2.1.1) to receive a patch. More information about which go modules, docker containers, and snaps contain patches is available in the GitHub Security Advisory. There are currently no known workarounds for this issue.",
        "URL": "https://github.com/edgexfoundry/edgex-go/pull/4016",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1da00045c508a7d59c26af6ad2625d77986b1a8c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1bd504d4ec96644759bdb98a5e1b7a1cb9062b74"
        ],
        "matched": [
            "1bd504d4ec96644759bdb98a5e1b7a1cb9062b74"
        ]
    },
    {
        "repo_name": "eggjs/egg-scripts",
        "CVE_ID": "CVE-2018-3786",
        "Problem_Type": "CWE-78",
        "Description": "A command injection vulnerability in egg-scripts <v2.8.1 allows arbitrary shell command execution through a maliciously crafted command line argument.",
        "URL": "https://github.com/eggjs/egg-scripts/pull/26",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b98fd03d1e3aaed68004b881f0b3d42fe47341dd",
        "inducing_commit_hash_pyszz": [
            "b5559d54228543b5422047e6f056829df11f8c87"
        ],
        "inducing_commit_hash_pd": [
            "0f7ca502999c06a9cb05d8e5617f6045704511df",
            "b5559d54228543b5422047e6f056829df11f8c87",
            "8eda3d10cfea5757f220fd82b562fd5fef433440"
        ],
        "matched": [
            "b5559d54228543b5422047e6f056829df11f8c87"
        ]
    },
    {
        "repo_name": "eggjs/extend2",
        "CVE_ID": "CVE-2021-23568",
        "Problem_Type": "CWE-1321",
        "Description": "The package extend2 before 1.0.1 are vulnerable to Prototype Pollution via the extend function due to unsafe recursive merge.",
        "URL": "https://github.com/eggjs/extend2/pull/2",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa332a59116c8398976434b57ea477c6823054f8",
        "inducing_commit_hash_pyszz": [
            "00c66c07b331063a8edde66b046a5fde12a47cdc"
        ],
        "inducing_commit_hash_pd": [
            "5982d1c627c6bff70cf665577e7f23b169ac1e74",
            "00c66c07b331063a8edde66b046a5fde12a47cdc",
            "9fd4c58d81c03e63057c149071e054950b1dd839"
        ],
        "matched": [
            "00c66c07b331063a8edde66b046a5fde12a47cdc"
        ]
    },
    {
        "repo_name": "electron/electron",
        "CVE_ID": "CVE-2022-21718",
        "Problem_Type": "CWE-862",
        "Description": "Electron is a framework for writing cross-platform desktop applications using JavaScript, HTML and CSS. A vulnerability in versions prior to `17.0.0-alpha.6`, `16.0.6`, `15.3.5`, `14.2.4`, and `13.6.6` allows renderers to obtain access to a bluetooth device via the web bluetooth API if the app has not configured a custom `select-bluetooth-device` event handler. This has been patched and Electron versions `17.0.0-alpha.6`, `16.0.6`, `15.3.5`, `14.2.4`, and `13.6.6` contain the fix. Code from the GitHub Security Advisory can be added to the app to work around the issue.",
        "URL": "https://github.com/electron/electron/pull/32240",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ffbaa1d83f6612ae7f7aac03feeca62973cd36ba",
        "inducing_commit_hash_pyszz": [
            "a11f5cbb271091f5354550aa6c5da1164246c80f"
        ],
        "inducing_commit_hash_pd": [
            "a11f5cbb271091f5354550aa6c5da1164246c80f"
        ],
        "matched": [
            "a11f5cbb271091f5354550aa6c5da1164246c80f"
        ]
    },
    {
        "repo_name": "embedchain/embedchain",
        "CVE_ID": "CVE-2024-23731",
        "Problem_Type": "CWE-88",
        "Description": "The OpenAPI loader in Embedchain before 0.1.57 allows attackers to execute arbitrary code, related to the openapi.py yaml.load function argument.",
        "URL": "https://github.com/embedchain/embedchain/pull/1122",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f7696d1dc17e4de5333f468860bb91f7c420e0a4",
        "inducing_commit_hash_pyszz": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ],
        "inducing_commit_hash_pd": [
            "aee5bbb44b507d6f671355777561b8d5ed236b4c",
            "797bb567c6d05e8561bab202eb85efd1b7c5a197"
        ],
        "matched": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ]
    },
    {
        "repo_name": "embedchain/embedchain",
        "CVE_ID": "CVE-2024-23732",
        "Problem_Type": "CWE-1333",
        "Description": "The JSON loader in Embedchain before 0.1.57 allows a ReDoS (regular expression denial of service) via a long string to json.py.",
        "URL": "https://github.com/embedchain/embedchain/pull/1122",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f7696d1dc17e4de5333f468860bb91f7c420e0a4",
        "inducing_commit_hash_pyszz": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ],
        "inducing_commit_hash_pd": [
            "aee5bbb44b507d6f671355777561b8d5ed236b4c",
            "797bb567c6d05e8561bab202eb85efd1b7c5a197"
        ],
        "matched": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2020-35470",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Envoy before 1.16.1 logs an incorrect downstream address because it considers only the directly connected peer, not the information in the proxy protocol header. This affects situations with tcp-proxy as the network filter (not HTTP filters).",
        "URL": "https://github.com/envoyproxy/envoy/pull/14131",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31e225b628a316322a0bcbd237a143eade995d22",
        "inducing_commit_hash_pyszz": [
            "f8bfc6a16ffebf1ecb9cdf8eb1265912118ae7bf"
        ],
        "inducing_commit_hash_pd": [
            "5248a4fb7d4c2a3d1fa151f944d3a63f6b7a06cf",
            "3285c1a6b0647352f3561f42e2591bf29acb4f2d",
            "f8bfc6a16ffebf1ecb9cdf8eb1265912118ae7bf",
            "db2eddaeed36d4e027d8008e67eb37d2c1fd3a4a",
            "741df7aa13ddb15acbc77468579f0c6b58542839",
            "c0a01f95f7f9c9e99124c38931d50136298c7178"
        ],
        "matched": [
            "f8bfc6a16ffebf1ecb9cdf8eb1265912118ae7bf"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2020-35471",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Envoy before 1.16.1 mishandles dropped and truncated datagrams, as demonstrated by a segmentation fault for a UDP packet size larger than 1500.",
        "URL": "https://github.com/envoyproxy/envoy/pull/14122",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1ed6ddfb615307755643f810b078ca7fe9d771fa",
        "inducing_commit_hash_pyszz": [
            "8221eb993e7ab41e7dfd88e5f39c0e946fc3f87e"
        ],
        "inducing_commit_hash_pd": [
            "6c3c2b3dec83966ef6f84a8d767c4b5acc341aca",
            "477fafdaa8423cff1a5c22d58904c22eed9155f3",
            "d173319c99d7764daf1ef0d2e9009a94dba04790",
            "8221eb993e7ab41e7dfd88e5f39c0e946fc3f87e",
            "9ead261f63cf2d1833f2282d98c7071516970945",
            "44a8588219209c4b96fca2e7e9f009138e1f3ca6",
            "57ac960c54389dfa55df1d5c7db2754e3e326ffd"
        ],
        "matched": [
            "8221eb993e7ab41e7dfd88e5f39c0e946fc3f87e"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2021-21378",
        "Problem_Type": "CWE-287",
        "Description": "Envoy is a cloud-native high-performance edge/middle/service proxy. In Envoy version 1.17.0 an attacker can bypass authentication by presenting a JWT token with an issuer that is not in the provider list when Envoy's JWT Authentication filter is configured with the `allow_missing` requirement under `requires_any` due to a mistake in implementation. Envoy's JWT Authentication filter can be configured with the `allow_missing` requirement that will be satisfied if JWT is missing (JwtMissed error) and fail if JWT is presented or invalid. Due to a mistake in implementation, a JwtUnknownIssuer error was mistakenly converted to JwtMissed when `requires_any` was configured. So if `allow_missing` was configured under `requires_any`, an attacker can bypass authentication by presenting a JWT token with an issuer that is not in the provider list. Integrity may be impacted depending on configuration if the JWT token is used to protect against writes or modifications. This regression was introduced on 2020/11/12 in PR 13839 which fixed handling `allow_missing` under RequiresAny in a JwtRequirement (see issue 13458). The AnyVerifier aggregates the children verifiers' results into a final status where JwtMissing is the default error. However, a JwtUnknownIssuer was mistakenly treated the same as a JwtMissing error and the resulting final aggregation was the default JwtMissing. As a result, `allow_missing` would allow a JWT token with an unknown issuer status. This is fixed in version 1.17.1 by PR 15194. The fix works by preferring JwtUnknownIssuer over a JwtMissing error, fixing the accidental conversion and bypass with `allow_missing`. A user could detect whether a bypass occurred if they have Envoy logs enabled with debug verbosity. Users can enable component level debug logs for JWT. The JWT filter logs will indicate that there is a request with a JWT token and a failure that the JWT token is missing.",
        "URL": "https://github.com/envoyproxy/envoy/pull/15194",
        "Tag": "['Patch']",
        "fix_commit_hash": "ea39e3cba652bcc4b11bb0d5c62b017e584d2e5a",
        "inducing_commit_hash_pyszz": [
            "9270506f9f2b6786c21719bed3a97a6e0e71a760"
        ],
        "inducing_commit_hash_pd": [
            "ae5d9c4bd5f56a25149b8e2b3bcb0747b0228670",
            "9270506f9f2b6786c21719bed3a97a6e0e71a760"
        ],
        "matched": [
            "9270506f9f2b6786c21719bed3a97a6e0e71a760"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2022-21657",
        "Problem_Type": "CWE-295",
        "Description": "Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions Envoy does not restrict the set of certificates it accepts from the peer, either as a TLS client or a TLS server, to only those certificates that contain the necessary extendedKeyUsage (id-kp-serverAuth and id-kp-clientAuth, respectively). This means that a peer may present an e-mail certificate (e.g. id-kp-emailProtection), either as a leaf certificate or as a CA in the chain, and it will be accepted for TLS. This is particularly bad when combined with the issue described in pull request #630, in that it allows a Web PKI CA that is intended only for use with S/MIME, and thus exempted from audit or supervision, to issue TLS certificates that will be accepted by Envoy. As a result Envoy will trust upstream certificates that should not be trusted. There are no known workarounds to this issue. Users are advised to upgrade.",
        "URL": "https://github.com/envoyproxy/envoy/pull/630",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6c9e95593282befdc51473a082aa2589d2ce3bf",
        "inducing_commit_hash_pyszz": [
            "13cfaf40ebda10bdbe67079b3820e11cbe684e13"
        ],
        "inducing_commit_hash_pd": [
            "0e16148b83547486383714e412ee4bad4b054099",
            "3285c1a6b0647352f3561f42e2591bf29acb4f2d",
            "f17c288959fdf37d4ec0d9ccd764883437d53a36",
            "8337bb12f2e9eb628315420aca4fd184fab1abc4",
            "13cfaf40ebda10bdbe67079b3820e11cbe684e13",
            "a1aceb85e6c7da06c8972ee67c8a216ab383bd85",
            "1c6da3abe4eef9516edb52bcde464b2059e4237a",
            "88ed42a8ffe2cfa0029653222786eaec2bc1d13f"
        ],
        "matched": [
            "13cfaf40ebda10bdbe67079b3820e11cbe684e13"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/envoyproxy/envoy/pull/30055",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f737277d9f7841675670a93e6b01415ee26abb8b",
        "inducing_commit_hash_pyszz": [
            "bfec1286b63dfb4c54409f5a6f65876385c5d750"
        ],
        "inducing_commit_hash_pd": [
            "b93886ca040795407efc641f8b41eaf35e7bf1bb",
            "3f1c9d7866a5ce557c7754d06420a5cbb17dfe8c",
            "bfec1286b63dfb4c54409f5a6f65876385c5d750",
            "1a7b32de759939f82af2cf7e83471aff5d57c93d",
            "5ddb5f45f4405dcc43175e5995821da4ac892ccb",
            "4ad03270ea93fed5ad13ed78800617e5b665fd79"
        ],
        "matched": [
            "bfec1286b63dfb4c54409f5a6f65876385c5d750"
        ]
    },
    {
        "repo_name": "eProsima/Fast-DDS",
        "CVE_ID": "CVE-2023-42459",
        "Problem_Type": "CWE-415",
        "Description": "Fast DDS is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group). In affected versions specific DATA submessages can be sent to a discovery locator which may trigger a free error. This can remotely crash any Fast-DDS process. The call to free() could potentially leave the pointer in the attackers control which could lead to a double free. This issue has been addressed in versions 2.12.0, 2.11.3, 2.10.3, and 2.6.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
        "URL": "https://github.com/eProsima/Fast-DDS/pull/3824",
        "Tag": "['Patch']",
        "fix_commit_hash": "47fe5d7636769706fcf71bf7d183c34c64837e37",
        "inducing_commit_hash_pyszz": [
            "f9d722f13fbddaeaf3d4b94acfb6ba2c179318a1"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "f9d722f13fbddaeaf3d4b94acfb6ba2c179318a1"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-24725",
        "Problem_Type": "CWE-78",
        "Description": "Shescape is a shell escape package for JavaScript. An issue in versions 1.4.0 to 1.5.1 allows for exposure of the home directory on Unix systems when using Bash with the `escape` or `escapeAll` functions from the _shescape_ API with the `interpolation` option set to `true`. Other tested shells, Dash and Zsh, are not affected. Depending on how the output of _shescape_ is used, directory traversal may be possible in the application using _shescape_. The issue was patched in version 1.5.1. As a workaround, manually escape all instances of the tilde character (`~`) using `arg.replace(/~/g, \"\\\\~\")`.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/170",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "413810c786687f73824313a45d4fe287e4957d3f",
        "inducing_commit_hash_pyszz": [
            "e0c928aabe97822bddb3da3624ab09e272c46488"
        ],
        "inducing_commit_hash_pd": [
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde"
        ],
        "matched": [
            "e0c928aabe97822bddb3da3624ab09e272c46488"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-31179",
        "Problem_Type": "CWE-74",
        "Description": "Shescape is a simple shell escape package for JavaScript. Versions prior to 1.5.8 were found to be subject to code injection on windows. This impacts users that use Shescape (any API function) to escape arguments for cmd.exe on Windows An attacker can omit all arguments following their input by including a line feed character (`'\\n'`) in the payload. This bug has been patched in [v1.5.8] which you can upgrade to now. No further changes are required. Alternatively, line feed characters (`'\\n'`) can be stripped out manually or the user input can be made the last argument (this only limits the impact).",
        "URL": "https://github.com/ericcornelissen/shescape/pull/332",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aceea7358f7222984e21260381ebc5ec4543b76f",
        "inducing_commit_hash_pyszz": [
            "10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"
        ],
        "inducing_commit_hash_pd": [
            "021c350500d8947b7ccc31eb78c78602f786c36b",
            "7a4fa93db29f5e19a23ecf9cfb802fc69dbbf7bf",
            "d4f4c3a49a9e2ea38f2541c1dd3cbf09dc183363",
            "ddea281f70b510f07b9cc9d9f0a6bf3c039860c3",
            "b888aafd679972b4c31474377d5a40f41a16b1fe",
            "10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"
        ],
        "matched": [
            "10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-31180",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Shescape is a simple shell escape package for JavaScript. Affected versions were found to have insufficient escaping of white space when interpolating output. This issue only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. The result is that if an attacker is able to include whitespace in their input they can: 1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace. 2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. 3. Invoke arbitrary commands by inserting a line feed character. 4. Invoke arbitrary commands by inserting a carriage return character. Behaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required. Behaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required. The best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations. Alternatively, users may strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/322",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "021c350500d8947b7ccc31eb78c78602f786c36b",
        "inducing_commit_hash_pyszz": [
            "ccbb6c9dea5ea706fff7dac765f9004924399145"
        ],
        "inducing_commit_hash_pd": [
            "ccbb6c9dea5ea706fff7dac765f9004924399145",
            "9fb048682921621b05af1bbbb7acc9a4492d6dd2",
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde"
        ],
        "matched": [
            "ccbb6c9dea5ea706fff7dac765f9004924399145"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-31180",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Shescape is a simple shell escape package for JavaScript. Affected versions were found to have insufficient escaping of white space when interpolating output. This issue only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. The result is that if an attacker is able to include whitespace in their input they can: 1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace. 2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. 3. Invoke arbitrary commands by inserting a line feed character. 4. Invoke arbitrary commands by inserting a carriage return character. Behaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required. Behaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required. The best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations. Alternatively, users may strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/324",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "994af9269c0b7ad07908b93566462a8889cd4ca6",
        "inducing_commit_hash_pyszz": [
            "3f81f7f406748582660deaf0edde77d240f44ce2"
        ],
        "inducing_commit_hash_pd": [
            "d1f31ccc612cc6bb883958cdec72b386af2894f6",
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde",
            "3f81f7f406748582660deaf0edde77d240f44ce2",
            "b888aafd679972b4c31474377d5a40f41a16b1fe"
        ],
        "matched": [
            "3f81f7f406748582660deaf0edde77d240f44ce2"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-36064",
        "Problem_Type": "CWE-1333",
        "Description": "Shescape is a shell escape package for JavaScript. An Inefficient Regular Expression Complexity vulnerability impacts users that use Shescape to escape arguments for the Unix shells `Bash` and `Dash`, or any not-officially-supported Unix shell; and/or using the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. An attacker can cause polynomial backtracking or quadratic runtime in terms of the input string length due to two Regular Expressions in Shescape that are vulnerable to Regular Expression Denial of Service (ReDoS). This bug has been patched in v1.5.10. For `Dash` only, this bug has been patched since v1.5.9. As a workaround, a maximum length can be enforced on input strings to Shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/373",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "efc60194f4b9e34f148f757ed70c040122f38960",
        "inducing_commit_hash_pyszz": [
            "cf0a910e82bff1afec300416c756f3ddb8c7efa3"
        ],
        "inducing_commit_hash_pd": [
            "f50a1ea9ad66885cb186aa58648ac129f51f57c7",
            "aceea7358f7222984e21260381ebc5ec4543b76f",
            "174ef2a46c06f4b4db3b7311552a3cdd80166bc5",
            "9b80120085660a062acf2d1e2b74b7a3d6304003",
            "3f81f7f406748582660deaf0edde77d240f44ce2",
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde",
            "a64379a62f47aa63d88888fa703ff731a29354e7",
            "d4f4c3a49a9e2ea38f2541c1dd3cbf09dc183363",
            "aac2dcd6a1c57693794b99de64738f3c211fe4ba",
            "b888aafd679972b4c31474377d5a40f41a16b1fe",
            "994af9269c0b7ad07908b93566462a8889cd4ca6",
            "f1ae4b833fe9b57b08749955c786ffa12d3107d4",
            "cb0d066a11619b33d094b7b74a44bb2a3823d6d0",
            "867b336690f81f5768c9c61d955285178ea28a6d",
            "322a5452e1bb647307267c009c44ddea453e34fc",
            "91ade01f6119107a2e181a2fcd2dd4a3c003bc37",
            "cf0a910e82bff1afec300416c756f3ddb8c7efa3",
            "7a4fa93db29f5e19a23ecf9cfb802fc69dbbf7bf",
            "9fb048682921621b05af1bbbb7acc9a4492d6dd2",
            "96e7289beed437eccc0808328f82c564d574f895",
            "d1f31ccc612cc6bb883958cdec72b386af2894f6",
            "51dda2b6472c1c0ae45b742a10d23ec02d00a751"
        ],
        "matched": [
            "cf0a910e82bff1afec300416c756f3ddb8c7efa3"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2023-35931",
        "Problem_Type": "CWE-526",
        "Description": "Shescape is a simple shell escape library for JavaScript. An attacker may be able to get read-only access to environment variables. This bug has been patched in version 1.7.1.\n\n\n",
        "URL": "https://github.com/ericcornelissen/shescape/pull/982",
        "Tag": "['Patch']",
        "fix_commit_hash": "d0fce70f987ac0d8331f93cb45d47e79436173ac",
        "inducing_commit_hash_pyszz": [
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4"
        ],
        "inducing_commit_hash_pd": [
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4",
            "7a4fa93db29f5e19a23ecf9cfb802fc69dbbf7bf",
            "e183cfda431216c87bae4773f32c8bc527c64f58"
        ],
        "matched": [
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2023-40185",
        "Problem_Type": "CWE-150",
        "Description": "shescape is simple shell escape library for JavaScript. This may impact users that use Shescape on Windows in a threaded context. The vulnerability can result in Shescape escaping (or quoting) for the wrong shell, thus allowing attackers to bypass protections depending on the combination of expected and used shell. This bug has been patched in version 1.7.4.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/1142",
        "Tag": "['Patch']",
        "fix_commit_hash": "0b976dab645abf45ffd85e74a8c6e51ee2f42d63",
        "inducing_commit_hash_pyszz": [
            "df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2"
        ],
        "inducing_commit_hash_pd": [
            "e4b6dbc8daeff15668f3c064402e06e7675d0923",
            "132f541fc61e18e011d1c6a28631e2e729da7aa1",
            "72b2baf0e01ff8c61d88c9fc00b88158692c8f84",
            "45ffb7ba3fb41557f043d6bdbdaaa2341884cd4c",
            "862d00e628ace268b32105ebec23f238a6760b3c",
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4",
            "5ec38a436581b1cd77fd1edba89cbf249430d0d8",
            "ab6eaf534d9aa5733f4f2515254fcb4593167bc2",
            "230d6b33d8111d069a3483fc4bf21cc75e20a4cb",
            "ced027a9a382afe17034d69b8bc9ee0d76f023e7",
            "71bb52dfd9a09992f172360ff430b336343fff7a",
            "656d76277b8daf60256ce92d089e0816bb0d6cd9",
            "83752afc29fdf7082382f05b4631df024ed272d2",
            "df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2",
            "e183cfda431216c87bae4773f32c8bc527c64f58",
            "0a9936d198604012bd3ef70815da419333494ca6",
            "e9fe111455bfe8656cfd12113bf203bd7b81cb47",
            "9fb048682921621b05af1bbbb7acc9a4492d6dd2",
            "7599e260d5406395621e6280dd328c2146cced0e",
            "ce70506e71e1b86b992cdcab592ebe2de8535cb2",
            "850448b82e24dc3cfa7e29198c04a3cbbf64b72b",
            "299506e1b256bec72ff5322fdf3c4f261a32e050",
            "a45ba4d80da893c3bcd6560e913d1b284cf942ad"
        ],
        "matched": [
            "df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2"
        ]
    },
    {
        "repo_name": "erikd/libsndfile",
        "CVE_ID": "CVE-2019-3832",
        "Problem_Type": "CWE-125",
        "Description": "It was discovered the fix for CVE-2018-19758 (libsndfile) was not complete and still allows a read beyond the limits of a buffer in wav_write_header() function in wav.c. A local attacker may use this flaw to make the application crash.",
        "URL": "https://github.com/erikd/libsndfile/pull/460",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6d7ce94c020cc720a6b28719d1a7879181790008",
        "inducing_commit_hash_pyszz": [
            "42132c543358cee9f7c3e9e9b15bb6c1063a608e"
        ],
        "inducing_commit_hash_pd": [
            "42132c543358cee9f7c3e9e9b15bb6c1063a608e"
        ],
        "matched": [
            "42132c543358cee9f7c3e9e9b15bb6c1063a608e"
        ]
    },
    {
        "repo_name": "esphome/esphome",
        "CVE_ID": "CVE-2021-41104",
        "Problem_Type": "CWE-306",
        "Description": "ESPHome is a system to control the ESP8266/ESP32. Anyone with web_server enabled and HTTP basic auth configured on version 2021.9.1 or older is vulnerable to an issue in which `web_server` allows over-the-air (OTA) updates without checking user defined basic auth username & password. This issue is patched in version 2021.9.2. As a workaround, one may disable or remove `web_server`.",
        "URL": "https://github.com/esphome/esphome/pull/2409/commits/207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2234f6aacf8cc653307fed80f3750317a82c4f83",
        "inducing_commit_hash_pyszz": [
            "be965a60eba6bb769e2a5afdbc8eed132f077a59"
        ],
        "inducing_commit_hash_pd": [
            "be965a60eba6bb769e2a5afdbc8eed132f077a59"
        ],
        "matched": [
            "be965a60eba6bb769e2a5afdbc8eed132f077a59"
        ]
    },
    {
        "repo_name": "eteran/edb-debugger",
        "CVE_ID": "CVE-2023-27734",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue found in Eteran edb-debugger v.1.3.0 allows a local attacker to causea denial of service via the collect_symbols function in plugins/BinaryInfo/symbols.cpp.",
        "URL": "https://github.com/eteran/edb-debugger/pull/834/commits/32f325f4016e0090f76934320173581860f090be",
        "Tag": "['Patch']",
        "fix_commit_hash": "4c8246648158fff3ec3e486aeb2f276b3ff56297",
        "inducing_commit_hash_pyszz": [
            "9bb38a871c11b16cb3db5e7e3a12d37a825de0d9"
        ],
        "inducing_commit_hash_pd": [
            "9bb38a871c11b16cb3db5e7e3a12d37a825de0d9",
            "8be6dc4491aa5fd5c0556e00abd334271d3f318b"
        ],
        "matched": [
            "9bb38a871c11b16cb3db5e7e3a12d37a825de0d9"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2018-12018",
        "Problem_Type": "CWE-129",
        "Description": "The GetBlockHeadersMsg handler in the LES protocol implementation in Go Ethereum (aka geth) before 1.8.11 may lead to an access violation because of an integer signedness error for the array index, which allows attackers to launch a Denial of Service attack by sending a packet with a -1 query.Skip value. The vulnerable remote node would be crashed by such an attack immediately, aka the EPoD (Ethereum Packet of Death) issue.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/16891",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a5237a27eaf81946a3edb4fafe13ed6359d119e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "9f8d192991c4f68fa14c91366722bbca601da117"
        ],
        "matched": [
            "9f8d192991c4f68fa14c91366722bbca601da117"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2020-26240",
        "Problem_Type": "CWE-682",
        "Description": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. An ethash mining DAG generation flaw in Geth before version 1.9.24 could cause miners to erroneously calculate PoW in an upcoming epoch (estimated early January, 2021). This happened on the ETC chain on 2020-11-06. This issue is relevant only for miners, non-mining nodes are unaffected. This issue is fixed as of 1.9.24",
        "URL": "https://github.com/ethereum/go-ethereum/pull/21793",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d990df909d7839640143344e79356754384dcdd0",
        "inducing_commit_hash_pyszz": [
            "3b00a77de57ab2737a7887521c192ce004c721e3"
        ],
        "inducing_commit_hash_pd": [
            "f3579f6460ed90a29cca77ffcbcd8047427b686b",
            "567d41d9363706b4b13ce0903804e8acf214af49",
            "5c8fa6ae1a42813e7aec477bd68d98f66f85e0b8"
        ],
        "matched": [
            "3b00a77de57ab2737a7887521c192ce004c721e3"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2020-26264",
        "Problem_Type": "CWE-400",
        "Description": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. In Geth before version 1.9.25 a denial-of-service vulnerability can make a LES server crash via malicious GetProofsV2 request from a connected LES client. This vulnerability only concerns users explicitly enabling les server; disabling les prevents the exploit. The vulnerability was patched in version 1.9.25.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/21896",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bddd103a9f0af27ef533f04e06ea429cf76b6d46",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2ed729d38e90154d1f23ebdf5a9f2808212276d8"
        ],
        "matched": [
            "2ed729d38e90154d1f23ebdf5a9f2808212276d8"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2021-41173",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Go Ethereum is the official Golang implementation of the Ethereum protocol. Prior to version 1.10.9, a vulnerable node is susceptible to crash when processing a maliciously crafted message from a peer. Version v1.10.9 contains patches to the vulnerability. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/23801",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e40b37718326b8b4873b3b00a0db2e6c6d9ea738",
        "inducing_commit_hash_pyszz": [
            "3501163d4f297346d937a1a4b6d968d79aa484c8"
        ],
        "inducing_commit_hash_pd": [
            "3501163d4f297346d937a1a4b6d968d79aa484c8"
        ],
        "matched": [
            "3501163d4f297346d937a1a4b6d968d79aa484c8"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2022-29177",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Go Ethereum is the official Golang implementation of the Ethereum protocol. Prior to version 1.10.17, a vulnerable node, if configured to use high verbosity logging, can be made to crash when handling specially crafted p2p messages sent from an attacker node. Version 1.10.17 contains a patch that addresses the problem. As a workaround, setting loglevel to default level (`INFO`) makes the node not vulnerable to this attack.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/24507",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "870b4505a05cd8b3604078ed4afcd3012bf72a47",
        "inducing_commit_hash_pyszz": [
            "691cb90284b9b63dc9c80bf0716ba35036ca78fe"
        ],
        "inducing_commit_hash_pd": [
            "7964f30dcbdde00b2960ef6e98320e0a0f9300e2",
            "691cb90284b9b63dc9c80bf0716ba35036ca78fe",
            "9c7281c17ebbdd6a8c10ecc618bcb9121215a21f",
            "5bdc1159433138d92ed6fefb253e3c6ed3a43995"
        ],
        "matched": [
            "691cb90284b9b63dc9c80bf0716ba35036ca78fe"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2018-19535",
        "Problem_Type": "CWE-125",
        "Description": "In Exiv2 0.26 and previous versions, PngChunk::readRawProfile in pngchunk_int.cpp may cause a denial of service (application crash due to a heap-based buffer over-read) via a crafted PNG file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/430",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d32da890b0739243c318b3611125b297afb74ff",
        "inducing_commit_hash_pyszz": [
            "a6a1c311404534d8ff54327972f13ce4d718e0a0"
        ],
        "inducing_commit_hash_pd": [
            "a6a1c311404534d8ff54327972f13ce4d718e0a0"
        ],
        "matched": [
            "a6a1c311404534d8ff54327972f13ce4d718e0a0"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13110",
        "Problem_Type": "CWE-125",
        "Description": "A CiffDirectory::readDirectory integer overflow and out-of-bounds read in Exiv2 through 0.27.1 allows an attacker to cause a denial of service (SIGSEGV) via a crafted CRW image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/844",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0ecc2ae36f34462be98623deb85ba1747ae2175",
        "inducing_commit_hash_pyszz": [
            "b3d077dcaefb6747fff8204490f33eba5a144edb"
        ],
        "inducing_commit_hash_pd": [
            "b3d077dcaefb6747fff8204490f33eba5a144edb"
        ],
        "matched": [
            "b3d077dcaefb6747fff8204490f33eba5a144edb"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13113",
        "Problem_Type": "CWE-617",
        "Description": "Exiv2 through 0.27.1 allows an attacker to cause a denial of service (crash due to assertion failure) via an invalid data location in a CRW image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/842",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7798ae25574425271305fffe85de77bec8df03f1",
        "inducing_commit_hash_pyszz": [
            "00a3ef321b16882f1f6d424a10a753d2712334dd"
        ],
        "inducing_commit_hash_pd": [
            "d3748152a70e6e3c54011f23c9d16b66d5e8dccc",
            "00a3ef321b16882f1f6d424a10a753d2712334dd"
        ],
        "matched": [
            "00a3ef321b16882f1f6d424a10a753d2712334dd"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13114",
        "Problem_Type": "CWE-476",
        "Description": "http.c in Exiv2 through 0.27.1 allows a malicious http server to cause a denial of service (crash due to a NULL pointer dereference) by returning a crafted response that lacks a space character.",
        "URL": "https://github.com/Exiv2/exiv2/pull/815",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ae20c30805b330275b2aa0303a42e1f2bbd53661",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "d393b0fa7e3bad7e8837a3b3f8a9f46bf79a5399"
        ],
        "matched": [
            "d393b0fa7e3bad7e8837a3b3f8a9f46bf79a5399"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-14982",
        "Problem_Type": "CWE-190",
        "Description": "In Exiv2 before v0.27.2, there is an integer overflow vulnerability in the WebPImage::getHeaderOffset function in webpimage.cpp. It can lead to a buffer overflow vulnerability and a crash.",
        "URL": "https://github.com/Exiv2/exiv2/pull/962/commits/e925bc5addd881543fa503470c8a859e112cca62",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e925bc5addd881543fa503470c8a859e112cca62",
        "inducing_commit_hash_pyszz": [
            "85cc2f745de635c45f846c7afe2578592310f2d2"
        ],
        "inducing_commit_hash_pd": [
            "85cc2f745de635c45f846c7afe2578592310f2d2"
        ],
        "matched": [
            "85cc2f745de635c45f846c7afe2578592310f2d2"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-29623",
        "Problem_Type": "CWE-908",
        "Description": "Exiv2 is a C++ library and a command-line utility to read, write, delete and modify Exif, IPTC, XMP and ICC image metadata. A read of uninitialized memory was found in Exiv2 versions v0.27.3 and earlier. Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. The read of uninitialized memory is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to leak a few bytes of stack memory, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.4.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1627",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0f9eb74c44c908e170a64cab590949d53749af8e",
        "inducing_commit_hash_pyszz": [
            "b3f107bd8ce7ae5790a327580f0a8b2c749855ef"
        ],
        "inducing_commit_hash_pd": [
            "b3f107bd8ce7ae5790a327580f0a8b2c749855ef"
        ],
        "matched": [
            "b3f107bd8ce7ae5790a327580f0a8b2c749855ef"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-34335",
        "Problem_Type": "CWE-369",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A floating point exception (FPE) due to an integer divide by zero was found in Exiv2 versions v0.27.4 and earlier. The FPE is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1750",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cdec9dd774cd4b942a7aafb57f640de98f1e19e1",
        "inducing_commit_hash_pyszz": [
            "f4d3adbf91e6dc4e34aee5bac7b7fd9e127a5c00"
        ],
        "inducing_commit_hash_pd": [
            "f4d3adbf91e6dc4e34aee5bac7b7fd9e127a5c00",
            "6e4404da81fd9392e6251ec0a48d3967d090a48f",
            "cff1efe122330771d5d792aebc25a4f1ec705abc"
        ],
        "matched": [
            "f4d3adbf91e6dc4e34aee5bac7b7fd9e127a5c00"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37619",
        "Problem_Type": "CWE-125",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service by crashing Exiv2, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as insert. The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1752",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "86d0a1d5d9f6dc41013a6690408add974e59167c",
        "inducing_commit_hash_pyszz": [
            "e118d145150649f79bd9e60807ec7c48b8cd433d"
        ],
        "inducing_commit_hash_pd": [
            "18ecd0e8901a9ca775f1a064c3da6d8b944dea53",
            "e118d145150649f79bd9e60807ec7c48b8cd433d"
        ],
        "matched": [
            "e118d145150649f79bd9e60807ec7c48b8cd433d"
        ]
    },
    {
        "repo_name": "exoplatform/chat-application",
        "CVE_ID": "CVE-2022-4902",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in eXo Chat Application. Affected is an unknown function of the file application/src/main/webapp/vue-app/components/ExoChatMessageComposer.vue of the component Mention Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 3.3.0-20220417 is able to address this issue. The name of the patch is 26bf307d3658d1403cfd5c3ad423ce4c4d1cb2dc. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-220212.",
        "URL": "https://github.com/exoplatform/chat-application/pull/485",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "26bf307d3658d1403cfd5c3ad423ce4c4d1cb2dc",
        "inducing_commit_hash_pyszz": [
            "40f814ff9a2956a23c0e5a68d75203c08d20940b"
        ],
        "inducing_commit_hash_pd": [
            "40f814ff9a2956a23c0e5a68d75203c08d20940b",
            "d217644198dc6ba0a5c6b0d73fb5f19ada4d81dc"
        ],
        "matched": [
            "40f814ff9a2956a23c0e5a68d75203c08d20940b"
        ]
    },
    {
        "repo_name": "expo/expo",
        "CVE_ID": "CVE-2020-24653",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "secure-store in Expo through 2.16.1 on iOS provides the insecure kSecAttrAccessibleAlwaysThisDeviceOnly policy when WHEN_UNLOCKED_THIS_DEVICE_ONLY is used.",
        "URL": "https://github.com/expo/expo/pull/9264",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d82bf07fae2c96273e9189997e521359cffc1a9",
        "inducing_commit_hash_pyszz": [
            "748878b742713789a0b3ab7296024b9dbd7caf6d"
        ],
        "inducing_commit_hash_pd": [
            "748878b742713789a0b3ab7296024b9dbd7caf6d"
        ],
        "matched": [
            "748878b742713789a0b3ab7296024b9dbd7caf6d"
        ]
    },
    {
        "repo_name": "facade/ignition",
        "CVE_ID": "CVE-2021-43996",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The Ignition component before 1.16.15, and 2.0.x before 2.0.6, for Laravel has a \"fix variable names\" feature that can lead to incorrect access control.",
        "URL": "https://github.com/facade/ignition/pull/285",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c606a03b164eab2cbeac6b0bf8cfced0f4678989",
        "inducing_commit_hash_pyszz": [
            "02a6e4e23838c76951e1459fe587028162f602b8"
        ],
        "inducing_commit_hash_pd": [
            "22514b03a9a9f5656cb8a60a468d404f24acb9b8",
            "02a6e4e23838c76951e1459fe587028162f602b8"
        ],
        "matched": [
            "02a6e4e23838c76951e1459fe587028162f602b8"
        ]
    },
    {
        "repo_name": "facebook/create-react-app",
        "CVE_ID": "CVE-2021-24033",
        "Problem_Type": "CWE-78",
        "Description": "react-dev-utils prior to v11.0.4 exposes a function, getProcessForPort, where an input argument is concatenated into a command string to be executed. This function is typically used from react-scripts (in Create React App projects), where the usage is safe. Only when this function is manually invoked with user-provided values (ie: by custom code) is there the potential for command injection. If you're consuming it from react-scripts then this issue does not affect you.",
        "URL": "https://github.com/facebook/create-react-app/pull/10644",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f5e415f3a5b66f07dcc60aba1b445fa7cda97268",
        "inducing_commit_hash_pyszz": [
            "be43292445bd6b25ac825586c19fd300d5ea2955"
        ],
        "inducing_commit_hash_pd": [
            "be43292445bd6b25ac825586c19fd300d5ea2955"
        ],
        "matched": [
            "be43292445bd6b25ac825586c19fd300d5ea2955"
        ]
    },
    {
        "repo_name": "facebook/proxygen",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/facebook/proxygen/pull/466",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "34a804d4b5a6a49357ac9d809ed546600e5e6be1",
        "inducing_commit_hash_pyszz": [
            "57ea6fffb5b3b1dab068633d916e0e83ae2f4dde"
        ],
        "inducing_commit_hash_pd": [
            "57ea6fffb5b3b1dab068633d916e0e83ae2f4dde",
            "6864e68beeaa00a5f4146f66aed54f72ba7942f7",
            "e230e7f656fd3a4d075c9b32c09c8778257c5647",
            "a52d8cd1617673449fb32e9bd2c879db2079d04c"
        ],
        "matched": [
            "57ea6fffb5b3b1dab068633d916e0e83ae2f4dde"
        ]
    },
    {
        "repo_name": "facebook/zstd",
        "CVE_ID": "CVE-2019-11922",
        "Problem_Type": "CWE-362",
        "Description": "A race condition in the one-pass compression functions of Zstandard prior to version 1.3.8 could allow an attacker to write bytes out of bounds if an output buffer smaller than the recommended size was used.",
        "URL": "https://github.com/facebook/zstd/pull/1404/commits/3e5cdf1b6a85843e991d7d10f6a2567c15580da0",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e5cdf1b6a85843e991d7d10f6a2567c15580da0",
        "inducing_commit_hash_pyszz": [
            "ced6e6189cf02b2de9bfcd7191f77cf9ff07f345"
        ],
        "inducing_commit_hash_pd": [
            "f4ce8913a33bc82a1bcfaafd3440b0ed69b966a6",
            "d1d210f3fb3675e0f6b79545f3fef309b02339dc",
            "ced6e6189cf02b2de9bfcd7191f77cf9ff07f345",
            "346bffbc681d9b2aab9b041c228a040f71796a35"
        ],
        "matched": [
            "ced6e6189cf02b2de9bfcd7191f77cf9ff07f345"
        ]
    },
    {
        "repo_name": "FAForever/fa",
        "CVE_ID": "CVE-2022-4879",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A vulnerability was found in Forged Alliance Forever up to 3746. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the component Vote Handler. The manipulation leads to improper authorization. Upgrading to version 3747 is able to address this issue. The patch is named 6880971bd3d73d942384aff62d53058c206ce644. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217555.",
        "URL": "https://github.com/FAForever/fa/pull/4398",
        "Tag": "['Patch']",
        "fix_commit_hash": "6880971bd3d73d942384aff62d53058c206ce644",
        "inducing_commit_hash_pyszz": [
            "ba20074d7cb38fbc769c1f3d4e5305a56084d75d"
        ],
        "inducing_commit_hash_pd": [
            "ba20074d7cb38fbc769c1f3d4e5305a56084d75d",
            "b1e44ebd48b5e7dd82d9007ec10f261a5ed5732e",
            "3030487bd255ad74c484a917e8c3977b58bfe90d",
            "740f918d3d5d1df05c6444ebc26227485e1e6405",
            "ce3da3a03745dcaa188b3715d979d1a2d5ed6d62"
        ],
        "matched": [
            "ba20074d7cb38fbc769c1f3d4e5305a56084d75d"
        ]
    },
    {
        "repo_name": "falcosecurity/falco",
        "CVE_ID": "CVE-2019-8339",
        "Problem_Type": "CWE-416",
        "Description": "An issue was discovered in Falco through 0.14.0. A missing indicator for insufficient resources allows local users to bypass the detection engine.",
        "URL": "https://github.com/falcosecurity/falco/pull/561",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bdda640da17bc86081e06a9a84506e804c45b1eb",
        "inducing_commit_hash_pyszz": [
            "79d408f47274190519f169ef082790985a945d15"
        ],
        "inducing_commit_hash_pd": [
            "7db8e0921c020d6f9bac3932189d4f7c0ce48470",
            "ba8036711616ee45ae05d5472ca1f7c53261bc09",
            "7a31c59fe443d9dfe553d20bf8e6c2c27571decb",
            "8641f3c958c01ef22a7edc8a2ef3ae3dd475e491",
            "79d408f47274190519f169ef082790985a945d15",
            "4c64295adcc696023edca57999f954f698925c93",
            "513cf2ed8be11d23b379c65404f27cf2270a35a7",
            "f4bb49f1f57bbaee05d0de70c2be1baf89b40e8d",
            "8b116c2ad1a354c6e57197e0e7ab17033bf106fa",
            "9d3392e9b96ad07a1a6697092578bd27e75a9310"
        ],
        "matched": [
            "79d408f47274190519f169ef082790985a945d15"
        ]
    },
    {
        "repo_name": "falcosecurity/falco",
        "CVE_ID": "CVE-2021-33505",
        "Problem_Type": "CWE-269",
        "Description": "A local malicious user can circumvent the Falco detection engine through 0.28.1 by running a program that alters arguments of system calls being executed. Issue is fixed in Falco versions >= 0.29.1.",
        "URL": "https://github.com/falcosecurity/falco/pull/1675",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d6690313a0bdb48ff5fcb94784b6dc8b3afe2445",
        "inducing_commit_hash_pyszz": [
            "abc79fb548f9d925ffdeffe65f3bd32b79ab70f4"
        ],
        "inducing_commit_hash_pd": [
            "abc79fb548f9d925ffdeffe65f3bd32b79ab70f4"
        ],
        "matched": [
            "abc79fb548f9d925ffdeffe65f3bd32b79ab70f4"
        ]
    },
    {
        "repo_name": "FasterXML/jackson-dataformats-text",
        "CVE_ID": "CVE-2023-3894",
        "Problem_Type": "CWE-787",
        "Description": "Those using jackson-dataformats-text to parse TOML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.\n",
        "URL": "https://github.com/FasterXML/jackson-dataformats-text/pull/398",
        "Tag": "['Patch']",
        "fix_commit_hash": "5dd5f740aedcf37adad7ffece460e75e54abb0ed",
        "inducing_commit_hash_pyszz": [
            "3c9905102dd42dfac9d77b8d55a7632d8a07643a"
        ],
        "inducing_commit_hash_pd": [
            "ba4f8edd47b42daf913447b50d20ae90b1c77759",
            "87fd10f64f2b09eb6f7f5ff4e403bf3d3e646049",
            "6efc5ffb8be316cbe009e2dc40fe24ebd405a8e7",
            "966e487e5bd34c783c0154297a27d51b891d19f5",
            "46e4ec83f8bfdeb766a537471df1a9cf67f79bd8",
            "21c8e232d10c0cded8a099483bf2baff7fc077e3",
            "652769391279d86d28dc371741af94db202cee6b",
            "6298205e364a412d08648ad2acef2886c67a91b0",
            "a89ba7f7f06611dd0bac826a128f5669f8aa223d",
            "923dfae00e7a10b849e99836d973d15f53d75793",
            "4647dfd4a5701309d7ebf4c97dab6bfb71386561",
            "f30ef405cbd8a396d81948d031e326f33345f4ce",
            "05be0f6e3b87e54fa0e1ecb62b59e42d544a8b7c",
            "c329c0d4a22b2f74f0948400aff3dd046d3eccbe"
        ],
        "matched": [
            "3c9905102dd42dfac9d77b8d55a7632d8a07643a"
        ]
    },
    {
        "repo_name": "fastify/csrf",
        "CVE_ID": "CVE-2021-29624",
        "Problem_Type": "CWE-352",
        "Description": "fastify-csrf is an open-source plugin helps developers protect their Fastify server against CSRF attacks. Versions of fastify-csrf prior to 3.1.0 have a \"double submit\" mechanism using cookies with an application deployed across multiple subdomains, e.g. \"heroku\"-style platform as a service. Version 3.1.0 of the fastify-csrf fixes it. the vulnerability. The user of the module would need to supply a `userInfo` when generating the CSRF token to fully implement the protection on their end. This is needed only for applications hosted on different subdomains.",
        "URL": "https://github.com/fastify/csrf/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5882472cbe2e50aa9ede11d1875919a15ab60800",
        "inducing_commit_hash_pyszz": [
            "b2f3de60dd0f4e5b71a837ca52c86979bc983183"
        ],
        "inducing_commit_hash_pd": [
            "7542b9767c15241a2538b637c70a487e0e481379",
            "19245b55b2f9becef6a00b5c713da375209b11f0",
            "82541c87e4c6a38c8a37a35921bfcc8edd02c099",
            "b2f3de60dd0f4e5b71a837ca52c86979bc983183"
        ],
        "matched": [
            "b2f3de60dd0f4e5b71a837ca52c86979bc983183"
        ]
    },
    {
        "repo_name": "fastify/fastify-csrf",
        "CVE_ID": "CVE-2021-29624",
        "Problem_Type": "CWE-352",
        "Description": "fastify-csrf is an open-source plugin helps developers protect their Fastify server against CSRF attacks. Versions of fastify-csrf prior to 3.1.0 have a \"double submit\" mechanism using cookies with an application deployed across multiple subdomains, e.g. \"heroku\"-style platform as a service. Version 3.1.0 of the fastify-csrf fixes it. the vulnerability. The user of the module would need to supply a `userInfo` when generating the CSRF token to fully implement the protection on their end. This is needed only for applications hosted on different subdomains.",
        "URL": "https://github.com/fastify/fastify-csrf/pull/51",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6b70422bb59292b7892a7fe8add26429b12a34e",
        "inducing_commit_hash_pyszz": [
            "3c9de36e9e73ce0eda9207f84f2ac0243e1f5253"
        ],
        "inducing_commit_hash_pd": [
            "b6456a9548b076ac6e580ad5dfad0ee1a2eee890",
            "3c9de36e9e73ce0eda9207f84f2ac0243e1f5253"
        ],
        "matched": [
            "3c9de36e9e73ce0eda9207f84f2ac0243e1f5253"
        ]
    },
    {
        "repo_name": "feathersjs/feathers",
        "CVE_ID": "CVE-2023-37899",
        "Problem_Type": "CWE-754",
        "Description": "Feathersjs is a framework for creating web APIs and real-time applications with TypeScript or JavaScript. Feathers socket handler did not catch invalid string conversion errors like `const message = ${{ toString: '' }}` which would cause the NodeJS process to crash when sending an unexpected Socket.io message like `socket.emit('find', { toString: '' })`.  A fix has been released in versions 5.0.8 and 4.5.18. Users are advised to upgrade. There is no known workaround for this vulnerability.",
        "URL": "https://github.com/feathersjs/feathers/pull/3242",
        "Tag": "['Patch']",
        "fix_commit_hash": "0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8",
        "inducing_commit_hash_pyszz": [
            "7969334ae9d3cfb4ae0e63564a99a18454482cb0"
        ],
        "inducing_commit_hash_pd": [
            "9a3b32482b94bd1e455d62902eaa5e07ad1542db",
            "9dd671301ae0463968ade0f6eb0c82356adcc89d",
            "ed9e9340c0e3a5cd17fcd4af17ab451de630d70d",
            "d465234d88a51126b51832033ebdec88015d2e01",
            "61b1056c09b9fe86386ade8eb7650a291f5fe5cf",
            "e83eebe1afd63c5a8c742478498e40f01241eeee",
            "7969334ae9d3cfb4ae0e63564a99a18454482cb0",
            "d568627de1b012cbd73eeaee3768d8e6a38617a6"
        ],
        "matched": [
            "7969334ae9d3cfb4ae0e63564a99a18454482cb0"
        ]
    },
    {
        "repo_name": "feathersjs/feathers",
        "CVE_ID": "CVE-2023-37899",
        "Problem_Type": "CWE-754",
        "Description": "Feathersjs is a framework for creating web APIs and real-time applications with TypeScript or JavaScript. Feathers socket handler did not catch invalid string conversion errors like `const message = ${{ toString: '' }}` which would cause the NodeJS process to crash when sending an unexpected Socket.io message like `socket.emit('find', { toString: '' })`.  A fix has been released in versions 5.0.8 and 4.5.18. Users are advised to upgrade. There is no known workaround for this vulnerability.",
        "URL": "https://github.com/feathersjs/feathers/pull/3241",
        "Tag": "['Patch']",
        "fix_commit_hash": "c397ab3a0cd184044ae4f73540549b30a396821c",
        "inducing_commit_hash_pyszz": [
            "17d80e0b8e61b8c5b51876209b7d6ff2fbdfdb1d"
        ],
        "inducing_commit_hash_pd": [
            "2e45efca4a8bfb4cb746c9880e7c6a11749e39dc"
        ],
        "matched": [
            "17d80e0b8e61b8c5b51876209b7d6ff2fbdfdb1d"
        ]
    },
    {
        "repo_name": "Finastra/finastra-nodejs-libs",
        "CVE_ID": "CVE-2022-31069",
        "Problem_Type": "CWE-200",
        "Description": "NestJS Proxy is a NestJS module to decorate and proxy calls. Prior to version 0.7.0, the nestjs-proxy library did not have a way to control when Authorization headers should should be forwarded for specific backend services configured by the application developer. This could have resulted in sensitive information such as OAuth bearer access tokens being inadvertently exposed to such services that should not see them. A new feature has been introduced in the patched version of nestjs-proxy that allows application developers to opt out of forwarding the Authorization headers on a per service basis using the `forwardToken` config setting. Developers are advised to review the README for this library on Github or NPM for further details on how this configuration can be applied. This issue has been fixed in version 0.7.0 of `@finastra/nestjs-proxy`. Users of `@ffdc/nestjs-proxy` are advised that this package has been deprecated and is no longer being maintained or receiving updates. Such users should update their package.json file to use `@finastra/nestjs-proxy` instead.",
        "URL": "https://github.com/Finastra/finastra-nodejs-libs/pull/231",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe",
        "inducing_commit_hash_pyszz": [
            "7b73da070a3faa5b31ddf991616ba59eaff3c584"
        ],
        "inducing_commit_hash_pd": [
            "7b73da070a3faa5b31ddf991616ba59eaff3c584",
            "db57ac9a2fdb2a7ff637d37acdc8ff462c2a13b7"
        ],
        "matched": [
            "7b73da070a3faa5b31ddf991616ba59eaff3c584"
        ]
    },
    {
        "repo_name": "Finastra/finastra-nodejs-libs",
        "CVE_ID": "CVE-2022-31070",
        "Problem_Type": "CWE-200",
        "Description": "NestJS Proxy is a NestJS module to decorate and proxy calls. Prior to version 0.7.0, the nestjs-proxy library did not have a way to block sensitive cookies (e.g. session cookies) from being forwarded to backend services configured by the application developer. This could have led to sensitive cookies being inadvertently exposed to such services that should not see them. The patched version now blocks cookies from being forwarded by default. However developers can configure an allow-list of cookie names by using the `allowedCookies` config setting. This issue has been fixed in version 0.7.0 of `@finastra/nestjs-proxy`. Users of `@ffdc/nestjs-proxy` are advised that this package has been deprecated and is no longer being maintained or receiving updates. Such users should update their package.json file to use `@finastra/nestjs-proxy` instead.",
        "URL": "https://github.com/Finastra/finastra-nodejs-libs/pull/232",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90a7157a04297fce5050b9ba33e6d4653268b4a3",
        "inducing_commit_hash_pyszz": [
            "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe"
        ],
        "inducing_commit_hash_pd": [
            "fce3e7e02c682e9313532acb32eb8dd6c848128c",
            "6c8b326859265cf8547fb3ad7a05d5ccc7cda6ad",
            "4db6cda14829b4165b2524668040978455ddea98",
            "38d3c2a70dabbf02b93c6ab7c8195962c9f745f0",
            "ba1e3f889e54ab54accaf51d388f0e59b69dd3b6",
            "0fe10dfda27734483d3dbcd1b822a1ddef019aa3",
            "7c40144d2bb9f1c4bbcb19eba2d74a4d96eb853e",
            "fd5c3729afa8ec6a0c325f0a9bc78dbad8260dff",
            "1c2632180e179480ee8c6cc840b7d4cd39f8c55c",
            "b74334e52c0a9e711a1231b8f4a208d01007b6ce",
            "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe",
            "e2094676583dbf7ed0108a8fbd3dc3503c2f8f08"
        ],
        "matched": [
            "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe"
        ]
    },
    {
        "repo_name": "Finastra/ssr-pages",
        "CVE_ID": "CVE-2022-24718",
        "Problem_Type": "CWE-22",
        "Description": "ssr-pages is an HTML page builder for the purpose of server-side rendering (SSR). In versions prior to 0.1.4, a path traversal issue can occur when providing untrusted input to the `svg` property as an argument to the `build(MessagePageOptions)` function. While there is no known workaround at this time, there is a patch in version 0.1.4.",
        "URL": "https://github.com/Finastra/ssr-pages/pull/1/commits/c3e4c563384ae3ba3892f37dd190218577620780",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3e4c563384ae3ba3892f37dd190218577620780",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "7005b5ce44548f54853aa266e71318b8016fa12f"
        ],
        "matched": [
            "7005b5ce44548f54853aa266e71318b8016fa12f"
        ]
    },
    {
        "repo_name": "firebase/firebase-js-sdk",
        "CVE_ID": "CVE-2020-7765",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects the package @firebase/util before 0.3.4. This vulnerability relates to the deepExtend function within the DeepCopy.ts file. Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program.",
        "URL": "https://github.com/firebase/firebase-js-sdk/pull/4001",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9cf727fcc3d049551b16ae0698ac33dc2fe45ada",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "fd0728138d88c454f8e38a78f35d831d6365070c",
            "bc1f67c448804a28fa64e91611ea60398890bcaa",
            "7866e2235998de53458c11a063c0fc588d982ae1"
        ],
        "matched": [
            "fd0728138d88c454f8e38a78f35d831d6365070c"
        ]
    },
    {
        "repo_name": "firecracker-microvm/firecracker",
        "CVE_ID": "CVE-2020-27174",
        "Problem_Type": "CWE-401",
        "Description": "In Amazon AWS Firecracker before 0.21.3, and 0.22.x before 0.22.1, the serial console buffer can grow its memory usage without limit when data is sent to the standard input. This can result in a memory leak on the microVM emulation thread, possibly occupying more memory than intended on the host.",
        "URL": "https://github.com/firecracker-microvm/firecracker/pull/2179",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1c25f5c52142d9e6db56667446dae8075c1600ac",
        "inducing_commit_hash_pyszz": [
            "03dcffebd8edabf32ec0f8f9e02b7d206d7d7541"
        ],
        "inducing_commit_hash_pd": [
            "03dcffebd8edabf32ec0f8f9e02b7d206d7d7541"
        ],
        "matched": [
            "03dcffebd8edabf32ec0f8f9e02b7d206d7d7541"
        ]
    },
    {
        "repo_name": "fish-shell/fish-shell",
        "CVE_ID": "CVE-2022-20001",
        "Problem_Type": "CWE-74",
        "Description": "fish is a command line shell. fish version 3.1.0 through version 3.3.1 is vulnerable to arbitrary code execution. git repositories can contain per-repository configuration that change the behavior of git, including running arbitrary commands. When using the default configuration of fish, changing to a directory automatically runs `git` commands in order to display information about the current repository in the prompt. If an attacker can convince a user to change their current directory into one controlled by the attacker, such as on a shared file system or extracted archive, fish will run arbitrary commands under the attacker's control. This problem has been fixed in fish 3.4.0. Note that running git in these directories, including using the git tab completion, remains a potential trigger for this issue. As a workaround, remove the `fish_git_prompt` function from the prompt.",
        "URL": "https://github.com/fish-shell/fish-shell/pull/8589",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "37625053d424c1ab88de2b0c50c7fe71e1468e2c",
        "inducing_commit_hash_pyszz": [
            "f75cf5c16bf8fa43ba99180a8e4ba008d5ffc685"
        ],
        "inducing_commit_hash_pd": [
            "05ef157757c37db603b71bc9f755af31790d549a",
            "4186d840dbbb7e731944c571f7cb68a1bc421efd",
            "f75cf5c16bf8fa43ba99180a8e4ba008d5ffc685"
        ],
        "matched": [
            "f75cf5c16bf8fa43ba99180a8e4ba008d5ffc685"
        ]
    },
    {
        "repo_name": "flarum/sticky",
        "CVE_ID": "CVE-2021-21283",
        "Problem_Type": "CWE-79",
        "Description": "Flarum is an open source discussion platform for websites. The \"Flarum Sticky\" extension versions 0.1.0-beta.14 and 0.1.0-beta.15 has a cross-site scripting vulnerability. A change in release beta 14 of the Sticky extension caused the plain text content of the first post of a pinned discussion to be injected as HTML on the discussion list. The issue was discovered following an internal audit. Any HTML would be injected through the m.trust() helper. This resulted in an HTML injection where <script> tags would not be executed. However it was possible to run javascript from other HTML attributes, enabling a cross-site scripting (XSS) attack to be performed. Since the exploit only happens with the first post of a pinned discussion, an attacker would need the ability to pin their own discussion, or be able to edit a discussion that was previously pinned. On forums where all pinned posts are authored by your staff, you can be relatively certain the vulnerability has not been exploited. Forums where some user-created discussions were pinned can look at the first post edit date to find whether the vulnerability might have been exploited. Because Flarum doesn't store the post content history, you cannot be certain if a malicious edit was reverted. The fix will be available in version v0.1.0-beta.16 with Flarum beta 16. The fix has already been back-ported to Flarum beta 15 as version v0.1.0-beta.15.1 of the Sticky extension. Forum administrators can disable the Sticky extension until they are able to apply the update. The vulnerability cannot be exploited while the extension is disabled.",
        "URL": "https://github.com/flarum/sticky/pull/24",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7ebd30462bd405c4c0570b93a6d48710e6c3db19",
        "inducing_commit_hash_pyszz": [
            "6d626d3539f7552c78e0f95e9a105bdffda9ed09"
        ],
        "inducing_commit_hash_pd": [
            "6d626d3539f7552c78e0f95e9a105bdffda9ed09"
        ],
        "matched": [
            "6d626d3539f7552c78e0f95e9a105bdffda9ed09"
        ]
    },
    {
        "repo_name": "flatpak/flatpak",
        "CVE_ID": "CVE-2021-21381",
        "Problem_Type": "CWE-74",
        "Description": "Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. In Flatpack since version 0.9.4 and before version 1.10.2 has a vulnerability in the \"file forwarding\" feature which can be used by an attacker to gain access to files that would not ordinarily be allowed by the app's permissions. By putting the special tokens `@@` and/or `@@u` in the Exec field of a Flatpak app's .desktop file, a malicious app publisher can trick flatpak into behaving as though the user had chosen to open a target file with their Flatpak app, which automatically makes that file available to the Flatpak app. This is fixed in version 1.10.2. A minimal solution is the first commit \"`Disallow @@ and @@U usage in desktop files`\". The follow-up commits \"`dir: Reserve the whole @@ prefix`\" and \"`dir: Refuse to export .desktop files with suspicious uses of @@ tokens`\" are recommended, but not strictly required. As a workaround, avoid installing Flatpak apps from untrusted sources, or check the contents of the exported `.desktop` files in `exports/share/applications/*.desktop` (typically `~/.local/share/flatpak/exports/share/applications/*.desktop` and `/var/lib/flatpak/exports/share/applications/*.desktop`) to make sure that literal filenames do not follow `@@` or `@@u`.",
        "URL": "https://github.com/flatpak/flatpak/pull/4156",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "46b3ede5241561c7d588951048c687c5075a3eac",
        "inducing_commit_hash_pyszz": [
            "652a28ffab67cb6cd7d12dc3a93979bcd3731c7f"
        ],
        "inducing_commit_hash_pd": [
            "652a28ffab67cb6cd7d12dc3a93979bcd3731c7f"
        ],
        "matched": [
            "652a28ffab67cb6cd7d12dc3a93979bcd3731c7f"
        ]
    },
    {
        "repo_name": "fluent/fluent-bit",
        "CVE_ID": "CVE-2021-46879",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in Treasure Data Fluent Bit 1.7.1, a wrong variable is used to get the msgpack data resulting in a heap overflow in flb_msgpack_gelf_value_ext. An attacker can craft a malicious file and tick the victim to open the file with the software, triggering a heap overflow and execute arbitrary code on the target system.",
        "URL": "https://github.com/fluent/fluent-bit/pull/3100",
        "Tag": "['Patch']",
        "fix_commit_hash": "9a3bd47ec6121492e2c5e37ca14f5827bb7d6db2",
        "inducing_commit_hash_pyszz": [
            "d195016836d800439ee74d76e00a945433545142"
        ],
        "inducing_commit_hash_pd": [
            "d195016836d800439ee74d76e00a945433545142"
        ],
        "matched": [
            "d195016836d800439ee74d76e00a945433545142"
        ]
    },
    {
        "repo_name": "FluidSynth/fluidsynth",
        "CVE_ID": "CVE-2021-21417",
        "Problem_Type": "CWE-416",
        "Description": "fluidsynth is a software synthesizer based on the SoundFont 2 specifications. A use after free violation was discovered in fluidsynth, that can be triggered when loading an invalid SoundFont file.",
        "URL": "https://github.com/FluidSynth/fluidsynth/pull/810",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "005719628aef0bd48dc7b2f860c7e4ca16b81044",
        "inducing_commit_hash_pyszz": [
            "b6bdb6b059e0ae4274fe36105976e0a812435e6a"
        ],
        "inducing_commit_hash_pd": [
            "879a14163a0629b53056b79947f4e70e617c58d0",
            "b6bdb6b059e0ae4274fe36105976e0a812435e6a"
        ],
        "matched": [
            "b6bdb6b059e0ae4274fe36105976e0a812435e6a"
        ]
    },
    {
        "repo_name": "flynn/noise",
        "CVE_ID": "CVE-2021-4239",
        "Problem_Type": "CWE-311",
        "Description": "The Noise protocol implementation suffers from weakened cryptographic security after encrypting 2^64 messages, and a potential denial of service attack. After 2^64 (~18.4 quintillion) messages are encrypted with the Encrypt function, the nonce counter will wrap around, causing multiple messages to be encrypted with the same key and nonce. In a separate issue, the Decrypt function increments the nonce state even when it fails to decrypt a message. If an attacker can provide an invalid input to the Decrypt function, this will cause the nonce state to desynchronize between the peers, resulting in a failure to encrypt all subsequent messages.",
        "URL": "https://github.com/flynn/noise/pull/44",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2499bf1bad239a8316c32932a993642350b3afdb",
        "inducing_commit_hash_pyszz": [
            "14af5e1fc86f8293637b4d486b7d94bb2291ad4a"
        ],
        "inducing_commit_hash_pd": [
            "14af5e1fc86f8293637b4d486b7d94bb2291ad4a"
        ],
        "matched": [
            "14af5e1fc86f8293637b4d486b7d94bb2291ad4a"
        ]
    },
    {
        "repo_name": "flyteorg/flyteadmin",
        "CVE_ID": "CVE-2022-39273",
        "Problem_Type": "CWE-798",
        "Description": "FlyteAdmin is the control plane for the data processing platform Flyte. Users who enable the default Flyte\u00c2\u2019s authorization server without changing the default clientid hashes will be exposed to the public internet. In an effort to make enabling authentication easier for Flyte administrators, the default configuration for Flyte Admin allows access for Flyte Propeller even after turning on authentication via a hardcoded hashed password. This password is also set on the default Flyte Propeller configmap in the various Flyte Helm charts. Users who enable auth but do not override this setting in Flyte Admin\u00c2\u2019s configuration may unbeknownst to them be allowing public traffic in by way of this default password with attackers effectively impersonating propeller. This only applies to users who have not specified the ExternalAuthorizationServer setting. Usage of an external auth server automatically turns off this default configuration and are not susceptible to this vulnerability. This issue has been addressed in version 1.1.44. Users should manually set the staticClients in the selfAuthServer section of their configuration if they intend to rely on Admin\u00c2\u2019s internal auth server. Again, users who use an external auth server are automatically protected from this vulnerability.",
        "URL": "https://github.com/flyteorg/flyteadmin/pull/478",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "281172edf55fe6800959238fc128964ead6d9101",
        "inducing_commit_hash_pyszz": [
            "2126d786f4649b67317558dee0ec6df7a932f596"
        ],
        "inducing_commit_hash_pd": [
            "d1c61c34f62d8ee51964f47877802d070dfa9e98",
            "611a85f0db7325457c714c0dcd689bf2c5d818e5"
        ],
        "matched": [
            "2126d786f4649b67317558dee0ec6df7a932f596"
        ]
    },
    {
        "repo_name": "flyteorg/flyteconsole",
        "CVE_ID": "CVE-2022-24856",
        "Problem_Type": "CWE-918",
        "Description": "FlyteConsole is the web user interface for the Flyte platform. FlyteConsole prior to version 0.52.0 is vulnerable to server-side request forgery (SSRF) when FlyteConsole is open to the general internet. An attacker can exploit any user of a vulnerable instance to access the internal metadata server or other unauthenticated URLs. Passing of headers to an unauthorized actor may occur. The patch for this issue deletes the entire `cors_proxy`, as this is not required for console anymore. A patch is available in FlyteConsole version 0.52.0. Disable FlyteConsole availability on the internet as a workaround.",
        "URL": "https://github.com/flyteorg/flyteconsole/pull/389",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "05b88ed2d2ecdb5d8a8404efea25414e57189709",
        "inducing_commit_hash_pyszz": [
            "05592e312fc12309ac70236839a7b86ca072a1b3"
        ],
        "inducing_commit_hash_pd": [
            "5f65ff8c4f9d4337985c667ecccc0206514347c0",
            "05592e312fc12309ac70236839a7b86ca072a1b3",
            "4b9f113b9ec03cc1e311c5da2dde825ea1998b6e",
            "5732fc1107806626ff4db21df27e7f63a8d00596",
            "1fc0a53e8308e1fa2f43ddb0a3d5ab2c1d4e2f85"
        ],
        "matched": [
            "05592e312fc12309ac70236839a7b86ca072a1b3"
        ]
    },
    {
        "repo_name": "fobybus/social-media-skeleton",
        "CVE_ID": "CVE-2023-39518",
        "Problem_Type": "CWE-79",
        "Description": "social-media-skeleton is an uncompleted social media project implemented using PHP, MySQL, CSS, JavaScript, and HTML. Versions 1.0.0 until 1.0.3 have a stored cross-site scripting vulnerability. The problem is patched in v1.0.3.\n",
        "URL": "https://github.com/fobybus/social-media-skeleton/pull/4",
        "Tag": "['Patch']",
        "fix_commit_hash": "6765d1109016e1f1d707ef47917927c7704e6428",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "a7c29927a4acd966698bbc683a1e4109e31890b9"
        ],
        "matched": [
            "a7c29927a4acd966698bbc683a1e4109e31890b9"
        ]
    },
    {
        "repo_name": "follow-redirects/follow-redirects",
        "CVE_ID": "CVE-2023-26159",
        "Problem_Type": "CWE-601",
        "Description": "Versions of the package follow-redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches.",
        "URL": "https://github.com/follow-redirects/follow-redirects/pull/236",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7a6567e16dfa9ad18a70bfe91784c28653fbf19d",
        "inducing_commit_hash_pyszz": [
            "05629af696588b90d64e738bc2e809a97a5f92fc"
        ],
        "inducing_commit_hash_pd": [
            "37f4e7c5d0abb29021042d3a4ce3fd300d28180b",
            "449e895af819ff328329979b23ac644b026e467f",
            "fd19af60e4cb6522ccd6be62d3a6e52886847a3c",
            "1cba8e85fa73f563a439fe460cf028688e4358df",
            "fe6c46f454d0b020043fbedce249acc57279999c",
            "05629af696588b90d64e738bc2e809a97a5f92fc",
            "e30137cd37f5671290172634572b9507fa525c9c",
            "f98d981b03ca8a28aa5a903cf256ec6246fa507d",
            "31bd4590386cc662777616b1b9a205f010b94458"
        ],
        "matched": [
            "05629af696588b90d64e738bc2e809a97a5f92fc"
        ]
    },
    {
        "repo_name": "formers/former",
        "CVE_ID": "CVE-2019-15476",
        "Problem_Type": "CWE-79",
        "Description": "Former before 4.2.1 has XSS via a checkbox value.",
        "URL": "https://github.com/formers/former/pull/584",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "81f0969426a4845108ca7c4a8b3cec6337bb56b4",
        "inducing_commit_hash_pyszz": [
            "4adb92c41a69421259f809750605e4da72d7bf9a"
        ],
        "inducing_commit_hash_pd": [
            "fa62bb2fabb5686fbb00cd63bf5598558051e6e4"
        ],
        "matched": [
            "4adb92c41a69421259f809750605e4da72d7bf9a"
        ]
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2020-27508",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In two-factor authentication, the system also sending 2fa secret key in response, which enables an intruder to breach the 2fa security.",
        "URL": "https://github.com/frappe/frappe/pull/11263",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df7a57529541bf02d12c93fa90c7c9f1d1862a45",
        "inducing_commit_hash_pyszz": [
            "bc4d46a362497fbf4c021804502cbff7602cc81c"
        ],
        "inducing_commit_hash_pd": [
            "a8b526bfd14b66e26183b912b51ea40389588cfd",
            "bc4d46a362497fbf4c021804502cbff7602cc81c"
        ],
        "matched": [
            "bc4d46a362497fbf4c021804502cbff7602cc81c"
        ]
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2020-35175",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Frappe Framework 12 and 13 does not properly validate the HTTP method for the frappe.client API.",
        "URL": "https://github.com/frappe/frappe/pull/11237",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7101807e669ba8d76eeadacfb04895b4587e4b42",
        "inducing_commit_hash_pyszz": [
            "856cbfa675c413e4572b9741ada3078374992484"
        ],
        "inducing_commit_hash_pd": [
            "34dbc4ea8e3b3c562ed3b5baff53e6665504b0ec",
            "024ddfcc5b295417eb92b330057b93f79f6c3b64",
            "856cbfa675c413e4572b9741ada3078374992484",
            "1e19f3ddf436c64d40cf753451b7c3a907a4003c",
            "512fc3a5c2830e6571b1cdcd28845c78c0781331"
        ],
        "matched": [
            "856cbfa675c413e4572b9741ada3078374992484"
        ]
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2022-3988",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in Frappe. It has been rated as problematic. Affected by this issue is some unknown functionality of the file frappe/templates/includes/navbar/navbar_search.html of the component Search. The manipulation of the argument q leads to cross site scripting. The attack may be launched remotely. The name of the patch is bfab7191543961c6cb77fe267063877c31b616ce. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-213560.",
        "URL": "https://github.com/frappe/frappe/pull/18847",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bfab7191543961c6cb77fe267063877c31b616ce",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1e7229c45f877cc63f947e07b86008b6226ecad4"
        ],
        "matched": [
            "1e7229c45f877cc63f947e07b86008b6226ecad4"
        ]
    },
    {
        "repo_name": "free5gc/udm",
        "CVE_ID": "CVE-2023-46324",
        "Problem_Type": "CWE-347",
        "Description": "pkg/suci/suci.go in free5GC udm before 1.2.0, when Go before 1.19 is used, allows an Invalid Curve Attack because it may compute a shared secret via an uncompressed public key that has not been validated. An attacker can send arbitrary SUCIs to the UDM, which tries to decrypt them via both its private key and the attacker's public key.",
        "URL": "https://github.com/free5gc/udm/pull/20",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5e1479cc686f058992557669b13fd3761a1b6024",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f91c29b9506d406c1bfa39b15b64d9f184fbc84b"
        ],
        "matched": [
            "f91c29b9506d406c1bfa39b15b64d9f184fbc84b"
        ]
    },
    {
        "repo_name": "freedomofpress/dangerzone",
        "CVE_ID": "CVE-2023-39342",
        "Problem_Type": "CWE-150",
        "Description": "Dangerzone is software for converting potentially dangerous PDFs, office documents, or images to safe PDFs. The Dangerzone CLI (`dangerzone-cli` command) logs output from the container where the file sanitization takes place, to the user's terminal. Prior to version 0.4.2, if the container is compromised and can return attacker-controlled strings, then the attacker may be able to spoof messages in the user's terminal or change the window title. Besides logging output from containers, it also logs the names of the files it sanitizes. If these files contain ANSI escape sequences, then the same issue applies. Dangerzone is predominantly a GUI application, so this issue should leave most of our users unaffected. Nevertheless, we always suggest updating to the newest version. This issue is fixed in Dangerzone 0.4.2.",
        "URL": "https://github.com/freedomofpress/dangerzone/pull/491",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6c374d8a7e994f796bfcbbed71b15602a81a39b7",
        "inducing_commit_hash_pyszz": [
            "ef41cab76e5649b6637c3d285eceb1dff3ff12a8"
        ],
        "inducing_commit_hash_pd": [
            "baeab9d7ebea0a70922276586a15bb8c649b8f93",
            "ef41cab76e5649b6637c3d285eceb1dff3ff12a8"
        ],
        "matched": [
            "ef41cab76e5649b6637c3d285eceb1dff3ff12a8"
        ]
    },
    {
        "repo_name": "FreeOpcUa/opcua-asyncio",
        "CVE_ID": "CVE-2023-26150",
        "Problem_Type": "CWE-287",
        "Description": "Versions of the package asyncua before 0.9.96 are vulnerable to Improper Authentication such that it is possible to access Address Space without encryption and authentication.\n\n**Note:**\n\nThis issue is a result of missing checks for services that require an active session.",
        "URL": "https://github.com/FreeOpcUa/opcua-asyncio/pull/1015",
        "Tag": "['Patch']",
        "fix_commit_hash": "2be7ce80df05de8d6c6ae1ebce6fa2bb7147844a",
        "inducing_commit_hash_pyszz": [
            "756616dafade3851dbc12e220632eda142033585"
        ],
        "inducing_commit_hash_pd": [
            "756616dafade3851dbc12e220632eda142033585"
        ],
        "matched": [
            "756616dafade3851dbc12e220632eda142033585"
        ]
    },
    {
        "repo_name": "FreeOpcUa/opcua-asyncio",
        "CVE_ID": "CVE-2023-26151",
        "Problem_Type": "CWE-835",
        "Description": "Versions of the package asyncua before 0.9.96 are vulnerable to Denial of Service (DoS) such that an attacker can send a malformed packet and as a result, the server will enter into an infinite loop and consume excessive memory.",
        "URL": "https://github.com/FreeOpcUa/opcua-asyncio/pull/1039",
        "Tag": "['Patch']",
        "fix_commit_hash": "f6603daa34a93a658f0e176cb0b9ee5a6643b262",
        "inducing_commit_hash_pyszz": [
            "cee4d4b8a248bac81fbfdaf55ccf991adda065aa"
        ],
        "inducing_commit_hash_pd": [
            "3a301ea75dc2bb076a7f90ba753f092eb015f0a6",
            "d1a275012803d9eab1c8ebcd687bf38fa26726d5",
            "d33e14834a678d5ddd5e9b5411c2d6472cec59ee",
            "59d6a136a220b2a61eca0fb904e52e8b5dc9f1ef",
            "0b1252a91010673260462bee84093cc1192e8889",
            "cee4d4b8a248bac81fbfdaf55ccf991adda065aa"
        ],
        "matched": [
            "cee4d4b8a248bac81fbfdaf55ccf991adda065aa"
        ]
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2018-1000852",
        "Problem_Type": "CWE-125",
        "Description": "FreeRDP FreeRDP 2.0.0-rc3 released version before commit 205c612820dac644d665b5bb1cdf437dc5ca01e3 contains a Other/Unknown vulnerability in channels/drdynvc/client/drdynvc_main.c, drdynvc_process_capability_request that can result in The RDP server can read the client's memory.. This attack appear to be exploitable via RDPClient must connect the rdp server with echo option. This vulnerability appears to have been fixed in after commit 205c612820dac644d665b5bb1cdf437dc5ca01e3.",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/4871/commits/baee520e3dd9be6511c45a14c5f5e77784de1471",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "baee520e3dd9be6511c45a14c5f5e77784de1471",
        "inducing_commit_hash_pyszz": [
            "a6a57e36193cf3690c2fd7d54ef4498733513de7"
        ],
        "inducing_commit_hash_pd": [
            "dc12641b233b6781d6f7b664711d3416bf7e36f6",
            "7f1d4222eb1a34496d3d39aac80543b0991d5ef9",
            "27a8e50e60b05ec51b36fde3222cdb1d6ba223b0",
            "a6a57e36193cf3690c2fd7d54ef4498733513de7",
            "f469e069dc8287f6fcfe0741961022e0cc50170f"
        ],
        "matched": [
            "a6a57e36193cf3690c2fd7d54ef4498733513de7"
        ]
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2020-11525",
        "Problem_Type": "CWE-125",
        "Description": "libfreerdp/cache/bitmap.c in FreeRDP versions > 1.0 through 2.0.0-rc4 has an Out of bounds read.",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/6019/commits/58dc36b3c883fd460199cedb6d30e58eba58298c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "58dc36b3c883fd460199cedb6d30e58eba58298c",
        "inducing_commit_hash_pyszz": [
            "ac7d23b9a30b626c1b9c18cfe040063b3afffb34"
        ],
        "inducing_commit_hash_pd": [
            "edb218df905ca742ed059729ec8633258e74c45d",
            "72ca88f49c1b7f6678a66c09fa5fe5506623ed35"
        ],
        "matched": [
            "ac7d23b9a30b626c1b9c18cfe040063b3afffb34"
        ]
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2022-24882",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "FreeRDP is a free implementation of the Remote Desktop Protocol (RDP). In versions prior to 2.7.0, NT LAN Manager (NTLM) authentication does not properly abort when someone provides and empty password value. This issue affects FreeRDP based RDP Server implementations. RDP clients are not affected. The vulnerability is patched in FreeRDP 2.7.0. There are currently no known workarounds.",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/7750",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5249f61b7235becd602fd68ef6a2dc8efd21a6f7",
        "inducing_commit_hash_pyszz": [
            "f1d9faa7fc30ae42f722047550c489690ff87049"
        ],
        "inducing_commit_hash_pd": [
            "2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6",
            "f1d9faa7fc30ae42f722047550c489690ff87049",
            "19694b01106e2a1e0072e9f1b86306d9345cfc6b"
        ],
        "matched": [
            "f1d9faa7fc30ae42f722047550c489690ff87049"
        ]
    },
    {
        "repo_name": "FreshRSS/FreshRSS",
        "CVE_ID": "CVE-2022-23497",
        "Problem_Type": "CWE-200",
        "Description": "FreshRSS is a free, self-hostable RSS aggregator. User configuration files can be accessed by a remote user. In addition to user preferences, such configurations contain hashed passwords (brypt with cost 9, salted) of FreshRSS Web interface. If the API is used, the configuration might contain a hashed password (brypt with cost 9, salted) of the GReader API, and a hashed password (MD5 salted) of the Fever API. Users should update to version 1.20.2 or edge. Users unable to upgrade can apply the patch manually or delete the file `./FreshRSS/p/ext.php`.",
        "URL": "https://github.com/FreshRSS/FreshRSS/pull/4928",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed578f224c4ab80ae6689c7fca3f9f7b12c13428",
        "inducing_commit_hash_pyszz": [
            "bed710b260e0032b65eda92d3c395c4f1c71308a"
        ],
        "inducing_commit_hash_pd": [
            "bed710b260e0032b65eda92d3c395c4f1c71308a"
        ],
        "matched": [
            "bed710b260e0032b65eda92d3c395c4f1c71308a"
        ]
    },
    {
        "repo_name": "friendica/friendica",
        "CVE_ID": "CVE-2021-30141",
        "Problem_Type": "CWE-401",
        "Description": "Module/Settings/UserExport.php in Friendica through 2021.01 allows settings/userexport to be used by anonymous users, as demonstrated by an attempted access to an array offset on a value of type null, and excessive memory consumption. NOTE: the vendor states \"the feature still requires a valid authentication cookie even if the route is accessible to non-logged users.",
        "URL": "https://github.com/friendica/friendica/pull/10113/commits/acbcc56754121ba080eac5b6fdf69e64ed7fe453",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "acbcc56754121ba080eac5b6fdf69e64ed7fe453",
        "inducing_commit_hash_pyszz": [
            "8f27715d8b864fb31bf96ba481f1a10c7d70659c"
        ],
        "inducing_commit_hash_pd": [
            "9b03e2a5644f65f8ab43d0832eb7f1efbe9db999",
            "8f27715d8b864fb31bf96ba481f1a10c7d70659c",
            "845ab4b76420845dc9f625b8cd5f79a28e0c5ce4",
            "e8bf74914b80884ccaf8d137366dea5d71215640",
            "b892db0cf3d12518b306940a37b139a2a4c3e14c",
            "2ed61194d5cbebdac3d66f1e385a1f928213d632",
            "46172b641df8c1b1c3e5608e4dff6c3f1db6e6ef",
            "955a84a2667e970e66f17aa7557f92cd881a17bd",
            "d3122c396ea2c90da43da53542acfe5575f1fc09",
            "1de3f186d79f3703850524c1d58c237be3eb25f3",
            "048b693fbfa6dcaf29e7dac48f9fd99902430a09"
        ],
        "matched": [
            "8f27715d8b864fb31bf96ba481f1a10c7d70659c"
        ]
    },
    {
        "repo_name": "FriendsOfFlarum/upload",
        "CVE_ID": "CVE-2022-30999",
        "Problem_Type": "CWE-79",
        "Description": "FriendsofFlarum (FoF) Upload is an extension that handles file uploads intelligently for your forum. If FoF Upload prior to version 1.2.3 is configured to allow the uploading of SVG files ('image/svg+xml'), navigating directly to an SVG file URI could execute arbitrary Javascript code decided by an attacker. This Javascript code could include the execution of HTTP web requests to Flarum, or any other web service. This could allow data to be leaked by an authenticated Flarum user, or, possibly, for data to be modified maliciously. This issue has been patched with v1.2.3, which now sanitizes uploaded SVG files. As a workaround, remove the ability for users to upload SVG files through FoF Upload.",
        "URL": "https://github.com/FriendsOfFlarum/upload/pull/318",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d1f0e4bae11ce12f4d1f6482b380e48f345a8dd3",
        "inducing_commit_hash_pyszz": [
            "c8a4a4399171019b5b5c21ed0bfc1206c785904f"
        ],
        "inducing_commit_hash_pd": [
            "430a12694bb75ffa475f828a072ebc72287cd5b4",
            "9bcc431dc129f4b0721ff0d081d1c38a9f2617d9",
            "c8a4a4399171019b5b5c21ed0bfc1206c785904f"
        ],
        "matched": [
            "c8a4a4399171019b5b5c21ed0bfc1206c785904f"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-46752",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. It mishandles malformed MP_REACH_NLRI data, leading to a crash.",
        "URL": "https://github.com/FRRouting/frr/pull/14645/commits/b08afc81c60607a4f736f418f2e3eb06087f1a35",
        "Tag": "['Patch']",
        "fix_commit_hash": "b08afc81c60607a4f736f418f2e3eb06087f1a35",
        "inducing_commit_hash_pyszz": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "inducing_commit_hash_pd": [
            "9b9df9892d3cea25e53cd8903b3c41fb318d2f04",
            "996c93142d3abfab0f6d6c800474e22a8cfbdbc5",
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "matched": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-46753",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur for a crafted BGP UPDATE message without mandatory attributes, e.g., one with only an unknown transit attribute.",
        "URL": "https://github.com/FRRouting/frr/pull/14645/commits/d8482bf011cb2b173e85b65b4bf3d5061250cdb9",
        "Tag": "['Patch']",
        "fix_commit_hash": "d8482bf011cb2b173e85b65b4bf3d5061250cdb9",
        "inducing_commit_hash_pyszz": [
            "11dbcdd35ccf9b9978a61f6f501ab9062c9e5687"
        ],
        "inducing_commit_hash_pd": [
            "67495ddb2e5b1ed267966dcae938c4a30081a75d",
            "11dbcdd35ccf9b9978a61f6f501ab9062c9e5687",
            "d62a17aedeb0eebdba98238874bb13d62c48dbf9",
            "718e3744195351130f4ce7dbe0613f4b3e23df93"
        ],
        "matched": [
            "11dbcdd35ccf9b9978a61f6f501ab9062c9e5687"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-47234",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when processing a crafted BGP UPDATE message with a MP_UNREACH_NLRI attribute and additional NLRI data (that lacks mandatory path attributes).",
        "URL": "https://github.com/FRRouting/frr/pull/14716/commits/c37119df45bbf4ef713bc10475af2ee06e12f3bf",
        "Tag": "['Patch']",
        "fix_commit_hash": "c37119df45bbf4ef713bc10475af2ee06e12f3bf",
        "inducing_commit_hash_pyszz": [
            "28ccc24d38df1d51ed8a563507e5d6f6171fdd38"
        ],
        "inducing_commit_hash_pd": [
            "67495ddb2e5b1ed267966dcae938c4a30081a75d",
            "404c82d569a3150eeabce1c6480afdcc58ba97f1",
            "28ccc24d38df1d51ed8a563507e5d6f6171fdd38"
        ],
        "matched": [
            "28ccc24d38df1d51ed8a563507e5d6f6171fdd38"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-47235",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when a malformed BGP UPDATE message with an EOR is processed, because the presence of EOR does not lead to a treat-as-withdraw outcome.",
        "URL": "https://github.com/FRRouting/frr/pull/14716/commits/6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
        "Tag": "['Patch']",
        "fix_commit_hash": "6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
        "inducing_commit_hash_pyszz": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "inducing_commit_hash_pd": [
            "67495ddb2e5b1ed267966dcae938c4a30081a75d",
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "matched": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ]
    },
    {
        "repo_name": "funzoneq/freshdns",
        "CVE_ID": "CVE-2018-1000847",
        "Problem_Type": "CWE-79",
        "Description": "FreshDNS version 1.0.3 and prior contains a Cross Site Scripting (XSS) vulnerability in Account data form; Zone editor that can result in Execution of attacker's JavaScript code in victim's session. This attack appear to be exploitable via The attacker stores a specially crafted string as their Full Name in their account details. The victim (e.g. the administrator of the FreshDNS instance) opens the User List in the admin interface.. This vulnerability appears to have been fixed in 1.0.5 and later.",
        "URL": "https://github.com/funzoneq/freshdns/pull/6/commits/48b5ca812a89689fd2f32248875cedcba8c9014f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "48b5ca812a89689fd2f32248875cedcba8c9014f",
        "inducing_commit_hash_pyszz": [
            "f284b860d89bf980d054e241a393bd76868887fd"
        ],
        "inducing_commit_hash_pd": [
            "b973677fcab5b71ac08a0a29de53172264a9fcd8",
            "2f2d139dd74848ffbcda3704057dc7250237ec2c",
            "f284b860d89bf980d054e241a393bd76868887fd"
        ],
        "matched": [
            "f284b860d89bf980d054e241a393bd76868887fd"
        ]
    },
    {
        "repo_name": "fuzzymannerz/swmp",
        "CVE_ID": "CVE-2017-20185",
        "Problem_Type": "CWE-79",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Fuzzy SWMP. It has been rated as problematic. This issue affects some unknown processing of the file swmp.php of the component GET Parameter Handler. The manipulation of the argument theme leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available. The identifier of the patch is 792bcab637cb8c3bd251d8fc8771512c5329a93e. It is recommended to apply a patch to fix this issue. The identifier VDB-230669 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/fuzzymannerz/swmp/pull/12",
        "Tag": "['Patch']",
        "fix_commit_hash": "792bcab637cb8c3bd251d8fc8771512c5329a93e",
        "inducing_commit_hash_pyszz": [
            "7c23067ab2bf0b4313ebf3f8cde952bc32abef9d"
        ],
        "inducing_commit_hash_pd": [
            "7c23067ab2bf0b4313ebf3f8cde952bc32abef9d"
        ],
        "matched": [
            "7c23067ab2bf0b4313ebf3f8cde952bc32abef9d"
        ]
    },
    {
        "repo_name": "gatsbyjs/gatsby",
        "CVE_ID": "CVE-2022-25863",
        "Problem_Type": "CWE-502",
        "Description": "The package gatsby-plugin-mdx before 2.14.1, from 3.0.0 and before 3.15.2 are vulnerable to Deserialization of Untrusted Data when passing input through to the gray-matter package, due to its default configurations that are missing input sanitization. Exploiting this vulnerability is possible when passing input in both webpack (MDX files in src/pages or MDX file imported as a component in frontend / React code) and data mode (querying MDX nodes via GraphQL). Workaround: If an older version of gatsby-plugin-mdx must be used, input passed into the plugin should be sanitized ahead of processing.",
        "URL": "https://github.com/gatsbyjs/gatsby/pull/35830",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3690fbb70cc4470f6f17595f59d83146a443ffb",
        "inducing_commit_hash_pyszz": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "inducing_commit_hash_pd": [
            "43f29d94f639eb7f64cc4e175fd5f04aff1d47ca",
            "5d39594c1d9b3562b318b5d299905c0078d74557",
            "5636389e8fa626c644e90abc14589e9961d98c68",
            "e6c8657d202fccce1c96b4f342f6c41168b49a48",
            "3c4069ffd724a350f11dcbbd1ee164e875c3f17e",
            "41d71e741b01e174796f792206465cbe08192031",
            "0a6c6eb40409ac92d30917e00f26a0bc4c9ca9e5",
            "7e431fd0c5f15f85e8b8aedff3b5b17d971c9c6e",
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "matched": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ]
    },
    {
        "repo_name": "gatsbyjs/gatsby",
        "CVE_ID": "CVE-2022-25863",
        "Problem_Type": "CWE-502",
        "Description": "The package gatsby-plugin-mdx before 2.14.1, from 3.0.0 and before 3.15.2 are vulnerable to Deserialization of Untrusted Data when passing input through to the gray-matter package, due to its default configurations that are missing input sanitization. Exploiting this vulnerability is possible when passing input in both webpack (MDX files in src/pages or MDX file imported as a component in frontend / React code) and data mode (querying MDX nodes via GraphQL). Workaround: If an older version of gatsby-plugin-mdx must be used, input passed into the plugin should be sanitized ahead of processing.",
        "URL": "https://github.com/gatsbyjs/gatsby/pull/35830/commits/f214eb0694c61e348b2751cecd1aace2046bc46e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3690fbb70cc4470f6f17595f59d83146a443ffb",
        "inducing_commit_hash_pyszz": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "inducing_commit_hash_pd": [
            "43f29d94f639eb7f64cc4e175fd5f04aff1d47ca",
            "5d39594c1d9b3562b318b5d299905c0078d74557",
            "5636389e8fa626c644e90abc14589e9961d98c68",
            "e6c8657d202fccce1c96b4f342f6c41168b49a48",
            "3c4069ffd724a350f11dcbbd1ee164e875c3f17e",
            "41d71e741b01e174796f792206465cbe08192031",
            "0a6c6eb40409ac92d30917e00f26a0bc4c9ca9e5",
            "7e431fd0c5f15f85e8b8aedff3b5b17d971c9c6e",
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "matched": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ]
    },
    {
        "repo_name": "GENIVI/dlt-daemon",
        "CVE_ID": "CVE-2020-29394",
        "Problem_Type": "CWE-787",
        "Description": "A buffer overflow in the dlt_filter_load function in dlt_common.c from dlt-daemon through 2.18.5 (GENIVI Diagnostic Log and Trace) allows arbitrary code execution because fscanf is misused (no limit on the number of characters to be read in the format argument).",
        "URL": "https://github.com/GENIVI/dlt-daemon/pull/275",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ff4f44c159df6f44b48bd38c9d2f104eb360be11",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "760fb8a4daba3e403376099ce38aca8f88d695d3"
        ],
        "matched": [
            "760fb8a4daba3e403376099ce38aca8f88d695d3"
        ]
    },
    {
        "repo_name": "GENIVI/dlt-daemon",
        "CVE_ID": "CVE-2020-29394",
        "Problem_Type": "CWE-787",
        "Description": "A buffer overflow in the dlt_filter_load function in dlt_common.c from dlt-daemon through 2.18.5 (GENIVI Diagnostic Log and Trace) allows arbitrary code execution because fscanf is misused (no limit on the number of characters to be read in the format argument).",
        "URL": "https://github.com/GENIVI/dlt-daemon/pull/288",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "43fda34be9c4c8311d9c7d6bdc2c23b04f155264",
        "inducing_commit_hash_pyszz": [
            "ff4f44c159df6f44b48bd38c9d2f104eb360be11"
        ],
        "inducing_commit_hash_pd": [
            "ff4f44c159df6f44b48bd38c9d2f104eb360be11"
        ],
        "matched": [
            "ff4f44c159df6f44b48bd38c9d2f104eb360be11"
        ]
    },
    {
        "repo_name": "geopython/OWSLib",
        "CVE_ID": "CVE-2023-27476",
        "Problem_Type": "CWE-611",
        "Description": "OWSLib is a Python package for client programming with Open Geospatial Consortium (OGC) web service interface standards, and their related content models. OWSLib's XML parser (which supports both `lxml` and `xml.etree`) does not disable entity resolution, and could lead to arbitrary file reads from an attacker-controlled XML payload. This affects all XML parsing in the codebase. This issue has been addressed in version 0.28.1. All users are advised to upgrade. The only known workaround is to patch the library manually. See `GHSA-8h9c-r582-mggc` for details.",
        "URL": "https://github.com/geopython/OWSLib/pull/863/commits/b92687702be9576c0681bb11cad21eb631b9122f",
        "Tag": "['Patch']",
        "fix_commit_hash": "d91267303a695d69e73fa71efa100a035852a063",
        "inducing_commit_hash_pyszz": [
            "953a1b5579f9cba066e7deb1cca5bce799e07225"
        ],
        "inducing_commit_hash_pd": [
            "53eea3d46eca21843c03d825029efd2bdb1a0492",
            "2ef838fa8140c708a038e032b195c6da033c1809",
            "a425f373a057978061f9b29016557bf87004bd91",
            "0b47dc8370f49dad701e6beee64a17ccb34cb33a",
            "52967c77142b106ce18143afefdb9fae78b50f3f",
            "d03f7cc971f44ff8b49df57c45140e79b4d81d8a",
            "ba7ad3159dcc65c631f7349e60961603e7a52129",
            "39cb2265b94aa521c1a9a76819bf6d7f3d27d96c",
            "4af976882335b047a09d45ddefa52956f979fc56",
            "ec52c444e49e50669a513a928c4c8c2e2363c173",
            "80784a10d357237acbd9a0149cdefff1ec6da1a0",
            "6b9aedb795d876bc0906ca7223d99b4da1d779de",
            "c7a59709074295ff8b90180915e5006d3e01bcb6",
            "6f40078e0624079e266e00181b09e76c7956e733",
            "953a1b5579f9cba066e7deb1cca5bce799e07225",
            "d6ec40cb7a7c021640c4f73f38a983e9a0eaffb5",
            "f805cd385f57305efb030716948a057101981f52",
            "66200494ab5921ab714ed267fc786aad5a26bd1c",
            "6140d1b13e3f3e142c7881f12fc4780691132426",
            "99bdc30dba9e0748ef3b997230fa2e15a24ce30e",
            "c234facbfb172441501fddaddcf01f1e74ee0e92"
        ],
        "matched": [
            "953a1b5579f9cba066e7deb1cca5bce799e07225"
        ]
    },
    {
        "repo_name": "getsentry/sentry-javascript",
        "CVE_ID": "CVE-2023-46729",
        "Problem_Type": "CWE-918",
        "Description": "sentry-javascript provides Sentry SDKs for JavaScript. An unsanitized input of Next.js SDK tunnel endpoint allows sending HTTP requests to arbitrary URLs and reflecting the response back to the user. This issue only affects users who have Next.js SDK tunneling feature enabled. The problem has been fixed in version 7.77.0.",
        "URL": "https://github.com/getsentry/sentry-javascript/pull/9415",
        "Tag": "['Patch']",
        "fix_commit_hash": "ddbda3c02c35aba8c5235e0cf07fc5bf656f81be",
        "inducing_commit_hash_pyszz": [
            "6e6e241fa007d679cd0b1c71dec498b32ee11b8e"
        ],
        "inducing_commit_hash_pd": [
            "6e6e241fa007d679cd0b1c71dec498b32ee11b8e"
        ],
        "matched": [
            "6e6e241fa007d679cd0b1c71dec498b32ee11b8e"
        ]
    },
    {
        "repo_name": "getsentry/sentry-javascript",
        "CVE_ID": "CVE-2023-50249",
        "Problem_Type": "CWE-1333",
        "Description": "Sentry-Javascript is official Sentry SDKs for JavaScript. A ReDoS (Regular expression Denial of Service) vulnerability has been identified in Sentry's Astro SDK 7.78.0-7.86.0. Under certain conditions, this vulnerability allows an attacker to cause excessive computation times on the server, leading to denial of service (DoS). This vulnerability has been patched in sentry/astro version 7.87.0.",
        "URL": "https://github.com/getsentry/sentry-javascript/pull/9815",
        "Tag": "['Patch']",
        "fix_commit_hash": "fe24eb5eefa9d27b14b2b6f9ebd1debca1c208fb",
        "inducing_commit_hash_pyszz": [
            "bfc63cb9c1b81f8e410f6e40dbef01fc52462b81"
        ],
        "inducing_commit_hash_pd": [
            "bfc63cb9c1b81f8e410f6e40dbef01fc52462b81",
            "61bcf73ef28b21a7ac190a0ff57349b1fcf8014d",
            "9a92e6be8e5552934fea2ea4798a5ca57f9aad7b"
        ],
        "matched": [
            "bfc63cb9c1b81f8e410f6e40dbef01fc52462b81"
        ]
    },
    {
        "repo_name": "getsentry/sentry-python",
        "CVE_ID": "CVE-2023-28117",
        "Problem_Type": "CWE-201",
        "Description": "Sentry SDK is the official Python SDK for Sentry, real-time crash reporting software. When using the Django integration of versions prior to 1.14.0 of the Sentry SDK in a specific configuration it is possible to leak sensitive cookies values, including the session cookie to Sentry. These sensitive cookies could then be used by someone with access to your Sentry issues to impersonate or escalate their privileges within your application.\n\nIn order for these sensitive values to be leaked, the Sentry SDK configuration must have `sendDefaultPII` set to `True`; one must use a custom name for either `SESSION_COOKIE_NAME` or `CSRF_COOKIE_NAME` in one's Django settings; and one must not be configured in one's organization or project settings to use Sentry's data scrubbing features to account for the custom cookie names.\n\nAs of version 1.14.0, the Django integration of the `sentry-sdk` will detect the custom cookie names based on one's Django settings and will remove the values from the payload before sending the data to Sentry. As a workaround, use the SDK's filtering mechanism to remove the cookies from the payload that is sent to Sentry. For error events, this can be done with the `before_send` callback method and for performance related events (transactions) one can use the `before_send_transaction` callback method. Those who want to handle filtering of these values on the server-side can also use Sentry's advanced data scrubbing feature to account for the custom cookie names. Look for the `$http.cookies`, `$http.headers`, `$request.cookies`, or `$request.headers` fields to target with a scrubbing rule.",
        "URL": "https://github.com/getsentry/sentry-python/pull/1842",
        "Tag": "['Patch']",
        "fix_commit_hash": "d5152331f58d86efd3283eec928989810aa21975",
        "inducing_commit_hash_pyszz": [
            "bf48bd0681c68239ee651224b59b9d8aee78f514"
        ],
        "inducing_commit_hash_pd": [
            "c0ef3d0bbb5b3ed6094010570730679bf9e06fd9",
            "673ebcf0f66cc44add71695eb33a69bdaf53de1f"
        ],
        "matched": [
            "bf48bd0681c68239ee651224b59b9d8aee78f514"
        ]
    },
    {
        "repo_name": "getsentry/sentry",
        "CVE_ID": "CVE-2023-36826",
        "Problem_Type": "CWE-863",
        "Description": "Sentry is an error tracking and performance monitoring platform. Starting in version 8.21.0 and prior to version 23.5.2, an authenticated user can download a debug or artifact bundle from arbitrary organizations and projects with a known bundle ID. The user does not need to be a member of the organization or have permissions on the project. A patch was issued in version 23.5.2 to ensure authorization checks are properly scoped on requests to retrieve debug or artifact bundles. Authenticated users who do not have the necessary permissions on the particular project are no longer able to download them. Sentry SaaS users do not need to take any action. Self-Hosted Sentry users should upgrade to version 23.5.2 or higher.",
        "URL": "https://github.com/getsentry/sentry/pull/49680",
        "Tag": "['Patch']",
        "fix_commit_hash": "e932b15435bf36239431eaa3790a6bcfa47046a9",
        "inducing_commit_hash_pyszz": [
            "a72576a1ba20041c85fc2d78c9108ec96031691d"
        ],
        "inducing_commit_hash_pd": [
            "3a8bcaa178a789e96cf57c8138de87b50da05776",
            "df398779b92539bc0a6db9815296993e73c340a5",
            "c3ea951c72ac423bd280f34530fe5d23c36284df",
            "95767d455b8004ec4b4c5026d84b64b6348e6d37",
            "4cf7d3da37f07bb84dc416eb13d31990ca56750a",
            "acc18a951c97c284f0691a671c43c083cf9c2cea",
            "a72576a1ba20041c85fc2d78c9108ec96031691d"
        ],
        "matched": [
            "a72576a1ba20041c85fc2d78c9108ec96031691d"
        ]
    },
    {
        "repo_name": "getsentry/sentry",
        "CVE_ID": "CVE-2023-36829",
        "Problem_Type": "CWE-697",
        "Description": "Sentry is an error tracking and performance monitoring platform. Starting in version 23.6.0 and prior to version 23.6.2, the Sentry API incorrectly returns the `access-control-allow-credentials: true` HTTP header if the `Origin` request header ends with the `system.base-hostname` option of Sentry installation. This only affects installations that have `system.base-hostname` option explicitly set, as it is empty by default. Impact is limited since recent versions of major browsers have cross-site cookie blocking enabled by default. However, this flaw could allow other multi-step attacks. The patch has been released in Sentry 23.6.2.",
        "URL": "https://github.com/getsentry/sentry/pull/52276",
        "Tag": "['Patch']",
        "fix_commit_hash": "ee44c6be35e5e464bc40637580f39867898acd8b",
        "inducing_commit_hash_pyszz": [
            "2ce7978b9cc81ca4c75b9286aa749b7e8e356191"
        ],
        "inducing_commit_hash_pd": [
            "2ce7978b9cc81ca4c75b9286aa749b7e8e356191"
        ],
        "matched": [
            "2ce7978b9cc81ca4c75b9286aa749b7e8e356191"
        ]
    },
    {
        "repo_name": "getsentry/sentry",
        "CVE_ID": "CVE-2023-39349",
        "Problem_Type": "CWE-287",
        "Description": "Sentry is an error tracking and performance monitoring platform. Starting in version 22.1.0 and prior to version 23.7.2, an attacker with access to a token with few or no scopes can query `/api/0/api-tokens/` for a list of all tokens created by a user, including tokens with greater scopes, and use those tokens in other requests. There is no evidence that the issue was exploited on `sentry.io`. For self-hosted users, it is advised to rotate user auth tokens. A fix is available in version 23.7.2 of `sentry` and `self-hosted`. There are no known workarounds.",
        "URL": "https://github.com/getsentry/sentry/pull/53850",
        "Tag": "['Patch']",
        "fix_commit_hash": "fad12c1150d1135edf9666ea72ca11bc110c1083",
        "inducing_commit_hash_pyszz": [
            "8075ed44bc19efb1234e2a1066b52caff1d583a2"
        ],
        "inducing_commit_hash_pd": [
            "8382802ee7ef0d379a48f21e217a7c2f2693a11b",
            "8075ed44bc19efb1234e2a1066b52caff1d583a2"
        ],
        "matched": [
            "8075ed44bc19efb1234e2a1066b52caff1d583a2"
        ]
    },
    {
        "repo_name": "getsentry/symbolicator",
        "CVE_ID": "CVE-2023-51451",
        "Problem_Type": "CWE-918",
        "Description": "Symbolicator is a service used in Sentry. Starting in Symbolicator version 0.3.3 and prior to version 21.12.1, an attacker could make Symbolicator send GET HTTP requests to arbitrary URLs with internal IP addresses by using an invalid protocol. The responses of those requests could be exposed via Symbolicator's API. In affected Sentry instances, the data could be exposed through the Sentry API and user interface if the attacker has a registered account. The issue has been fixed in Symbolicator release 23.12.1, Sentry self-hosted release 23.12.1, and has already been mitigated on sentry.io on December 18, 2023. If updating is not possible, some other mitigations are available. One may disable JS processing by toggling the option `Allow JavaScript Source Fetching` in `Organization Settings > Security & Privacy` and/or disable all untrusted public repositories under `Project Settings > Debug Files`. Alternatively, if JavaScript and native symbolication are not required, disable Symbolicator completely in `config.yml`.",
        "URL": "https://github.com/getsentry/symbolicator/pull/1343",
        "Tag": "['Patch']",
        "fix_commit_hash": "170b51d4d2e7565671f8ee7cd76da74ada46a065",
        "inducing_commit_hash_pyszz": [
            "9db2fb9197dd200d62aacebd8efef4df7678865a"
        ],
        "inducing_commit_hash_pd": [
            "9db2fb9197dd200d62aacebd8efef4df7678865a"
        ],
        "matched": [
            "9db2fb9197dd200d62aacebd8efef4df7678865a"
        ]
    },
    {
        "repo_name": "getzola/zola",
        "CVE_ID": "CVE-2023-40274",
        "Problem_Type": "CWE-22",
        "Description": "An issue was discovered in zola 0.13.0 through 0.17.2. The custom implementation of a web server, available via the \"zola serve\" command, allows directory traversal. The handle_request function, used by the server to process HTTP requests, does not account for sequences of special path control characters (../) in the URL when serving a file, which allows one to escape the webroot of the server and read arbitrary files from the filesystem.",
        "URL": "https://github.com/getzola/zola/pull/2258",
        "Tag": "['Patch']",
        "fix_commit_hash": "13a4d9d9cfd9b0dd17516357002843044eafc5de",
        "inducing_commit_hash_pyszz": [
            "908f16855a3a5bce0b10d6f1ddcc52064dafe409"
        ],
        "inducing_commit_hash_pd": [
            "908f16855a3a5bce0b10d6f1ddcc52064dafe409"
        ],
        "matched": [
            "908f16855a3a5bce0b10d6f1ddcc52064dafe409"
        ]
    },
    {
        "repo_name": "ghantoos/lshell",
        "CVE_ID": "CVE-2016-6903",
        "Problem_Type": "CWE-264",
        "Description": "lshell 0.9.16 allows remote authenticated users to break out of a limited shell and execute arbitrary commands.",
        "URL": "https://github.com/ghantoos/lshell/pull/153/commits/a686f71732a3d0f16df52ef46ab8a49ee0083c68",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a686f71732a3d0f16df52ef46ab8a49ee0083c68",
        "inducing_commit_hash_pyszz": [
            "e72dfcd1f258193f9aaea3591ecbdaed207661a0"
        ],
        "inducing_commit_hash_pd": [
            "e72dfcd1f258193f9aaea3591ecbdaed207661a0",
            "5c255fa4a12413143c7132fd36dc9fa8522c646c",
            "26e9e744772392f2fb103112106811c02999294c",
            "5335bb7d95c4e1047feae51ff520cd2d9e5a1056"
        ],
        "matched": [
            "e72dfcd1f258193f9aaea3591ecbdaed207661a0"
        ]
    },
    {
        "repo_name": "GilaCMS/gila",
        "CVE_ID": "CVE-2019-17535",
        "Problem_Type": "CWE-79",
        "Description": "Gila CMS through 1.11.4 allows blog-list.php XSS, in both the gila-blog and gila-mag themes, via the search parameter, a related issue to CVE-2019-9647.",
        "URL": "https://github.com/GilaCMS/gila/pull/48",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c8c5bee1875c2532f5f78d2ee70d96a11d3bf23",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5c2c9104e5b24c0c9123d17f4d4267fdd2d4f9c0"
        ],
        "matched": [
            "5c2c9104e5b24c0c9123d17f4d4267fdd2d4f9c0"
        ]
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2023-26125",
        "Problem_Type": "CWE-20",
        "Description": "Versions of the package github.com/gin-gonic/gin before 1.9.0 are vulnerable to Improper Input Validation by allowing an attacker to use a specially crafted request via the X-Forwarded-Prefix header, potentially leading to cache poisoning.\n\n**Note:** Although this issue does not pose a significant threat on its own it can serve as an input vector for other more impactful vulnerabilities. However, successful exploitation may depend on the server configuration and whether the header is used in the application logic.",
        "URL": "https://github.com/gin-gonic/gin/pull/3503",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "4cee78f5382d5245c3652e6c15fee715eec505c3",
        "inducing_commit_hash_pyszz": [
            "81ac7d55a09e34013225db0aeac6e70c1ae68928"
        ],
        "inducing_commit_hash_pd": [
            "81ac7d55a09e34013225db0aeac6e70c1ae68928"
        ],
        "matched": [
            "81ac7d55a09e34013225db0aeac6e70c1ae68928"
        ]
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2023-29401",
        "Problem_Type": "CWE-494",
        "Description": "The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat&quot;;x=.txt\" will be sent as a file named \"setup.bat\". If the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.",
        "URL": "https://github.com/gin-gonic/gin/pull/3556",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2d4bbec941551479b1fdf1e54ece03e6e82a7e72",
        "inducing_commit_hash_pyszz": [
            "8860527de602b561500d68cb345c8b07de22805e"
        ],
        "inducing_commit_hash_pd": [
            "8860527de602b561500d68cb345c8b07de22805e"
        ],
        "matched": [
            "8860527de602b561500d68cb345c8b07de22805e"
        ]
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2023-0957",
        "Problem_Type": "CWE-346",
        "Description": "An issue was discovered in Gitpod versions prior to release-2022.11.2.16. There is a Cross-Site WebSocket Hijacking (CSWSH) vulnerability that allows attackers to make WebSocket connections to the Gitpod JSONRPC server using a victim\u00c2\u2019s credentials, because the Origin header is not restricted. This can lead to the extraction of data from workspaces, to a full takeover of the workspace.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/16405",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "0a7ca4c08afc83dc6e801198f8f979a6a7c67d1f",
        "inducing_commit_hash_pyszz": [
            "1a9094756a798e81397b97b0af4ca5f931a1cfdd"
        ],
        "inducing_commit_hash_pd": [
            "a470cdbfc21ba16546dcc8f6396dea0589c26f14",
            "9d1a82446d789c2275016e7fc8f7fa56921d1bc4",
            "e82fe80af9ba1950fb501c9da9cb9eab3fe3bdc3",
            "1a9094756a798e81397b97b0af4ca5f931a1cfdd",
            "7f3e1e4c50bb8a489b0471009b2b859c0e7e25ba"
        ],
        "matched": [
            "1a9094756a798e81397b97b0af4ca5f931a1cfdd"
        ]
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2023-0957",
        "Problem_Type": "CWE-346",
        "Description": "An issue was discovered in Gitpod versions prior to release-2022.11.2.16. There is a Cross-Site WebSocket Hijacking (CSWSH) vulnerability that allows attackers to make WebSocket connections to the Gitpod JSONRPC server using a victim\u00c2\u2019s credentials, because the Origin header is not restricted. This can lead to the extraction of data from workspaces, to a full takeover of the workspace.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/16378",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2c4390ac2673f9db8e5baee99fec100c1be1ac3b",
        "inducing_commit_hash_pyszz": [
            "448ab8c7831b9a76a1732c4f7bc5dec96145344e"
        ],
        "inducing_commit_hash_pd": [
            "9d83f65665b8c52aa7b96fbfdabcd948ba3123e0",
            "45f13cf8e9214db664adc23a418e53d92364fbb7",
            "757a1594c6e5f14a268833b75411e449637c9d40",
            "448ab8c7831b9a76a1732c4f7bc5dec96145344e",
            "24f7b609bf79b247d72d1841282639726bcd5891",
            "f66598c82c64558fe08c8beef1e2ebc3d4b79160"
        ],
        "matched": [
            "448ab8c7831b9a76a1732c4f7bc5dec96145344e"
        ]
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2023-32766",
        "Problem_Type": "CWE-79",
        "Description": "Gitpod before 2022.11.3 allows XSS because redirection can occur for some protocols outside of the trusted set of three (vscode: vscode-insiders: jetbrains-gateway:).",
        "URL": "https://github.com/gitpod-io/gitpod/pull/17559",
        "Tag": "['Patch']",
        "fix_commit_hash": "24ff8a4840f199a45163ac2b35c041d651734f1f",
        "inducing_commit_hash_pyszz": [
            "81c98f8f54040e4c25b7cecf5b8623abc94d4a7c"
        ],
        "inducing_commit_hash_pd": [
            "674ad1c978eea2417b3710e4d2278110144ca5dc"
        ],
        "matched": [
            "81c98f8f54040e4c25b7cecf5b8623abc94d4a7c"
        ]
    },
    {
        "repo_name": "GladysAssistant/Gladys",
        "CVE_ID": "CVE-2023-47440",
        "Problem_Type": "CWE-22",
        "Description": "Gladys Assistant v4.27.0 and prior is vulnerable to Directory Traversal. The patch of CVE-2023-43256 was found to be incomplete, allowing authenticated attackers to extract sensitive files in the host machine.",
        "URL": "https://github.com/GladysAssistant/Gladys/pull/1918/commits/4f56ba250ff9f46578f1afa6a97e62e74bad83b7",
        "Tag": "['Patch']",
        "fix_commit_hash": "f4d2228770baec73b229c7faf58e8bfeb6cc6a83",
        "inducing_commit_hash_pyszz": [
            "f27d0ea4689c3deca5739b5f9ed45a2ddbf00b7b"
        ],
        "inducing_commit_hash_pd": [
            "f27d0ea4689c3deca5739b5f9ed45a2ddbf00b7b"
        ],
        "matched": [
            "f27d0ea4689c3deca5739b5f9ed45a2ddbf00b7b"
        ]
    },
    {
        "repo_name": "glpi-project/glpi",
        "CVE_ID": "CVE-2019-1010310",
        "Problem_Type": "CWE-74",
        "Description": "GLPI GLPI Product 9.3.1 is affected by: Frame and Form tags Injection allowing admins to phish users by putting code in reminder description. The impact is: Admins can phish any user or group of users for credentials / credit cards. The component is: Tools > Reminder > Description .. Set the description to any iframe/form tags and apply. The attack vector is: The attacker puts a login form, the user fills it and clicks on submit .. the request is sent to the attacker domain saving the data. The fixed version is: 9.4.1.",
        "URL": "https://github.com/glpi-project/glpi/pull/5519",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "83259d80aefcb6df594a7309dfd8cd601e5efbed",
        "inducing_commit_hash_pyszz": [
            "3c04b731b55c8fe8e08ff4aa2dbb8ae2577e318e"
        ],
        "inducing_commit_hash_pd": [
            "3c04b731b55c8fe8e08ff4aa2dbb8ae2577e318e"
        ],
        "matched": [
            "3c04b731b55c8fe8e08ff4aa2dbb8ae2577e318e"
        ]
    },
    {
        "repo_name": "glpi-project/glpi",
        "CVE_ID": "CVE-2019-10231",
        "Problem_Type": "CWE-843",
        "Description": "Teclib GLPI before 9.4.1.1 is affected by a PHP type juggling vulnerability allowing bypass of authentication. This occurs in Auth::checkPassword() (inc/auth.class.php).",
        "URL": "https://github.com/glpi-project/glpi/pull/5520",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7afbcc75eb0a2caa502114575f8155b1920c5c55",
        "inducing_commit_hash_pyszz": [
            "aba5c9eb387c2e94895a38a0e4b1e598fce771b0"
        ],
        "inducing_commit_hash_pd": [
            "5b2033cf7d6891682d8970af618e136bf2c59fef"
        ],
        "matched": [
            "aba5c9eb387c2e94895a38a0e4b1e598fce771b0"
        ]
    },
    {
        "repo_name": "glpi-project/glpi",
        "CVE_ID": "CVE-2019-10233",
        "Problem_Type": "CWE-203",
        "Description": "Teclib GLPI before 9.4.1.1 is affected by a timing attack associated with a cookie.",
        "URL": "https://github.com/glpi-project/glpi/pull/5562",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "26900a5e53a5ad347d20a947eb5f7e2b447fef9f",
        "inducing_commit_hash_pyszz": [
            "b8578c21db0e09729535707768ff12deb2360a88"
        ],
        "inducing_commit_hash_pd": [
            "b8578c21db0e09729535707768ff12deb2360a88",
            "069afae49032c1a4dd8ddf9a4cb425a320d6761a"
        ],
        "matched": [
            "b8578c21db0e09729535707768ff12deb2360a88"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2018-1000803",
        "Problem_Type": "CWE-200",
        "Description": "Gitea version prior to version 1.5.1 contains a CWE-200 vulnerability that can result in Exposure of users private email addresses. This attack appear to be exploitable via Watch a repository to receive email notifications. Emails received contain the other recipients even if they have the email set as private. This vulnerability appears to have been fixed in 1.5.1.",
        "URL": "https://github.com/go-gitea/gitea/pull/4664/files#diff-146e0c2b5bb1ea96c9fb73d509456e57",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "194a11eb110cd98fc2ba52861abf7770db6885a3",
        "inducing_commit_hash_pyszz": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "inducing_commit_hash_pd": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "matched": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2018-1000803",
        "Problem_Type": "CWE-200",
        "Description": "Gitea version prior to version 1.5.1 contains a CWE-200 vulnerability that can result in Exposure of users private email addresses. This attack appear to be exploitable via Watch a repository to receive email notifications. Emails received contain the other recipients even if they have the email set as private. This vulnerability appears to have been fixed in 1.5.1.",
        "URL": "https://github.com/go-gitea/gitea/pull/4664",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "194a11eb110cd98fc2ba52861abf7770db6885a3",
        "inducing_commit_hash_pyszz": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "inducing_commit_hash_pd": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "matched": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2019-1000002",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gitea version 1.6.2 and earlier contains a Incorrect Access Control vulnerability in Delete/Edit file functionallity that can result in the attacker deleting files outside the repository he/she has access to. This attack appears to be exploitable via the attacker must get write access to \"any\" repository including self-created ones.. This vulnerability appears to have been fixed in 1.6.3, 1.7.0-rc2.",
        "URL": "https://github.com/go-gitea/gitea/pull/5631",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fd1e8563f8713265df2e402e9387e0964efc42e2",
        "inducing_commit_hash_pyszz": [
            "181b3a8f0988ab729270279e6e12534cb52628cc"
        ],
        "inducing_commit_hash_pd": [
            "181b3a8f0988ab729270279e6e12534cb52628cc"
        ],
        "matched": [
            "181b3a8f0988ab729270279e6e12534cb52628cc"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2019-1010261",
        "Problem_Type": "CWE-79",
        "Description": "Gitea 1.7.0 and earlier is affected by: Cross Site Scripting (XSS). The impact is: Attacker is able to have victim execute arbitrary JS in browser. The component is: go-get URL generation - PR to fix: https://github.com/go-gitea/gitea/pull/5905. The attack vector is: victim must open a specifically crafted URL. The fixed version is: 1.7.1 and later.",
        "URL": "https://github.com/go-gitea/gitea/pull/5905",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80098bd7526fed84cfb4fa48272be71541b37205",
        "inducing_commit_hash_pyszz": [
            "0d4c63fd70d0b255a9a17352cc47ec2b6ca13440"
        ],
        "inducing_commit_hash_pd": [
            "94da47271701401b6959bfd308d6c74fd30b22e2",
            "0d4c63fd70d0b255a9a17352cc47ec2b6ca13440"
        ],
        "matched": [
            "0d4c63fd70d0b255a9a17352cc47ec2b6ca13440"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2019-11576",
        "Problem_Type": "CWE-287",
        "Description": "Gitea before 1.8.0 allows 1FA for user accounts that have completed 2FA enrollment. If a user's credentials are known, then an attacker could send them to the API without requiring the 2FA one-time password.",
        "URL": "https://github.com/go-gitea/gitea/pull/6674",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "19ec2606e91610421a3e9cd87c94748ef07ca468",
        "inducing_commit_hash_pyszz": [
            "e47df0b301510a49b49fc43266f436b7d58a02b1"
        ],
        "inducing_commit_hash_pd": [
            "56dd430a10bf5281caf648344e4660fbdc5d4dee",
            "e47df0b301510a49b49fc43266f436b7d58a02b1",
            "514382e2ebfe6869268aeb919c1fa4d224687e13"
        ],
        "matched": [
            "e47df0b301510a49b49fc43266f436b7d58a02b1"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2020-13246",
        "Problem_Type": "CWE-667",
        "Description": "An issue was discovered in Gitea through 1.11.5. An attacker can trigger a deadlock by initiating a transfer of a repository's ownership from one organization to another.",
        "URL": "https://github.com/go-gitea/gitea/pull/11438",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3d9a5f8464e0921fc4063d903ecf2063fa152fa",
        "inducing_commit_hash_pyszz": [
            "72aa5a20ecf8aa3f7c110fd51c37994d950e0ba8"
        ],
        "inducing_commit_hash_pd": [
            "1f01f53c53ea75634f981611635be49c69e1920b"
        ],
        "matched": [
            "72aa5a20ecf8aa3f7c110fd51c37994d950e0ba8"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-28378",
        "Problem_Type": "CWE-79",
        "Description": "Gitea 1.12.x and 1.13.x before 1.13.4 allows XSS via certain issue data in some situations.",
        "URL": "https://github.com/go-gitea/gitea/pull/14898",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f1da46622e2d43870f939c46f43518728baecfd3",
        "inducing_commit_hash_pyszz": [
            "d67e9b9629557df1e355f0a864792c194b3e8848"
        ],
        "inducing_commit_hash_pd": [
            "ffddf3f8a6ca5e3db46e5731d717a55eb58e858f",
            "4563eb873d3d46953aeb43a1cebf3389906b0b88",
            "7d7ab1eeae43d99fe329878ac9c8db5e45e2dee5"
        ],
        "matched": [
            "d67e9b9629557df1e355f0a864792c194b3e8848"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-29134",
        "Problem_Type": "CWE-22",
        "Description": "The avatar middleware in Gitea before 1.13.6 allows Directory Traversal via a crafted URL.",
        "URL": "https://github.com/go-gitea/gitea/pull/15125/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "151bedab524a0844758d48bcab5b44a099976c23",
        "inducing_commit_hash_pyszz": [
            "e846b712fc0667c0085cffcc52e4fe9a8fc3ad60"
        ],
        "inducing_commit_hash_pd": [
            "e846b712fc0667c0085cffcc52e4fe9a8fc3ad60"
        ],
        "matched": [
            "e846b712fc0667c0085cffcc52e4fe9a8fc3ad60"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45325",
        "Problem_Type": "CWE-918",
        "Description": "Server Side Request Forgery (SSRF) vulneraility exists in Gitea before 1.7.0 using the OpenID URL.",
        "URL": "https://github.com/go-gitea/gitea/pull/5705",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b36bdd4902aa7ee93e15eee961d6a8a4a26e81c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "71d16f69ff9448e55f371ce8354d978f8dbe2cba"
        ],
        "matched": [
            "71d16f69ff9448e55f371ce8354d978f8dbe2cba"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45326",
        "Problem_Type": "CWE-352",
        "Description": "Cross Site Request Forgery (CSRF) vulnerability exists in Gitea before 1.5.2 via API routes.This can be dangerous especially with state altering POST requests.",
        "URL": "https://github.com/go-gitea/gitea/pull/4840",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e47df0b301510a49b49fc43266f436b7d58a02b1",
        "inducing_commit_hash_pyszz": [
            "d293a2b9d6722dffde7998c953c3087e47a38a83"
        ],
        "inducing_commit_hash_pd": [
            "57de1ff991a864c8adf669e3919247c555e7a75a",
            "dd758ad8dc76ef5c0baef095857d73707912a4ee",
            "695b10beddc640d333fd5864cb6edb03e540b344",
            "6a3c03762a37f593ec8101c2005836ca44683e1d",
            "e78786ef39526fac6705a831fc291c55f1ca091b",
            "735676267e48e6a57b250825e2e77edbb513e11d",
            "56dd430a10bf5281caf648344e4660fbdc5d4dee",
            "3ffedeab03a80e7345823d118042d17a3e3d9b52",
            "ce9b86082c4824917023b1bb480648d0cc56dd04",
            "4a8ee0b5ccbdc75bab29836a54db4e7af7b7ff3f",
            "c2346e44696e57c31f9765c32ee60b365a15c8f0",
            "c3b6383b3a91e476c5a6978a0fb355191271a51c",
            "49df677c475d6a20575b99b5af8323f65937dadb",
            "095fb9f2e32fe78acb9bc034f0e1d60922ff1e60",
            "e59adcde655aac0e8afd3249407c9a0a2b1b1d6b",
            "eae9154811b660bcf2333f349176af7ed96b5924",
            "469ab99e9a4e31c1e95ab37f363c26b62b782542",
            "69e2ab161109eef667cd22a96711e4a8ee9d01d2",
            "7c417bbb0d8f3213f34db50f62013e20492d044f",
            "f99489d5c522663cfc14b9b65539966844f3ee6b",
            "d293a2b9d6722dffde7998c953c3087e47a38a83",
            "ef78309b6535e4feff7b48d4b119180504616e13",
            "f64c232953d13043b262dc8da55acb3738e58d15",
            "08b124dd47e5be365ac843031ed3ea73d1fbc151",
            "7781e8cef2dfe73d71be7804f4c5a7c5f1995d31"
        ],
        "matched": [
            "d293a2b9d6722dffde7998c953c3087e47a38a83"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45327",
        "Problem_Type": "CWE-436",
        "Description": "Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. which could let a remote malisious user execute arbitrary code.",
        "URL": "https://github.com/go-gitea/gitea/pull/10465",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5944a9521102c4917399a6550a0756919527944",
        "inducing_commit_hash_pyszz": [
            "8eba27c79257c6bc68cefbdffbb36d3596e6d3ee"
        ],
        "inducing_commit_hash_pd": [
            "1aec1a2ddae3a3714d6a167d85fcc1c69413b660",
            "3fb1b6a608625067a76ba90f9855d48c4d6555bd",
            "8dd07c0ddd99ae626a1ec8c06f75f27fed51269f",
            "8eba27c79257c6bc68cefbdffbb36d3596e6d3ee",
            "0d1872ebe3f11c14f31f454ed8d719a22c0884d0",
            "659bc2814c4b6f23c6039e0c7dc962a40968cdb1",
            "f15fa9167ade8262bed437451585d319f12d1182",
            "7a9777ae36e6721d1d9bbb355a19b4ae12b3be43",
            "171b3598778a1ecd0a921c71ed6755bfef68f7f0",
            "d75013a0e88a1f46fd16f5ba9344ff17ed84cd37",
            "efea642d6cf419c9587d44b95ff2bc04e89f7bfe",
            "7cb5a15c9b7a2a118d756d15cb745743f207a318",
            "0e6b9ea786a77a4df4aa9fff1b96b9483bcdded5",
            "94da47271701401b6959bfd308d6c74fd30b22e2",
            "04be8c0de5295f57e06e152e56c481b29b1076e5",
            "ad5ec45dd63aa2563d113e6a9ce31180246aa5f2",
            "524885dd6502570dddf5c83f171ee74890dba5c4",
            "8606d9f5bc01fce90159c9bdef9989a31a865e38",
            "2d8c414f8c44e20619d6680b96044424ef6ebb2a",
            "06631ab91f5d84b48d6f71ac8eaf4df740ba0282",
            "6643647687aa2ba8a41f8f95d404407ff6106d8c"
        ],
        "matched": [
            "8eba27c79257c6bc68cefbdffbb36d3596e6d3ee"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45327",
        "Problem_Type": "CWE-436",
        "Description": "Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. which could let a remote malisious user execute arbitrary code.",
        "URL": "https://github.com/go-gitea/gitea/pull/10582",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e2217bd2d8833f0bff84767f676fc93c84d4b9a",
        "inducing_commit_hash_pyszz": [
            "e6a03813d463bc0c624a3c40fb615cacc006e265"
        ],
        "inducing_commit_hash_pd": [
            "c58708d3eedb352bb277feb2c12bb1652a8a58b7",
            "5abd1d2a68b139af5046b0e1b69c1884eef4f3d1",
            "e6a03813d463bc0c624a3c40fb615cacc006e265"
        ],
        "matched": [
            "e6a03813d463bc0c624a3c40fb615cacc006e265"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45327",
        "Problem_Type": "CWE-436",
        "Description": "Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. which could let a remote malisious user execute arbitrary code.",
        "URL": "https://github.com/go-gitea/gitea/pull/10462",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c161bb013e091c0bcc524f07d50c028d9daf8cce",
        "inducing_commit_hash_pyszz": [
            "9ae4c17cb1fde0eaa1556e545a8871b6a70d2efa"
        ],
        "inducing_commit_hash_pd": [
            "b40496533bb67ac988cd89a67e70610fc895419f",
            "c58708d3eedb352bb277feb2c12bb1652a8a58b7",
            "7796c9e1223e8a99eb265adff0974d05bb594cfa",
            "951037c0ae66a9c4bddc0e2e6bbb01d754ae1f1c",
            "86fdba177ad82f3dcdfc237631fef4588042b9d6",
            "1f2e173a745da8e4b57f96b5561a3c10054d3b76",
            "5ae840872530e8d667dee611abe5307ee93e4dd4",
            "acaf5c96fe7f93440dfbd52dd60b4f1a5656d556",
            "3e05661d8d52315d6dbb601950df2354428ac119",
            "783b1967e257fdba2bd593d9f2108da2010b7448",
            "c0a899b15182fc717207dadb33a0d55024dce109",
            "9ae4c17cb1fde0eaa1556e545a8871b6a70d2efa",
            "7ca5f8f119593023809e6130db75154597c52426"
        ],
        "matched": [
            "9ae4c17cb1fde0eaa1556e545a8871b6a70d2efa"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45329",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulnerability exists in Gitea before 1.5.1 via the repository settings inside the external wiki/issue tracker URL field.",
        "URL": "https://github.com/go-gitea/gitea/pull/4710",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "92466129ec242536c71b66a8987d9b37e6bc0bce",
        "inducing_commit_hash_pyszz": [
            "f42ec6120e8a2830407027020b65391ebf8e7f59"
        ],
        "inducing_commit_hash_pd": [
            "f42ec6120e8a2830407027020b65391ebf8e7f59",
            "be5738243c2ab9e3bd21a0b3d581761d73007883"
        ],
        "matched": [
            "f42ec6120e8a2830407027020b65391ebf8e7f59"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45331",
        "Problem_Type": "CWE-287",
        "Description": "An Authentication Bypass vulnerability exists in Gitea before 1.5.0, which could let a malicious user gain privileges. If captured, the TOTP code for the 2FA can be submitted correctly more than once.",
        "URL": "https://github.com/go-gitea/gitea/pull/3878",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1e1ece8f3dce8ed9958f3bd5823c135d1c19eb49",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f2e20c81b66e6a937ecdb686f8d1011371433365",
            "6dd096b7f08799ff27d9e34356fb1163ca10f388"
        ],
        "matched": [
            "f2e20c81b66e6a937ecdb686f8d1011371433365"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-30781",
        "Problem_Type": "CWE-116",
        "Description": "Gitea before 1.16.7 does not escape git fetch remote.",
        "URL": "https://github.com/go-gitea/gitea/pull/19487",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe274c148bc516b63aa89ab1904d124e60903421",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "124b072f0b69650baff086b9688d198f5a6761af"
        ],
        "matched": [
            "124b072f0b69650baff086b9688d198f5a6761af"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-30781",
        "Problem_Type": "CWE-116",
        "Description": "Gitea before 1.16.7 does not escape git fetch remote.",
        "URL": "https://github.com/go-gitea/gitea/pull/19490",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "242f7f1a528af0b85ad0dd6fa88ed2d889b92385",
        "inducing_commit_hash_pyszz": [
            "f6067a8465e7762aea1561106cfee291409a0fd6"
        ],
        "inducing_commit_hash_pd": [
            "e3e44a59d01da3af2be3a830f4a90394e7af4ff4",
            "462284e2f5768cf04d71c7abd8c01eef20cff73d",
            "2b3e931cde3e3d70b69202164f35fc6f2c609ade",
            "fc3d0826096943b979717ed46c9a4cfd86e06106",
            "08069dc4656fa53ee5dd25189e15012cb4f8acb2",
            "f6067a8465e7762aea1561106cfee291409a0fd6"
        ],
        "matched": [
            "f6067a8465e7762aea1561106cfee291409a0fd6"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-38795",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Gitea through 1.17.1, repo cloning can occur in the migration function.",
        "URL": "https://github.com/go-gitea/gitea/pull/20892",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "9e8b1c663041e8b503d57df64dfbbf0b51a720f4",
        "inducing_commit_hash_pyszz": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ],
        "inducing_commit_hash_pd": [
            "6d69df28047bf7fd3e307391b484a93432615b90",
            "fd60ebfe14927657ff5cfa4e75f975eaadae65f1"
        ],
        "matched": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-38795",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Gitea through 1.17.1, repo cloning can occur in the migration function.",
        "URL": "https://github.com/go-gitea/gitea/pull/20869",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6d3181406d87503dbd15e4a7c764c8963f13977f",
        "inducing_commit_hash_pyszz": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ],
        "inducing_commit_hash_pd": [
            "6d69df28047bf7fd3e307391b484a93432615b90",
            "fd60ebfe14927657ff5cfa4e75f975eaadae65f1"
        ],
        "matched": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-42968",
        "Problem_Type": "CWE-88",
        "Description": "Gitea before 1.17.3 does not sanitize and escape refs in the git backend. Arguments to git commands are mishandled.",
        "URL": "https://github.com/go-gitea/gitea/pull/21463",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd48a007bb85ba071ed175a6376b9e392e2c49b6",
        "inducing_commit_hash_pyszz": [
            "34b5436ae1af2735546bb519a950eabf4990212d"
        ],
        "inducing_commit_hash_pd": [
            "3043eb36bfcd7ddf29202b958b91942826a8182b",
            "1fa96629461ac4229932b0a4526fc2f60c88ec51",
            "59d1cc49f1d7c63d25e2a139befc8c02b830ba09",
            "2f6aadffa8243736825564cd1ce32d0d5a1eb391",
            "34b5436ae1af2735546bb519a950eabf4990212d",
            "ee11974719528197241840dc245f7daf08ec5c0a",
            "26718a785ac49f17eab51ad0f5324d036b810f73",
            "e3c626834b34fae7728ee7869ed73ee4d1b26a26",
            "27b8eff96ba84d69d8902fbe62c52878aee5ce89",
            "124b072f0b69650baff086b9688d198f5a6761af",
            "c05a8abc762f868e67dd131d34f45218a0fb95ab"
        ],
        "matched": [
            "34b5436ae1af2735546bb519a950eabf4990212d"
        ]
    },
    {
        "repo_name": "go-macaron/csrf",
        "CVE_ID": "CVE-2018-25060",
        "Problem_Type": "CWE-311",
        "Description": "A vulnerability was found in Macaron csrf and classified as problematic. Affected by this issue is some unknown functionality of the file csrf.go. The manipulation of the argument Generate leads to sensitive cookie without secure attribute. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The patch is identified as dadd1711a617000b70e5e408a76531b73187031c. It is recommended to apply a patch to fix this issue. VDB-217058 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/go-macaron/csrf/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dadd1711a617000b70e5e408a76531b73187031c",
        "inducing_commit_hash_pyszz": [
            "4fd580b68d81e4691e6bceb4f4c7f23f091db865"
        ],
        "inducing_commit_hash_pd": [
            "4fd580b68d81e4691e6bceb4f4c7f23f091db865"
        ],
        "matched": [
            "4fd580b68d81e4691e6bceb4f4c7f23f091db865"
        ]
    },
    {
        "repo_name": "go-resty/resty",
        "CVE_ID": "CVE-2023-45286",
        "Problem_Type": "CWE-362",
        "Description": "A race condition in go-resty can result in HTTP request body disclosure across requests. This condition can be triggered by calling sync.Pool.Put with the same *bytes.Buffer more than once, when request retries are enabled and a retry occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP request body from an unrelated request, and go-resty will append the current HTTP request body to it, sending two bodies in one request. The sync.Pool in question is defined at package level scope, so a completely unrelated server could receive the request body.",
        "URL": "https://github.com/go-resty/resty/pull/745",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "577fed8730d79f583eb48dfc81674164e1fc471e",
        "inducing_commit_hash_pyszz": [
            "4604150f0fe9f3cdab26779f0c056d9aff1107ab"
        ],
        "inducing_commit_hash_pd": [
            "4604150f0fe9f3cdab26779f0c056d9aff1107ab"
        ],
        "matched": [
            "4604150f0fe9f3cdab26779f0c056d9aff1107ab"
        ]
    },
    {
        "repo_name": "goauthentik/authentik",
        "CVE_ID": "CVE-2023-48228",
        "Problem_Type": "CWE-287",
        "Description": "authentik is an open-source identity provider. When initialising a oauth2 flow with a `code_challenge` and `code_method` (thus requesting PKCE), the single sign-on provider (authentik) must check if there is a matching and existing `code_verifier` during the token step. Prior to versions 2023.10.4 and 2023.8.5, authentik checks if the contents of `code_verifier` is matching only when it is provided. When it is left out completely, authentik simply accepts the token request with out it; even when the flow was started with a `code_challenge`. authentik 2023.8.5 and 2023.10.4 fix this issue.",
        "URL": "https://github.com/goauthentik/authentik/pull/7666",
        "Tag": "['Patch']",
        "fix_commit_hash": "b88e39411c12e3f9e04125a7887f12354f760a14",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ],
        "matched": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ]
    },
    {
        "repo_name": "goauthentik/authentik",
        "CVE_ID": "CVE-2023-48228",
        "Problem_Type": "CWE-287",
        "Description": "authentik is an open-source identity provider. When initialising a oauth2 flow with a `code_challenge` and `code_method` (thus requesting PKCE), the single sign-on provider (authentik) must check if there is a matching and existing `code_verifier` during the token step. Prior to versions 2023.10.4 and 2023.8.5, authentik checks if the contents of `code_verifier` is matching only when it is provided. When it is left out completely, authentik simply accepts the token request with out it; even when the flow was started with a `code_challenge`. authentik 2023.8.5 and 2023.10.4 fix this issue.",
        "URL": "https://github.com/goauthentik/authentik/pull/7668",
        "Tag": "['Patch']",
        "fix_commit_hash": "6b9afed21f7c39f171a4a445654cfe415bba37d5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ],
        "matched": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ]
    },
    {
        "repo_name": "goauthentik/authentik",
        "CVE_ID": "CVE-2023-48228",
        "Problem_Type": "CWE-287",
        "Description": "authentik is an open-source identity provider. When initialising a oauth2 flow with a `code_challenge` and `code_method` (thus requesting PKCE), the single sign-on provider (authentik) must check if there is a matching and existing `code_verifier` during the token step. Prior to versions 2023.10.4 and 2023.8.5, authentik checks if the contents of `code_verifier` is matching only when it is provided. When it is left out completely, authentik simply accepts the token request with out it; even when the flow was started with a `code_challenge`. authentik 2023.8.5 and 2023.10.4 fix this issue.",
        "URL": "https://github.com/goauthentik/authentik/pull/7669",
        "Tag": "['Patch']",
        "fix_commit_hash": "3af77ab3821fe9c7df8055ba5eade3d1ecea03a6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ],
        "matched": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ]
    },
    {
        "repo_name": "gocd/gocd",
        "CVE_ID": "CVE-2022-29182",
        "Problem_Type": "CWE-79",
        "Description": "GoCD is a continuous delivery server. GoCD versions 19.11.0 through 21.4.0 (inclusive) are vulnerable to a Document Object Model (DOM)-based cross-site scripting attack via a pipeline run's Stage Details > Graphs tab. It is possible for a malicious script on a attacker-hosted site to execute script that will run within the user's browser context and GoCD session via abuse of a messaging channel used for communication between with the parent page and the stage details graph's iframe. This could allow an attacker to steal a GoCD user's session cookies and/or execute malicious code in the user's context. This issue is fixed in GoCD 22.1.0. There are currently no known workarounds.",
        "URL": "https://github.com/gocd/gocd/pull/10190/commits/a256d05de1445e6c77843f098581fc6a66fe4477",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a256d05de1445e6c77843f098581fc6a66fe4477",
        "inducing_commit_hash_pyszz": [
            "0a9c553e7a504ebdd9cec90df95c2f5bd96fd14f"
        ],
        "inducing_commit_hash_pd": [
            "0a9c553e7a504ebdd9cec90df95c2f5bd96fd14f"
        ],
        "matched": [
            "0a9c553e7a504ebdd9cec90df95c2f5bd96fd14f"
        ]
    },
    {
        "repo_name": "gocd/gocd",
        "CVE_ID": "CVE-2022-29183",
        "Problem_Type": "CWE-79",
        "Description": "GoCD is a continuous delivery server. GoCD versions 20.2.0 until 21.4.0 are vulnerable to reflected cross-site scripting via abuse of the pipeline comparison function's error handling to render arbitrary HTML into the returned page. This could allow an attacker to trick a victim into executing code which would allow the attacker to operate on, or gain control over the same resources as the victim had access to. This issue is fixed in GoCD 21.4.0. As a workaround, block access to `/go/compare/.*` prior to GoCD Server via a reverse proxy, web application firewall or equivalent, which would prevent use of the pipeline comparison function.",
        "URL": "https://github.com/gocd/gocd/pull/9829/commits/bda81084c0401234b168437cf35a63390e3064d1",
        "Tag": "['Patch']",
        "fix_commit_hash": "bda81084c0401234b168437cf35a63390e3064d1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "73768b398d8796a71aea9ce046af3085f002af83"
        ],
        "matched": [
            "73768b398d8796a71aea9ce046af3085f002af83"
        ]
    },
    {
        "repo_name": "godotengine/godot",
        "CVE_ID": "CVE-2021-26826",
        "Problem_Type": "CWE-787",
        "Description": "A stack overflow issue exists in Godot Engine up to v3.2 and is caused by improper boundary checks when loading .TGA image files. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.",
        "URL": "https://github.com/godotengine/godot/pull/45701/commits/403e4fd08b0b212e96f53d926e6273e0745eaa5a",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "403e4fd08b0b212e96f53d926e6273e0745eaa5a",
        "inducing_commit_hash_pyszz": [
            "871ceeb0fe219072ae708d4d4397e8ae66873386"
        ],
        "inducing_commit_hash_pd": [
            "3205a92ad872f918c8322cdcd1434c231a1fd251",
            "871ceeb0fe219072ae708d4d4397e8ae66873386"
        ],
        "matched": [
            "871ceeb0fe219072ae708d4d4397e8ae66873386"
        ]
    },
    {
        "repo_name": "gofiber/fiber",
        "CVE_ID": "CVE-2020-15111",
        "Problem_Type": "CWE-74",
        "Description": "In Fiber before version 1.12.6, the filename that is given in c.Attachment() (https://docs.gofiber.io/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc. A possible workaround is to serialize the input before passing it to ctx.Attachment().",
        "URL": "https://github.com/gofiber/fiber/pull/579/commits/f698b5d5066cfe594102ae252cd58a1fe57cf56f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f698b5d5066cfe594102ae252cd58a1fe57cf56f",
        "inducing_commit_hash_pyszz": [
            "caef8be9adec9438a3c0b81b0b04e5670daccd52"
        ],
        "inducing_commit_hash_pd": [
            "caef8be9adec9438a3c0b81b0b04e5670daccd52"
        ],
        "matched": [
            "caef8be9adec9438a3c0b81b0b04e5670daccd52"
        ]
    },
    {
        "repo_name": "gogs/gogs",
        "CVE_ID": "CVE-2020-14958",
        "Problem_Type": "CWE-281",
        "Description": "In Gogs 0.11.91, MakeEmailPrimary in models/user_mail.go lacks a \"not the owner of the email\" check.",
        "URL": "https://github.com/gogs/gogs/pull/5988",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "82ff0c5852f29daa5f95d965fd50665581e7ea3c",
        "inducing_commit_hash_pyszz": [
            "328c23c5d41e07e37476e217c7ff1d3baef26b61"
        ],
        "inducing_commit_hash_pd": [
            "52322ef62457541fb914f8e929b2dcd01915c8bc",
            "328c23c5d41e07e37476e217c7ff1d3baef26b61",
            "4d83fd4238e177d9327c760a5386bc53f25dedbb",
            "01c8df01ec0608f1f25b2f1444adabb98fa5ee8a"
        ],
        "matched": [
            "328c23c5d41e07e37476e217c7ff1d3baef26b61"
        ]
    },
    {
        "repo_name": "googleapis/google-oauth-java-client",
        "CVE_ID": "CVE-2021-22573",
        "Problem_Type": "CWE-347",
        "Description": "The vulnerability is that IDToken verifier does not verify if token is properly signed. Signature verification makes sure that the token's payload comes from valid provider, not from someone else. An attacker can provide a compromised token with custom payload. The token will pass the validation on the client side. We recommend upgrading to version 1.33.3 or above",
        "URL": "https://github.com/googleapis/google-oauth-java-client/pull/872",
        "Tag": "['Issue Tracking', 'Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "c634ad4e31cac322bb1aa8a9feb0569749011bf0",
        "inducing_commit_hash_pyszz": [
            "dd13030f8a4d9962eeaa0d66ef44000065ed9bd0"
        ],
        "inducing_commit_hash_pd": [
            "dd13030f8a4d9962eeaa0d66ef44000065ed9bd0"
        ],
        "matched": [
            "dd13030f8a4d9962eeaa0d66ef44000065ed9bd0"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18352",
        "Problem_Type": "CWE-79",
        "Description": "Error reporting within Rendertron 1.0.0 allows reflected Cross Site Scripting (XSS) from invalid URLs.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18353",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Rendertron 1.0.0 includes an _ah/stop route to shutdown the Chrome instance responsible for serving render requests to all users. Visiting this route with a GET request allows any unauthorized remote attacker to disable the core service of the application.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18354",
        "Problem_Type": "CWE-22",
        "Description": "Rendertron 1.0.0 allows for alternative protocols such as 'file://' introducing a Local File Inclusion (LFI) bug where arbitrary files can be read by a remote attacker.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18355",
        "Problem_Type": "CWE-200",
        "Description": "Installed packages are exposed by node_modules in Rendertron 1.0.0, allowing remote attackers to read absolute paths on the server by examining the \"_where\" attribute of package.json files.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/guest-oslogin",
        "CVE_ID": "CVE-2020-8903",
        "Problem_Type": "CWE-276",
        "Description": "A vulnerability in Google Cloud Platform's guest-oslogin versions between 20190304 and 20200507 allows a user that is only granted the role \"roles/compute.osLogin\" to escalate privileges to root. Using their membership to the \"adm\" group, users with this role are able to read the DHCP XID from the systemd journal. Using the DHCP XID, it is then possible to set the IP address and hostname of the instance to any value, which is then stored in /etc/hosts. An attacker can then point metadata.google.internal to an arbitrary IP address and impersonate the GCE metadata server which make it is possible to instruct the OS Login PAM module to grant administrative privileges. All images created after 2020-May-07 (20200507) are fixed, and if you cannot update, we recommend you edit /etc/group/security.conf and remove the \"adm\" user from the OS Login entry.",
        "URL": "https://github.com/GoogleCloudPlatform/guest-oslogin/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50b0fb7b5804c22ef9581e7dc91875801dfa5469",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ],
        "matched": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/guest-oslogin",
        "CVE_ID": "CVE-2020-8907",
        "Problem_Type": "CWE-276",
        "Description": "A vulnerability in Google Cloud Platform's guest-oslogin versions between 20190304 and 20200507 allows a user that is only granted the role \"roles/compute.osLogin\" to escalate privileges to root. Using their membership to the \"docker\" group, an attacker with this role is able to run docker and mount the host OS. Within docker, it is possible to modify the host OS filesystem and modify /etc/groups to gain administrative privileges. All images created after 2020-May-07 (20200507) are fixed, and if you cannot update, we recommend you edit /etc/group/security.conf and remove the \"docker\" user from the OS Login entry.",
        "URL": "https://github.com/GoogleCloudPlatform/guest-oslogin/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50b0fb7b5804c22ef9581e7dc91875801dfa5469",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ],
        "matched": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/guest-oslogin",
        "CVE_ID": "CVE-2020-8933",
        "Problem_Type": "CWE-276",
        "Description": "A vulnerability in Google Cloud Platform's guest-oslogin versions between 20190304 and 20200507 allows a user that is only granted the role \"roles/compute.osLogin\" to escalate privileges to root. Using the membership to the \"lxd\" group, an attacker can attach host devices and filesystems. Within an lxc container, it is possible to attach the host OS filesystem and modify /etc/sudoers to then gain administrative privileges. All images created after 2020-May-07 (20200507) are fixed, and if you cannot update, we recommend you edit /etc/group/security.conf and remove the \"lxd\" user from the OS Login entry.",
        "URL": "https://github.com/GoogleCloudPlatform/guest-oslogin/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50b0fb7b5804c22ef9581e7dc91875801dfa5469",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ],
        "matched": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/iot-device-sdk-embedded-c",
        "CVE_ID": "CVE-2021-22547",
        "Problem_Type": "CWE-120",
        "Description": "In IoT Devices SDK, there is an implementation of calloc() that doesn't have a length check. An attacker could pass in memory objects larger than the buffer and wrap around to have a smaller buffer than required, allowing the attacker access to the other parts of the heap. We recommend upgrading the Google Cloud IoT Device SDK for Embedded C used to 1.0.3 or greater.",
        "URL": "https://github.com/GoogleCloudPlatform/iot-device-sdk-embedded-c/pull/119",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "96018ab742975e1a4fc45857bb16140e52297041",
        "inducing_commit_hash_pyszz": [
            "87526f0080487e0f7f41d65cdb7710ba268055ac"
        ],
        "inducing_commit_hash_pd": [
            "87526f0080487e0f7f41d65cdb7710ba268055ac"
        ],
        "matched": [
            "87526f0080487e0f7f41d65cdb7710ba268055ac"
        ]
    },
    {
        "repo_name": "GoogleContainerTools/jib",
        "CVE_ID": "CVE-2022-25914",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package com.google.cloud.tools:jib-core before 0.22.0 are vulnerable to Remote Code Execution (RCE) via the isDockerInstalled function, due to attempting to execute input.",
        "URL": "https://github.com/GoogleContainerTools/jib/pull/3744",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "67fa40bc2c484da0546333914ea07a89fe44eaaf",
        "inducing_commit_hash_pyszz": [
            "8e162a29f153e888e7d650f25caef0b927e7d29f"
        ],
        "inducing_commit_hash_pd": [
            "8e162a29f153e888e7d650f25caef0b927e7d29f",
            "a5caf17f037c48408888b11138306c6c2c92c376"
        ],
        "matched": [
            "8e162a29f153e888e7d650f25caef0b927e7d29f"
        ]
    },
    {
        "repo_name": "google/data-transfer-project",
        "CVE_ID": "CVE-2021-22572",
        "Problem_Type": "CWE-668",
        "Description": "On unix-like systems, the system temporary directory is shared between all users on that system. The root cause is File.createTempFile creates files in the the system temporary directory with world readable permissions. Any sensitive information written to theses files is visible to all other local users on unix-like systems. We recommend upgrading past commit https://github.com/google/data-transfer-project/pull/969",
        "URL": "https://github.com/google/data-transfer-project/pull/969",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9ddcb02edb9c13d2713460e347f8b343c84aa2f4",
        "inducing_commit_hash_pyszz": [
            "17c212f58726a627c095933db97a485ded1881f9"
        ],
        "inducing_commit_hash_pd": [
            "17c212f58726a627c095933db97a485ded1881f9"
        ],
        "matched": [
            "17c212f58726a627c095933db97a485ded1881f9"
        ]
    },
    {
        "repo_name": "google/kctf",
        "CVE_ID": "CVE-2022-31055",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "kCTF is a Kubernetes-based infrastructure for capture the flag (CTF) competitions. Prior to version 1.6.0, the kctf cluster set-src-ip-ranges was broken and allowed traffic from any IP. The problem has been patched in v1.6.0. As a workaround, those who want to test challenges privately can mark them as `public: false` and use `kctf chal debug port-forward` to connect.",
        "URL": "https://github.com/google/kctf/pull/371",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8cf050be974fcc2fd8aa136701f9a66f2b2a5202",
        "inducing_commit_hash_pyszz": [
            "9d747ee79c39c88d4b83f5bbb132e6f933dcebd4"
        ],
        "inducing_commit_hash_pd": [
            "9d747ee79c39c88d4b83f5bbb132e6f933dcebd4",
            "71ae5dca394266fe7480d0df8afd2b786bb346ee"
        ],
        "matched": [
            "9d747ee79c39c88d4b83f5bbb132e6f933dcebd4"
        ]
    },
    {
        "repo_name": "google/slo-generator",
        "CVE_ID": "CVE-2021-22557",
        "Problem_Type": "CWE-78",
        "Description": "SLO generator allows for loading of YAML files that if crafted in a specific format can allow for code execution within the context of the SLO Generator. We recommend upgrading SLO Generator past https://github.com/google/slo-generator/pull/173",
        "URL": "https://github.com/google/slo-generator/pull/173",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "36318beab1b85d14bb860e45bea186b184690d5d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "51b956b85e7769725c46be3579cc51c4b02bd333"
        ],
        "matched": [
            "51b956b85e7769725c46be3579cc51c4b02bd333"
        ]
    },
    {
        "repo_name": "gophish/gophish",
        "CVE_ID": "CVE-2019-16146",
        "Problem_Type": "CWE-79",
        "Description": "Gophish through 0.8.0 allows XSS via a username.",
        "URL": "https://github.com/gophish/gophish/pull/1547",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "24fe998a3aa04e205900476a9601d481e94d8eea",
        "inducing_commit_hash_pyszz": [
            "fa1d4d74b0084965a15589f8e17e62daab740962"
        ],
        "inducing_commit_hash_pd": [
            "84096b8724b468a5e26329cb009d49a1914474c1",
            "3996a702feaf087dda5f5a62767b988e221f32b7"
        ],
        "matched": [
            "fa1d4d74b0084965a15589f8e17e62daab740962"
        ]
    },
    {
        "repo_name": "gophish/gophish",
        "CVE_ID": "CVE-2022-25295",
        "Problem_Type": "CWE-601",
        "Description": "This affects the package github.com/gophish/gophish before 0.12.0. The Open Redirect vulnerability exists in the next query parameter. The application uses url.Parse(r.FormValue(\"next\")) to extract path and eventually redirect user to a relative URL, but if next parameter starts with multiple backslashes like \\\\\\\\\\\\example.com, browser will redirect user to http://example.com.",
        "URL": "https://github.com/gophish/gophish/pull/2262",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "67e304f3724e25254822a8c661a67b70f3ab6a6a",
        "inducing_commit_hash_pyszz": [
            "aa8c770e7303af495e75d47fa0076460760acafc"
        ],
        "inducing_commit_hash_pd": [
            "bb7de8df3e7d0e945219751f3012b7d52d022719"
        ],
        "matched": [
            "aa8c770e7303af495e75d47fa0076460760acafc"
        ]
    },
    {
        "repo_name": "gorilla/handlers",
        "CVE_ID": "CVE-2017-20146",
        "Problem_Type": "CWE-346",
        "Description": "Usage of the CORS handler may apply improper CORS headers, allowing the requester to explicitly control the value of the Access-Control-Allow-Origin header, which bypasses the expected behavior of the Same Origin Policy.",
        "URL": "https://github.com/gorilla/handlers/pull/116",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90663712d74cb411cbef281bc1e08c19d1a76145",
        "inducing_commit_hash_pyszz": [
            "6597b14601abee4920ff5e74082c0e890d866acf"
        ],
        "inducing_commit_hash_pd": [
            "7ffaf5f0b6e89929596d73ef34208704909a8cfb",
            "6597b14601abee4920ff5e74082c0e890d866acf"
        ],
        "matched": [
            "6597b14601abee4920ff5e74082c0e890d866acf"
        ]
    },
    {
        "repo_name": "gpg/boa",
        "CVE_ID": "CVE-2018-21027",
        "Problem_Type": "CWE-119",
        "Description": "Boa through 0.94.14rc21 allows remote attackers to trigger an out-of-memory (OOM) condition because malloc is mishandled.",
        "URL": "https://github.com/gpg/boa/pull/1/commits/e139b87835994d007fbd64eead6c1455d7b8cf4e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gpg/boa",
        "CVE_ID": "CVE-2018-21028",
        "Problem_Type": "CWE-772",
        "Description": "Boa through 0.94.14rc21 allows remote attackers to trigger a memory leak because of missing calls to the free function.",
        "URL": "https://github.com/gpg/boa/pull/1/commits/e139b87835994d007fbd64eead6c1455d7b8cf4e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradio-app/gradio",
        "CVE_ID": "CVE-2023-34239",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gradio is an open-source Python library that is used to build machine learning and data science. Due to a lack of path filtering Gradio does not properly restrict file access to users. Additionally Gradio does not properly restrict the what URLs are proxied. These issues have been addressed in version 3.34.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/gradio-app/gradio/pull/4370",
        "Tag": "['Patch']",
        "fix_commit_hash": "cd64130d54e678525774bbb200ef9c7166fa1543",
        "inducing_commit_hash_pyszz": [
            "778166501493eed81c6297089d566820fb6f202b"
        ],
        "inducing_commit_hash_pd": [
            "f34120c0777abd4f2053179a6d0e0ad15c7b1fb3",
            "5e9c3b0ac85e57f89bdb5635e7653f5562c29f26",
            "778166501493eed81c6297089d566820fb6f202b",
            "84afc51484a54cb1250186f74ce4b2eeaaa79da3",
            "34cf1e612be41b84587f828f72d53a0da0bf871c",
            "88e9c19c278a6632b84c9ff8329bc9aa838910bb",
            "b643ae77bfb465960af2f41f66351ef2a1b84d03",
            "ff21ecbc258b2d958957179e4b31499ad546ca46"
        ],
        "matched": [
            "778166501493eed81c6297089d566820fb6f202b"
        ]
    },
    {
        "repo_name": "gradio-app/gradio",
        "CVE_ID": "CVE-2023-34239",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gradio is an open-source Python library that is used to build machine learning and data science. Due to a lack of path filtering Gradio does not properly restrict file access to users. Additionally Gradio does not properly restrict the what URLs are proxied. These issues have been addressed in version 3.34.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/gradio-app/gradio/pull/4406",
        "Tag": "['Patch']",
        "fix_commit_hash": "37967617bd97615fb6f3b44e7750c0e0be58479a",
        "inducing_commit_hash_pyszz": [
            "e503ae0ecaf00388a810825c87376bf256a0e93c"
        ],
        "inducing_commit_hash_pd": [
            "00a1894bf509f3d91808b1f9d1a1ae48a5267fcc",
            "e503ae0ecaf00388a810825c87376bf256a0e93c",
            "1c8cb5ebf154205a3d436c69b207285ca311ef5b",
            "43f5cf5f308937e8a582949cef2d24d09778571c",
            "f37d17089d074db7776d9ca16663234648e9e3e6"
        ],
        "matched": [
            "e503ae0ecaf00388a810825c87376bf256a0e93c"
        ]
    },
    {
        "repo_name": "grafana/agent",
        "CVE_ID": "CVE-2021-41090",
        "Problem_Type": "CWE-312",
        "Description": "Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack. Prior to versions 0.20.1 and 0.21.2, inline secrets defined within a metrics instance config are exposed in plaintext over two endpoints: metrics instance configs defined in the base YAML file are exposed at `/-/config` and metrics instance configs defined for the scraping service are exposed at `/agent/api/v1/configs/:key`. Inline secrets will be exposed to anyone being able to reach these endpoints. If HTTPS with client authentication is not configured, these endpoints are accessible to unauthenticated users. Secrets found in these sections are used for delivering metrics to a Prometheus Remote Write system, authenticating against a system for discovering Prometheus targets, and authenticating against a system for collecting metrics. This does not apply for non-inlined secrets, such as `*_file` based secrets. This issue is patched in Grafana Agent versions 0.20.1 and 0.21.2. A few workarounds are available. Users who cannot upgrade should use non-inline secrets where possible. Users may also desire to restrict API access to Grafana Agent with some combination of restricting the network interfaces Grafana Agent listens on through `http_listen_address` in the `server` block, configuring Grafana Agent to use HTTPS with client authentication, and/or using firewall rules to restrict external access to Grafana Agent's API.",
        "URL": "https://github.com/grafana/agent/pull/1152",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
        "inducing_commit_hash_pyszz": [
            "cd07588d52a3a47a651f523618d2e193bc76338f"
        ],
        "inducing_commit_hash_pd": [
            "cd07588d52a3a47a651f523618d2e193bc76338f"
        ],
        "matched": [
            "cd07588d52a3a47a651f523618d2e193bc76338f"
        ]
    },
    {
        "repo_name": "grafana/grafana-image-renderer",
        "CVE_ID": "CVE-2022-31176",
        "Problem_Type": "CWE-306",
        "Description": "Grafana Image Renderer is a Grafana backend plugin that handles rendering of panels & dashboards to PNGs using a headless browser (Chromium/Chrome). An internal security review identified an unauthorized file disclosure vulnerability. It is possible for a malicious user to retrieve unauthorized files under some network conditions or via a fake datasource (if user has admin permissions in Grafana). All Grafana installations should be upgraded to version 3.6.1 as soon as possible. As a workaround it is possible to [disable HTTP remote rendering](https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#plugingrafana-image-renderer).",
        "URL": "https://github.com/grafana/grafana-image-renderer/pull/364",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "276d9dd8e9db223419b0137d774bb8b35ba13692",
        "inducing_commit_hash_pyszz": [
            "b5fa049cbcfbc93383110aa414f7f2d215829798"
        ],
        "inducing_commit_hash_pd": [
            "03dd4e894358920e3a28f6b5e95fd0f5291a5d74",
            "7794959a232d892928e789e986db445754ceee69",
            "1e14736396d9bac12ef4b3f7e0dbc61d44d338bd",
            "2e721c160b0005ba4a16220c31c96d0a6349d5d8",
            "3ad122847530104ccd6c65eadba54ea448a27642",
            "9dd27739d619809d860d9e5b17def55fba8c4845",
            "f5f2192af9609a45f93d2822160548c2c7c5c4c0",
            "452528bf19481f8cd00530086cb0019ea284bfb1",
            "b5fa049cbcfbc93383110aa414f7f2d215829798"
        ],
        "matched": [
            "b5fa049cbcfbc93383110aa414f7f2d215829798"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2018-12099",
        "Problem_Type": "CWE-79",
        "Description": "Grafana before 5.2.0-beta1 has XSS vulnerabilities in dashboard links.",
        "URL": "https://github.com/grafana/grafana/pull/11813",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "00454b32f5db19f9dee4fa05b5cff5e24941548d",
        "inducing_commit_hash_pyszz": [
            "31fc19c6d710a1f4fe8c9554b5d313e9784b234c"
        ],
        "inducing_commit_hash_pd": [
            "85879a701493a2562b9cd8bffb3fe1067ea36aa3",
            "331b50dcaa1dc456e05cab2f383c66a47e939e82",
            "b7956ef4999995dd70b7898cfdf48a3e1736d52e",
            "215d59865ee4526b8d37d777c3f2ada8c38a4e5e",
            "3a1f52d8a2fdd1fd3b9bdbee05a48925bf8580f1"
        ],
        "matched": [
            "31fc19c6d710a1f4fe8c9554b5d313e9784b234c"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2018-18625",
        "Problem_Type": "CWE-79",
        "Description": "Grafana 5.3.1 has XSS via a link on the \"Dashboard > All Panels > General\" screen. NOTE: this issue exists because of an incomplete fix for CVE-2018-12099.",
        "URL": "https://github.com/grafana/grafana/pull/11813",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "00454b32f5db19f9dee4fa05b5cff5e24941548d",
        "inducing_commit_hash_pyszz": [
            "31fc19c6d710a1f4fe8c9554b5d313e9784b234c"
        ],
        "inducing_commit_hash_pd": [
            "85879a701493a2562b9cd8bffb3fe1067ea36aa3",
            "331b50dcaa1dc456e05cab2f383c66a47e939e82",
            "b7956ef4999995dd70b7898cfdf48a3e1736d52e",
            "215d59865ee4526b8d37d777c3f2ada8c38a4e5e",
            "3a1f52d8a2fdd1fd3b9bdbee05a48925bf8580f1"
        ],
        "matched": [
            "31fc19c6d710a1f4fe8c9554b5d313e9784b234c"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2020-12245",
        "Problem_Type": "CWE-79",
        "Description": "Grafana before 6.7.3 allows table-panel XSS via column.title or cellLinkTooltip.",
        "URL": "https://github.com/grafana/grafana/pull/23816",
        "Tag": "['Patch']",
        "fix_commit_hash": "0284747c88eb9435899006d26ffaf65f89dec88e",
        "inducing_commit_hash_pyszz": [
            "a5d5f3d82fc96eabbe4937117827568c1e826ed3"
        ],
        "inducing_commit_hash_pd": [
            "a702603e7b4ca2fc72bf1812abbf9c119756bf42",
            "29653d2becfb677cfeecb7563c8bca36ac11c225"
        ],
        "matched": [
            "a5d5f3d82fc96eabbe4937117827568c1e826ed3"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2020-13430",
        "Problem_Type": "CWE-79",
        "Description": "Grafana before 7.0.0 allows tag value XSS via the OpenTSDB datasource.",
        "URL": "https://github.com/grafana/grafana/pull/24539",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "125ba95686df79989626ac1e8aa48e582c0efd98",
        "inducing_commit_hash_pyszz": [
            "0da733de9ced6bfce1f1a530771e2f30aa345f35"
        ],
        "inducing_commit_hash_pd": [
            "fadfc665e473c1b979ce1def31fa9cb9e6113d0e"
        ],
        "matched": [
            "0da733de9ced6bfce1f1a530771e2f30aa345f35"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2020-24303",
        "Problem_Type": "CWE-79",
        "Description": "Grafana before 7.1.0-beta 1 allows XSS via a query alias for the ElasticSearch datasource.",
        "URL": "https://github.com/grafana/grafana/pull/25401",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c53435f7a76f79a07bac2fe1a66827624e217a1c",
        "inducing_commit_hash_pyszz": [
            "02140fff2d15004e7310fa01663610797a3b90b8"
        ],
        "inducing_commit_hash_pd": [
            "54fafb3a7668f34cd5e7d021e50268e02ee4af23",
            "2732aca05cfdeac847abbc7b796b217f9ffe4311",
            "bca0894f7356f64535cbb9dcec22b9bddce9afce"
        ],
        "matched": [
            "02140fff2d15004e7310fa01663610797a3b90b8"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2022-21703",
        "Problem_Type": "CWE-352",
        "Description": "Grafana is an open-source platform for monitoring and observability. Affected versions are subject to a cross site request forgery vulnerability which allows attackers to elevate their privileges by mounting cross-origin attacks against authenticated high-privilege Grafana users (for example, Editors or Admins). An attacker can exploit this vulnerability for privilege escalation by tricking an authenticated user into inviting the attacker as a new user with high privileges. Users are advised to upgrade as soon as possible. There are no known workarounds for this issue.",
        "URL": "https://github.com/grafana/grafana/pull/45083",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "605d056136b3dce5545bdbd7868acd8778eed9b1",
        "inducing_commit_hash_pyszz": [
            "4e37a53a1c0e39f6aacb1336bac3dfa7a84fc90c"
        ],
        "inducing_commit_hash_pd": [
            "782b5b6a3ab5b1965f1cf1a17d03867cfc376cbd",
            "4e37a53a1c0e39f6aacb1336bac3dfa7a84fc90c",
            "967e9b39e8a74fb33ac6a7a5835c80c109fb8a7e",
            "6589a4e55f9ed120ec8d36f461cc7ea07a561074",
            "22788d1d861094170b993d3f1a659d2a79876826",
            "22e098b83019bb048212a704a406e84316f499c0",
            "8377d3630c4c85e3dac0aaec94ab7fb9ebd752ae",
            "3fdd2648b1d28ace24a8fae5125e9fdf937b1814",
            "3131388084a96f3fe84b8bf0451cb6c69b0abb05",
            "89d4db8eb6d02cd585cf53cbfeda01dd5a6f1e9a",
            "53c74fa2f56a4b1b029be8a71a3ec882d88b86e9",
            "57fcfd578dd43fae2b2df335fec7536fef7dd1e3",
            "00c389933ba8d145d3a16cc6a2c60375fc0418e9"
        ],
        "matched": [
            "4e37a53a1c0e39f6aacb1336bac3dfa7a84fc90c"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2022-21713",
        "Problem_Type": "CWE-639",
        "Description": "Grafana is an open-source platform for monitoring and observability. Affected versions of Grafana expose multiple API endpoints which do not properly handle user authorization. `/teams/:teamId` will allow an authenticated attacker to view unintended data by querying for the specific team ID, `/teams/:search` will allow an authenticated attacker to search for teams and see the total number of available teams, including for those teams that the user does not have access to, and `/teams/:teamId/members` when editors_can_admin flag is enabled, an authenticated attacker can see unintended data by querying for the specific team ID. Users are advised to upgrade as soon as possible. There are no known workarounds for this issue.",
        "URL": "https://github.com/grafana/grafana/pull/45083",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "605d056136b3dce5545bdbd7868acd8778eed9b1",
        "inducing_commit_hash_pyszz": [
            "4e37a53a1c0e39f6aacb1336bac3dfa7a84fc90c"
        ],
        "inducing_commit_hash_pd": [
            "782b5b6a3ab5b1965f1cf1a17d03867cfc376cbd",
            "4e37a53a1c0e39f6aacb1336bac3dfa7a84fc90c",
            "967e9b39e8a74fb33ac6a7a5835c80c109fb8a7e",
            "6589a4e55f9ed120ec8d36f461cc7ea07a561074",
            "22788d1d861094170b993d3f1a659d2a79876826",
            "22e098b83019bb048212a704a406e84316f499c0",
            "8377d3630c4c85e3dac0aaec94ab7fb9ebd752ae",
            "3fdd2648b1d28ace24a8fae5125e9fdf937b1814",
            "3131388084a96f3fe84b8bf0451cb6c69b0abb05",
            "89d4db8eb6d02cd585cf53cbfeda01dd5a6f1e9a",
            "53c74fa2f56a4b1b029be8a71a3ec882d88b86e9",
            "57fcfd578dd43fae2b2df335fec7536fef7dd1e3",
            "00c389933ba8d145d3a16cc6a2c60375fc0418e9"
        ],
        "matched": [
            "4e37a53a1c0e39f6aacb1336bac3dfa7a84fc90c"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2022-23552",
        "Problem_Type": "CWE-79",
        "Description": "Grafana is an open-source platform for monitoring and observability. Starting with the 8.1 branch and prior to versions 8.5.16, 9.2.10, and 9.3.4, Grafana had a stored XSS vulnerability affecting the core plugin GeoMap. The stored XSS vulnerability was possible because SVG files weren't properly sanitized and allowed arbitrary JavaScript to be executed in the context of the currently authorized user of the Grafana instance. \n\nAn attacker needs to have the Editor role in order to change a panel to include either an external URL to a SVG-file containing JavaScript, or use the `data:` scheme to load an inline SVG-file containing JavaScript. This means that vertical privilege escalation is possible, where a user with Editor role can change to a known password for a user having Admin role if the user with Admin role executes malicious JavaScript viewing a dashboard.   \n\nUsers may upgrade to version 8.5.16, 9.2.10, or 9.3.4 to receive a fix.",
        "URL": "https://github.com/grafana/grafana/pull/62143",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8b574e22b53aa4c5a35032a58844fd4aaaa12f5f",
        "inducing_commit_hash_pyszz": [
            "900d9bf9a1650274354206e3cee64d9cfed94da2"
        ],
        "inducing_commit_hash_pd": [
            "a0806691516087de0f94b52dcd8abd795c9d31fa",
            "4a00c7ebde1f84e01c0faac3bcb8e423f09487ce",
            "238d761450738cdef822589f321500879fa49b32",
            "b14b267bede3db9ac19d93e5efc620c5e74457a3",
            "8a7b4696792f9d58def7f7892836a8ee7ca827aa",
            "900d9bf9a1650274354206e3cee64d9cfed94da2",
            "9a0040c0aeaae8357c650cec2ee644a571dddf3d",
            "3c6e0e8ef85048af952367751e478c08342e17b4",
            "11aa6a3e8f67bc99b5c1416ece1c5740664b5c2c",
            "009d65b7943bf1cca9f7fbd0681a96d1241bb83e",
            "118b87ee8feaa2488a4ae696753559045185ba47"
        ],
        "matched": [
            "900d9bf9a1650274354206e3cee64d9cfed94da2"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2022-29170",
        "Problem_Type": "CWE-601",
        "Description": "Grafana is an open-source platform for monitoring and observability. In Grafana Enterprise, the Request security feature allows list allows to configure Grafana in a way so that the instance doesn\u00c2\u2019t call or only calls specific hosts. The vulnerability present starting with version 7.4.0-beta1 and prior to versions 7.5.16 and 8.5.3 allows someone to bypass these security configurations if a malicious datasource (running on an allowed host) returns an HTTP redirect to a forbidden host. The vulnerability only impacts Grafana Enterprise when the Request security allow list is used and there is a possibility to add a custom datasource to Grafana which returns HTTP redirects. In this scenario, Grafana would blindly follow the redirects and potentially give secure information to the clients. Grafana Cloud is not impacted by this vulnerability. Versions 7.5.16 and 8.5.3 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/grafana/grafana/pull/49240",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aad29833506bac717ff28781bdb3c1b32416eb92",
        "inducing_commit_hash_pyszz": [
            "ba9d5540b8f4c755324d2664795cc1fe44f6a6d5"
        ],
        "inducing_commit_hash_pd": [
            "ba9d5540b8f4c755324d2664795cc1fe44f6a6d5",
            "656ade9884a11d904fbb401d2b39e5bac7cc9cae"
        ],
        "matched": [
            "ba9d5540b8f4c755324d2664795cc1fe44f6a6d5"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2022-39324",
        "Problem_Type": "CWE-79",
        "Description": "Grafana is an open-source platform for monitoring and observability. Prior to versions 8.5.16 and 9.2.8, malicious user can create a snapshot and arbitrarily choose the `originalUrl` parameter by editing the query, thanks to a web proxy. When another user opens the URL of the snapshot, they will be presented with the regular web interface delivered by the trusted Grafana server. The `Open original dashboard` button no longer points to the to the real original dashboard but to the attacker\u00c2\u2019s injected URL. This issue is fixed in versions 8.5.16 and 9.2.8.",
        "URL": "https://github.com/grafana/grafana/pull/60232",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "239888f22983010576bb3a9135a7294e88c0c74a",
        "inducing_commit_hash_pyszz": [
            "aae2c3c4f4f1226c1dd0dc71c7b4f8b3878cfa7b"
        ],
        "inducing_commit_hash_pd": [
            "9d6da10e82ff254c8877f8ea2405934493b09541",
            "701ad79bb5618e08e38529734be7df7cef546f09",
            "eef4e18b629c214cbc8108ebfa16f0232b46e309",
            "d66e72fa67d40ad8047e4451d713c2081a1408bb",
            "c13f4542d8de59e262aeddb61cd07c52b5db2d5e",
            "aae2c3c4f4f1226c1dd0dc71c7b4f8b3878cfa7b"
        ],
        "matched": [
            "aae2c3c4f4f1226c1dd0dc71c7b4f8b3878cfa7b"
        ]
    },
    {
        "repo_name": "grafana/grafana",
        "CVE_ID": "CVE-2022-39324",
        "Problem_Type": "CWE-79",
        "Description": "Grafana is an open-source platform for monitoring and observability. Prior to versions 8.5.16 and 9.2.8, malicious user can create a snapshot and arbitrarily choose the `originalUrl` parameter by editing the query, thanks to a web proxy. When another user opens the URL of the snapshot, they will be presented with the regular web interface delivered by the trusted Grafana server. The `Open original dashboard` button no longer points to the to the real original dashboard but to the attacker\u00c2\u2019s injected URL. This issue is fixed in versions 8.5.16 and 9.2.8.",
        "URL": "https://github.com/grafana/grafana/pull/60256",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d7dcea71ea763780dc286792a0afd560bff2985c",
        "inducing_commit_hash_pyszz": [
            "aae2c3c4f4f1226c1dd0dc71c7b4f8b3878cfa7b"
        ],
        "inducing_commit_hash_pd": [
            "9d6da10e82ff254c8877f8ea2405934493b09541",
            "9bb1484dc594f274bc2b7bece235c2e1e9bdb195",
            "701ad79bb5618e08e38529734be7df7cef546f09",
            "eef4e18b629c214cbc8108ebfa16f0232b46e309",
            "5cdb8f8e44cdb3dd9d431ca6d8cb1b6eca82d6d3",
            "d66e72fa67d40ad8047e4451d713c2081a1408bb",
            "c13f4542d8de59e262aeddb61cd07c52b5db2d5e",
            "aae2c3c4f4f1226c1dd0dc71c7b4f8b3878cfa7b"
        ],
        "matched": [
            "aae2c3c4f4f1226c1dd0dc71c7b4f8b3878cfa7b"
        ]
    },
    {
        "repo_name": "grafana/piechart-panel",
        "CVE_ID": "CVE-2015-9282",
        "Problem_Type": "CWE-79",
        "Description": "The Pie Chart Panel plugin through 2019-01-02 for Grafana is vulnerable to XSS via legend data or tooltip data. When a chart is included in a Grafana dashboard, this vulnerability could allow an attacker to gain remote unauthenticated access to the dashboard.",
        "URL": "https://github.com/grafana/piechart-panel/pull/163",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a2a6ab82296d919d72915a21b5b8c5cae4177373",
        "inducing_commit_hash_pyszz": [
            "9d28be0ece0c2382417c69eb7618884b65880c1b"
        ],
        "inducing_commit_hash_pd": [
            "9d28be0ece0c2382417c69eb7618884b65880c1b",
            "4b6d83e4c57f92034cb022a8aaafa4b83e56c336",
            "15469e4ef4f3aeb9d0f7ba17ca612bca330cb5d5",
            "6b853f1fb6cab915ec69763ba32947e3ddf821d8",
            "30fc1a8d4d4c0a5ce6f2ef6bdb29f52ab51904df",
            "ccbed83f6a37ebc9aa5c0870496da73ec6de25eb"
        ],
        "matched": [
            "9d28be0ece0c2382417c69eb7618884b65880c1b"
        ]
    },
    {
        "repo_name": "grafana/synthetic-monitoring-agent",
        "CVE_ID": "CVE-2022-46156",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The Synthetic Monitoring Agent for Grafana's Synthetic Monitoring application provides probe functionality and executes network checks for monitoring remote targets. Users running the Synthetic Monitoring agent prior to version 0.12.0 in their local network are impacted. The authentication token used to communicate with the Synthetic Monitoring API is exposed through a debugging endpoint. This token can be used to retrieve the Synthetic Monitoring checks created by the user and assigned to the agent identified with that token. The Synthetic Monitoring API will reject connections from already-connected agents, so access to the token does not guarantee access to the checks. Version 0.12.0 contains a fix. Users are advised to rotate the agent tokens. After upgrading to version v0.12.0 or later, it's recommended that users of distribution packages review the configuration stored in `/etc/synthetic-monitoring/synthetic-monitoring-agent.conf`, specifically the `API_TOKEN` variable which has been renamed to `SM_AGENT_API_TOKEN`. As a workaround for previous versions, it's recommended that users review the agent settings and set the HTTP listening address in a manner that limits the exposure, for example, localhost or a non-routed network, by using the command line parameter `-listen-address`, e.g. `-listen-address localhost:4050`.",
        "URL": "https://github.com/grafana/synthetic-monitoring-agent/pull/374",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d8dc7f9c1c641881cbcf0a09e178b90ebf0f0228",
        "inducing_commit_hash_pyszz": [
            "2c8acbfa531311ffd9d9477926cfb6329e435bdc"
        ],
        "inducing_commit_hash_pd": [
            "2c8acbfa531311ffd9d9477926cfb6329e435bdc",
            "6db9e043e9d06caee02be649f79d143eb6381d02"
        ],
        "matched": [
            "2c8acbfa531311ffd9d9477926cfb6329e435bdc"
        ]
    },
    {
        "repo_name": "grafana/synthetic-monitoring-agent",
        "CVE_ID": "CVE-2022-46156",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The Synthetic Monitoring Agent for Grafana's Synthetic Monitoring application provides probe functionality and executes network checks for monitoring remote targets. Users running the Synthetic Monitoring agent prior to version 0.12.0 in their local network are impacted. The authentication token used to communicate with the Synthetic Monitoring API is exposed through a debugging endpoint. This token can be used to retrieve the Synthetic Monitoring checks created by the user and assigned to the agent identified with that token. The Synthetic Monitoring API will reject connections from already-connected agents, so access to the token does not guarantee access to the checks. Version 0.12.0 contains a fix. Users are advised to rotate the agent tokens. After upgrading to version v0.12.0 or later, it's recommended that users of distribution packages review the configuration stored in `/etc/synthetic-monitoring/synthetic-monitoring-agent.conf`, specifically the `API_TOKEN` variable which has been renamed to `SM_AGENT_API_TOKEN`. As a workaround for previous versions, it's recommended that users review the agent settings and set the HTTP listening address in a manner that limits the exposure, for example, localhost or a non-routed network, by using the command line parameter `-listen-address`, e.g. `-listen-address localhost:4050`.",
        "URL": "https://github.com/grafana/synthetic-monitoring-agent/pull/373",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3f529b4684d6510ccaeb30ef9382c996e99ef5c8",
        "inducing_commit_hash_pyszz": [
            "09a9b443ce1667b808df9488d8f6a925950a40ad"
        ],
        "inducing_commit_hash_pd": [
            "6db9e043e9d06caee02be649f79d143eb6381d02"
        ],
        "matched": [
            "09a9b443ce1667b808df9488d8f6a925950a40ad"
        ]
    },
    {
        "repo_name": "Grandt/PHPRelativePath",
        "CVE_ID": "CVE-2019-12507",
        "Problem_Type": "CWE-79",
        "Description": "An XSS vulnerability exists in PHPRelativePath (aka Relative Path) through 1.0.2 via the RelativePath.Example1.php path parameter.",
        "URL": "https://github.com/Grandt/PHPRelativePath/pull/5/commits/13273e019d737f8eb4d7b1fe1eb665185dddfb5a",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "graphhopper/graphhopper",
        "CVE_ID": "CVE-2021-29506",
        "Problem_Type": "CWE-400",
        "Description": "GraphHopper is an open-source Java routing engine. In GrassHopper from version 2.0 and before version 2.4, there is a regular expression injection vulnerability that may lead to Denial of Service. This has been patched in 2.4 and 3.0 See this pull request for the fix: https://github.com/graphhopper/graphhopper/pull/2304",
        "URL": "https://github.com/graphhopper/graphhopper/pull/2304",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eb189be1fa7443ebf4ae881e737a18f818c95f41",
        "inducing_commit_hash_pyszz": [
            "a53042febc6135742089f80c1331ca32f4fbc80e"
        ],
        "inducing_commit_hash_pd": [
            "a53042febc6135742089f80c1331ca32f4fbc80e"
        ],
        "matched": [
            "a53042febc6135742089f80c1331ca32f4fbc80e"
        ]
    },
    {
        "repo_name": "graphite-project/graphite-web",
        "CVE_ID": "CVE-2022-4728",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability has been found in Graphite Web and classified as problematic. This vulnerability affects unknown code of the component Cookie Handler. The manipulation leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 2f178f490e10efc03cd1d27c72f64ecab224eb23. It is recommended to apply a patch to fix this issue. VDB-216742 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/graphite-project/graphite-web/pull/2785",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f178f490e10efc03cd1d27c72f64ecab224eb23",
        "inducing_commit_hash_pyszz": [
            "9c626006eea36a9fd785e8f811359aebc9774970"
        ],
        "inducing_commit_hash_pd": [
            "9c626006eea36a9fd785e8f811359aebc9774970",
            "b945347c708b5c2fd8bd7386f4a4a4be41c6e0f2",
            "003ccae7f3dab0d29015fdf79960292dbe5a23a7",
            "12368d44b5a4b9565ef2bbf183eaaff1a012dc1b"
        ],
        "matched": [
            "9c626006eea36a9fd785e8f811359aebc9774970"
        ]
    },
    {
        "repo_name": "graphite-project/graphite-web",
        "CVE_ID": "CVE-2022-4729",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in Graphite Web and classified as problematic. This issue affects some unknown processing of the component Template Name Handler. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 2f178f490e10efc03cd1d27c72f64ecab224eb23. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216743.",
        "URL": "https://github.com/graphite-project/graphite-web/pull/2785",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f178f490e10efc03cd1d27c72f64ecab224eb23",
        "inducing_commit_hash_pyszz": [
            "9c626006eea36a9fd785e8f811359aebc9774970"
        ],
        "inducing_commit_hash_pd": [
            "9c626006eea36a9fd785e8f811359aebc9774970",
            "b945347c708b5c2fd8bd7386f4a4a4be41c6e0f2",
            "003ccae7f3dab0d29015fdf79960292dbe5a23a7",
            "12368d44b5a4b9565ef2bbf183eaaff1a012dc1b"
        ],
        "matched": [
            "9c626006eea36a9fd785e8f811359aebc9774970"
        ]
    },
    {
        "repo_name": "graphite-project/graphite-web",
        "CVE_ID": "CVE-2022-4730",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in Graphite Web. It has been classified as problematic. Affected is an unknown function of the component Absolute Time Range Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 2f178f490e10efc03cd1d27c72f64ecab224eb23. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216744.",
        "URL": "https://github.com/graphite-project/graphite-web/pull/2785",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f178f490e10efc03cd1d27c72f64ecab224eb23",
        "inducing_commit_hash_pyszz": [
            "9c626006eea36a9fd785e8f811359aebc9774970"
        ],
        "inducing_commit_hash_pd": [
            "9c626006eea36a9fd785e8f811359aebc9774970",
            "b945347c708b5c2fd8bd7386f4a4a4be41c6e0f2",
            "003ccae7f3dab0d29015fdf79960292dbe5a23a7",
            "12368d44b5a4b9565ef2bbf183eaaff1a012dc1b"
        ],
        "matched": [
            "9c626006eea36a9fd785e8f811359aebc9774970"
        ]
    },
    {
        "repo_name": "graphql-java/graphql-java",
        "CVE_ID": "CVE-2022-37734",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "graphql-java before19.0 is vulnerable to Denial of Service. An attacker can send a malicious GraphQL query that consumes CPU resources. The fixed versions are 19.0 and later, 18.3, and 17.4, and 0.0.0-2022-07-26T05-45-04-226aabd9.",
        "URL": "https://github.com/graphql-java/graphql-java/pull/2892",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "226aabd9ffa863387085483e6b73799507b90b2c",
        "inducing_commit_hash_pyszz": [
            "7086a3ec40a1e13f67d4204a1b28d7da81f52d0a"
        ],
        "inducing_commit_hash_pd": [
            "107caa5fd4f45b38fa314e5d7005ddf54fffc5c5",
            "1bdbb8fa2d0367a93c9ca2a35b1af9325755547c",
            "aff1e7141f8f2924f55438793e47553da58fad59",
            "420218dc39dfc7825e810229eafaaf2a227ee5e0",
            "7f27a046c1cb133ede2fa64ffe5a499ad4c0b223",
            "7086a3ec40a1e13f67d4204a1b28d7da81f52d0a"
        ],
        "matched": [
            "7086a3ec40a1e13f67d4204a1b28d7da81f52d0a"
        ]
    },
    {
        "repo_name": "gravitl/netmaker",
        "CVE_ID": "CVE-2022-23650",
        "Problem_Type": "CWE-798",
        "Description": "Netmaker is a platform for creating and managing virtual overlay networks using WireGuard. Prior to versions 0.8.5, 0.9.4, and 010.0, there is a hard-coded cryptographic key in the code base which can be exploited to run admin commands on a remote server if the exploiter know the address and username of the admin. This effects the server (netmaker) component, and not clients. This has been patched in Netmaker v0.8.5, v0.9.4, and v0.10.0. There are currently no known workarounds.",
        "URL": "https://github.com/gravitl/netmaker/pull/781/commits/1bec97c662670dfdab804343fc42ae4b1d050a87",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1bec97c662670dfdab804343fc42ae4b1d050a87",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "0bacbd9f6c0b7a4516443fe62b47ee5a71b6b7ee"
        ],
        "matched": [
            "0bacbd9f6c0b7a4516443fe62b47ee5a71b6b7ee"
        ]
    },
    {
        "repo_name": "Graylog2/graylog2-server",
        "CVE_ID": "CVE-2018-11651",
        "Problem_Type": "CWE-79",
        "Description": "Graylog before v2.4.4 has an XSS security issue with unescaped text in dashboard names, related to components/dashboard/Dashboard.jsx, components/dashboard/EditDashboardModal.jsx, and pages/ShowDashboardPage.jsx.",
        "URL": "https://github.com/Graylog2/graylog2-server/pull/4739",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a346654d5660d7c824322c4745ae87a1e3e6bf3",
        "inducing_commit_hash_pyszz": [
            "8d7cd40e1f050169137a4fba6727db420a70d185"
        ],
        "inducing_commit_hash_pd": [
            "8b77c72f12cec08b327ce89546d1382c33a3454a",
            "f9e497211f4a2d70b377345e795f169c17cfe48f",
            "24988314d74f26ed682dc878728c7716591438cc",
            "8d7cd40e1f050169137a4fba6727db420a70d185",
            "ab1efd1c5ec433a99962578a1c800b614e7c6a84",
            "56caaef5b3a530e1049d24a78d9af387b212cf87"
        ],
        "matched": [
            "8d7cd40e1f050169137a4fba6727db420a70d185"
        ]
    },
    {
        "repo_name": "growthbook/growthbook",
        "CVE_ID": "CVE-2022-36065",
        "Problem_Type": "CWE-22",
        "Description": "GrowthBook is an open-source platform for feature flagging and A/B testing. With some self-hosted configurations in versions prior to 2022-08-29, attackers can register new accounts and upload files to arbitrary directories within the container. If the attacker uploads a Python script to the right location, they can execute arbitrary code within the container. To be affected, ALL of the following must be true: Self-hosted deployment (GrowthBook Cloud is unaffected); using local file uploads (as opposed to S3 or Google Cloud Storage); NODE_ENV set to a non-production value and JWT_SECRET set to an easily guessable string like `dev`. This issue is patched in commit 1a5edff8786d141161bf880c2fd9ccbe2850a264 (2022-08-29). As a workaround, set `JWT_SECRET` environment variable to a long random string. This will stop arbitrary file uploads, but the only way to stop attackers from registering accounts is by updating to the latest build.",
        "URL": "https://github.com/growthbook/growthbook/pull/487",
        "Tag": "['Issue Tracking', 'Mitigation', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1a5edff8786d141161bf880c2fd9ccbe2850a264",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "8f53432898210e85ff32e2a5018256c59597d819",
            "4f8dba93e89c6a0770f987bd36fee7962dac7191"
        ],
        "matched": [
            "8f53432898210e85ff32e2a5018256c59597d819"
        ]
    },
    {
        "repo_name": "grpc/grpc-go",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/grpc/grpc-go/pull/6703",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f2180b4d5403d2210b30b93098eb7da31c05c721",
        "inducing_commit_hash_pyszz": [
            "8eb4ac4c1514c190ee0b5d01a91c63218dac93c0"
        ],
        "inducing_commit_hash_pd": [
            "8eb4ac4c1514c190ee0b5d01a91c63218dac93c0",
            "c463038273fef1f095f72184a6775f4880dd267c",
            "6eabd7e1834e47b20f55cbe9d473fc607c693358",
            "b85d2b0be5a8e626ecdeff1f9f5c149f9c0876a5",
            "a0cdc21e61ccf7c10243874491f30a6b3f9a96cd",
            "9d2ecf553a16eecc7047e20262918a672f8dc4b9",
            "c03697249ea4f1cd7a243a6614b81a89bda2d3c6",
            "a6bacfe42cb8e7aeb64778e045a6f74713257219",
            "35c3afad17f705e725ca04bff658932689920154",
            "a7d6032db4967c4ecd9331fcab4a3a29991ed814",
            "6de8f50f91068ed755f6a38a52053e7a05a6366e",
            "641dc8710ceeda279e58d5bb1e33d45d43228136",
            "25ad15b871cd0b8d8ff1bf3ed4a043a05eb262af"
        ],
        "matched": [
            "8eb4ac4c1514c190ee0b5d01a91c63218dac93c0"
        ]
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2023-32731",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained in\u00c2\u00a0 https://github.com/grpc/grpc/pull/33005 https://github.com/grpc/grpc/pull/33005 \n",
        "URL": "https://github.com/grpc/grpc/pull/32309",
        "Tag": "['Patch']",
        "fix_commit_hash": "29d8beee0ac2555773b2a2dda5601c74a95d6c10",
        "inducing_commit_hash_pyszz": [
            "b64d623f24ef295c45d2082df9a18f264b3b6018"
        ],
        "inducing_commit_hash_pd": [
            "d09f45c625edc33038915d2cb7cc2a8f809c9e7f",
            "5eba7971fbb719b49039003e59508c4ccdae9cb1",
            "997bec7f24cc1afab23877cb64d60934de84d0bd",
            "6929cdd65454f0e77d5ad931209a4207ae15331c",
            "b64d623f24ef295c45d2082df9a18f264b3b6018",
            "1d59b25dea44fe0bd66b2345e36d5e6205b77b74",
            "d43511f4af992862ae17c6fce5caa3ab3ce60995",
            "613b90ba935674af15bb0780b730017f87f0fa5f",
            "18a8f6aad95d5c2f73f70c3a7fbc58a429da9d56",
            "d3e97d953b9a94d017d76a44b780bb5ca48e5840",
            "a116fa7e2551860fadc2307b34212275606f0e93",
            "8dd0cb47128739ddc24842a530066e0b3e32c6f0",
            "220cf641fa18ee04d8dc962b1f55869eb0d7063b",
            "0d8b21e1000f6e3e1771234573e8d577762db681",
            "4e5b4521478cf817dae0c646232b7ec184f0ebe6",
            "1713c3689252dce4515006c4a1c5c9fe707495d4",
            "694e4b84272148cab34334aa575055530ec1fb05",
            "c34bef4ca454decaeb348ed57cfbd2ad2fe1969b",
            "347bf1a1f4ce07c15d785e93a48a7971bfe06236",
            "3ec0e29bcf48e5774a1b124f0edf581b7ca40055",
            "3bb4d312dfdcf5e7583bec8e6467670b6e3eb0d3",
            "22b338e2109745a27f1f84de8490bc8148df1a79",
            "70db663ae8773dc45464c904603a3e73045b45c5",
            "78888d786129e207a4c0cc535a0ff38d86fb4a14",
            "1791df0a72cd6457f152172b65515196df6663fc",
            "8a1d8052eb8629643333ca4449180e27f65aa8dc",
            "3bb427195e76d99fb55dd79fbcf9aa2956c7af79",
            "b2b70515583fe18e36c7e70b265808fa3154f734",
            "f2fa95b5931f823fa438d552a1551852415f2157",
            "7c70b6c144a20782b6be4751da68c6aa7b35648d",
            "0eb3e13ea2c73a3de318c7a8297570fa2c6cdd85",
            "0444d98f17c7e742be1463e5714a24cd2eb6f99e"
        ],
        "matched": [
            "b64d623f24ef295c45d2082df9a18f264b3b6018"
        ]
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2023-32731",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained in\u00c2\u00a0 https://github.com/grpc/grpc/pull/33005 https://github.com/grpc/grpc/pull/33005 \n",
        "URL": "https://github.com/grpc/grpc/pull/33005",
        "Tag": "['Patch']",
        "fix_commit_hash": "65a2a895afaf1d2072447b9baf246374b182a946",
        "inducing_commit_hash_pyszz": [
            "2b83675cc8903a6bab0f7615760ac2e98e5f5a19"
        ],
        "inducing_commit_hash_pd": [
            "2485fa94bd8a723e5c977d55a3ce10b301b437f8",
            "0fb74d3dd40654a9f940a7039483c09af833781a",
            "dc701787e2c24468aedcab3e58aab6d2aacf45b5",
            "0b06676c9e9e1df592cd725a0f7ad874d1b5ce80",
            "4d20a666850b732cf1562487fb5f46ab9654105f",
            "8898f482777fb511bb4fae485fb012f4f05cc18f",
            "c3910cadb49eabcf196e056c1bd5860eb9966c29",
            "d41a4a720f76c6555b80f82ee771071e09d55e03",
            "b7ebd3b8c6fe39f99c40b10c1b563e4adb607b6c",
            "f06ebb7407cef95384d10e5686d5e8d2746228d2",
            "2a2bee9c22d32704097d8fc45c5dabf5cdfb6406",
            "d43511f4af992862ae17c6fce5caa3ab3ce60995",
            "0794973bbb1f8ff21dd46e831e5fc2e1c3d83dc0",
            "ad91404e0ecaec5c90ad067b09ccc6ec2a5ece79",
            "a116fa7e2551860fadc2307b34212275606f0e93",
            "bbea27de4631fee3b8d32c9e5bde1369dc7b3788",
            "ca945a58e9ccff69df9815bdb657c4b32e2e6b37",
            "220cf641fa18ee04d8dc962b1f55869eb0d7063b",
            "0a4bbb9510d503b45f9265b570fdf61bbf01f713",
            "19d06a78ec026d9ab34e9cb789786d145ade8237",
            "3d0bdb34c14db2844900d4705255920e6c3d7db8",
            "6234054aa8d7bc6d050a53e887fbe5dc5bb6a1b9",
            "92f58c18a8da2728f571138c37760a721c8915a2",
            "74a2cb6e2b58baa63c9d8e771f6e5bfd2014a0fd",
            "347bf1a1f4ce07c15d785e93a48a7971bfe06236",
            "0db30f3dd0f14d02fa1ace4208e8c977807a3898",
            "afddf1a70c891d70f46d6fc5e7829ee12223ab3a",
            "67f364e23e4989c6e7837d03ea4e9d415f3cd890",
            "d3e5803cb2ed29bf2c5f6e2ca4926b1984f2cab1",
            "632cc4cc363f28d229340ff4dcd704bac8a877f1",
            "4ac2b8e585cbf7064f9bdde4eabaf8ff42801142",
            "6d480e9d34fd7cc992ba190e966cf9eb13c2e393",
            "557446a11e6679d1eb800c549d40e2fc2898fda0",
            "29d8beee0ac2555773b2a2dda5601c74a95d6c10",
            "be82e64b3debcdb1d9ec6a149fc85af0d46bfb7e",
            "3763be8796bbc7fdd5fb1209d274563c928985dd",
            "46bd55233748842926b6e8b2cef9a3be2510cc37",
            "1c6634ac44f6c1fb2b550fe2ef27e3f85373a482",
            "49be63db8f3d84d39e8b4adb26f36717bf059fea",
            "7536af02cf218f8dcb1368bec6d86c65db95c9b4",
            "1a2b459daa6fa5556b492d14c3fee62823180a65",
            "b2b70515583fe18e36c7e70b265808fa3154f734",
            "59693b7e728abd8a2aa2219fc9557ff6adbc9b4f",
            "4b881c59472c77d7ef5ffccf7416d3958fe40034",
            "8cf1470a51ea276ca84825e7495d4ee24743540d",
            "0deb64d1f6461b96a65ed847e63251a54856654f",
            "2b83675cc8903a6bab0f7615760ac2e98e5f5a19",
            "3c96517fc09d3c8ce1616f33f425e0f6d537e9d5",
            "9c98d67d7ad21af7175bf016cad251fd553dc2a5",
            "7c70b6c144a20782b6be4751da68c6aa7b35648d",
            "1df153f46ee232b5c899ff7d0ababea95ec5ffa9",
            "ba8af0157ba9b39b6b584a8b5de3bd38a2c43588",
            "a8ac4e72657a8bbee8f886bfbf587da67c40ce6b",
            "83bcb0cf2e0110a98a8286dc6cd040ca8ba0c6b0"
        ],
        "matched": [
            "2b83675cc8903a6bab0f7615760ac2e98e5f5a19"
        ]
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2023-32732",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in\u00c2\u00a0 https://github.com/grpc/grpc/pull/32309 https://www.google.com/url \n",
        "URL": "https://github.com/grpc/grpc/pull/32309",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "29d8beee0ac2555773b2a2dda5601c74a95d6c10",
        "inducing_commit_hash_pyszz": [
            "b64d623f24ef295c45d2082df9a18f264b3b6018"
        ],
        "inducing_commit_hash_pd": [
            "d09f45c625edc33038915d2cb7cc2a8f809c9e7f",
            "5eba7971fbb719b49039003e59508c4ccdae9cb1",
            "997bec7f24cc1afab23877cb64d60934de84d0bd",
            "6929cdd65454f0e77d5ad931209a4207ae15331c",
            "b64d623f24ef295c45d2082df9a18f264b3b6018",
            "1d59b25dea44fe0bd66b2345e36d5e6205b77b74",
            "d43511f4af992862ae17c6fce5caa3ab3ce60995",
            "613b90ba935674af15bb0780b730017f87f0fa5f",
            "18a8f6aad95d5c2f73f70c3a7fbc58a429da9d56",
            "d3e97d953b9a94d017d76a44b780bb5ca48e5840",
            "a116fa7e2551860fadc2307b34212275606f0e93",
            "8dd0cb47128739ddc24842a530066e0b3e32c6f0",
            "220cf641fa18ee04d8dc962b1f55869eb0d7063b",
            "0d8b21e1000f6e3e1771234573e8d577762db681",
            "4e5b4521478cf817dae0c646232b7ec184f0ebe6",
            "1713c3689252dce4515006c4a1c5c9fe707495d4",
            "694e4b84272148cab34334aa575055530ec1fb05",
            "c34bef4ca454decaeb348ed57cfbd2ad2fe1969b",
            "347bf1a1f4ce07c15d785e93a48a7971bfe06236",
            "3ec0e29bcf48e5774a1b124f0edf581b7ca40055",
            "3bb4d312dfdcf5e7583bec8e6467670b6e3eb0d3",
            "22b338e2109745a27f1f84de8490bc8148df1a79",
            "70db663ae8773dc45464c904603a3e73045b45c5",
            "78888d786129e207a4c0cc535a0ff38d86fb4a14",
            "1791df0a72cd6457f152172b65515196df6663fc",
            "8a1d8052eb8629643333ca4449180e27f65aa8dc",
            "3bb427195e76d99fb55dd79fbcf9aa2956c7af79",
            "b2b70515583fe18e36c7e70b265808fa3154f734",
            "f2fa95b5931f823fa438d552a1551852415f2157",
            "7c70b6c144a20782b6be4751da68c6aa7b35648d",
            "0eb3e13ea2c73a3de318c7a8297570fa2c6cdd85",
            "0444d98f17c7e742be1463e5714a24cd2eb6f99e"
        ],
        "matched": [
            "b64d623f24ef295c45d2082df9a18f264b3b6018"
        ]
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2023-4785",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java, and Go are NOT affected.\u00c2\u00a0",
        "URL": "https://github.com/grpc/grpc/pull/33656",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2788b56867bb36aebdfe567ef1efdbce1799424e",
        "inducing_commit_hash_pyszz": [
            "5850cba2957cc894477e735a74aa6c246b499ff4"
        ],
        "inducing_commit_hash_pd": [
            "5850cba2957cc894477e735a74aa6c246b499ff4",
            "f26236a159300c92633fafd0a906691165bc3289",
            "db5fe72da91cdb437cae1e3456b6b743aeb34891",
            "b7ebd3b8c6fe39f99c40b10c1b563e4adb607b6c",
            "144446434507dcc6d4583a04e723904df5cd2718"
        ],
        "matched": [
            "5850cba2957cc894477e735a74aa6c246b499ff4"
        ]
    },
    {
        "repo_name": "Guake/guake",
        "CVE_ID": "CVE-2021-23556",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The package guake before 3.8.5 are vulnerable to Exposed Dangerous Method or Function due to the exposure of execute_command and execute_command_by_uuid methods via the d-bus interface, which makes it possible for a malicious user to run an arbitrary command via the d-bus method. **Note:** Exploitation requires the user to have installed another malicious program that will be able to send dbus signals or run terminal commands.",
        "URL": "https://github.com/Guake/guake/pull/2017/commits/e3d671120bfe7ba28f50e256cc5e8a629781b888",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b769b3a5fd71a107c58679d217cccc971b4196b4",
        "inducing_commit_hash_pyszz": [
            "1dbab10db1a9e8e940c47d0afaee201b622fe853"
        ],
        "inducing_commit_hash_pd": [
            "57fde2fef051f46014b9494a7412a9f4745eae01",
            "7d9de8ee64790ad9ef563ddcc0dfc2df4035abaa",
            "1dbab10db1a9e8e940c47d0afaee201b622fe853",
            "9fbbfb2a67a87dbd9d91c80bfaf8fed2401b19d6",
            "3ac1a69660d6b2e3dcf0fb2edf6a308cd0e9a3b4"
        ],
        "matched": [
            "1dbab10db1a9e8e940c47d0afaee201b622fe853"
        ]
    },
    {
        "repo_name": "Guake/guake",
        "CVE_ID": "CVE-2021-23556",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The package guake before 3.8.5 are vulnerable to Exposed Dangerous Method or Function due to the exposure of execute_command and execute_command_by_uuid methods via the d-bus interface, which makes it possible for a malicious user to run an arbitrary command via the d-bus method. **Note:** Exploitation requires the user to have installed another malicious program that will be able to send dbus signals or run terminal commands.",
        "URL": "https://github.com/Guake/guake/pull/2017",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b769b3a5fd71a107c58679d217cccc971b4196b4",
        "inducing_commit_hash_pyszz": [
            "1dbab10db1a9e8e940c47d0afaee201b622fe853"
        ],
        "inducing_commit_hash_pd": [
            "57fde2fef051f46014b9494a7412a9f4745eae01",
            "7d9de8ee64790ad9ef563ddcc0dfc2df4035abaa",
            "1dbab10db1a9e8e940c47d0afaee201b622fe853",
            "9fbbfb2a67a87dbd9d91c80bfaf8fed2401b19d6",
            "3ac1a69660d6b2e3dcf0fb2edf6a308cd0e9a3b4"
        ],
        "matched": [
            "1dbab10db1a9e8e940c47d0afaee201b622fe853"
        ]
    },
    {
        "repo_name": "gulpjs/copy-props",
        "CVE_ID": "CVE-2020-28503",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The package copy-props before 2.0.5 are vulnerable to Prototype Pollution via the main functionality.",
        "URL": "https://github.com/gulpjs/copy-props/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c738f5c52cfb384b43d977a56a3ab7ce465df9b",
        "inducing_commit_hash_pyszz": [
            "f60b928c1149fa0f440f26c4377a127c2f1a4b80"
        ],
        "inducing_commit_hash_pd": [
            "6e6dd2926c8cba2869975627cad74f9b595e4746",
            "f60b928c1149fa0f440f26c4377a127c2f1a4b80",
            "f601d56ecce96b52b375eae2b93ecd391553e9f9"
        ],
        "matched": [
            "f60b928c1149fa0f440f26c4377a127c2f1a4b80"
        ]
    },
    {
        "repo_name": "gulpjs/glob-parent",
        "CVE_ID": "CVE-2020-28469",
        "Problem_Type": "CWE-400",
        "Description": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "URL": "https://github.com/gulpjs/glob-parent/pull/36",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f9231168b0041fea3f8f954b3cceb56269fc6366",
        "inducing_commit_hash_pyszz": [
            "4a80667c69355c76a572a5892b0f133c8e1f457e"
        ],
        "inducing_commit_hash_pd": [
            "4a80667c69355c76a572a5892b0f133c8e1f457e"
        ],
        "matched": [
            "4a80667c69355c76a572a5892b0f133c8e1f457e"
        ]
    },
    {
        "repo_name": "gulpjs/glob-parent",
        "CVE_ID": "CVE-2021-35065",
        "Problem_Type": "CWE-1333",
        "Description": "The glob-parent package before 6.0.1 for Node.js allows ReDoS (regular expression denial of service) attacks against the enclosure regular expression.",
        "URL": "https://github.com/gulpjs/glob-parent/pull/49",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e9f04a3b4349db7e1962d87c9a7398cda51f339",
        "inducing_commit_hash_pyszz": [
            "32f6d52663b7addac38d0dff570d8127edf03f47"
        ],
        "inducing_commit_hash_pd": [
            "32f6d52663b7addac38d0dff570d8127edf03f47",
            "4a80667c69355c76a572a5892b0f133c8e1f457e"
        ],
        "matched": [
            "32f6d52663b7addac38d0dff570d8127edf03f47"
        ]
    },
    {
        "repo_name": "Gunivers/Gipsy",
        "CVE_ID": "CVE-2023-30621",
        "Problem_Type": "CWE-78",
        "Description": "Gipsy is a multi-purpose discord bot which aim to be as modular and user-friendly as possible. In versions prior to 1.3 users can run command on the host machine with sudoer permission. The `!ping` command when provided with an IP or hostname used to run a bash `ping <IP>` without verification that the IP or hostname was legitimate. This command was executed with root permissions and may lead to arbitrary command injection on the host server. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/Gunivers/Gipsy/pull/24/commits/716818e967069f144aae66d51464b237c22b6cdf",
        "Tag": "['Patch']",
        "fix_commit_hash": "716818e967069f144aae66d51464b237c22b6cdf",
        "inducing_commit_hash_pyszz": [
            "8898fd3cee13aa9f9d13ba6052e3e976b2d14bdf"
        ],
        "inducing_commit_hash_pd": [
            "5b24b9e1d32a7031a2bfccf94cfc4c7c4cc4b620",
            "107519a89c225dd1470914adb953a902d7f3cd0e",
            "e37e7cc8b8bea679f8f0757bba6998e7bccfcc77",
            "8898fd3cee13aa9f9d13ba6052e3e976b2d14bdf"
        ],
        "matched": [
            "8898fd3cee13aa9f9d13ba6052e3e976b2d14bdf"
        ]
    },
    {
        "repo_name": "guzzle/guzzle",
        "CVE_ID": "CVE-2022-29248",
        "Problem_Type": "CWE-565",
        "Description": "Guzzle is a PHP HTTP client. Guzzle prior to versions 6.5.6 and 7.4.3 contains a vulnerability with the cookie middleware. The vulnerability is that it is not checked if the cookie domain equals the domain of the server which sets the cookie via the Set-Cookie header, allowing a malicious server to set cookies for unrelated domains. The cookie middleware is disabled by default, so most library consumers will not be affected by this issue. Only those who manually add the cookie middleware to the handler stack or construct the client with ['cookies' => true] are affected. Moreover, those who do not use the same Guzzle client to call multiple domains and have disabled redirect forwarding are not affected by this vulnerability. Guzzle versions 6.5.6 and 7.4.3 contain a patch for this issue. As a workaround, turn off the cookie middleware.",
        "URL": "https://github.com/guzzle/guzzle/pull/3018",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74a8602c6faec9ef74b7a9391ac82c5e65b1cdab",
        "inducing_commit_hash_pyszz": [
            "4618ba9a7452599faa3cd36c393a99fa04eaa0e1"
        ],
        "inducing_commit_hash_pd": [
            "c4c348a4f1ecd86ed33e88adbd32741c74cd322b",
            "364c6bdf17e6192dbeb81fdea754b37d1a6c7c8a",
            "065287bc14f3e606fe6aec6ecfeac9616afbd3cb",
            "4618ba9a7452599faa3cd36c393a99fa04eaa0e1",
            "4d71358b8f054dcb853a3ebe7cd2be08e9a0d451",
            "d0839cea0602df4451da3daaaf718781177c5ae2",
            "291bf2a67685e17792c6680f30a5440e00a78f0f",
            "00bb8b9a890097099dfd48f4ccdf10cdde391e20",
            "e5d0eb2fc51893a55e93ec6e204673615e2cf6dd"
        ],
        "matched": [
            "4618ba9a7452599faa3cd36c393a99fa04eaa0e1"
        ]
    },
    {
        "repo_name": "guzzle/psr7",
        "CVE_ID": "CVE-2022-24775",
        "Problem_Type": "CWE-20",
        "Description": "guzzlehttp/psr7 is a PSR-7 HTTP message library. Versions prior to 1.8.4 and 2.1.1 are vulnerable to improper header parsing. An attacker could sneak in a new line character and pass untrusted values. The issue is patched in 1.8.4 and 2.1.1. There are currently no known workarounds.",
        "URL": "https://github.com/guzzle/psr7/pull/485/commits/e55afaa3fc138c89adf3b55a8ba20dc60d17f1f1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53491b6394cdcb66880063b82c0b16cf082711eb",
        "inducing_commit_hash_pyszz": [
            "93c36e76d5ad95818414ae1fe3464e0e1de737ec"
        ],
        "inducing_commit_hash_pd": [
            "93c36e76d5ad95818414ae1fe3464e0e1de737ec",
            "c5aea30ff82a3565e6d3decd18d74257c033daf6",
            "5ce1cec1a26c5d2ccd259157f58a32b7facd545a",
            "f90f9ca5178897ceabed117dcd043c621926b6b1"
        ],
        "matched": [
            "93c36e76d5ad95818414ae1fe3464e0e1de737ec"
        ]
    },
    {
        "repo_name": "guzzle/psr7",
        "CVE_ID": "CVE-2022-24775",
        "Problem_Type": "CWE-20",
        "Description": "guzzlehttp/psr7 is a PSR-7 HTTP message library. Versions prior to 1.8.4 and 2.1.1 are vulnerable to improper header parsing. An attacker could sneak in a new line character and pass untrusted values. The issue is patched in 1.8.4 and 2.1.1. There are currently no known workarounds.",
        "URL": "https://github.com/guzzle/psr7/pull/486/commits/9a96d9db668b485361ed9de7b5bf1e54895df1dc",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "902db15a551a4a415e732b622282e21ce1b508b4",
        "inducing_commit_hash_pyszz": [
            "93c36e76d5ad95818414ae1fe3464e0e1de737ec"
        ],
        "inducing_commit_hash_pd": [
            "93c36e76d5ad95818414ae1fe3464e0e1de737ec",
            "c5aea30ff82a3565e6d3decd18d74257c033daf6",
            "5ce1cec1a26c5d2ccd259157f58a32b7facd545a",
            "b33127dd48a6d48e29a3561d4f5d11809936d12a"
        ],
        "matched": [
            "93c36e76d5ad95818414ae1fe3464e0e1de737ec"
        ]
    },
    {
        "repo_name": "gventuri/pandas-ai",
        "CVE_ID": "CVE-2023-39660",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue in Gaberiele Venturi pandasai v.0.8.0 and before allows a remote attacker to execute arbitrary code via a crafted request to the prompt function.",
        "URL": "https://github.com/gventuri/pandas-ai/pull/409",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "3aac79be8fc1d18b53d66a566adddbbdd2b38ad5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ff69d3f8b24c2a0f5fbb58de96b7484c826a331c"
        ],
        "matched": [
            "ff69d3f8b24c2a0f5fbb58de96b7484c826a331c"
        ]
    },
    {
        "repo_name": "Haivision/srt",
        "CVE_ID": "CVE-2019-15784",
        "Problem_Type": "CWE-129",
        "Description": "Secure Reliable Transport (SRT) through 1.3.4 has a CSndUList array overflow if there are many SRT connections.",
        "URL": "https://github.com/Haivision/srt/pull/811",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0630e8a7328d102165663648ca38ca1486a8861",
        "inducing_commit_hash_pyszz": [
            "ae46ce20e70b81f9d5a6668978808777838c4424"
        ],
        "inducing_commit_hash_pd": [
            "bdeb5d24336f001a0e3d38894eb89af192c0d2d1",
            "ae46ce20e70b81f9d5a6668978808777838c4424"
        ],
        "matched": [
            "ae46ce20e70b81f9d5a6668978808777838c4424"
        ]
    },
    {
        "repo_name": "haiwen/seafile-server",
        "CVE_ID": "CVE-2021-43820",
        "Problem_Type": "CWE-639",
        "Description": "Seafile is an open source cloud storage system. A sync token is used in Seafile file syncing protocol to authorize access to library data. To improve performance, the token is cached in memory in seaf-server. Upon receiving a token from sync client or SeaDrive client, the server checks whether the token exist in the cache. However, if the token exists in cache, the server doesn't check whether it's associated with the specific library in the URL. This vulnerability makes it possible to use any valid sync token to access data from any **known** library. Note that the attacker has to first find out the ID of a library which it has no access to. The library ID is a random UUID, which is not possible to be guessed. There are no workarounds for this issue.",
        "URL": "https://github.com/haiwen/seafile-server/pull/520",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ea2e328624e546858ef8b0e6eeb5ec9b37715628",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "26431194333db30ea3d94d7af515cdf0197ddac8"
        ],
        "matched": [
            "26431194333db30ea3d94d7af515cdf0197ddac8"
        ]
    },
    {
        "repo_name": "handsontable/handsontable",
        "CVE_ID": "CVE-2021-23446",
        "Problem_Type": "CWE-1333",
        "Description": "The package handsontable before 10.0.0; the package handsontable from 0 and before 10.0.0 are vulnerable to Regular Expression Denial of Service (ReDoS) in Handsontable.helper.isNumeric function.",
        "URL": "https://github.com/handsontable/handsontable/pull/8742",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7323f3d08b4c85e6d92f8511c849d2b1821aadcc",
        "inducing_commit_hash_pyszz": [
            "6fe3a3dab48a6523b5c2c5f4b1f22e07fe598e7f"
        ],
        "inducing_commit_hash_pd": [
            "6cef73b4d28c5696a1c6ac9b41ed34a2aed54416",
            "5ec680c6315d6f0cc35926807fc77a81b098a1e7",
            "545eca665c315e4681ffcc14e03b2b699162bf54",
            "1cdcd7af1dcf6a5c254f65897346b4ff15192f14",
            "34e5c2e8a63c6037780822b81d8777a868f91bca",
            "baab522ab31c64f59007d0dcf0d1e8f3c2dc7d29",
            "55e612f1dfe2de591869438460e8cd6ad4f40be0",
            "8e399b1c56153fde0c6203cdb55605a051324284",
            "83a17dea10b93d5b97b55174a3b3efd0394f4ceb",
            "43f7ce1d9e5c9742c17f5b67c9a3d936b5426d5c",
            "f377d8f636aae2d2405b8d9dc0a7c5922a7939a1"
        ],
        "matched": [
            "6fe3a3dab48a6523b5c2c5f4b1f22e07fe598e7f"
        ]
    },
    {
        "repo_name": "hapifhir/hapi-fhir",
        "CVE_ID": "CVE-2021-32053",
        "Problem_Type": "CWE-400",
        "Description": "JPA Server in HAPI FHIR before 5.4.0 allows a user to deny service (e.g., disable access to the database after the attack stops) via history requests. This occurs because of a SELECT COUNT statement that requires a full index scan, with an accompanying large amount of server resources if there are many simultaneous history requests.",
        "URL": "https://github.com/hapifhir/hapi-fhir/pull/2642",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5a9f499fbf60cdcb4320b5774433ca6bc96cdfc5",
        "inducing_commit_hash_pyszz": [
            "7d769e3b053801b87605ab1bc3e79eb99ec261cf"
        ],
        "inducing_commit_hash_pd": [
            "7d769e3b053801b87605ab1bc3e79eb99ec261cf",
            "23b7de5dd87dc4954e960345734e946761323e45",
            "95d7ba6fa8b7184b62190ac5b932aaeb20337e51",
            "3b91873b7cce1ca7f344e9ea958d43a8bbc16ab1",
            "01186ec8cbfc8a10897e196ae2f457dc5e6ea123",
            "43b4d8e0e32f9b44d3f85e63f149af9c400e674b",
            "6f79f6c5e2a741adb8075d01cc75ab36ca47da09",
            "8000d2d0cf25a3ddcb9d7d920aa7cacee087cdbf",
            "a77aa6a28e32b9d1ef4bb26249bfb42f4d42d329",
            "0af8fbc5d3ec4122deb3472f2b0d743fe68c7f9b",
            "efc6809ea689eb95436174f24ec498ecf77fb981",
            "f356c7c385ed170311c378851a29dbe085e99931",
            "6baf1995c9e23bbfeb4770bc471ceffe64d0ead5",
            "1dc4fb2206a1689a35f7bfcbdce7d7eb60648907",
            "d958764d490ccd0330212acaf64b90c4fed69321",
            "f6d4a403880550ba8d1d8025b4fbd02efed936d9",
            "e85bec28588f07bca97d4e92a2be949616ca50f0",
            "970a9884f076b3510991420cbc1170799903f7dc",
            "be5c5ebecde889e5e91784e300c943a35d50c253",
            "f934f76c9606f642d7af4b15552def209feb94f3",
            "1dc5d8901328b7646987b596c3b3cdfeace145cd",
            "6cc07b66891329388a4469339d04b2de8f361c1f"
        ],
        "matched": [
            "7d769e3b053801b87605ab1bc3e79eb99ec261cf"
        ]
    },
    {
        "repo_name": "hashicorp/consul",
        "CVE_ID": "CVE-2018-19653",
        "Problem_Type": "CWE-310",
        "Description": "HashiCorp Consul 0.5.1 through 1.4.0 can use cleartext agent-to-agent RPC communication because the verify_outgoing setting is improperly documented. NOTE: the vendor has provided reconfiguration steps that do not require a software upgrade.",
        "URL": "https://github.com/hashicorp/consul/pull/5069",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b64e8b262f80397eab4f39c6ae7e14683cb9f55c",
        "inducing_commit_hash_pyszz": [
            "9bb239a01c9ddeff016ceab84b74bd934cbb753c"
        ],
        "inducing_commit_hash_pd": [
            "f41dce97fdea26e5f15b4f36dcd848f5bf01076d",
            "90d6204a1ae90b1485b2bd20693604ee740d84b4",
            "a1b38ececb8186f5d9e0b387d605da3b955a499a",
            "9bb239a01c9ddeff016ceab84b74bd934cbb753c",
            "12216583a124e25de630fb8d3e96ed0c7b431142",
            "7665b65834879b31e3b965a019514f7d679245bb",
            "6354996804d6730f6307091f1904f59446054fad"
        ],
        "matched": [
            "9bb239a01c9ddeff016ceab84b74bd934cbb753c"
        ]
    },
    {
        "repo_name": "hashicorp/consul",
        "CVE_ID": "CVE-2020-12758",
        "Problem_Type": "CWE-404",
        "Description": "HashiCorp Consul and Consul Enterprise could crash when configured with an abnormally-formed service-router entry. Introduced in 1.6.0, fixed in 1.6.6 and 1.7.4.",
        "URL": "https://github.com/hashicorp/consul/pull/7783",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "69b44fb9424cfdc05f1b7243876ab10d236ef1fc",
        "inducing_commit_hash_pyszz": [
            "6a52f9f9fb8306db5d0be5799a6cd8b5ce336e13"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "6a52f9f9fb8306db5d0be5799a6cd8b5ce336e13"
        ]
    },
    {
        "repo_name": "hashicorp/consul",
        "CVE_ID": "CVE-2020-12797",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "HashiCorp Consul and Consul Enterprise failed to enforce changes to legacy ACL token rules due to non-propagation to secondary data centers. Introduced in 1.4.0, fixed in 1.6.6 and 1.7.4.",
        "URL": "https://github.com/hashicorp/consul/pull/8047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "98eea08d3ba1b220a14cf6eedf3b6b07ae2795d7",
        "inducing_commit_hash_pyszz": [
            "77f2e5461804acafed10806caffc22447853241f"
        ],
        "inducing_commit_hash_pd": [
            "77f2e5461804acafed10806caffc22447853241f",
            "3e4654408534782ae48ba023ca8df2a175d345e4",
            "6adad711255dccc13263b82f8f5aba7a87d42d19",
            "c09693e545c5138ee7da5e102e5afa9e73c25c87",
            "94c73d0c9209d53568aead25cb74b79dce7c800c",
            "e47d7eeddb93bac09b7e5e94231ef5fa17cc112b",
            "beddf03b26139e6b011f237b3b04d55d2144028f",
            "f6df5c9b3b4c192c88b39417b34be254c040fc51",
            "4f2715d4e28cf2ed18978b4c584171a90ac35878",
            "1c3dbc83ff830f6895d0c70be4a5b3479abec3e5",
            "4e5fb6bc19dadd91d10020805e22b96275d98431",
            "e4ea9b0a963de557699c215ac7a7537779d612d5",
            "f186edc42c4e8ab5a86c5906b135d9b7db045a64",
            "429d0cedd20844c3eeb09f220726bdba5ae1faa2",
            "d92577c16b2e0d5df3d18779508dbde87c38e35a",
            "0719ff6905ef1101291fd22a4a2dedc1b54b47d7",
            "bd6d0e598f8759157b4c51dcdcc3f48850ee6878",
            "18b29c45c491e492e7eecb29df4d90043a4d937a",
            "b51d76f46922bc234419b51af5706971fb8beea6"
        ],
        "matched": [
            "77f2e5461804acafed10806caffc22447853241f"
        ]
    },
    {
        "repo_name": "hashicorp/consul",
        "CVE_ID": "CVE-2020-13170",
        "Problem_Type": "CWE-20",
        "Description": "HashiCorp Consul and Consul Enterprise did not appropriately enforce scope for local tokens issued by a primary data center, where replication to a secondary data center was not enabled. Introduced in 1.4.0, fixed in 1.6.6 and 1.7.4.",
        "URL": "https://github.com/hashicorp/consul/pull/8068",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "242994a016a181d6c62a5bb83189716ad13d4216",
        "inducing_commit_hash_pyszz": [
            "90040f8bffb311e6cd8599273e95b607175e311f"
        ],
        "inducing_commit_hash_pd": [
            "90040f8bffb311e6cd8599273e95b607175e311f",
            "18b29c45c491e492e7eecb29df4d90043a4d937a"
        ],
        "matched": [
            "90040f8bffb311e6cd8599273e95b607175e311f"
        ]
    },
    {
        "repo_name": "hashicorp/consul",
        "CVE_ID": "CVE-2020-13250",
        "Problem_Type": "CWE-770",
        "Description": "HashiCorp Consul and Consul Enterprise include an HTTP API (introduced in 1.2.0) and DNS (introduced in 1.4.3) caching feature that was vulnerable to denial of service. Fixed in 1.6.6 and 1.7.4.",
        "URL": "https://github.com/hashicorp/consul/pull/8023",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "72f92ae7ca4cabc1dc3069362a9b64ef46941432",
        "inducing_commit_hash_pyszz": [
            "a67d27c7564e450cd85af3e0e278a1a4c0822a79"
        ],
        "inducing_commit_hash_pd": [
            "88388d760dc5d34798e375e545c0604bb3b0416d",
            "43c5ba0304ab69986b2d389608725317054843db",
            "c395affc935f38a897f157149287646cbef92793",
            "12216583a124e25de630fb8d3e96ed0c7b431142"
        ],
        "matched": [
            "a67d27c7564e450cd85af3e0e278a1a4c0822a79"
        ]
    },
    {
        "repo_name": "hashicorp/vault-action",
        "CVE_ID": "CVE-2021-32074",
        "Problem_Type": "CWE-532",
        "Description": "HashiCorp vault-action (aka Vault GitHub Action) before 2.2.0 allows attackers to obtain sensitive information from log files because a multi-line secret was not correctly registered with GitHub Actions for log masking.",
        "URL": "https://github.com/hashicorp/vault-action/pull/208",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3526e1be65cf8faf42d6088bc5da8bff596c718a",
        "inducing_commit_hash_pyszz": [
            "0188d9d223dac8b24b94b04d3253bf0fe0365ca7"
        ],
        "inducing_commit_hash_pd": [
            "13eebbc4e5eb04bb5e6c584bb3f9147f069b000c",
            "0188d9d223dac8b24b94b04d3253bf0fe0365ca7"
        ],
        "matched": [
            "0188d9d223dac8b24b94b04d3253bf0fe0365ca7"
        ]
    },
    {
        "repo_name": "hazelcast/hazelcast",
        "CVE_ID": "CVE-2023-33264",
        "Problem_Type": "CWE-522",
        "Description": "In Hazelcast through 5.0.4, 5.1 through 5.1.6, and 5.2 through 5.2.3, configuration routines don't mask passwords in the member configuration properly. This allows Hazelcast Management Center users to view some of the secrets.",
        "URL": "https://github.com/hazelcast/hazelcast/pull/24266",
        "Tag": "['Patch']",
        "fix_commit_hash": "74eed86c2b2b727148c442e98a01d0ca6941a49e",
        "inducing_commit_hash_pyszz": [
            "d1dc50ef2ac1652c487bb5c69788b4d589d03d00"
        ],
        "inducing_commit_hash_pd": [
            "d2967c0e5f51d2f2cc91d80e71434b01c133632b",
            "d1dc50ef2ac1652c487bb5c69788b4d589d03d00",
            "eb8ffc40b2e2d7ccfa21e2acfd663bfff1496c6b",
            "71b51932a777908caf3bcb1c7da275da6b3d2d80"
        ],
        "matched": [
            "d1dc50ef2ac1652c487bb5c69788b4d589d03d00"
        ]
    },
    {
        "repo_name": "hedgedoc/hedgedoc",
        "CVE_ID": "CVE-2023-38487",
        "Problem_Type": "CWE-289",
        "Description": "HedgeDoc is software for creating real-time collaborative markdown notes. Prior to version 1.9.9, the API of HedgeDoc 1 can be used to create notes with an alias matching the ID of existing notes. The affected existing note can then not be accessed anymore and is effectively hidden by the new one.\n\nWhen the freeURL feature is enabled (by setting the `allowFreeURL` config option or the `CMD_ALLOW_FREEURL` environment variable to `true`), any user with the appropriate permissions can create a note by making a POST request to the `/new/<ALIAS>` API endpoint. The `<ALIAS>` parameter can be set to the ID of an existing note. HedgeDoc did not verify whether the provided `<ALIAS>` value corresponds to a valid ID of an existing note and always allowed creation of the new note. When a visitor tried to access the existing note, HedgeDoc will first search for a note with a matching alias before it searches using the ID, therefore only the new note can be accessed.\n\nDepending on the permission settings of the HedgeDoc instance, the issue can be exploited only by logged-in users or by all (including non-logged-in) users. The exploit requires knowledge of the ID of the target note. Attackers could use this issue to present a manipulated copy of the original note to the user, e.g. by replacing the links with malicious ones. Attackers can also use this issue to prevent access to the original note, causing a denial of service. No data is lost, as the original content of the affected notes is still present in the database.\n\nThis issue was fixed in version 1.9.9. As a workaround, disabling freeURL mode prevents the exploitation of this issue. The impact can be limited by restricting freeURL note creation to trusted, logged-in users by enabling `requireFreeURLAuthentication`/`CMD_REQUIRE_FREEURL_AUTHENTICATION`.",
        "URL": "https://github.com/hedgedoc/hedgedoc/pull/4476/commits/781263ab84255885e1fe60c7e92e2f8d611664d2",
        "Tag": "['Patch']",
        "fix_commit_hash": "cd26aaa86ec58b6480c8a5efb017622fdc945b52",
        "inducing_commit_hash_pyszz": [
            "dcea082286ce5c41e50f70820c065c677a176fc7"
        ],
        "inducing_commit_hash_pd": [
            "dcea082286ce5c41e50f70820c065c677a176fc7",
            "124b06425214921c30a88e44a139b1cc8ca15b45"
        ],
        "matched": [
            "dcea082286ce5c41e50f70820c065c677a176fc7"
        ]
    },
    {
        "repo_name": "helm/helm",
        "CVE_ID": "CVE-2019-1010275",
        "Problem_Type": "CWE-295",
        "Description": "helm Before 2.7.2 is affected by: CWE-295: Improper Certificate Validation. The impact is: Unauthorized clients could connect to the server because self-signed client certs were aloowed. The component is: helm (many files updated, see https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50). The attack vector is: A malicious client could connect to the server over the network. The fixed version is: 2.7.2.",
        "URL": "https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8e6ac5d7783808cc0bd1adad053bec339849647",
        "inducing_commit_hash_pyszz": [
            "d7240ff9430e31fa950e27fe5aa7a60edc3d99bf"
        ],
        "inducing_commit_hash_pd": [
            "b0e7a43b5bd440ca891293bd3092f18f4d5ea3cf",
            "5f981ad96f0ea8a9d8a2c161843a94c91f8e1bfc",
            "1cd9f5d5414ede41310f36090e92623f659da38b",
            "b4ca198cc625f5dc8a3544c475b2ad4c3499c5db",
            "735f4e3d4a9dbf24b8dec21006a09d09b3e176e5",
            "d7240ff9430e31fa950e27fe5aa7a60edc3d99bf",
            "aca9f86df62f6ff13fdade755ece70d25bdfe079",
            "2fb8b60765a454c0308c1e46560fbcba5e416d0a"
        ],
        "matched": [
            "d7240ff9430e31fa950e27fe5aa7a60edc3d99bf"
        ]
    },
    {
        "repo_name": "helm/helm",
        "CVE_ID": "CVE-2019-1010275",
        "Problem_Type": "CWE-295",
        "Description": "helm Before 2.7.2 is affected by: CWE-295: Improper Certificate Validation. The impact is: Unauthorized clients could connect to the server because self-signed client certs were aloowed. The component is: helm (many files updated, see https://github.com/helm/helm/pull/3152/files/1096813bf9a425e2aa4ac755b6c991b626dfab50). The attack vector is: A malicious client could connect to the server over the network. The fixed version is: 2.7.2.",
        "URL": "https://github.com/helm/helm/pull/3152",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8e6ac5d7783808cc0bd1adad053bec339849647",
        "inducing_commit_hash_pyszz": [
            "d7240ff9430e31fa950e27fe5aa7a60edc3d99bf"
        ],
        "inducing_commit_hash_pd": [
            "b0e7a43b5bd440ca891293bd3092f18f4d5ea3cf",
            "5f981ad96f0ea8a9d8a2c161843a94c91f8e1bfc",
            "1cd9f5d5414ede41310f36090e92623f659da38b",
            "b4ca198cc625f5dc8a3544c475b2ad4c3499c5db",
            "735f4e3d4a9dbf24b8dec21006a09d09b3e176e5",
            "d7240ff9430e31fa950e27fe5aa7a60edc3d99bf",
            "aca9f86df62f6ff13fdade755ece70d25bdfe079",
            "2fb8b60765a454c0308c1e46560fbcba5e416d0a"
        ],
        "matched": [
            "d7240ff9430e31fa950e27fe5aa7a60edc3d99bf"
        ]
    },
    {
        "repo_name": "hestiacp/hestiacp",
        "CVE_ID": "CVE-2023-5084",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site Scripting (XSS) - Reflected in GitHub repository hestiacp/hestiacp prior to 1.8.8.\n\n",
        "URL": "https://github.com/hestiacp/hestiacp/pull/4013/commits/5131f5a966759df77477fdf7f29daa2bda93b1ff",
        "Tag": "['Patch']",
        "fix_commit_hash": "1e98096921f46c71c4bdf141bb532ba87cb27160",
        "inducing_commit_hash_pyszz": [
            "7cccc31ce9f07d5afceaa2859b425b6f1a2a7643"
        ],
        "inducing_commit_hash_pd": [
            "b4af81e6bd1965bfe14b15f10407f1e39f60771c",
            "754a247f744f17846c8eadecfd69423c4837ce56",
            "3de3e0a73b70ce6255989ef37ac9bc54fd0fdd37",
            "0fe347f0a33949e21aeba940a3f39d137f642919"
        ],
        "matched": [
            "7cccc31ce9f07d5afceaa2859b425b6f1a2a7643"
        ]
    },
    {
        "repo_name": "hexpm/hex",
        "CVE_ID": "CVE-2019-1000012",
        "Problem_Type": "CWE-345",
        "Description": "Hex package manager version 0.14.0 through 0.18.2 contains a Signing oracle vulnerability in Package registry verification that can result in Package modifications not detected, allowing code execution. This attack appears to be exploitable via victim fetches packages from malicious/compromised mirror. This vulnerability appears to have been fixed in 0.19.",
        "URL": "https://github.com/hexpm/hex/pull/651",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6c1541556615b191db7da932c68c34c7cf0295d0",
        "inducing_commit_hash_pyszz": [
            "fcda85c7d220d87c0efef41be4f9cf5f797ae35e"
        ],
        "inducing_commit_hash_pd": [
            "c938df35e15cc68ab2cae25afb4cf240e23b14b7",
            "548ca8741bd8bf012296c0a3a04cd7a27ad8a32a",
            "1f73e019ae3a522bb5a670516b06368830eea459",
            "5b5c4228b310ed3822ecbd5f86185bde5c970463",
            "3105cfb19db25e30e93170e6689c6768195fb291",
            "0f40e8fab187fb4562b22724d49bc1ececeba7b7",
            "18c88f3afcdda74428039391a65cca1fb676788f",
            "05777d0dd0293b0d327e207285501f6a45737098",
            "fcda85c7d220d87c0efef41be4f9cf5f797ae35e",
            "8f5798043bc8ef9ec5d5a9ddcfa16386f17a5e75",
            "2c9ee828890512de7ee6efed715d9116bdbf8117"
        ],
        "matched": [
            "fcda85c7d220d87c0efef41be4f9cf5f797ae35e"
        ]
    },
    {
        "repo_name": "hexpm/hex",
        "CVE_ID": "CVE-2019-1000012",
        "Problem_Type": "CWE-345",
        "Description": "Hex package manager version 0.14.0 through 0.18.2 contains a Signing oracle vulnerability in Package registry verification that can result in Package modifications not detected, allowing code execution. This attack appears to be exploitable via victim fetches packages from malicious/compromised mirror. This vulnerability appears to have been fixed in 0.19.",
        "URL": "https://github.com/hexpm/hex/pull/646",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f5798043bc8ef9ec5d5a9ddcfa16386f17a5e75",
        "inducing_commit_hash_pyszz": [
            "548ca8741bd8bf012296c0a3a04cd7a27ad8a32a"
        ],
        "inducing_commit_hash_pd": [
            "f049e906d38be8e85ad1070d3c417a99dfeb8ee0",
            "548ca8741bd8bf012296c0a3a04cd7a27ad8a32a"
        ],
        "matched": [
            "548ca8741bd8bf012296c0a3a04cd7a27ad8a32a"
        ]
    },
    {
        "repo_name": "hexpm/hex_core",
        "CVE_ID": "CVE-2019-1000013",
        "Problem_Type": "CWE-345",
        "Description": "Hex package manager hex_core version 0.3.0 and earlier contains a Signing oracle vulnerability in Package registry verification that can result in Package modifications not detected, allowing code execution. This attack appears to be exploitable via victim fetches packages from malicious/compromised mirror. This vulnerability appears to have been fixed in 0.4.0.",
        "URL": "https://github.com/hexpm/hex_core/pull/51",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ce5562855be6283979e4a97cb8af1fba938a4538",
        "inducing_commit_hash_pyszz": [
            "009d4de63c041db30f6b6094321cbb936def2429"
        ],
        "inducing_commit_hash_pd": [
            "009d4de63c041db30f6b6094321cbb936def2429",
            "6d1cdbfe9e845c83febb0dc7f9e5267bb60b5313"
        ],
        "matched": [
            "009d4de63c041db30f6b6094321cbb936def2429"
        ]
    },
    {
        "repo_name": "hexpm/hex_core",
        "CVE_ID": "CVE-2019-1000013",
        "Problem_Type": "CWE-345",
        "Description": "Hex package manager hex_core version 0.3.0 and earlier contains a Signing oracle vulnerability in Package registry verification that can result in Package modifications not detected, allowing code execution. This attack appears to be exploitable via victim fetches packages from malicious/compromised mirror. This vulnerability appears to have been fixed in 0.4.0.",
        "URL": "https://github.com/hexpm/hex_core/pull/48",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "009d4de63c041db30f6b6094321cbb936def2429",
        "inducing_commit_hash_pyszz": [
            "efb2db28328243f9e0b3d5e4465ca528c988341d"
        ],
        "inducing_commit_hash_pd": [
            "f53d138a2261cb6ce49c1dcfe6c3b5e79c944d31",
            "ff688f602125f54eedfe0adbbb9fb4f39f4f2d8f",
            "13e28074bbd1c1e23c669ecdffd0317a78e6d220",
            "0804a970b4438978a0073e722c227d23afda32f8",
            "a14027c240695e5de2f4bb3f8d02576f8c820e53",
            "fbb6d9de472e5edb8d6fb6b32a91cb266137892e",
            "66198bd521019e957bb5300078b9c4a425005ce8",
            "efb2db28328243f9e0b3d5e4465ca528c988341d",
            "11eaa06b14cf2bbd00591fa3899b1d9d14dae880",
            "d8752ee1e2425d05a5d1ec42e98ba4bf2cebc949"
        ],
        "matched": [
            "efb2db28328243f9e0b3d5e4465ca528c988341d"
        ]
    },
    {
        "repo_name": "highlightjs/highlight.js",
        "CVE_ID": "CVE-2020-26237",
        "Problem_Type": "CWE-471",
        "Description": "Highlight.js is a syntax highlighter written in JavaScript. Highlight.js versions before 9.18.2 and 10.1.2 are vulnerable to Prototype Pollution. A malicious HTML code block can be crafted that will result in prototype pollution of the base object's prototype during highlighting. If you allow users to insert custom HTML code blocks into your page/app via parsing Markdown code blocks (or similar) and do not filter the language names the user can provide you may be vulnerable. The pollution should just be harmless data but this can cause problems for applications not expecting these properties to exist and can result in strange behavior or application crashes, i.e. a potential DOS vector. If your website or application does not render user provided data it should be unaffected. Versions 9.18.2 and 10.1.2 and newer include fixes for this vulnerability. If you are using version 7 or 8 you are encouraged to upgrade to a newer release.",
        "URL": "https://github.com/highlightjs/highlight.js/pull/2636",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d8692db1efa893b4b9e22ca0dbd96c64cc8da8c4",
        "inducing_commit_hash_pyszz": [
            "705f49b8c371ef0317dcd58278a212185c44045b"
        ],
        "inducing_commit_hash_pd": [
            "705f49b8c371ef0317dcd58278a212185c44045b"
        ],
        "matched": [
            "705f49b8c371ef0317dcd58278a212185c44045b"
        ]
    },
    {
        "repo_name": "hmcts/ccd-data-store-api",
        "CVE_ID": "CVE-2019-15569",
        "Problem_Type": "CWE-89",
        "Description": "HM Courts & Tribunals ccd-data-store-api before 2019-06-10 allows SQL injection, related to SearchQueryFactoryOperation.java and SortDirection.java.",
        "URL": "https://github.com/hmcts/ccd-data-store-api/pull/394",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b3dff4d6db9483733ee36bc544a0b538ace6dc1",
        "inducing_commit_hash_pyszz": [
            "6059cb2da92725139277fd1b5e6270c285796c88"
        ],
        "inducing_commit_hash_pd": [
            "6059cb2da92725139277fd1b5e6270c285796c88",
            "117142e4a887b1c9e1cc7bb0551b33aff4a65878"
        ],
        "matched": [
            "6059cb2da92725139277fd1b5e6270c285796c88"
        ]
    },
    {
        "repo_name": "home-assistant/home-assistant-polymer",
        "CVE_ID": "CVE-2017-16782",
        "Problem_Type": "CWE-79",
        "Description": "In Home Assistant before 0.57, it is possible to inject JavaScript code into a persistent notification via crafted Markdown text, aka XSS.",
        "URL": "https://github.com/home-assistant/home-assistant-polymer/pull/514",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ce2b4b6765cbc0347145ba19d54f47d351624e88",
        "inducing_commit_hash_pyszz": [
            "cbc447515f41a47df34ac54b408194e291b74d35"
        ],
        "inducing_commit_hash_pd": [
            "9c0845d595c05b76b1b3f77b362d31c27cc8b38e",
            "78c7756aa18b7abcaf8f531209d8d9b910527f27",
            "cbc447515f41a47df34ac54b408194e291b74d35"
        ],
        "matched": [
            "cbc447515f41a47df34ac54b408194e291b74d35"
        ]
    },
    {
        "repo_name": "home-assistant/home-assistant",
        "CVE_ID": "CVE-2018-21019",
        "Problem_Type": "CWE-200",
        "Description": "Home Assistant before 0.67.0 was vulnerable to an information disclosure that allowed an unauthenticated attacker to read the application's error log via components/api.py.",
        "URL": "https://github.com/home-assistant/home-assistant/pull/13836",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "20ababec3e28ced91fc3d3e79b229612a3d9c99d",
        "inducing_commit_hash_pyszz": [
            "26c98512c8bbddb7092c564f58f385fa6b9e59f3"
        ],
        "inducing_commit_hash_pd": [
            "26c98512c8bbddb7092c564f58f385fa6b9e59f3"
        ],
        "matched": [
            "26c98512c8bbddb7092c564f58f385fa6b9e59f3"
        ]
    },
    {
        "repo_name": "home-assistant/plugin-dns",
        "CVE_ID": "CVE-2020-36517",
        "Problem_Type": "CWE-203",
        "Description": "An information leak in Nabu Casa Home Assistant Operating System and Home Assistant Supervised 2022.03 allows a DNS operator to gain knowledge about internal network resources via the hardcoded DNS resolver configuration.",
        "URL": "https://github.com/home-assistant/plugin-dns/pull/55",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "home-assistant/plugin-dns",
        "CVE_ID": "CVE-2020-36517",
        "Problem_Type": "CWE-203",
        "Description": "An information leak in Nabu Casa Home Assistant Operating System and Home Assistant Supervised 2022.03 allows a DNS operator to gain knowledge about internal network resources via the hardcoded DNS resolver configuration.",
        "URL": "https://github.com/home-assistant/plugin-dns/pull/59",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "home-assistant/plugin-dns",
        "CVE_ID": "CVE-2020-36517",
        "Problem_Type": "CWE-203",
        "Description": "An information leak in Nabu Casa Home Assistant Operating System and Home Assistant Supervised 2022.03 allows a DNS operator to gain knowledge about internal network resources via the hardcoded DNS resolver configuration.",
        "URL": "https://github.com/home-assistant/plugin-dns/pull/58",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "horazont/aioxmpp",
        "CVE_ID": "CVE-2019-1000007",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "aioxmpp version 0.10.2 and earlier contains a Improper Handling of Structural Elements vulnerability in Stanza Parser, rollback during error processing, aioxmpp.xso.model.guard function that can result in Denial of Service, Other. This attack appears to be exploitable via Remote. A crafted stanza can be sent to an application which uses the vulnerable components to either inject data in a different context or cause the application to reconnect (potentially losing data). This vulnerability appears to have been fixed in 0.10.3.",
        "URL": "https://github.com/horazont/aioxmpp/pull/268",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "29ff0838a40f58efe30a4bbcea95aa8dab7da475",
        "inducing_commit_hash_pyszz": [
            "d79b1823fa1166031548fa3cee83f74265c75ad0"
        ],
        "inducing_commit_hash_pd": [
            "d79b1823fa1166031548fa3cee83f74265c75ad0"
        ],
        "matched": [
            "d79b1823fa1166031548fa3cee83f74265c75ad0"
        ]
    },
    {
        "repo_name": "httplib2/httplib2",
        "CVE_ID": "CVE-2021-21240",
        "Problem_Type": "CWE-400",
        "Description": "httplib2 is a comprehensive HTTP client library for Python. In httplib2 before version 0.19.0, a malicious server which responds with long series of \"\\xa0\" characters in the \"www-authenticate\" header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server. This is fixed in version 0.19.0 which contains a new implementation of auth headers parsing using the pyparsing library.",
        "URL": "https://github.com/httplib2/httplib2/pull/182",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bd9ee252c8f099608019709e22c0d705e98d26bc",
        "inducing_commit_hash_pyszz": [
            "595e248d0958c00e83cb28f136a2a54772772b50"
        ],
        "inducing_commit_hash_pd": [
            "4009e8e4922bb592f6ab93cb1f3aa0e4d650e847",
            "013682ef34f85d711b999eee57b6723bde09a291",
            "5c1b00a03221f55ac48b0d34030160cf55b4225f",
            "2d66d4f74f67dc9a49d6cf80bac4a289718422f1",
            "9fef207e85eef0534574d71fe1338c01874eba46",
            "806de52a2939d95800e43b1ab96be45a33b882d1",
            "fc738882a84efd3c88abe5c494805332b212840c",
            "2a806cb4bc731058541ab902101ea7750f350282",
            "5bb616cc0d4bb38df695ba74bbf7aab2108b12a4",
            "ece4af0a99d0429b29eaf0b34a06831d5ae11516",
            "fd22e434835b9c2cfddcba21e1a8722a1e6c2b9a",
            "6fa3cf2095e3ae2b3e7e43280a3906b0e6a6268f",
            "00a352e01258751b1fceaf8a1c802c20c0d60996",
            "45441b2f0ea6180853b087f77169f44ce726a508",
            "0112effa2d2e2137b08b3c64dc47b4b7414fce9e",
            "07a9a4aa4cb78ad716d55db5beffd7f2dbe1cbcc",
            "aa1b95b2858ddc7a2f1f1ae07000cfe478f6e340",
            "f2a6f752f9e76e9eb89a6b535e2f1eed0cbc66da",
            "f35aafc453b09e9331d2d12fc982a7cbed35727d",
            "595e248d0958c00e83cb28f136a2a54772772b50"
        ],
        "matched": [
            "595e248d0958c00e83cb28f136a2a54772772b50"
        ]
    },
    {
        "repo_name": "HubSpot/jinjava",
        "CVE_ID": "CVE-2020-12668",
        "Problem_Type": "CWE-863",
        "Description": "Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.",
        "URL": "https://github.com/HubSpot/jinjava/pull/435/commits/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
        "inducing_commit_hash_pyszz": [
            "f94ed04b0d1656d700e432d4256c7c16650aefdb"
        ],
        "inducing_commit_hash_pd": [
            "f94ed04b0d1656d700e432d4256c7c16650aefdb"
        ],
        "matched": [
            "f94ed04b0d1656d700e432d4256c7c16650aefdb"
        ]
    },
    {
        "repo_name": "HubSpot/jinjava",
        "CVE_ID": "CVE-2020-12668",
        "Problem_Type": "CWE-863",
        "Description": "Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.",
        "URL": "https://github.com/HubSpot/jinjava/pull/426/commits/5dfa5b87318744a4d020b66d5f7747acc36b213b",
        "Tag": "['Patch', 'Permissions Required', 'Third Party Advisory']",
        "fix_commit_hash": "5dfa5b87318744a4d020b66d5f7747acc36b213b",
        "inducing_commit_hash_pyszz": [
            "1b78456f07f9c9530adea1723b09179ab9b0b9d2"
        ],
        "inducing_commit_hash_pd": [
            "1b78456f07f9c9530adea1723b09179ab9b0b9d2"
        ],
        "matched": [
            "1b78456f07f9c9530adea1723b09179ab9b0b9d2"
        ]
    },
    {
        "repo_name": "HumanSignal/label-studio",
        "CVE_ID": "CVE-2023-43791",
        "Problem_Type": "CWE-200",
        "Description": "Label Studio is a multi-type data labeling and annotation tool with standardized output format. There is a vulnerability that can be chained within the ORM Leak vulnerability to impersonate any account on Label Studio. An attacker could exploit these vulnerabilities to escalate their privileges from a low privilege user to a Django Super Administrator user. The vulnerability was found to affect versions before `1.8.2`, where a patch was introduced.",
        "URL": "https://github.com/HumanSignal/label-studio/pull/4690",
        "Tag": "['Patch']",
        "fix_commit_hash": "3d06c5131c15600621e08b06f07d976887cde81b",
        "inducing_commit_hash_pyszz": [
            "2792d4de77b8d3a21898335aadea6913cd897b10"
        ],
        "inducing_commit_hash_pd": [
            "6ec1e79e0ff5b6b3fc033d00dad5ccb6b9f014b4",
            "2792d4de77b8d3a21898335aadea6913cd897b10"
        ],
        "matched": [
            "2792d4de77b8d3a21898335aadea6913cd897b10"
        ]
    },
    {
        "repo_name": "humhub/humhub",
        "CVE_ID": "CVE-2021-43847",
        "Problem_Type": "CWE-862",
        "Description": "HumHub is an open-source social network kit written in PHP. Prior to HumHub version 1.10.3 or 1.9.3, it could be possible for registered users to become unauthorized members of private Spaces. Versions 1.10.3 and 1.9.3 contain a patch for this issue.",
        "URL": "https://github.com/humhub/humhub/pull/5473",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "46004a8670b5cbe1a6988d016a6f90b621422f7b",
        "inducing_commit_hash_pyszz": [
            "ad7b86a557a6a4c9beda30519a5790508603393e"
        ],
        "inducing_commit_hash_pd": [
            "10a21e4a5c172416a09fbfc03e0b2f73ca25e728",
            "062d230d52e829320934ec317c08552fb690dd29",
            "501cd6181b29ea03b8832f7be6efec8f1c5b00fa",
            "7dc71f8bbe1c4a1f3259f53e3d6a9249f2085d3e",
            "ad7b86a557a6a4c9beda30519a5790508603393e"
        ],
        "matched": [
            "ad7b86a557a6a4c9beda30519a5790508603393e"
        ]
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-29374",
        "Problem_Type": "CWE-74",
        "Description": "In LangChain through 0.0.131, the LLMMathChain chain allows prompt injection attacks that can execute arbitrary code via the Python exec method.",
        "URL": "https://github.com/hwchase17/langchain/pull/1119",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-36189",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in langchain before v0.0.247 allows a remote attacker to obtain sensitive information via the SQLDatabaseChain component.",
        "URL": "https://github.com/hwchase17/langchain/pull/6051",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hyperledger/besu",
        "CVE_ID": "CVE-2021-21369",
        "Problem_Type": "CWE-400",
        "Description": "Hyperledger Besu is an open-source, MainNet compatible, Ethereum client written in Java. In Besu before version 1.5.1 there is a denial-of-service vulnerability involving the HTTP JSON-RPC API service. If username and password authentication is enabled for the HTTP JSON-RPC API service, then prior to making any requests to an API endpoint the requestor must use the login endpoint to obtain a JSON web token (JWT) using their credentials. A single user can readily overload the login endpoint with invalid requests (incorrect password). As the supplied password is checked for validity on the main vertx event loop and takes a relatively long time this can cause the processing of other valid requests to fail. A valid username is required for this vulnerability to be exposed. This has been fixed in version 1.5.1.",
        "URL": "https://github.com/hyperledger/besu/pull/1144",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "06e35a58c07a30c0fbdc0aae45a3e8b06b53c022",
        "inducing_commit_hash_pyszz": [
            "5597214e2943d41a1ae6148712b6bde116ac760d"
        ],
        "inducing_commit_hash_pd": [
            "9d69c8eaf142da9d2334e8ebe486e85974e5dfe2",
            "5597214e2943d41a1ae6148712b6bde116ac760d"
        ],
        "matched": [
            "5597214e2943d41a1ae6148712b6bde116ac760d"
        ]
    },
    {
        "repo_name": "hyperledger/besu",
        "CVE_ID": "CVE-2021-41272",
        "Problem_Type": "CWE-681",
        "Description": "Besu is an Ethereum client written in Java. Starting in version 21.10.0, changes in the implementation of the SHL, SHR, and SAR operations resulted in the introduction of a signed type coercion error in values that represent negative values for 32 bit signed integers. Smart contracts that ask for shifts between approximately 2 billion and 4 billion bits (nonsensical but valid values for the operation) will fail to execute and hence fail to validate. In networks where vulnerable versions are mining with other clients or non-vulnerable versions this will result in a fork and the relevant transactions will not be included in the fork. In networks where vulnerable versions are not mining (such as Rinkeby) no fork will result and the validator nodes will stop accepting blocks. In networks where only vulnerable versions are mining the relevant transaction will not be included in any blocks. When the network adds a non-vulnerable version the network will act as in the first case. Besu 21.10.2 contains a patch for this issue. Besu 21.7.4 is not vulnerable and clients can roll back to that version. There is a workaround available: Once a transaction with the relevant shift operations is included in the canonical chain, the only remediation is to make sure all nodes are on non-vulnerable versions.",
        "URL": "https://github.com/hyperledger/besu/pull/3039",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4170524ac3b45185704fcfbdeeb71b0b05dfa0a1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2415000caffda1cae0924d4e301b682e4774456c"
        ],
        "matched": [
            "2415000caffda1cae0924d4e301b682e4774456c"
        ]
    },
    {
        "repo_name": "hyperledger/fabric",
        "CVE_ID": "CVE-2021-43669",
        "Problem_Type": "CWE-444",
        "Description": "A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.0.1, v2.3.0. It can easily break down as many orderers as the attacker wants. This bug can be leveraged by constructing a message whose header is invalid to the interface Order. This bug has been admitted and fixed by the developers of Fabric.",
        "URL": "https://github.com/hyperledger/fabric/pull/2828",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "497a177ffb818ed8f75578cb55a65ba2224a85ea",
        "inducing_commit_hash_pyszz": [
            "5a515341853a053d0299960a6d1b33efee25b85d"
        ],
        "inducing_commit_hash_pd": [
            "7f12d1b3ae31bc6f76b8aba376afeaca93e5b345",
            "5a515341853a053d0299960a6d1b33efee25b85d",
            "15e6707586f5482bae6ce58f97c50ef2797008ec"
        ],
        "matched": [
            "5a515341853a053d0299960a6d1b33efee25b85d"
        ]
    },
    {
        "repo_name": "hyperledger/fabric",
        "CVE_ID": "CVE-2022-36023",
        "Problem_Type": "CWE-20",
        "Description": "Hyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. If a gateway client application sends a malformed request to a gateway peer it may crash the peer node. Version 2.4.6 checks for the malformed gateway request and returns an error to the gateway client. There are no known workarounds, users must upgrade to version 2.4.6.",
        "URL": "https://github.com/hyperledger/fabric/pull/3572",
        "Tag": "['Patch']",
        "fix_commit_hash": "7478f5381ae1655ca608fe5ca90920ab6fc4caba",
        "inducing_commit_hash_pyszz": [
            "dfaa16476e1ae7a180b689cb9b45675b700d36b2"
        ],
        "inducing_commit_hash_pd": [
            "dfaa16476e1ae7a180b689cb9b45675b700d36b2"
        ],
        "matched": [
            "dfaa16476e1ae7a180b689cb9b45675b700d36b2"
        ]
    },
    {
        "repo_name": "hyperledger/fabric",
        "CVE_ID": "CVE-2022-36023",
        "Problem_Type": "CWE-20",
        "Description": "Hyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. If a gateway client application sends a malformed request to a gateway peer it may crash the peer node. Version 2.4.6 checks for the malformed gateway request and returns an error to the gateway client. There are no known workarounds, users must upgrade to version 2.4.6.",
        "URL": "https://github.com/hyperledger/fabric/pull/3577",
        "Tag": "['Patch']",
        "fix_commit_hash": "468332ca3da1d7a37b0b5bcc749d0f4db718e46c",
        "inducing_commit_hash_pyszz": [
            "7c12fa69f88218eb2cbca1cb0afccdaf179b89ab"
        ],
        "inducing_commit_hash_pd": [
            "7c12fa69f88218eb2cbca1cb0afccdaf179b89ab"
        ],
        "matched": [
            "7c12fa69f88218eb2cbca1cb0afccdaf179b89ab"
        ]
    },
    {
        "repo_name": "hyperledger/fabric",
        "CVE_ID": "CVE-2022-36023",
        "Problem_Type": "CWE-20",
        "Description": "Hyperledger Fabric is an enterprise-grade permissioned distributed ledger framework for developing solutions and applications. If a gateway client application sends a malformed request to a gateway peer it may crash the peer node. Version 2.4.6 checks for the malformed gateway request and returns an error to the gateway client. There are no known workarounds, users must upgrade to version 2.4.6.",
        "URL": "https://github.com/hyperledger/fabric/pull/3576",
        "Tag": "['Patch']",
        "fix_commit_hash": "86faa2ee568e1ec2d39b6692cd5bb0938a780851",
        "inducing_commit_hash_pyszz": [
            "958fec433fc9e00f7e27b4a5130392d402afdacb"
        ],
        "inducing_commit_hash_pd": [
            "958fec433fc9e00f7e27b4a5130392d402afdacb"
        ],
        "matched": [
            "958fec433fc9e00f7e27b4a5130392d402afdacb"
        ]
    },
    {
        "repo_name": "i18next/i18next",
        "CVE_ID": "CVE-2017-16008",
        "Problem_Type": "CWE-79",
        "Description": "i18next is a language translation framework. Because of how the interpolation is implemented, making replacements from the dictionary one at a time, untrusted user input can use the name of one of the dictionary keys to inject script into the browser. This affects i18next <=1.10.2.",
        "URL": "https://github.com/i18next/i18next/pull/443",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Icinga/icinga2",
        "CVE_ID": "CVE-2020-14004",
        "Problem_Type": "CWE-59",
        "Description": "An issue was discovered in Icinga2 before v2.12.0-rc1. The prepare-dirs script (run as part of the icinga2 systemd service) executes chmod 2750 /run/icinga2/cmd. /run/icinga2 is under control of an unprivileged user by default. If /run/icinga2/cmd is a symlink, then it will by followed and arbitrary files can be changed to mode 2750 by the unprivileged icinga2 user.",
        "URL": "https://github.com/Icinga/icinga2/pull/8045/commits/2f0f2e8c355b75fa4407d23f85feea037d2bc4b6",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f0f2e8c355b75fa4407d23f85feea037d2bc4b6",
        "inducing_commit_hash_pyszz": [
            "88f77f9f8dad7dfae3df60f282f2f358409e0e56"
        ],
        "inducing_commit_hash_pd": [
            "9fbc40615a747b2d5236ed499b0eca9c6d24e2ef"
        ],
        "matched": [
            "88f77f9f8dad7dfae3df60f282f2f358409e0e56"
        ]
    },
    {
        "repo_name": "icplayer/icplayer",
        "CVE_ID": "CVE-2022-4928",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in icplayer up to 0.819. It has been declared as problematic. Affected by this vulnerability is the function AddonText_Selection_create of the file addons/Text_Selection/src/presenter.js. The manipulation leads to cross site scripting. The attack can be launched remotely. Upgrading to version 0.820 is able to address this issue. The identifier of the patch is 2223628e6db1df73f6d633d2c0422d995990f0a3. It is recommended to upgrade the affected component. The identifier VDB-222289 was assigned to this vulnerability.",
        "URL": "https://github.com/icplayer/icplayer/pull/881",
        "Tag": "['Patch']",
        "fix_commit_hash": "2223628e6db1df73f6d633d2c0422d995990f0a3",
        "inducing_commit_hash_pyszz": [
            "6b0cc5a567c5a3e5f2aa62e9ab3a0dacc464f388"
        ],
        "inducing_commit_hash_pd": [
            "6b0cc5a567c5a3e5f2aa62e9ab3a0dacc464f388"
        ],
        "matched": [
            "6b0cc5a567c5a3e5f2aa62e9ab3a0dacc464f388"
        ]
    },
    {
        "repo_name": "icplayer/icplayer",
        "CVE_ID": "CVE-2022-4929",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in icplayer up to 0.818. It has been rated as problematic. Affected by this issue is some unknown functionality of the file addons/Commons/src/tts-utils.js. The manipulation leads to cross site scripting. The attack may be launched remotely. Upgrading to version 0.819 is able to address this issue. The patch is identified as fa785969f213c76384f1fe67d47b17d57fcc60c8. It is recommended to upgrade the affected component. VDB-222290 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/icplayer/icplayer/pull/885",
        "Tag": "['Patch']",
        "fix_commit_hash": "fa785969f213c76384f1fe67d47b17d57fcc60c8",
        "inducing_commit_hash_pyszz": [
            "bfe86f1faf9841e8a15eba5068119986cf88fded"
        ],
        "inducing_commit_hash_pd": [
            "bfe86f1faf9841e8a15eba5068119986cf88fded",
            "82ddad3807d4db15c8f6cb8d039117fb951c23e9"
        ],
        "matched": [
            "bfe86f1faf9841e8a15eba5068119986cf88fded"
        ]
    },
    {
        "repo_name": "ignacionelson/ProjectSend",
        "CVE_ID": "CVE-2017-9783",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site scripting (XSS) vulnerability in ProjectSend (formerly cFTP) before commit 6c3710430be26feb5371cb0377e5355d6f9a27ca allows remote attackers to inject arbitrary web script or HTML via the Description field in a Site name updated.",
        "URL": "https://github.com/ignacionelson/ProjectSend/pull/448/commits/6c3710430be26feb5371cb0377e5355d6f9a27ca",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6c3710430be26feb5371cb0377e5355d6f9a27ca",
        "inducing_commit_hash_pyszz": [
            "97abd7acfca7787befec4af7bbfacf1a59d40bd8"
        ],
        "inducing_commit_hash_pd": [
            "cc9d71f91b5c93dc2e87d18cc3d4e52ce068acbc",
            "97abd7acfca7787befec4af7bbfacf1a59d40bd8",
            "4002852814615282db5562557e6b86ee763e0779",
            "d4d4b0366677ab7e46a6abb2ddc29c8f4899f735",
            "4fded17043960e1dd4e1162e08788b8a2fd1f32a"
        ],
        "matched": [
            "97abd7acfca7787befec4af7bbfacf1a59d40bd8"
        ]
    },
    {
        "repo_name": "ignacionelson/ProjectSend",
        "CVE_ID": "CVE-2017-9786",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site scripting (XSS) vulnerability in ProjectSend (formerly cFTP) before commit 6c3710430be26feb5371cb0377e5355d6f9a27ca allows remote attackers to inject arbitrary web script or HTML via the Description field in My account Name updated, related to home.php and actions-log.php.",
        "URL": "https://github.com/ignacionelson/ProjectSend/pull/448/commits/6c3710430be26feb5371cb0377e5355d6f9a27ca",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6c3710430be26feb5371cb0377e5355d6f9a27ca",
        "inducing_commit_hash_pyszz": [
            "97abd7acfca7787befec4af7bbfacf1a59d40bd8"
        ],
        "inducing_commit_hash_pd": [
            "cc9d71f91b5c93dc2e87d18cc3d4e52ce068acbc",
            "97abd7acfca7787befec4af7bbfacf1a59d40bd8",
            "4002852814615282db5562557e6b86ee763e0779",
            "d4d4b0366677ab7e46a6abb2ddc29c8f4899f735",
            "4fded17043960e1dd4e1162e08788b8a2fd1f32a"
        ],
        "matched": [
            "97abd7acfca7787befec4af7bbfacf1a59d40bd8"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2017-6498",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in ImageMagick 6.9.7. Incorrect TGA files could trigger assertion failures, thus leading to DoS.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/359",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6e338677f5cd7c08b6fc5b319121909f70c19ab2",
        "inducing_commit_hash_pyszz": [
            "dfc3f8522077b58965f6c51d6498e90269e9b306"
        ],
        "inducing_commit_hash_pd": [
            "dfc3f8522077b58965f6c51d6498e90269e9b306",
            "d15e65928aec551b7388c2863de3e3e628e2e0dd",
            "75652a86d1cd6e8bdd2967145fcd003415004219",
            "3ed852eea50f9d4cd633efb8c2b054b8e33c2530"
        ],
        "matched": [
            "dfc3f8522077b58965f6c51d6498e90269e9b306"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2021-20224",
        "Problem_Type": "CWE-190",
        "Description": "An integer overflow issue was discovered in ImageMagick's ExportIndexQuantum() function in MagickCore/quantum-export.c. Function calls to GetPixelIndex() could result in values outside the range of representable for the 'unsigned char'. When ImageMagick processes a crafted pdf file, this could lead to an undefined behaviour or a crash.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/3083",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5af1dffa4b6ab984b5f13d1e91c95760d75f12a6",
        "inducing_commit_hash_pyszz": [
            "4144316467e5179b6883175ed26390e0d3e4740e"
        ],
        "inducing_commit_hash_pd": [
            "0897d38090922ca628fa87157844e3ee0ca07911"
        ],
        "matched": [
            "4144316467e5179b6883175ed26390e0d3e4740e"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2021-20241",
        "Problem_Type": "CWE-369",
        "Description": "A flaw was found in ImageMagick in coders/jp2.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/3177",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dd33b451c3e01098efad34bbaca2df78d5391dc8",
        "inducing_commit_hash_pyszz": [
            "3b640fe92ff4b82f8d746c0b4528e6ee15ed4036"
        ],
        "inducing_commit_hash_pd": [
            "7ea349614d7582d3c7e54afc52360d8db73a8f67",
            "3b640fe92ff4b82f8d746c0b4528e6ee15ed4036"
        ],
        "matched": [
            "3b640fe92ff4b82f8d746c0b4528e6ee15ed4036"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2021-20243",
        "Problem_Type": "CWE-369",
        "Description": "A flaw was found in ImageMagick in MagickCore/resize.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/3193",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9751bd619872c8e58609fbed56c4827afa083b40",
        "inducing_commit_hash_pyszz": [
            "55f12332d86879f45cccbe83c5363a2708641d90"
        ],
        "inducing_commit_hash_pd": [
            "55f12332d86879f45cccbe83c5363a2708641d90"
        ],
        "matched": [
            "55f12332d86879f45cccbe83c5363a2708641d90"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2021-20244",
        "Problem_Type": "CWE-369",
        "Description": "A flaw was found in ImageMagick in MagickCore/visual-effects.c. An attacker who submits a crafted file that is processed by ImageMagick could trigger undefined behavior in the form of math division by zero. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/3194",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "329dd528ab79531d884c0ba131e97d43f872ab5d",
        "inducing_commit_hash_pyszz": [
            "49c62c55356dd8019f96d3d9de258f3b993c806f"
        ],
        "inducing_commit_hash_pd": [
            "d2f2234b01c052dc67f969b7f3d9ae25187c9330"
        ],
        "matched": [
            "49c62c55356dd8019f96d3d9de258f3b993c806f"
        ]
    },
    {
        "repo_name": "indexzero/nconf",
        "CVE_ID": "CVE-2022-21803",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
        "URL": "https://github.com/indexzero/nconf/pull/397",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "feaba562b812b21215897f71b0c8b3bf39cf8d7d",
        "inducing_commit_hash_pyszz": [
            "4459ba54a1eb7eb5aadbeeada9ced59637122e82"
        ],
        "inducing_commit_hash_pd": [
            "4459ba54a1eb7eb5aadbeeada9ced59637122e82"
        ],
        "matched": [
            "4459ba54a1eb7eb5aadbeeada9ced59637122e82"
        ]
    },
    {
        "repo_name": "infinispan/infinispan",
        "CVE_ID": "CVE-2016-0750",
        "Problem_Type": "CWE-502",
        "Description": "The hotrod java client in infinispan before 9.1.0.Final automatically deserializes bytearray message contents in certain events. A malicious user could exploit this flaw by injecting a specially-crafted serialized object to attain remote code execution or conduct other attacks.",
        "URL": "https://github.com/infinispan/infinispan/pull/5116",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f2989a9b7b5ef2d3be690250d9d1bc7b2fa045d7",
        "inducing_commit_hash_pyszz": [
            "d4b2300bb8f8ae14106c6435601601134e37bc78"
        ],
        "inducing_commit_hash_pd": [
            "fd9410e09233baaab91861b96d1210bd4c6728ad",
            "a9b80405f959be819d3452201005d376626463cc",
            "d4b2300bb8f8ae14106c6435601601134e37bc78",
            "e9c34c79a6877fb3a7588024b263b487b73f86e2",
            "429413e256bf7a7288421321d709289427050699",
            "916891c2f3dc71af9e96b781bda7a02e54b6b173",
            "4f1c679f11b91e26db66f8833cda0282db67f9c5",
            "7eede262c65d9dd824306b15b93b0be635915fea",
            "607037033a10baa673a7887b3a85bfec9e382b50",
            "30d7e19bb2fdd3fd2937f56a86b8fc25a55692dc",
            "fdc6d3cfe039c1e731525ed3a2faa7d2ce4abec9",
            "94ed4efd854ea20b0efd839b5642ee9ca5b0edae",
            "66275c08559d7962e1594dbddd9958d6ff9927f5",
            "8cdb21f933988f97249c072246f039256c42793f"
        ],
        "matched": [
            "d4b2300bb8f8ae14106c6435601601134e37bc78"
        ]
    },
    {
        "repo_name": "infinispan/infinispan",
        "CVE_ID": "CVE-2017-15089",
        "Problem_Type": "CWE-502",
        "Description": "It was found that the Hotrod client in Infinispan before 9.2.0.CR1 would unsafely read deserialized data on information from the cache. An authenticated attacker could inject a malicious object into the data cache and attain deserialization on the client, and possibly conduct further attacks.",
        "URL": "https://github.com/infinispan/infinispan/pull/5639",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2944b0d1369a230bde88392b222921537c99331e",
        "inducing_commit_hash_pyszz": [
            "2372aa3fc98cac5ca703ae3047ade4f6e12ff982"
        ],
        "inducing_commit_hash_pd": [
            "f2989a9b7b5ef2d3be690250d9d1bc7b2fa045d7",
            "be741c9e7543d053455b2f3dc49a134f8665935c"
        ],
        "matched": [
            "2372aa3fc98cac5ca703ae3047ade4f6e12ff982"
        ]
    },
    {
        "repo_name": "infinispan/infinispan",
        "CVE_ID": "CVE-2017-2638",
        "Problem_Type": "CWE-287",
        "Description": "It was found that the REST API in Infinispan before version 9.0.0 did not properly enforce auth constraints. An attacker could use this vulnerability to read or modify data in the default cache or a known cache name.",
        "URL": "https://github.com/infinispan/infinispan/pull/4936/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f2d54c4ecb75c7264d4160ca7c461135712201a9",
        "inducing_commit_hash_pyszz": [
            "f727ba69f26e068801b7811cab3a307f9578d9bc"
        ],
        "inducing_commit_hash_pd": [
            "e4c61c1c92bab14500b0b8ef42411d9bbec96bc3",
            "08dcfc3f54efbefc650ad5f675195ffdbf022192",
            "1fdfb14b281bd5bc2fe69089c597c8665331827b",
            "ea6186fc66f86cc3758d9b2afe7a1f13b55e3004",
            "8470002a83d878d50c5c43179c7e70815bb8c6ae",
            "a4d8b50522661759b9521f87d1492664178edf7c",
            "dae53c34e9eba393c68babbde1a362f1388b1c83",
            "7d500e7b580907ececec2f6b06754800e2a420f6",
            "a479fbce4f5fa70e30e95ee83cc7a4860f12b6e1",
            "a3379d67aabaec36907165868b63f9d0794936fb",
            "840603f6530e12a9da9df429b3b9b9c4bed19236",
            "e81d358351d5ab2a1abbb34b4638a7358e7b5cec",
            "162e36fff4c829c7369e69f629d47194e44d6c20",
            "56e2a66506cb327df308c076f44712095f432d75",
            "f7cee30a943e3b11d76be719784591ace06062a6",
            "fd680cb36b6559633700509b62f53f2919a9c6de",
            "f727ba69f26e068801b7811cab3a307f9578d9bc",
            "2eb84c2824d82530e508b2063409b1d22225772d",
            "01e5f777d6afb20c09dd2c82ac11370164d22b62",
            "c2e5d935863fbc85214987e90ec7f2762cf99297",
            "8e986e471b983440c39e29cb765b3446c42896e3",
            "43edda65955d0dd6d43f499a467fd5d8338715cb",
            "4878cea6e91c8c5532157bd3123c33b88f866ec6"
        ],
        "matched": [
            "f727ba69f26e068801b7811cab3a307f9578d9bc"
        ]
    },
    {
        "repo_name": "Inner-Heaven/libzetta-rs",
        "CVE_ID": "CVE-2019-15787",
        "Problem_Type": "CWE-190",
        "Description": "libZetta.rs through 0.1.2 has an integer overflow in the zpool parser (for error stats) that leads to a panic.",
        "URL": "https://github.com/Inner-Heaven/libzetta-rs/pull/89",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dd0da1bd625009979e40aac85917fdaa1e99ba75",
        "inducing_commit_hash_pyszz": [
            "e5ea7ea0415faa55bacfda144431f687cf621f5c"
        ],
        "inducing_commit_hash_pd": [
            "e5ea7ea0415faa55bacfda144431f687cf621f5c"
        ],
        "matched": [
            "e5ea7ea0415faa55bacfda144431f687cf621f5c"
        ]
    },
    {
        "repo_name": "IntellectualSites/FastAsyncWorldEdit",
        "CVE_ID": "CVE-2023-35925",
        "Problem_Type": "CWE-400",
        "Description": "FastAsyncWorldEdit (FAWE) is designed for efficient world editing. This vulnerability enables the attacker to select a region with the `Infinity` keyword (case-sensitive!) and executes any operation. This has a possibility of bringing the performing server down. This issue has been fixed in version 2.6.3.",
        "URL": "https://github.com/IntellectualSites/FastAsyncWorldEdit/pull/2285",
        "Tag": "['Patch']",
        "fix_commit_hash": "e449910af5855b69b04024234272a9176ead7eea",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "df9e9e510a728ff3daa253bdfe690a204d356101"
        ],
        "matched": [
            "df9e9e510a728ff3daa253bdfe690a204d356101"
        ]
    },
    {
        "repo_name": "intelliants/subrion",
        "CVE_ID": "CVE-2018-14835",
        "Problem_Type": "CWE-79",
        "Description": "Subrion CMS v4.2.1 is vulnerable to Stored XSS because of no escaping added to the tooltip information being displayed in multiple areas.",
        "URL": "https://github.com/intelliants/subrion/pull/763/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "deaa969d959b40fb1cdf2c8d762a29b81152345c",
        "inducing_commit_hash_pyszz": [
            "a33a224c6c9e25144d828f92f6141c719215094b"
        ],
        "inducing_commit_hash_pd": [
            "a33a224c6c9e25144d828f92f6141c719215094b"
        ],
        "matched": [
            "a33a224c6c9e25144d828f92f6141c719215094b"
        ]
    },
    {
        "repo_name": "InternationalScratchWiki/mediawiki-scratch-login",
        "CVE_ID": "CVE-2022-42985",
        "Problem_Type": "CWE-79",
        "Description": "The ScratchLogin extension through 1.1 for MediaWiki does not escape verification failure messages, which allows users with administrator privileges to perform cross-site scripting (XSS).",
        "URL": "https://github.com/InternationalScratchWiki/mediawiki-scratch-login/pull/22",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "34bb82f6ce74d519eb15a7060eec06bf670831bb",
        "inducing_commit_hash_pyszz": [
            "4d2c1229b558b9cd685961274f20b621d114f4db"
        ],
        "inducing_commit_hash_pd": [
            "aa49f54c04c994991c911f7d885431641bdbf05d",
            "64b2eda253216d4cbfab6a2b940a24e9e113ac36",
            "1b25429bed91b660d109d58e924882ba141a980c",
            "4d2c1229b558b9cd685961274f20b621d114f4db",
            "69f0fd8dda0d6b5b404c13996782bea7dbee4b05",
            "dd752f1187f49c145b97f74bf6214a72235235df"
        ],
        "matched": [
            "4d2c1229b558b9cd685961274f20b621d114f4db"
        ]
    },
    {
        "repo_name": "InternationalScratchWiki/scratch-confirmaccount-v3",
        "CVE_ID": "CVE-2021-46252",
        "Problem_Type": "CWE-352",
        "Description": "A Cross-Site Request Forgery (CSRF) in RequirementsBypassPage.php of Scratch Wiki scratch-confirmaccount-v3 allows attackers to modify account request requirement bypasses.",
        "URL": "https://github.com/InternationalScratchWiki/scratch-confirmaccount-v3/pull/155",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5ed5479de0a279377aa9f64362481efb4e75d8f9",
        "inducing_commit_hash_pyszz": [
            "cfab89ba9d4810a24248ab368a1a8f64cf9fea72"
        ],
        "inducing_commit_hash_pd": [
            "cfab89ba9d4810a24248ab368a1a8f64cf9fea72"
        ],
        "matched": [
            "cfab89ba9d4810a24248ab368a1a8f64cf9fea72"
        ]
    },
    {
        "repo_name": "internetarchive/infogami",
        "CVE_ID": "CVE-2022-32159",
        "Problem_Type": "CWE-79",
        "Description": "In openlibrary versions deploy-2016-07-0 through deploy-2021-12-22 are vulnerable to Stored XSS.",
        "URL": "https://github.com/internetarchive/infogami/pull/195/commits/ccc2141c5fb093870c9e2742c01336ecca8cd12e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ccc2141c5fb093870c9e2742c01336ecca8cd12e",
        "inducing_commit_hash_pyszz": [
            "b6cc011712d2cd91ca4f0a354b419625e4669a33"
        ],
        "inducing_commit_hash_pd": [
            "c3e34c27c829665be8c3103ef30eca8da72dfd5a",
            "b6cc011712d2cd91ca4f0a354b419625e4669a33",
            "af0a49cd43a0c958538b87bca9d059128f6a24d4",
            "7b6e410bf64f21b9139565f36c74a3247a12c2b1"
        ],
        "matched": [
            "b6cc011712d2cd91ca4f0a354b419625e4669a33"
        ]
    },
    {
        "repo_name": "internetarchive/openlibrary",
        "CVE_ID": "CVE-2022-23081",
        "Problem_Type": "CWE-79",
        "Description": "In openlibrary versions deploy-2016-07-0 through deploy-2021-12-22 are vulnerable to Reflected XSS.",
        "URL": "https://github.com/internetarchive/openlibrary/pull/6597/commits/5460c8e8b517ef83c6a3b33654ba43ef0cbf051e",
        "Tag": "['Patch']",
        "fix_commit_hash": "5460c8e8b517ef83c6a3b33654ba43ef0cbf051e",
        "inducing_commit_hash_pyszz": [
            "4ffb20bc05066a9b5e44ded102a2ace848427400"
        ],
        "inducing_commit_hash_pd": [
            "b753884872f93ef6b969dd7fca909b6915e65afa",
            "23eb5c7f36b3df1249dc7708b0778c8d5bfb3a51",
            "7ee6c7a9f273f4a416ee182260d9514da5bb7748",
            "3af86d830db97063166b66fbb15edfe2fddfbe70",
            "d78592844f0669b3e38352747129d50416bfa214",
            "6cb9cd2ea86b2acdd9a89cf90e2fd77a536456c5",
            "e51868564ec234f70960cdc44223ca84ba0fb774",
            "4ffb20bc05066a9b5e44ded102a2ace848427400",
            "a5dc29730a5f98c364615bda2a37cf8791be81c5",
            "44ca644958411d60a595e16da26595db26f7208f"
        ],
        "matched": [
            "4ffb20bc05066a9b5e44ded102a2ace848427400"
        ]
    },
    {
        "repo_name": "inunosinsi/soycms",
        "CVE_ID": "CVE-2020-15182",
        "Problem_Type": "CWE-352",
        "Description": "The SOY Inquiry component of SOY CMS is affected by Cross-site Request Forgery (CSRF) and Remote Code Execution (RCE). The vulnerability affects versions 2.0.0.3 and earlier of SOY Inquiry. This allows remote attackers to force the administrator to edit files once the administrator loads a specially crafted webpage. An administrator must be logged in for exploitation to be possible. This issue is fixed in SOY Inquiry version 2.0.0.4 and included in SOY CMS 3.0.2.328.",
        "URL": "https://github.com/inunosinsi/soycms/pull/15",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "inunosinsi/soycms",
        "CVE_ID": "CVE-2020-15188",
        "Problem_Type": "CWE-502",
        "Description": "SOY CMS 3.0.2.327 and earlier is affected by Unauthenticated Remote Code Execution (RCE). The allows remote attackers to execute any arbitrary code when the inquiry form feature is enabled by the service. The vulnerability is caused by unserializing the form without any restrictions. This was fixed in 3.0.2.328.",
        "URL": "https://github.com/inunosinsi/soycms/pull/12/commits/a75642989132dd25f74a13194b27c0986c3de020",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a75642989132dd25f74a13194b27c0986c3de020",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "0373eb13c47778995ad3097e67873c2e0b5d97e2"
        ],
        "matched": [
            "0373eb13c47778995ad3097e67873c2e0b5d97e2"
        ]
    },
    {
        "repo_name": "inunosinsi/soycms",
        "CVE_ID": "CVE-2020-15189",
        "Problem_Type": "CWE-434",
        "Description": "SOY CMS 3.0.2 and earlier is affected by Remote Code Execution (RCE) using Unrestricted File Upload. Cross-Site Scripting(XSS) vulnerability that was used in CVE-2020-15183 can be used to increase impact by redirecting the administrator to access a specially crafted page. This vulnerability is caused by insecure configuration in elFinder. This is fixed in version 3.0.2.328.",
        "URL": "https://github.com/inunosinsi/soycms/pull/14/commits/e4ef00677ed52f9e5a5fcfcb56b797f5412b5d59",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e4ef00677ed52f9e5a5fcfcb56b797f5412b5d59",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ddcc7aa4639a4ddf2d66a5cec7fda02d9766aa7d"
        ],
        "matched": [
            "ddcc7aa4639a4ddf2d66a5cec7fda02d9766aa7d"
        ]
    },
    {
        "repo_name": "InvoicePlane/InvoicePlane",
        "CVE_ID": "CVE-2017-1000508",
        "Problem_Type": "CWE-79",
        "Description": "Invoice Plane version 1.5.4 and earlier contains a Cross Site Scripting (XSS) vulnerability in Client's details that can result in execution of javascript code . This vulnerability appears to have been fixed in 1.5.5 and later.",
        "URL": "https://github.com/InvoicePlane/InvoicePlane/pull/557/commits/3fc256ccef403f5be9982f02ef340d9e01daabb2",
        "Tag": "['Patch']",
        "fix_commit_hash": "3fc256ccef403f5be9982f02ef340d9e01daabb2",
        "inducing_commit_hash_pyszz": [
            "9315c8f0920be72843c2ff8e25e972717cd3f0d4"
        ],
        "inducing_commit_hash_pd": [
            "ad9c943d3220eb9a8444c60820f3092c78e515d6",
            "9315c8f0920be72843c2ff8e25e972717cd3f0d4"
        ],
        "matched": [
            "9315c8f0920be72843c2ff8e25e972717cd3f0d4"
        ]
    },
    {
        "repo_name": "ipfs/go-merkledag",
        "CVE_ID": "CVE-2022-23495",
        "Problem_Type": "CWE-252",
        "Description": "go-merkledag implements the 'DAGService' interface and adds two ipld node types, Protobuf and Raw for the ipfs project. A `ProtoNode` may be modified in such a way as to cause various encode errors which will trigger a panic on common method calls that don't allow for error returns. A `ProtoNode` should only be able to encode to valid DAG-PB, attempting to encode invalid DAG-PB forms will result in an error from the codec. Manipulation of an existing (newly created or decoded) `ProtoNode` using the modifier methods did not account for certain states that would place the `ProtoNode` into an unencodeable form. Due to conformance with the [`github.com/ipfs/go-block-format#Block`](https://pkg.go.dev/github.com/ipfs/go-block-format#Block) and [`github.com/ipfs/go-ipld-format#Node`](https://pkg.go.dev/github.com/ipfs/go-ipld-format#Node) interfaces, certain methods, which internally require a re-encode if state has changed, will panic due to the inability to return an error. This issue has been addressed across a number of pull requests. Users are advised to upgrade to version 0.8.1 for a complete set of fixes. Users unable to upgrade may attempt to mitigate this issue by sanitising inputs when allowing user-input to set a new `CidBuilder` on a `ProtoNode` and by sanitising `Tsize` (`Link#Size`) values such that they are a reasonable byte-size for sub-DAGs where derived from user-input.\n",
        "URL": "https://github.com/ipfs/go-merkledag/pull/93",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "503ecaa8b898d65ddaee92ba8c6ae60b824004c1",
        "inducing_commit_hash_pyszz": [
            "0e4726d152e088749e0ef7404f44a4217f6f9d92"
        ],
        "inducing_commit_hash_pd": [
            "0e4726d152e088749e0ef7404f44a4217f6f9d92"
        ],
        "matched": [
            "0e4726d152e088749e0ef7404f44a4217f6f9d92"
        ]
    },
    {
        "repo_name": "ipfs/go-merkledag",
        "CVE_ID": "CVE-2022-23495",
        "Problem_Type": "CWE-252",
        "Description": "go-merkledag implements the 'DAGService' interface and adds two ipld node types, Protobuf and Raw for the ipfs project. A `ProtoNode` may be modified in such a way as to cause various encode errors which will trigger a panic on common method calls that don't allow for error returns. A `ProtoNode` should only be able to encode to valid DAG-PB, attempting to encode invalid DAG-PB forms will result in an error from the codec. Manipulation of an existing (newly created or decoded) `ProtoNode` using the modifier methods did not account for certain states that would place the `ProtoNode` into an unencodeable form. Due to conformance with the [`github.com/ipfs/go-block-format#Block`](https://pkg.go.dev/github.com/ipfs/go-block-format#Block) and [`github.com/ipfs/go-ipld-format#Node`](https://pkg.go.dev/github.com/ipfs/go-ipld-format#Node) interfaces, certain methods, which internally require a re-encode if state has changed, will panic due to the inability to return an error. This issue has been addressed across a number of pull requests. Users are advised to upgrade to version 0.8.1 for a complete set of fixes. Users unable to upgrade may attempt to mitigate this issue by sanitising inputs when allowing user-input to set a new `CidBuilder` on a `ProtoNode` and by sanitising `Tsize` (`Link#Size`) values such that they are a reasonable byte-size for sub-DAGs where derived from user-input.\n",
        "URL": "https://github.com/ipfs/go-merkledag/pull/91",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bb220e822546588d78e161591f38ff80613c2c4f",
        "inducing_commit_hash_pyszz": [
            "8b2b3965db21bb5f8f0e577d109472c3c1cab276"
        ],
        "inducing_commit_hash_pd": [
            "d76ea28263c01e3164b39097abc13b6a1a5b8f06",
            "4132fbd13c85bc8f086b587111d5281d692122d0",
            "d95bc83ce83978af36e63d3025048046505b6b57",
            "8b2b3965db21bb5f8f0e577d109472c3c1cab276",
            "3ae708f3e9f85a4daab9622937b3f3f7919611fa",
            "0935a2e862e88aa957e6be4b54a182a64eaf8ad0",
            "3186074653cf48e376405e393dc7ab9fbf731e68",
            "70cb3dd8eaba22c01cb7629c77eae412cc51e311"
        ],
        "matched": [
            "8b2b3965db21bb5f8f0e577d109472c3c1cab276"
        ]
    },
    {
        "repo_name": "ipfs/go-merkledag",
        "CVE_ID": "CVE-2022-23495",
        "Problem_Type": "CWE-252",
        "Description": "go-merkledag implements the 'DAGService' interface and adds two ipld node types, Protobuf and Raw for the ipfs project. A `ProtoNode` may be modified in such a way as to cause various encode errors which will trigger a panic on common method calls that don't allow for error returns. A `ProtoNode` should only be able to encode to valid DAG-PB, attempting to encode invalid DAG-PB forms will result in an error from the codec. Manipulation of an existing (newly created or decoded) `ProtoNode` using the modifier methods did not account for certain states that would place the `ProtoNode` into an unencodeable form. Due to conformance with the [`github.com/ipfs/go-block-format#Block`](https://pkg.go.dev/github.com/ipfs/go-block-format#Block) and [`github.com/ipfs/go-ipld-format#Node`](https://pkg.go.dev/github.com/ipfs/go-ipld-format#Node) interfaces, certain methods, which internally require a re-encode if state has changed, will panic due to the inability to return an error. This issue has been addressed across a number of pull requests. Users are advised to upgrade to version 0.8.1 for a complete set of fixes. Users unable to upgrade may attempt to mitigate this issue by sanitising inputs when allowing user-input to set a new `CidBuilder` on a `ProtoNode` and by sanitising `Tsize` (`Link#Size`) values such that they are a reasonable byte-size for sub-DAGs where derived from user-input.\n",
        "URL": "https://github.com/ipfs/go-merkledag/pull/92",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e4726d152e088749e0ef7404f44a4217f6f9d92",
        "inducing_commit_hash_pyszz": [
            "8335efd4765ed5a512baa7e522c3552d067cf966"
        ],
        "inducing_commit_hash_pd": [
            "8335efd4765ed5a512baa7e522c3552d067cf966"
        ],
        "matched": [
            "8335efd4765ed5a512baa7e522c3552d067cf966"
        ]
    },
    {
        "repo_name": "ipld/go-ipld-prime",
        "CVE_ID": "CVE-2023-22460",
        "Problem_Type": "CWE-20",
        "Description": "go-ipld-prime is an implementation of the InterPlanetary Linked Data (IPLD) spec interfaces, a batteries-included codec implementations of IPLD for CBOR and JSON, and tooling for basic operations on IPLD objects. Encoding data which contains a Bytes kind Node will pass a Bytes token to the JSON encoder which will panic as it doesn't expect to receive Bytes tokens. Such an encode should be treated as an error, as plain JSON should not be able to encode Bytes. This only impacts uses of the `json` codec. `dag-json` is not impacted. Use of `json` as a decoder is not impacted. This issue is fixed in v0.19.0. As a workaround, one may prefer the `dag-json` codec, which has the ability to encode bytes.",
        "URL": "https://github.com/ipld/go-ipld-prime/pull/472",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "146d1c8529676fe9ee0604f014656af2395505fc",
        "inducing_commit_hash_pyszz": [
            "face7e9a3c70aff1194c5c56421dea0929623646"
        ],
        "inducing_commit_hash_pd": [
            "1bfa8fb30b68cc28c8b58a07e384f7f695deb250",
            "10442b3c3ad6c2cbee950cd7e154019b398a5fdd",
            "face7e9a3c70aff1194c5c56421dea0929623646",
            "7aeaa51b73bd8b767715d98b8b11c87ed8f4e1f0",
            "333be0f75cff1967fd9d4ef5840ce7a7b94fdebc",
            "4f9592820c4544b919961cfb8d30fb732e76e349"
        ],
        "matched": [
            "face7e9a3c70aff1194c5c56421dea0929623646"
        ]
    },
    {
        "repo_name": "itext/itext7",
        "CVE_ID": "CVE-2022-24196",
        "Problem_Type": "CWE-770",
        "Description": "iText v7.1.17, up to (exluding)\": 7.1.18 and 7.2.2 was discovered to contain an out-of-memory error via the component readStreamBytesRaw, which allows attackers to cause a Denial of Service (DoS) via a crafted PDF file.",
        "URL": "https://github.com/itext/itext7/pull/78#issuecomment-1089279222",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jaegertracing/jaeger-ui",
        "CVE_ID": "CVE-2023-36656",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulnerability in Jaegertracing Jaeger UI before v.1.31.0 allows a remote attacker to execute arbitrary code via the KeyValuesTable component.",
        "URL": "https://github.com/jaegertracing/jaeger-ui/pull/1498",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "7df099cb5a91c6ce296d234f290823557db9bf2c",
        "inducing_commit_hash_pyszz": [
            "590cf8c28bb7dc4e4308177246cc74c1b217cfd6"
        ],
        "inducing_commit_hash_pd": [
            "ee7ce64f6784e5e00718a58680a43098f83a3c94",
            "2a179bfb1a35bbf2d8f301ac8e2cf29a256d6667",
            "f3ea98b80853a534e1507599f189fbf04ceb8eaf",
            "e31801d1a283cc40b360cfda01e4e061a124c0d8",
            "28aca0ea67fb1e324f57c45b68f9603d5aa8b30b",
            "510f77e2f24ac64ca0f318c2c1b7430eaddfac74",
            "590cf8c28bb7dc4e4308177246cc74c1b217cfd6"
        ],
        "matched": [
            "590cf8c28bb7dc4e4308177246cc74c1b217cfd6"
        ]
    },
    {
        "repo_name": "JamesNK/Newtonsoft.Json",
        "CVE_ID": "CVE-2024-21907",
        "Problem_Type": "CWE-755",
        "Description": "Newtonsoft.Json before version 13.0.1 is affected by a mishandling of exceptional conditions vulnerability. Crafted data that is passed to the JsonConvert.DeserializeObject method may trigger a StackOverflow exception resulting in denial of service. Depending on the usage of the library, an unauthenticated and remote attacker may be able to cause the denial of service condition.\n",
        "URL": "https://github.com/JamesNK/Newtonsoft.Json/pull/2462",
        "Tag": "['Patch']",
        "fix_commit_hash": "7e77bbe1beccceac4fc7b174b53abfefac278b66",
        "inducing_commit_hash_pyszz": [
            "ef18269626606d2173d79ecd4d3173fc8b916563"
        ],
        "inducing_commit_hash_pd": [
            "ef18269626606d2173d79ecd4d3173fc8b916563"
        ],
        "matched": [
            "ef18269626606d2173d79ecd4d3173fc8b916563"
        ]
    },
    {
        "repo_name": "java-decompiler/jd-gui",
        "CVE_ID": "CVE-2023-26235",
        "Problem_Type": "CWE-79",
        "Description": "JD-GUI 1.6.6 allows XSS via util/net/InterProcessCommunicationUtil.java.",
        "URL": "https://github.com/java-decompiler/jd-gui/pull/418",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jc21/nginx-proxy-manager",
        "CVE_ID": "CVE-2019-15517",
        "Problem_Type": "CWE-22",
        "Description": "jc21 Nginx Proxy Manager before 2.0.13 allows %2e%2e%2f directory traversal.",
        "URL": "https://github.com/jc21/nginx-proxy-manager/pull/114",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e7ddcb91fc7a4b2afc314ed3eaceb8da2ed6269f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "80d78cbf2505bf48bfbd05ea8ed6cf8414d8cfa9"
        ],
        "matched": [
            "80d78cbf2505bf48bfbd05ea8ed6cf8414d8cfa9"
        ]
    },
    {
        "repo_name": "jerryscript-project/jerryscript",
        "CVE_ID": "CVE-2020-13991",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "vm/opcodes.c in JerryScript 2.2.0 allows attackers to hijack the flow of control by controlling a register.",
        "URL": "https://github.com/jerryscript-project/jerryscript/pull/3867",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba4e3a402fce722ea752243c60c009307438d97f",
        "inducing_commit_hash_pyszz": [
            "12211d8aaa76716370d0151c4fa9a15f866a5e3f"
        ],
        "inducing_commit_hash_pd": [
            "12211d8aaa76716370d0151c4fa9a15f866a5e3f"
        ],
        "matched": [
            "12211d8aaa76716370d0151c4fa9a15f866a5e3f"
        ]
    },
    {
        "repo_name": "jerryscript-project/jerryscript",
        "CVE_ID": "CVE-2021-41959",
        "Problem_Type": "CWE-401",
        "Description": "JerryScript Git version 14ff5bf does not sufficiently track and release allocated memory via jerry-core/ecma/operations/ecma-regexp-object.c after RegExp, which causes a memory leak.",
        "URL": "https://github.com/jerryscript-project/jerryscript/pull/4787",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f3cd586094d5a1e8a5e4cb43d637d46975e6dc75",
        "inducing_commit_hash_pyszz": [
            "74781c28c28b2357459721cb89f39f6b6d04a7e8"
        ],
        "inducing_commit_hash_pd": [
            "be9dbeffdbd6faa80d1158243e26462bb924a674"
        ],
        "matched": [
            "74781c28c28b2357459721cb89f39f6b6d04a7e8"
        ]
    },
    {
        "repo_name": "jerryscript-project/jerryscript",
        "CVE_ID": "CVE-2021-42863",
        "Problem_Type": "CWE-120",
        "Description": "A buffer overflow in ecma_builtin_typedarray_prototype_filter() in JerryScript version fe3a5c0 allows an attacker to construct a fake object or a fake arraybuffer with unlimited size.",
        "URL": "https://github.com/jerryscript-project/jerryscript/pull/4794",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4e8d6344a8b5cf8f00bd3d5e869147af06d0189e",
        "inducing_commit_hash_pyszz": [
            "91baa17c515cb379379458006b9d870d6f4250ee"
        ],
        "inducing_commit_hash_pd": [
            "91baa17c515cb379379458006b9d870d6f4250ee",
            "42ab0624410dd7b06355f4cd0031fcb3f52e1a3b",
            "750e0ca9d5ce59288683d9c938e74389806ca2c2",
            "c013fade26200181512ebb41fd668bfbec815f28"
        ],
        "matched": [
            "91baa17c515cb379379458006b9d870d6f4250ee"
        ]
    },
    {
        "repo_name": "jitsi/jitsi-meet",
        "CVE_ID": "CVE-2021-39205",
        "Problem_Type": "CWE-79",
        "Description": "Jitsi Meet is an open source video conferencing application. Versions prior to 2.0.6173 are vulnerable to client-side cross-site scripting via injecting properties into JSON objects that were not properly escaped. There are no known incidents related to this vulnerability being exploited in the wild. This issue is fixed in Jitsi Meet version 2.0.6173. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/jitsi/jitsi-meet/pull/9320",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "06ce24527e7f94815738e63f7c572f0dbe6fd6f1",
        "inducing_commit_hash_pyszz": [
            "77ee4b13e1aeac2a03dcf34a2b7f2d3accc8864b"
        ],
        "inducing_commit_hash_pd": [
            "61652c69b3f1205eef66397e02ebce6c61762956",
            "77ee4b13e1aeac2a03dcf34a2b7f2d3accc8864b",
            "4a8f787519b66f6335b2e0e5e8874cdafadf4c2e",
            "158cadf4f906adf8b98ca94f036941a90b992558",
            "07bc70c2f59ebc11781c6e9b98e08fe38edce53b",
            "75fe3e3b9d944ff054752300949e2081d781e5cc",
            "dc6d3daef73b2eda6121feb2728e0796f65aa545",
            "e6f6884c36e6b0d659295c7f4732ee81cfa1c652",
            "d727ee80b2f31344e9d5db75ef469cce94297348",
            "b891a7526d25f2713a896c8d91a6a42d6230b525",
            "57b9954d9cb59da1c4f1efeff4eea5c9d07e6177"
        ],
        "matched": [
            "77ee4b13e1aeac2a03dcf34a2b7f2d3accc8864b"
        ]
    },
    {
        "repo_name": "jitsi/jitsi-meet",
        "CVE_ID": "CVE-2021-39205",
        "Problem_Type": "CWE-79",
        "Description": "Jitsi Meet is an open source video conferencing application. Versions prior to 2.0.6173 are vulnerable to client-side cross-site scripting via injecting properties into JSON objects that were not properly escaped. There are no known incidents related to this vulnerability being exploited in the wild. This issue is fixed in Jitsi Meet version 2.0.6173. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/jitsi/jitsi-meet/pull/9404",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "be73ed9d191c74b7f57d3124b4bc45a50ec55dd8",
        "inducing_commit_hash_pyszz": [
            "06ce24527e7f94815738e63f7c572f0dbe6fd6f1"
        ],
        "inducing_commit_hash_pd": [
            "06ce24527e7f94815738e63f7c572f0dbe6fd6f1"
        ],
        "matched": [
            "06ce24527e7f94815738e63f7c572f0dbe6fd6f1"
        ]
    },
    {
        "repo_name": "joblib/joblib",
        "CVE_ID": "CVE-2022-21797",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package joblib from 0 and before 1.2.0 are vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.",
        "URL": "https://github.com/joblib/joblib/pull/1321",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b90f10efeb670a2cc877fb88ebb3f2019189e059",
        "inducing_commit_hash_pyszz": [
            "3f9d709b0fa39872302d378b64751f8ef625c93c"
        ],
        "inducing_commit_hash_pd": [
            "3f9d709b0fa39872302d378b64751f8ef625c93c",
            "99b44cedef702289cc6e83ece1bed2e6c813dcb2"
        ],
        "matched": [
            "3f9d709b0fa39872302d378b64751f8ef625c93c"
        ]
    },
    {
        "repo_name": "joewalnes/smoothie",
        "CVE_ID": "CVE-2022-25929",
        "Problem_Type": "CWE-79",
        "Description": "The package smoothie from 1.31.0 and before 1.36.1 are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization in strokeStyle and tooltipLabel properties. Exploiting this vulnerability is possible when the user can control these properties.",
        "URL": "https://github.com/joewalnes/smoothie/pull/147",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8e0920d50da82f4b6e605d56f41b69fbb9606a98",
        "inducing_commit_hash_pyszz": [
            "9334ac6cc84a7c9a0b09a6bededc6246df5212ae"
        ],
        "inducing_commit_hash_pd": [
            "9334ac6cc84a7c9a0b09a6bededc6246df5212ae",
            "18155960fee032ea7a7059d08e2667a612dbfd92"
        ],
        "matched": [
            "9334ac6cc84a7c9a0b09a6bededc6246df5212ae"
        ]
    },
    {
        "repo_name": "joniles/mpxj",
        "CVE_ID": "CVE-2020-25020",
        "Problem_Type": "CWE-611",
        "Description": "MPXJ through 8.1.3 allows XXE attacks. This affects the GanttProjectReader and PhoenixReader components.",
        "URL": "https://github.com/joniles/mpxj/pull/178/commits/c3e457f7a16facfe563eade82b0fa8736a8c96f9",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0d830e8cbe5213968abb1bcb1c816ca2ee00aa53",
        "inducing_commit_hash_pyszz": [
            "c7e1d98d8b87eff1a51e8a2d5b853576000ef313"
        ],
        "inducing_commit_hash_pd": [
            "74c61da7e8bf2d25076a36e9059d5c5df5a230a4",
            "491b83fb83aba7663a0a282ab78de270582a82f7",
            "e8515550009f2198000f9797503ccaf0a04341cf",
            "eefb896e0f08484e6ad4b5fe4c9bbcff7734c31f",
            "ebbcbebfc70b2bf02d5c5fb3e90829046c50e5f0",
            "c7e1d98d8b87eff1a51e8a2d5b853576000ef313",
            "675aadcb91e16c6ce5448c75c7efb816bc1e8c21",
            "07ed3322b7a099c8db41b4d54421947c6780a184",
            "52ef7c2f30e2d270b826019c2ed2109ab505acb9",
            "5e152ad67d01a98c5b79cd24630838004f68ab71",
            "ebc01cfc46ed692a8bf04c37e75569fe3ae9edd9",
            "53bbc6d067f5acf8c029f0fe344be18594a7536e",
            "99b49f36ca456c8b7e7d6f89352d84863585a42b",
            "d3e71499cfae7eda71357b7831f3d895e7b34a1a",
            "527ee80ab9614764ba7ccefc0df0db9816f94470",
            "01964f985de89b22df3b79978a4fc39438d6f4e7",
            "ccc5bfbf7e099f07bf7a87f2251be6e3a37f58f2",
            "8703f991ff81cf19eb46e201ae2da7f48575b3a6",
            "7cdb611645a3d63c39119dc944a02c5e4d03c30a",
            "8d388376bf86651b18e7085c821bdd7c8c22b3fa",
            "55dd9b09c9550c113d94981f27cbf2b74be492fe"
        ],
        "matched": [
            "c7e1d98d8b87eff1a51e8a2d5b853576000ef313"
        ]
    },
    {
        "repo_name": "jpeg-js/jpeg-js",
        "CVE_ID": "CVE-2022-25851",
        "Problem_Type": "CWE-835",
        "Description": "The package jpeg-js before 0.4.4 are vulnerable to Denial of Service (DoS) where a particular piece of input will cause to enter an infinite loop and never return.",
        "URL": "https://github.com/jpeg-js/jpeg-js/pull/106/",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
        "inducing_commit_hash_pyszz": [
            "135705b1510afb6cb4275a4655d92c58f6843e79"
        ],
        "inducing_commit_hash_pd": [
            "b743b97af310433c6e652d717190200e63251f69",
            "135705b1510afb6cb4275a4655d92c58f6843e79"
        ],
        "matched": [
            "135705b1510afb6cb4275a4655d92c58f6843e79"
        ]
    },
    {
        "repo_name": "jperelli/osm-static-maps",
        "CVE_ID": "CVE-2020-7749",
        "Problem_Type": "CWE-79",
        "Description": "This affects all versions of package osm-static-maps. User input given to the package is passed directly to a template without escaping ({{{ ... }}}). As such, it is possible for an attacker to inject arbitrary HTML/JS code and depending on the context. It will be outputted as an HTML on the page which gives opportunity for XSS or rendered on the server (puppeteer) which also gives opportunity for SSRF and Local File Read.",
        "URL": "https://github.com/jperelli/osm-static-maps/pull/24",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "97355d29e08753d1cfe99b1281dbaa06f4e651b0",
        "inducing_commit_hash_pyszz": [
            "c764489baa08589d46fb89dc04adb2f4094f7887"
        ],
        "inducing_commit_hash_pd": [
            "c764489baa08589d46fb89dc04adb2f4094f7887"
        ],
        "matched": [
            "c764489baa08589d46fb89dc04adb2f4094f7887"
        ]
    },
    {
        "repo_name": "jqlang/jq",
        "CVE_ID": "CVE-2023-50268",
        "Problem_Type": "CWE-787",
        "Description": "jq is a command-line JSON processor. Version 1.7 is vulnerable to stack-based buffer overflow in builds using decNumber. Version 1.7.1 contains a patch for this issue.",
        "URL": "https://github.com/jqlang/jq/pull/2804",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "680baeffeb7983e7570b5e68db07fe47f94db8c7",
        "inducing_commit_hash_pyszz": [
            "da15e10bd0997fb5c1a61cad7fdfe0786fec17e9"
        ],
        "inducing_commit_hash_pd": [
            "cf4b48c7ba30cb30e116b523cff036ea481459f6"
        ],
        "matched": [
            "da15e10bd0997fb5c1a61cad7fdfe0786fec17e9"
        ]
    },
    {
        "repo_name": "jquery-validation/jquery-validation",
        "CVE_ID": "CVE-2021-21252",
        "Problem_Type": "CWE-400",
        "Description": "The jQuery Validation Plugin provides drop-in validation for your existing forms. It is published as an npm package \"jquery-validation\". jquery-validation before version 1.19.3 contains one or more regular expressions that are vulnerable to ReDoS (Regular Expression Denial of Service). This is fixed in 1.19.3.",
        "URL": "https://github.com/jquery-validation/jquery-validation/pull/2371",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d",
        "inducing_commit_hash_pyszz": [
            "f33690b8a5ba256fe7f58e72c1b04db9dee13d4c"
        ],
        "inducing_commit_hash_pd": [
            "f33690b8a5ba256fe7f58e72c1b04db9dee13d4c"
        ],
        "matched": [
            "f33690b8a5ba256fe7f58e72c1b04db9dee13d4c"
        ]
    },
    {
        "repo_name": "jquery/jquery-ui",
        "CVE_ID": "CVE-2021-41182",
        "Problem_Type": "CWE-79",
        "Description": "jQuery-UI is the official jQuery user interface library. Prior to version 1.13.0, accepting the value of the `altField` option of the Datepicker widget from untrusted sources may execute untrusted code. The issue is fixed in jQuery UI 1.13.0. Any string value passed to the `altField` option is now treated as a CSS selector. A workaround is to not accept the value of the `altField` option from untrusted sources.",
        "URL": "https://github.com/jquery/jquery-ui/pull/1954/commits/6809ce843e5ac4128108ea4c15cbc100653c2b63",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "32850869d308d5e7c9bf3e3b4d483ea886d373ce",
        "inducing_commit_hash_pyszz": [
            "e8e886770757bc21ddb1151fbbd956c031a8e2c4"
        ],
        "inducing_commit_hash_pd": [
            "cd7f8f02cf84d395bf0f06b752fe8572d4871482",
            "dc4b015a8b9acdb5bff2d5dd89737b3d8b64097f",
            "e8e886770757bc21ddb1151fbbd956c031a8e2c4"
        ],
        "matched": [
            "e8e886770757bc21ddb1151fbbd956c031a8e2c4"
        ]
    },
    {
        "repo_name": "jquery/jquery-ui",
        "CVE_ID": "CVE-2021-41183",
        "Problem_Type": "CWE-79",
        "Description": "jQuery-UI is the official jQuery user interface library. Prior to version 1.13.0, accepting the value of various `*Text` options of the Datepicker widget from untrusted sources may execute untrusted code. The issue is fixed in jQuery UI 1.13.0. The values passed to various `*Text` options are now always treated as pure text, not HTML. A workaround is to not accept the value of the `*Text` options from untrusted sources.",
        "URL": "https://github.com/jquery/jquery-ui/pull/1953",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "afe20b79a64266e64011f34b26a30b3d1c62fd47",
        "inducing_commit_hash_pyszz": [
            "74d7eac2daabce0411e98ed9d59dada551cdd911"
        ],
        "inducing_commit_hash_pd": [
            "74d7eac2daabce0411e98ed9d59dada551cdd911",
            "4334b5d4f1113ef751cb6738d8b2a60467a700e4",
            "8bbf22585b0dbf6c40ba3a22cd6a51e9058e098a"
        ],
        "matched": [
            "74d7eac2daabce0411e98ed9d59dada551cdd911"
        ]
    },
    {
        "repo_name": "jquery/jquery",
        "CVE_ID": "CVE-2016-10707",
        "Problem_Type": "CWE-674",
        "Description": "jQuery 3.0.0-rc.1 is vulnerable to Denial of Service (DoS) due to removing a logic that lowercased attribute names. Any attribute getter using a mixed-cased name for boolean attributes goes into an infinite recursion, exceeding the stack call limit.",
        "URL": "https://github.com/jquery/jquery/pull/3134",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "e06fda69f00082b44fd39ce8e851f72d29999011",
        "inducing_commit_hash_pyszz": [
            "01d5a1a1c9d5469057cafc5a2b27668d0e04ad22"
        ],
        "inducing_commit_hash_pd": [
            "01d5a1a1c9d5469057cafc5a2b27668d0e04ad22",
            "6318ae6ab90d4b450dfadf32ab95fe52ed6331cb"
        ],
        "matched": [
            "01d5a1a1c9d5469057cafc5a2b27668d0e04ad22"
        ]
    },
    {
        "repo_name": "jquery/jquery",
        "CVE_ID": "CVE-2019-11358",
        "Problem_Type": "CWE-1321",
        "Description": "jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",
        "URL": "https://github.com/jquery/jquery/pull/4333",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "753d591aea698e57d6db58c9f722cd0808619b1b",
        "inducing_commit_hash_pyszz": [
            "2764127335126601b90aac6488ef927dce1eceda"
        ],
        "inducing_commit_hash_pd": [
            "2764127335126601b90aac6488ef927dce1eceda"
        ],
        "matched": [
            "2764127335126601b90aac6488ef927dce1eceda"
        ]
    },
    {
        "repo_name": "json5/json5",
        "CVE_ID": "CVE-2022-46175",
        "Problem_Type": "CWE-1321",
        "Description": "JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later.",
        "URL": "https://github.com/json5/json5/pull/298",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62a65408408d40aeea14c7869ed327acead12972",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "6f838eb5a0d69395c49ac08392922621a56c7f99"
        ],
        "matched": [
            "6f838eb5a0d69395c49ac08392922621a56c7f99"
        ]
    },
    {
        "repo_name": "jstachio/jstachio",
        "CVE_ID": "CVE-2023-33962",
        "Problem_Type": "CWE-79",
        "Description": "JStachio is a  type-safe Java Mustache templating engine. Prior to version 1.0.1, JStachio fails to escape single quotes `'` in HTML, allowing an attacker to inject malicious code. This vulnerability can be exploited by an attacker to execute arbitrary JavaScript code in the context of other users visiting pages that use this template engine. This can lead to various consequences, including session hijacking, defacement of web pages, theft of sensitive information, or even the propagation of malware.\n\nVersion 1.0.1 contains a patch for this issue. To mitigate this vulnerability, the template engine should properly escape special characters, including single quotes. Common practice is to escape `'` as `&#39`. As a workaround, users can avoid this issue by using only double quotes `\"` for HTML attributes.",
        "URL": "https://github.com/jstachio/jstachio/pull/158",
        "Tag": "['Patch']",
        "fix_commit_hash": "7b2f78377d1284df14c580be762a25af5f8dcd66",
        "inducing_commit_hash_pyszz": [
            "c07ed0591d6d9df353ffeb4e016ae251ceea1cdb"
        ],
        "inducing_commit_hash_pd": [
            "1fdabb9b5f91fa4f8b9ba3fa35e85e3a3f684a0b",
            "c07ed0591d6d9df353ffeb4e016ae251ceea1cdb",
            "7a91e3a3b5e24fa6f247eb8e59d8a31e38475a5e"
        ],
        "matched": [
            "c07ed0591d6d9df353ffeb4e016ae251ceea1cdb"
        ]
    },
    {
        "repo_name": "juliangruber/brace-expansion",
        "CVE_ID": "CVE-2017-18077",
        "Problem_Type": "CWE-20",
        "Description": "index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters.",
        "URL": "https://github.com/juliangruber/brace-expansion/pull/35/commits/b13381281cead487cbdbfd6a69fb097ea5e456c3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b13381281cead487cbdbfd6a69fb097ea5e456c3",
        "inducing_commit_hash_pyszz": [
            "9a5bef783fad507aed02242ce726f89640bf42d1"
        ],
        "inducing_commit_hash_pd": [
            "9a5bef783fad507aed02242ce726f89640bf42d1"
        ],
        "matched": [
            "9a5bef783fad507aed02242ce726f89640bf42d1"
        ]
    },
    {
        "repo_name": "jumpserver/lina",
        "CVE_ID": "CVE-2022-42225",
        "Problem_Type": "CWE-79",
        "Description": "Jumpserver 2.10.0 <= version <= 2.26.0 contains multiple stored XSS vulnerabilities because of improper filtering of user input, which can execute any javascript under admin's permission.",
        "URL": "https://github.com/jumpserver/lina/pull/2264",
        "Tag": "['Patch']",
        "fix_commit_hash": "b1c2645ab02f3c241096f450c4996e7b1c2d0c37",
        "inducing_commit_hash_pyszz": [
            "8b11146e440d0d10045d224d3226920897b5890c"
        ],
        "inducing_commit_hash_pd": [
            "8b11146e440d0d10045d224d3226920897b5890c"
        ],
        "matched": [
            "8b11146e440d0d10045d224d3226920897b5890c"
        ]
    },
    {
        "repo_name": "JustArchiNET/ArchiSteamFarm",
        "CVE_ID": "CVE-2021-32794",
        "Problem_Type": "CWE-306",
        "Description": "ArchiSteamFarm is a C# application with primary purpose of idling Steam cards from multiple accounts simultaneously. Due to a bug in ASF code `POST /Api/ASF` ASF API endpoint responsible for updating global ASF config incorrectly removed `IPCPassword` from the resulting config when the caller did not specify it explicitly. Due to the above, it was possible for the user to accidentally remove `IPCPassword` security measure from his IPC interface when updating global ASF config, which exists as part of global config update functionality in ASF-ui. Removal of `IPCPassword` possesses a security risk, as unauthorized users may in result access the IPC interface after such modification. The issue is patched in ASF V5.1.2.4 and future versions. We recommend to manually verify that `IPCPassword` is specified after update, and if not, set it accordingly. In default settings, ASF is configured to allow IPC access from `localhost` only and should not affect majority of users.",
        "URL": "https://github.com/JustArchiNET/ArchiSteamFarm/pull/2379",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b7edf388ca37568568c345feadabe0a35691467",
        "inducing_commit_hash_pyszz": [
            "e146db732c775ac63f63cecca3dc27808cf0e720"
        ],
        "inducing_commit_hash_pd": [
            "e146db732c775ac63f63cecca3dc27808cf0e720"
        ],
        "matched": [
            "e146db732c775ac63f63cecca3dc27808cf0e720"
        ]
    },
    {
        "repo_name": "JustArchiNET/ArchiSteamFarm",
        "CVE_ID": "CVE-2022-23627",
        "Problem_Type": "CWE-863",
        "Description": "ArchiSteamFarm (ASF) is a C# application with primary purpose of idling Steam cards from multiple accounts simultaneously. Due to a bug in ASF code, introduced in version V5.2.2.2, the program didn't adequately verify effective access of the user sending proxy (i.e. `[Bots]`) commands. In particular, a proxy-like command sent to bot `A` targeting bot `B` has incorrectly verified user's access against bot `A` - instead of bot `B`, to which the command was originally designated. This in result allowed access to resources beyond those configured, being a security threat affecting confidentiality of other bot instances. A successful attack exploiting this bug requires a significant access granted explicitly by original owner of the ASF process prior to that, as attacker has to control at least a single bot in the process to make use of this inadequate access verification loophole. The issue is patched in ASF V5.2.2.5, V5.2.3.2 and future versions. Users are advised to update as soon as possible.",
        "URL": "https://github.com/JustArchiNET/ArchiSteamFarm/pull/2509",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f807bdb660e75dee5a34994f2ea70970ca6d0492",
        "inducing_commit_hash_pyszz": [
            "31db72b2d60738295a2c5d861436e6b782c11c64"
        ],
        "inducing_commit_hash_pd": [
            "4258fed8732591a58d86362377a2aabe7dac3d84",
            "31db72b2d60738295a2c5d861436e6b782c11c64"
        ],
        "matched": [
            "31db72b2d60738295a2c5d861436e6b782c11c64"
        ]
    },
    {
        "repo_name": "JustArchiNET/ArchiSteamFarm",
        "CVE_ID": "CVE-2022-23627",
        "Problem_Type": "CWE-863",
        "Description": "ArchiSteamFarm (ASF) is a C# application with primary purpose of idling Steam cards from multiple accounts simultaneously. Due to a bug in ASF code, introduced in version V5.2.2.2, the program didn't adequately verify effective access of the user sending proxy (i.e. `[Bots]`) commands. In particular, a proxy-like command sent to bot `A` targeting bot `B` has incorrectly verified user's access against bot `A` - instead of bot `B`, to which the command was originally designated. This in result allowed access to resources beyond those configured, being a security threat affecting confidentiality of other bot instances. A successful attack exploiting this bug requires a significant access granted explicitly by original owner of the ASF process prior to that, as attacker has to control at least a single bot in the process to make use of this inadequate access verification loophole. The issue is patched in ASF V5.2.2.5, V5.2.3.2 and future versions. Users are advised to update as soon as possible.",
        "URL": "https://github.com/JustArchiNET/ArchiSteamFarm/pull/2501",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4258fed8732591a58d86362377a2aabe7dac3d84",
        "inducing_commit_hash_pyszz": [
            "81a92d67810b1f4e2d0a7f419a9ae306f11ebccf"
        ],
        "inducing_commit_hash_pd": [
            "dd8c1a79e4a4e18e1bc14de7a173417aa9fc580e",
            "377ee76237556c4b36b8f78d276ef6e76aa3d1a4",
            "f5367e67526e13b3ef1bc9c2e3cb8105aa5f6e10",
            "ff85a88b42529057ae66645b87a356d5e7589d4b",
            "7ab19aa8069d6c9cb36c0f8a0b85f204c2cdbb59",
            "e64ff323c0467dec0155af56de82d1adba9a62c9",
            "36fa2b8b4dd0828c27efe8c7b86a310170c09f07",
            "22c1b6130a76887671c528ef1ea2abcc43e8ae31",
            "95356af9d3610706366cc1c645740dfc884464f7",
            "9ed3695d054f0dcf321d7e19ec32e5473bc3555c",
            "716acb0468cc389d832c924857bdcb85c5292ba6",
            "a76fe94617632a2dcf03ea26278549b08f750e36",
            "c01a2ba86376fa8050058aebf1885c2085204076",
            "9fc1ea65a5a40bb9a32c88e8a49306d7396f9842",
            "e7802ca6092f37131b14bfb77828020a0fbffa8f",
            "ab6ce7c7e5c8ebc408d0845e6ac63eba68d8f034",
            "cea4bf274a4faaebfbaacebf943c437a7af745a8",
            "515c6545114a65fa3aea4469e8d270fcd3032a7b",
            "c1ba2b5338d291d7362c6f467889d4f787745069",
            "f99d296687a9938666643d626004132caadf487d",
            "81a92d67810b1f4e2d0a7f419a9ae306f11ebccf",
            "e134d6f6b6b6b851e7ce3fd05d07e1240932c3e8",
            "a692c32d8fef32292865348c1f8cec04874b8f3a",
            "21d5051a849c3a5f316f3fd96e009d99c6aba769",
            "71a9f06e55688d722e1857289628daa5c832556a",
            "93ac4cf69747749b2f235398cefa3188a31a77a1",
            "52a7bb048f0baba23213514ed8b59c84589de194",
            "c50b70d3e3d3e6581158d979132a27ab00f04cf3",
            "afda19392af22af01161b88e7fe79f104f3f8123",
            "fc0c9161375b1c065871e3e6734870a8d7b2981b",
            "0f2a816b92fa6eaa431b3a599ebc1f263d3a19cc",
            "ab111da6c4b846a5f42280384eee22a00b1d607c",
            "6a811008eb04d3d0cdc1ebb6d45dd9a7cc8b93dc",
            "d1e8794fe30dc697d6b7ff4393ca3409413dcc05",
            "c6ad260e8174c3ddb6a3915d2e1d6206f717c923",
            "e482295b1362e600e536494e92f557538a38bf8d",
            "1a388d43ae0a0001562818d882ab5241bcafa055",
            "e82560259baf407690ad23494251f4f3a5fee6f9",
            "27648db50936369d6f20610e5f34a9e0f14f5818",
            "ad9a0d6768adcc0041436befffde223e36e9a6a8",
            "5bee79f3aa1c61f9ef908a9b32393729d7f21d29",
            "f2e16aeecc7e3b2f4ec72acde28c99238f8b647f",
            "e188a1d75199b109f384e671e392555d38b94f24",
            "7289f3bae4df1fa59f24aa8ec9e55da8eb31a420",
            "fc564d766c23e5b681c034a53fcedc3d23e0d123",
            "e60b54e402e8508ce30917bcf111a069ad706eaa",
            "e18c8ffa55a14fbf7fe5e4c36a12d8c7f82b7472",
            "a0c4dc00a3fb310883e8aa2a2fd0f971074c7786",
            "fe9b3b2bc049449cf7dcbde0659938dc5f650078",
            "7e9e90764b6830aa5eeb37d6281dca997b27ce80",
            "60ae4977dacf1fed33e4956f1a70cc539eb8c8db",
            "73cbd9e611bb1d116d2ec45d26a538b88cd17ce4",
            "42f388e370041c75550f4bbfdf901a7955bd0c30"
        ],
        "matched": [
            "81a92d67810b1f4e2d0a7f419a9ae306f11ebccf"
        ]
    },
    {
        "repo_name": "justdan96/tsMuxer",
        "CVE_ID": "CVE-2021-35346",
        "Problem_Type": "CWE-787",
        "Description": "tsMuxer v2.6.16 was discovered to contain a heap-based buffer overflow via the function HevcSpsUnit::short_term_ref_pic_set(int) in hevc.cpp.",
        "URL": "https://github.com/justdan96/tsMuxer/pull/422/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d77ed5e8dc701f64ed5da317b896879e621de865",
        "inducing_commit_hash_pyszz": [
            "d114b772e51640024ba16f0b111564327b176551"
        ],
        "inducing_commit_hash_pd": [
            "d114b772e51640024ba16f0b111564327b176551"
        ],
        "matched": [
            "d114b772e51640024ba16f0b111564327b176551"
        ]
    },
    {
        "repo_name": "jwadhams/json-logic-js",
        "CVE_ID": "CVE-2021-4329",
        "Problem_Type": "CWE-77",
        "Description": "A vulnerability, which was classified as critical, has been found in json-logic-js 2.0.0. Affected by this issue is some unknown functionality of the file logic.js. The manipulation leads to command injection. Upgrading to version 2.0.1 is able to address this issue. The patch is identified as c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227. It is recommended to upgrade the affected component. VDB-222266 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/jwadhams/json-logic-js/pull/98",
        "Tag": "['Patch']",
        "fix_commit_hash": "c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227",
        "inducing_commit_hash_pyszz": [
            "fadfa5dc7ccd1cc5c9a1900a97a15af390bf642b"
        ],
        "inducing_commit_hash_pd": [
            "4da053f4f1c5e348518bfe6798f9e018c5ee1016",
            "5809e641b050fa69700eec0c11c39d0501de056e",
            "fadfa5dc7ccd1cc5c9a1900a97a15af390bf642b"
        ],
        "matched": [
            "fadfa5dc7ccd1cc5c9a1900a97a15af390bf642b"
        ]
    },
    {
        "repo_name": "kaltura/mwEmbed",
        "CVE_ID": "CVE-2022-4876",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in Kaltura mwEmbed up to 2.96.rc1 and classified as problematic. This issue affects some unknown processing of the file includes/DefaultSettings.php. The manipulation of the argument HTTP_X_FORWARDED_HOST leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 2.96.rc2 is able to address this issue. The patch is named 13b8812ebc8c9fa034eed91ab35ba8423a528c0b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217427.",
        "URL": "https://github.com/kaltura/mwEmbed/pull/4266",
        "Tag": "['Patch']",
        "fix_commit_hash": "13b8812ebc8c9fa034eed91ab35ba8423a528c0b",
        "inducing_commit_hash_pyszz": [
            "2e9f16ee149f1d02e038bd9d5b012d6d02b20092"
        ],
        "inducing_commit_hash_pd": [
            "2e9f16ee149f1d02e038bd9d5b012d6d02b20092"
        ],
        "matched": [
            "2e9f16ee149f1d02e038bd9d5b012d6d02b20092"
        ]
    },
    {
        "repo_name": "kaltura/mwEmbed",
        "CVE_ID": "CVE-2022-4882",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in kaltura mwEmbed up to 2.91. It has been rated as problematic. Affected by this issue is some unknown functionality of the file modules/KalturaSupport/components/share/share.js of the component Share Plugin. The manipulation of the argument res leads to cross site scripting. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 2.92.rc1 is able to address this issue. The name of the patch is 4f11b6f6610acd6d89de5f8be47cf7c610643845. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217664.",
        "URL": "https://github.com/kaltura/mwEmbed/pull/4255",
        "Tag": "['Patch']",
        "fix_commit_hash": "4f11b6f6610acd6d89de5f8be47cf7c610643845",
        "inducing_commit_hash_pyszz": [
            "2b7c207821fb704229702f3a3dad5778f84acff8"
        ],
        "inducing_commit_hash_pd": [
            "2b7c207821fb704229702f3a3dad5778f84acff8"
        ],
        "matched": [
            "2b7c207821fb704229702f3a3dad5778f84acff8"
        ]
    },
    {
        "repo_name": "kapetan/dns",
        "CVE_ID": "CVE-2021-4248",
        "Problem_Type": "CWE-330",
        "Description": "A vulnerability was found in kapetan dns up to 6.1.0. It has been rated as problematic. Affected by this issue is some unknown functionality of the file DNS/Protocol/Request.cs. The manipulation leads to insufficient entropy in prng. The attack may be launched remotely. Upgrading to version 7.0.0 is able to address this issue. The name of the patch is cf7105aa2aae90d6656088fe5a8ee1d5730773b6. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216188.",
        "URL": "https://github.com/kapetan/dns/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cf7105aa2aae90d6656088fe5a8ee1d5730773b6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "77c94069d9e8253b8adee31d06ccaa7ba7fcdbb9"
        ],
        "matched": [
            "77c94069d9e8253b8adee31d06ccaa7ba7fcdbb9"
        ]
    },
    {
        "repo_name": "kardianos/service",
        "CVE_ID": "CVE-2022-29583",
        "Problem_Type": "CWE-426",
        "Description": "service_windows.go in the kardianos service package for Go omits quoting that is sometimes needed for execution of a Windows service executable from the intended directory. NOTE: this finding could not be reproduced by its original reporter or by others.",
        "URL": "https://github.com/kardianos/service/pull/290",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Kareadita/Kavita",
        "CVE_ID": "CVE-2023-0919",
        "Problem_Type": "CWE-306",
        "Description": "Missing Authentication for Critical Function in GitHub repository kareadita/kavita prior to 0.7.0.\n\n",
        "URL": "https://github.com/Kareadita/Kavita/pull/1748/commits/6648b79e1b2f92449d5816d0722b7a3d72f259d5",
        "Tag": "['Patch']",
        "fix_commit_hash": "3e1d0f39f0e3cc810ce9ecff791cb3cfa66fe743",
        "inducing_commit_hash_pyszz": [
            "45b854e1d0b5157b750744b01abba4a46ab5fec4"
        ],
        "inducing_commit_hash_pd": [
            "5f17c2fb731dd1c1d352848353cd077c214b778f",
            "549e52b4589fd58a476179bfd92f8ab47b15250a"
        ],
        "matched": [
            "45b854e1d0b5157b750744b01abba4a46ab5fec4"
        ]
    },
    {
        "repo_name": "kartverket/github-workflows",
        "CVE_ID": "CVE-2022-39326",
        "Problem_Type": "CWE-94",
        "Description": "kartverket/github-workflows are shared reusable workflows for GitHub Actions. Prior to version 2.7.5, all users of the `run-terraform` reusable workflow from the kartverket/github-workflows repo are affected by a code injection vulnerability. A malicious actor could potentially send a PR with a malicious payload leading to execution of arbitrary JavaScript code in the context of the workflow. Users should upgrade to at least version 2.7.5 to resolve the issue. As a workaround, review any pull requests from external users for malicious payloads before allowing them to trigger a build.",
        "URL": "https://github.com/kartverket/github-workflows/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dbc2fc32d409ff0499d590b38b2690eb215fa354",
        "inducing_commit_hash_pyszz": [
            "1d97920dca1b01cdece1d466106177b754f9f9f0"
        ],
        "inducing_commit_hash_pd": [
            "1d97920dca1b01cdece1d466106177b754f9f9f0"
        ],
        "matched": [
            "1d97920dca1b01cdece1d466106177b754f9f9f0"
        ]
    },
    {
        "repo_name": "Katello/katello",
        "CVE_ID": "CVE-2016-3072",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in the scoped_search function in app/controllers/katello/api/v2/api_controller.rb in Katello allow remote authenticated users to execute arbitrary SQL commands via the (1) sort_by or (2) sort_order parameter.",
        "URL": "https://github.com/Katello/katello/pull/6051",
        "Tag": "['Patch']",
        "fix_commit_hash": "e3abf55352ba98c1dc73057677e6299617767dd0",
        "inducing_commit_hash_pyszz": [
            "5dd2cae9777b6796f5f933553856a9765644c8f2"
        ],
        "inducing_commit_hash_pd": [
            "6055ee58cb7fc531ace956939c8e059275eaaec2",
            "a7e8ad4c7adcbbce30cc37f73653aa3aa8eca6f4",
            "5dd2cae9777b6796f5f933553856a9765644c8f2",
            "690b777d62eee0ef1800ddbab5990ac7fa7a7f03"
        ],
        "matched": [
            "5dd2cae9777b6796f5f933553856a9765644c8f2"
        ]
    },
    {
        "repo_name": "kevinpapst/kimai2",
        "CVE_ID": "CVE-2019-15481",
        "Problem_Type": "CWE-79",
        "Description": "Kimai v2 before 1.1 has XSS via a timesheet description.",
        "URL": "https://github.com/kevinpapst/kimai2/pull/962",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a0e8aa3a435717187fb12210242dab1b7c97ff3f",
        "inducing_commit_hash_pyszz": [
            "a609cbf84aa2e79cbbbd6c69bf0212792f65c106"
        ],
        "inducing_commit_hash_pd": [
            "a609cbf84aa2e79cbbbd6c69bf0212792f65c106",
            "816866549c111635cc81b86af0b9a5f68e42cde0",
            "53f82a808be73a3208837fa11e0e912487ee0c82",
            "98dc38ed99f41d13ff428c497a2006a1d60a19c2",
            "4c277fe1b5ebdadfdef5e80bc0be000aaa23033e"
        ],
        "matched": [
            "a609cbf84aa2e79cbbbd6c69bf0212792f65c106"
        ]
    },
    {
        "repo_name": "kevinpapst/kimai2",
        "CVE_ID": "CVE-2020-19825",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulnerability in kevinpapst kimai2 1.30.0 in /src/Twig/Runtime/MarkdownExtension.php, allows attackers to gain escalated privileges.",
        "URL": "https://github.com/kevinpapst/kimai2/pull/962/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "a0e8aa3a435717187fb12210242dab1b7c97ff3f",
        "inducing_commit_hash_pyszz": [
            "a609cbf84aa2e79cbbbd6c69bf0212792f65c106"
        ],
        "inducing_commit_hash_pd": [
            "a609cbf84aa2e79cbbbd6c69bf0212792f65c106",
            "816866549c111635cc81b86af0b9a5f68e42cde0",
            "53f82a808be73a3208837fa11e0e912487ee0c82",
            "98dc38ed99f41d13ff428c497a2006a1d60a19c2",
            "4c277fe1b5ebdadfdef5e80bc0be000aaa23033e"
        ],
        "matched": [
            "a609cbf84aa2e79cbbbd6c69bf0212792f65c106"
        ]
    },
    {
        "repo_name": "kevva/decompress",
        "CVE_ID": "CVE-2020-12265",
        "Problem_Type": "CWE-22",
        "Description": "The decompress package before 4.2.1 for Node.js is vulnerable to Arbitrary File Write via ../ in an archive member, when a symlink is used, because of Directory Traversal.",
        "URL": "https://github.com/kevva/decompress/pull/73",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "967146e70f48be32ed1a69daa3941d681944d513",
        "inducing_commit_hash_pyszz": [
            "74a462a139cc2561b6695e696266c8dc31562d3d"
        ],
        "inducing_commit_hash_pd": [
            "90233c3e2cee5c79135f50377441a3ac2c624a9f",
            "c9d7e7108476e357628939d925d7ab6974787c2f",
            "74a462a139cc2561b6695e696266c8dc31562d3d",
            "4cb6e65146e137ab52f859b6a15dfa8889cf1103"
        ],
        "matched": [
            "74a462a139cc2561b6695e696266c8dc31562d3d"
        ]
    },
    {
        "repo_name": "keycloak/keycloak",
        "CVE_ID": "CVE-2017-2582",
        "Problem_Type": "CWE-200",
        "Description": "It was found that while parsing the SAML messages the StaxParserUtil class of keycloak before 2.5.1 replaces special strings for obtaining attribute values with system property. This could allow an attacker to determine values of system properties at the attacked system by formatting the SAML request ID field to be the chosen system property which could be obtained in the \"InResponseTo\" field in the response.",
        "URL": "https://github.com/keycloak/keycloak/pull/3715/commits/0cb5ba0f6e83162d221681f47b470c3042eef237",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0cb5ba0f6e83162d221681f47b470c3042eef237",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "37306e689d0d3db9bf54bdea777a84fd2c683827"
        ],
        "matched": [
            "37306e689d0d3db9bf54bdea777a84fd2c683827"
        ]
    },
    {
        "repo_name": "keycloak/keycloak",
        "CVE_ID": "CVE-2020-1714",
        "Problem_Type": "CWE-20",
        "Description": "A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",
        "URL": "https://github.com/keycloak/keycloak/pull/7053",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "keycloak/keycloak",
        "CVE_ID": "CVE-2021-3856",
        "Problem_Type": "CWE-22",
        "Description": "ClassLoaderTheme and ClasspathThemeResourceProviderFactory allows reading any file available as a resource to the classloader. By sending requests for theme resources with a relative path from an external HTTP client, the client will receive the content of random files if available.",
        "URL": "https://github.com/keycloak/keycloak/pull/8588",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "73f0474008e1bebd0733e62a22aceda9e5de6743",
        "inducing_commit_hash_pyszz": [
            "60bb05e6ca9965f78d3a2a703818d7320575a3d8"
        ],
        "inducing_commit_hash_pd": [
            "505cf5b25184c59ca85de63b082eb12383eba1ab",
            "60bb05e6ca9965f78d3a2a703818d7320575a3d8",
            "97897cab1db14dff2b823e24699558fb7f91860c"
        ],
        "matched": [
            "60bb05e6ca9965f78d3a2a703818d7320575a3d8"
        ]
    },
    {
        "repo_name": "keylime/keylime",
        "CVE_ID": "CVE-2022-3500",
        "Problem_Type": "CWE-248",
        "Description": "A vulnerability was found in keylime. This security issue happens in some circumstances, due to some improperly handled exceptions, there exists the possibility that a rogue agent could create errors on the verifier that stopped attestation attempts for that host leaving it in an attested state but not verifying that anymore.",
        "URL": "https://github.com/keylime/keylime/pull/1128",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f969d397f92962b553f8c5bcbbeeb3bbdeca9456",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "27f669fa3f754fc3f0d928b8849695af9fced5cb"
        ],
        "matched": [
            "27f669fa3f754fc3f0d928b8849695af9fced5cb"
        ]
    },
    {
        "repo_name": "keylime/keylime",
        "CVE_ID": "CVE-2023-38200",
        "Problem_Type": "CWE-834",
        "Description": "A flaw was found in Keylime. Due to their blocking nature, the Keylime registrar is subject to a remote denial of service against its SSL connections. This flaw allows an attacker to exhaust all available connections.",
        "URL": "https://github.com/keylime/keylime/pull/1421",
        "Tag": "['Patch']",
        "fix_commit_hash": "c68d8f0b7ea549c12b6956ab0f3c28ae0360ae17",
        "inducing_commit_hash_pyszz": [
            "9ec16114bd661edda7d9cd1804843027c8b03385"
        ],
        "inducing_commit_hash_pd": [
            "9ec16114bd661edda7d9cd1804843027c8b03385"
        ],
        "matched": [
            "9ec16114bd661edda7d9cd1804843027c8b03385"
        ]
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2017-15878",
        "Problem_Type": "CWE-79",
        "Description": "A cross-site scripting (XSS) vulnerability exists in fields/types/markdown/MarkdownType.js in KeystoneJS before 4.0.0-beta.7 via the Contact Us feature.",
        "URL": "https://github.com/keystonejs/keystone/pull/4478",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b019b8cfcb7bea6f800609da5d07e8c8abfc80a",
        "inducing_commit_hash_pyszz": [
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27"
        ],
        "inducing_commit_hash_pd": [
            "11777cddba45b28a9e17a3149b792db121322b46",
            "3f3c65ab2d206ef1c72f17259e73fb24a79f0a9b",
            "5a2b15eda68b124255e341172b70548ff10274b2",
            "8d53f17b86cfd4d79cfa85d5bc693618ddac52bd",
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27",
            "1c12b8204f8238997ddaf7337c44cf26ebea9ba4",
            "98e8fd4bc586c732d629328ef643014ce42442ed",
            "2a2a7c00b74028b758006219781cbbd22909be85",
            "a5d7b264ad3e5590e335758881d22f7f296203c9",
            "e1f9a24ae19e540b2210cd0dd6286b8d39617824",
            "562ddbfda9026dc51b66e72ff598bf6e051d22d9",
            "cc987d078653fd9e686069f9f885f1269b64a882",
            "b6498d9f1341648742f2db78fec53b851b36dddd",
            "abbf52741984dec60660d42b238b8a71e4f2500e",
            "803626e8854f9b7d293bd1829398d25a6692154a",
            "8f4ebd5f70251ccdfb6b5ce14efb9fb59f5d2b3d",
            "68d361d2596e8811caf00390c60341ef0c233c7b",
            "6cd469e29682ff41a515ed76919efc2bfe0c7567",
            "37bc79b4172dfde61256c8bfff75386a76065cc6",
            "341ee2b4b7eab89f296146ff9e14ce53233235f6",
            "fd7ad11e06ac984e6056fa8da8db4a727825ecb0",
            "add3f67e379caebbcf0880b4ce82cf6a1e89020b",
            "d36e580cc21e4b77a1bd0615c96c0793b9c5dac5",
            "f66b90321db6ae12d0765b00ce458b82e7880070"
        ],
        "matched": [
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27"
        ]
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2017-15879",
        "Problem_Type": "CWE-20",
        "Description": "CSV Injection (aka Excel Macro Injection or Formula Injection) exists in admin/server/api/download.js and lib/list/getCSVData.js in KeystoneJS before 4.0.0-beta.7 via a value that is mishandled in a CSV export.",
        "URL": "https://github.com/keystonejs/keystone/pull/4478",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b019b8cfcb7bea6f800609da5d07e8c8abfc80a",
        "inducing_commit_hash_pyszz": [
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27"
        ],
        "inducing_commit_hash_pd": [
            "11777cddba45b28a9e17a3149b792db121322b46",
            "3f3c65ab2d206ef1c72f17259e73fb24a79f0a9b",
            "5a2b15eda68b124255e341172b70548ff10274b2",
            "8d53f17b86cfd4d79cfa85d5bc693618ddac52bd",
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27",
            "1c12b8204f8238997ddaf7337c44cf26ebea9ba4",
            "98e8fd4bc586c732d629328ef643014ce42442ed",
            "2a2a7c00b74028b758006219781cbbd22909be85",
            "a5d7b264ad3e5590e335758881d22f7f296203c9",
            "e1f9a24ae19e540b2210cd0dd6286b8d39617824",
            "562ddbfda9026dc51b66e72ff598bf6e051d22d9",
            "cc987d078653fd9e686069f9f885f1269b64a882",
            "b6498d9f1341648742f2db78fec53b851b36dddd",
            "abbf52741984dec60660d42b238b8a71e4f2500e",
            "803626e8854f9b7d293bd1829398d25a6692154a",
            "8f4ebd5f70251ccdfb6b5ce14efb9fb59f5d2b3d",
            "68d361d2596e8811caf00390c60341ef0c233c7b",
            "6cd469e29682ff41a515ed76919efc2bfe0c7567",
            "37bc79b4172dfde61256c8bfff75386a76065cc6",
            "341ee2b4b7eab89f296146ff9e14ce53233235f6",
            "fd7ad11e06ac984e6056fa8da8db4a727825ecb0",
            "add3f67e379caebbcf0880b4ce82cf6a1e89020b",
            "d36e580cc21e4b77a1bd0615c96c0793b9c5dac5",
            "f66b90321db6ae12d0765b00ce458b82e7880070"
        ],
        "matched": [
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27"
        ]
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2017-15881",
        "Problem_Type": "CWE-79",
        "Description": "Cross-Site Scripting vulnerability in KeystoneJS before 4.0.0-beta.7 allows remote authenticated administrators to inject arbitrary web script or HTML via the \"content brief\" or \"content extended\" field, a different vulnerability than CVE-2017-15878.",
        "URL": "https://github.com/keystonejs/keystone/pull/4478",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b019b8cfcb7bea6f800609da5d07e8c8abfc80a",
        "inducing_commit_hash_pyszz": [
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27"
        ],
        "inducing_commit_hash_pd": [
            "11777cddba45b28a9e17a3149b792db121322b46",
            "3f3c65ab2d206ef1c72f17259e73fb24a79f0a9b",
            "5a2b15eda68b124255e341172b70548ff10274b2",
            "8d53f17b86cfd4d79cfa85d5bc693618ddac52bd",
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27",
            "1c12b8204f8238997ddaf7337c44cf26ebea9ba4",
            "98e8fd4bc586c732d629328ef643014ce42442ed",
            "2a2a7c00b74028b758006219781cbbd22909be85",
            "a5d7b264ad3e5590e335758881d22f7f296203c9",
            "e1f9a24ae19e540b2210cd0dd6286b8d39617824",
            "562ddbfda9026dc51b66e72ff598bf6e051d22d9",
            "cc987d078653fd9e686069f9f885f1269b64a882",
            "b6498d9f1341648742f2db78fec53b851b36dddd",
            "abbf52741984dec60660d42b238b8a71e4f2500e",
            "803626e8854f9b7d293bd1829398d25a6692154a",
            "8f4ebd5f70251ccdfb6b5ce14efb9fb59f5d2b3d",
            "68d361d2596e8811caf00390c60341ef0c233c7b",
            "6cd469e29682ff41a515ed76919efc2bfe0c7567",
            "37bc79b4172dfde61256c8bfff75386a76065cc6",
            "341ee2b4b7eab89f296146ff9e14ce53233235f6",
            "fd7ad11e06ac984e6056fa8da8db4a727825ecb0",
            "add3f67e379caebbcf0880b4ce82cf6a1e89020b",
            "d36e580cc21e4b77a1bd0615c96c0793b9c5dac5",
            "f66b90321db6ae12d0765b00ce458b82e7880070"
        ],
        "matched": [
            "b21b62ed59fcd83ef2fc89587544b9d64522ba27"
        ]
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2023-34247",
        "Problem_Type": "CWE-601",
        "Description": "Keystone is a content management system for Node.JS. There is an open redirect in the `@keystone-6/auth` package versions 7.0.0 and prior, where the redirect leading `/` filter can be bypassed. Users may be redirected to domains other than the relative host, thereby it might be used by attackers to re-direct users to an unexpected location. To mitigate this issue, one may apply a patch from pull request 8626 or avoid using the `@keystone-6/auth` package.",
        "URL": "https://github.com/keystonejs/keystone/pull/8626",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a30c7a1630a670eb814e015254c7ae608500b2d8",
        "inducing_commit_hash_pyszz": [
            "c14fa5cdd01a1948c719240797bd4a68a08f12bb"
        ],
        "inducing_commit_hash_pd": [
            "96bf833a23b1a0a5d365cf394467a943cc481b38",
            "6eeaf6318d0c7bee9c910e02e66500a31e4e8ac0",
            "48ff6f16a03c27123be70d9ec28d041bbaacd214",
            "b52713b1f85ec02622dd3b5679f31ea9e2c0186c",
            "5a2b15eda68b124255e341172b70548ff10274b2",
            "36174f867aeda02bad6acfe27f534b4dc01e5c5b",
            "2674831cd619858b4171939baad68578371bf39f",
            "f3e8aac31efb3eb1573eb340e07a25920084a4aa",
            "612431b3991966ccabed20681e36acd09b944213",
            "a3b07ea16ffc0f6741c0c0e5e281622a1831e0e7",
            "0acbb70389cc00c8be239b98c8f536026fffdd76",
            "098ce08d7abd5e86b1e15ad442e717cea1852c33",
            "f4554980f6243a6545eee6c887d946ff25cd90e3",
            "ed736e3c1701fd279f1e108d8ad22af2411b375e",
            "b5a2b021e5a1152a7bc28b083a9844587a224ea5",
            "c14fa5cdd01a1948c719240797bd4a68a08f12bb",
            "384748d85f06755ee7c8aa6f74f0ffae486b82c1",
            "197a4999b2048e5dbdee02520f30cdaea09a6bee",
            "0eadba2badb13fc6a17f7e525d429494ca953481",
            "29a9703786728c9b8b6cdef71e087e604099d257",
            "48088af67a1e58ed15d2025031c03a4ac7386d2f",
            "cacc4e1364097f27319f023e96c98191204d08e0",
            "628f58872ab8b71249307639922e5a4796fc42d2"
        ],
        "matched": [
            "c14fa5cdd01a1948c719240797bd4a68a08f12bb"
        ]
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2023-40027",
        "Problem_Type": "CWE-862",
        "Description": "Keystone is an open source headless CMS for Node.js \u00c2\u2014 built with GraphQL and React. When `ui.isAccessAllowed` is set as `undefined`, the `adminMeta` GraphQL query is publicly accessible (no session required). This is different to the behaviour of the default AdminUI middleware, which by default will only be publicly accessible (no session required) if a `session` strategy is not defined. This vulnerability does not affect developers using the `@keystone-6/auth` package, or any users that have written their own `ui.isAccessAllowed` (that is to say, `isAccessAllowed` is not `undefined`). This vulnerability does affect users who believed that their `session` strategy will, by default, enforce that `adminMeta` is inaccessible by the public in accordance with that strategy; akin to the behaviour of the AdminUI middleware. This vulnerability has been patched in `@keystone-6/core` version `5.5.1`. Users are advised to upgrade. Users unable to upgrade may opt to write their own `isAccessAllowed` functionality to work-around this vulnerability.",
        "URL": "https://github.com/keystonejs/keystone/pull/8771",
        "Tag": "['Patch']",
        "fix_commit_hash": "650e27e6e9b42abfb94c340c8470faf61f0ff284",
        "inducing_commit_hash_pyszz": [
            "267d8c1f39ed2209d4d497f6041d85f5ebb29dbc"
        ],
        "inducing_commit_hash_pd": [
            "12d2c023418b8032ab98a97fb044dbcb4167fc99",
            "9238e900eb65d30e47afb81c0baf336eb1de92b3",
            "a3b07ea16ffc0f6741c0c0e5e281622a1831e0e7",
            "f92aa4010995d18ac15df83b70cbe9140bb72a7f",
            "c1a69e265c511c3c1ea8232050e035d6c73a8f2b",
            "d3603d02aa5735598d7e48da2f029d310b078f3c",
            "2a7bc608b9d9a4c1296dadc6ae9d81d834c435cb",
            "267d8c1f39ed2209d4d497f6041d85f5ebb29dbc"
        ],
        "matched": [
            "267d8c1f39ed2209d4d497f6041d85f5ebb29dbc"
        ]
    },
    {
        "repo_name": "kiegroup/droolsjbpm-integration",
        "CVE_ID": "CVE-2016-7043",
        "Problem_Type": "CWE-260",
        "Description": "It has been reported that KIE server and Busitess Central before version 7.21.0.Final contain username and password as plaintext Java properties. Any app deployed on the same server would have access to these properties, thus granting access to ther services.",
        "URL": "https://github.com/kiegroup/droolsjbpm-integration/pull/1273",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dc719561ba942da4bdcd6d3d116971aa44c65b55",
        "inducing_commit_hash_pyszz": [
            "3a875d86fb6b9af1edbfb7edcbd28c3e02c929ee"
        ],
        "inducing_commit_hash_pd": [
            "1357c0f328a57037db7084e262b0090859714378",
            "3a875d86fb6b9af1edbfb7edcbd28c3e02c929ee",
            "747702663df29131a293e3361b25ce626f873b76"
        ],
        "matched": [
            "3a875d86fb6b9af1edbfb7edcbd28c3e02c929ee"
        ]
    },
    {
        "repo_name": "knative/func",
        "CVE_ID": "CVE-2022-41939",
        "Problem_Type": "CWE-200",
        "Description": "knative.dev/func is is a client library and CLI enabling the development and deployment of Kubernetes functions. Developers using a malicious or compromised third-party buildpack could expose their registry credentials or local docker socket to a malicious `lifecycle` container. This issues has been patched in PR #1442, and is part of release 1.8.1. This issue only affects users who are using function buildpacks from third-parties; pinning the builder image to a specific content-hash with a valid `lifecycle` image will also mitigate the attack.",
        "URL": "https://github.com/knative/func/pull/1442",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e3ce1cf9d6b5a25005574f72bf4afc9d43973329",
        "inducing_commit_hash_pyszz": [
            "148f30ae815dd0a8589620cd4a7346fd81c0375b"
        ],
        "inducing_commit_hash_pd": [
            "148f30ae815dd0a8589620cd4a7346fd81c0375b",
            "17dc507c25c422f3290434b1b2715b8d8d1d704d"
        ],
        "matched": [
            "148f30ae815dd0a8589620cd4a7346fd81c0375b"
        ]
    },
    {
        "repo_name": "Kong/insomnia",
        "CVE_ID": "CVE-2023-40299",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kong Insomnia 2023.4.0 on macOS allows attackers to execute code and access restricted files, or make requests for TCC permissions, by using the DYLD_INSERT_LIBRARIES environment variable.",
        "URL": "https://github.com/Kong/insomnia/pull/6217/commits",
        "Tag": "['Patch']",
        "fix_commit_hash": "0f0d41f9438e461441a13595c2514411771ab1a4",
        "inducing_commit_hash_pyszz": [
            "46373fda2ee1ba9d2b9cdad8f8fb2e60202c0dad"
        ],
        "inducing_commit_hash_pd": [
            "0c53522f4612a99fd00f4bdfe6ab3226a7c0b082",
            "46373fda2ee1ba9d2b9cdad8f8fb2e60202c0dad"
        ],
        "matched": [
            "46373fda2ee1ba9d2b9cdad8f8fb2e60202c0dad"
        ]
    },
    {
        "repo_name": "krayin/laravel-crm",
        "CVE_ID": "CVE-2021-41924",
        "Problem_Type": "CWE-79",
        "Description": "Webkul krayin crm before 1.2.2 is vulnerable to Cross Site Scripting (XSS).",
        "URL": "https://github.com/krayin/laravel-crm/pull/195/commits/882dc2e7e7e9149b96cf1ccacf34900960b92fb7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "882dc2e7e7e9149b96cf1ccacf34900960b92fb7",
        "inducing_commit_hash_pyszz": [
            "c10844c21bfc801c4db2f73af7c2f6be3a8ded8e"
        ],
        "inducing_commit_hash_pd": [
            "ed284923ff7a924d5ae0b9070f841c039d1a8e1f",
            "1606d4bff8699dd3395f7d99fc94e5a415ba75e1",
            "1e299f63327723c6e98da09ba43e3af7c71e4e1d"
        ],
        "matched": [
            "c10844c21bfc801c4db2f73af7c2f6be3a8ded8e"
        ]
    },
    {
        "repo_name": "krb5/krb5",
        "CVE_ID": "CVE-2017-15088",
        "Problem_Type": "CWE-119",
        "Description": "plugins/preauth/pkinit/pkinit_crypto_openssl.c in MIT Kerberos 5 (aka krb5) through 1.15.2 mishandles Distinguished Name (DN) fields, which allows remote attackers to execute arbitrary code or cause a denial of service (buffer overflow and application crash) in situations involving untrusted X.509 data, related to the get_matching_data and X509_NAME_oneline_ex functions. NOTE: this has security relevance only in use cases outside of the MIT Kerberos distribution, e.g., the use of get_matching_data in KDC certauth plugin code that is specific to Red Hat.",
        "URL": "https://github.com/krb5/krb5/pull/707",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fbb687db1088ddd894d975996e5f6a4252b9a2b4",
        "inducing_commit_hash_pyszz": [
            "01b1c0e26252a00f2215408b0e473b84aa0f6a87"
        ],
        "inducing_commit_hash_pd": [
            "a650a4adf5b4c16b1ecc6d90ab18d9d6ea960c1c",
            "0ef0646069c1d1376aa632a4791ea7e429f5ae9b",
            "01b1c0e26252a00f2215408b0e473b84aa0f6a87"
        ],
        "matched": [
            "01b1c0e26252a00f2215408b0e473b84aa0f6a87"
        ]
    },
    {
        "repo_name": "krb5/krb5",
        "CVE_ID": "CVE-2019-14844",
        "Problem_Type": "CWE-628",
        "Description": "A flaw was found in, Fedora versions of krb5 from 1.16.1 to, including 1.17.x, in the way a Kerberos client could crash the KDC by sending one of the RFC 4556 \"enctypes\". A remote unauthenticated user could use this flaw to crash the KDC.",
        "URL": "https://github.com/krb5/krb5/pull/981",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3e62609849ab62caf52fa9b90d9ab60d365a64d",
        "inducing_commit_hash_pyszz": [
            "a649279727490687d54becad91fde8cf7429d951"
        ],
        "inducing_commit_hash_pd": [
            "a649279727490687d54becad91fde8cf7429d951"
        ],
        "matched": [
            "a649279727490687d54becad91fde8cf7429d951"
        ]
    },
    {
        "repo_name": "ktorio/ktor",
        "CVE_ID": "CVE-2019-19389",
        "Problem_Type": "CWE-74",
        "Description": "JetBrains Ktor framework before version 1.2.6 was vulnerable to HTTP Response Splitting.",
        "URL": "https://github.com/ktorio/ktor/pull/1408",
        "Tag": "['Mitigation', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ktorio/ktor",
        "CVE_ID": "CVE-2020-5207",
        "Problem_Type": "CWE-444",
        "Description": "In Ktor before 1.3.0, request smuggling is possible when running behind a proxy that doesn't handle Content-Length and Transfer-Encoding properly or doesn't handle \\n as a headers separator.",
        "URL": "https://github.com/ktorio/ktor/pull/1547",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ktorio/ktor",
        "CVE_ID": "CVE-2022-29035",
        "Problem_Type": "CWE-330",
        "Description": "In JetBrains Ktor Native before version 2.0.0 random values used for nonce generation weren't using SecureRandom implementations",
        "URL": "https://github.com/ktorio/ktor/pull/2776",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "67a3640505931ce46dfd558d7f2c03aa72c8bb70",
        "inducing_commit_hash_pyszz": [
            "dc70b1b7d3e336c15ad0a6a844027164b5114b97"
        ],
        "inducing_commit_hash_pd": [
            "2beed6137ab5ef613465a709f35df1790d77ac6a",
            "1e6502976506529b46acf7826e9157e96fec219c",
            "9785a7a82e89881ad279a77ac6adedfe621fb0b8",
            "dc70b1b7d3e336c15ad0a6a844027164b5114b97",
            "8b6f0742b03c9964d93365b86864f7bd4e2f9769",
            "d224f855ea5c5b22df1761b51cef1b22bd37f3bd",
            "e788f34b8a1de91253ed870bc510d3fa08dda5fc"
        ],
        "matched": [
            "dc70b1b7d3e336c15ad0a6a844027164b5114b97"
        ]
    },
    {
        "repo_name": "ktorio/ktor",
        "CVE_ID": "CVE-2022-29930",
        "Problem_Type": "CWE-330",
        "Description": "SHA1 implementation in JetBrains Ktor Native 2.0.0 was returning the same value. The issue was fixed in Ktor version 2.0.1.",
        "URL": "https://github.com/ktorio/ktor/pull/2966",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52b894749b7b6895e3346910305d41d1b7a8e81e",
        "inducing_commit_hash_pyszz": [
            "712e6119564c7cfb58529c9aaf64c554f1211a58"
        ],
        "inducing_commit_hash_pd": [
            "e7c8c037bcacff14b3199e781231789f3a1cc6d3"
        ],
        "matched": [
            "712e6119564c7cfb58529c9aaf64c554f1211a58"
        ]
    },
    {
        "repo_name": "kubeedge/kubeedge",
        "CVE_ID": "CVE-2022-31076",
        "Problem_Type": "CWE-476",
        "Description": "KubeEdge is built upon Kubernetes and extends native containerized application orchestration and device management to hosts at the Edge. In affected versions a malicious message can crash CloudCore by triggering a nil-pointer dereference in the UDS Server. Since the UDS Server only communicates with the CSI Driver on the cloud side, the attack is limited to the local host network. As such, an attacker would already need to be an authenticated user of the Cloud. Additionally it will be affected only when users turn on the unixsocket switch in the config file cloudcore.yaml. This bug has been fixed in Kubeedge 1.11.0, 1.10.1, and 1.9.3. Users should update to these versions to resolve the issue. Users unable to upgrade should sisable the unixsocket switch of CloudHub in the config file cloudcore.yaml.",
        "URL": "https://github.com/kubeedge/kubeedge/pull/3899/commits/5d60ae9eabd6b6b7afe38758e19bbe8137664701",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d60ae9eabd6b6b7afe38758e19bbe8137664701",
        "inducing_commit_hash_pyszz": [
            "09ea7b07abdc671e8ca4b360dc6a38c6892f4201"
        ],
        "inducing_commit_hash_pd": [
            "0ef7e9921065602e07058907411026e343aa1be9",
            "0d5a632aa8f77b3f3e65fb728d36a112741bc643",
            "09ea7b07abdc671e8ca4b360dc6a38c6892f4201",
            "b742ffc26cd0c8233f48e6f8381cb03cfc75fa66"
        ],
        "matched": [
            "09ea7b07abdc671e8ca4b360dc6a38c6892f4201"
        ]
    },
    {
        "repo_name": "kubeedge/kubeedge",
        "CVE_ID": "CVE-2022-31077",
        "Problem_Type": "CWE-476",
        "Description": "KubeEdge is built upon Kubernetes and extends native containerized application orchestration and device management to hosts at the Edge. In affected versions a malicious message response from KubeEdge can crash the CSI Driver controller server by triggering a nil-pointer dereference panic. As a consequence, the CSI Driver controller will be in denial of service. This bug has been fixed in Kubeedge 1.11.0, 1.10.1, and 1.9.3. Users should update to these versions to resolve the issue. At the time of writing, no workaround exists.",
        "URL": "https://github.com/kubeedge/kubeedge/pull/3899/commits/5d60ae9eabd6b6b7afe38758e19bbe8137664701",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d60ae9eabd6b6b7afe38758e19bbe8137664701",
        "inducing_commit_hash_pyszz": [
            "09ea7b07abdc671e8ca4b360dc6a38c6892f4201"
        ],
        "inducing_commit_hash_pd": [
            "0ef7e9921065602e07058907411026e343aa1be9",
            "0d5a632aa8f77b3f3e65fb728d36a112741bc643",
            "09ea7b07abdc671e8ca4b360dc6a38c6892f4201",
            "b742ffc26cd0c8233f48e6f8381cb03cfc75fa66"
        ],
        "matched": [
            "09ea7b07abdc671e8ca4b360dc6a38c6892f4201"
        ]
    },
    {
        "repo_name": "kubernetes/dashboard",
        "CVE_ID": "CVE-2018-18264",
        "Problem_Type": "CWE-306",
        "Description": "Kubernetes Dashboard before 1.10.1 allows attackers to bypass authentication and use Dashboard's Service Account for reading secrets within the cluster.",
        "URL": "https://github.com/kubernetes/dashboard/pull/3400",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5abb13a970076ebd46e316af45fffb697084a420",
        "inducing_commit_hash_pyszz": [
            "10bd78f1d64f44e938db599924be4bb51bdc4080"
        ],
        "inducing_commit_hash_pd": [
            "c209b32a771757c9c35056034aabf52de2a4c701",
            "ded3180949a45cca5412c9ebe8e778b21e2d9ace",
            "be02f3c6981edeaa393e3c1f021d1f4ab4117fed",
            "be3178963dc378dc140e0f23e696498dbd8e20e3",
            "32b926c48920f4eb3e75ba9d9fea2777ba74043d",
            "95da536bf84499f69c19f88c4b9a3ae9a13018f1",
            "ddde141306dc28f26c50cd923ea6dad84f505883",
            "7c26f88b77614ca1e318edfb046f769d5ab6d6d1",
            "cb596bcde5b6e0827805f1871911f1422abfa4b0",
            "10bd78f1d64f44e938db599924be4bb51bdc4080",
            "1ec4eacd7b8527fd05f0a627606d486502b138ea",
            "af4e69e9cd4a85910c1ed9b7a53bc369d66eb430",
            "b08ba7894648fafa0d2c5384e1bb11486292c2d7"
        ],
        "matched": [
            "10bd78f1d64f44e938db599924be4bb51bdc4080"
        ]
    },
    {
        "repo_name": "kubernetes/dashboard",
        "CVE_ID": "CVE-2018-18264",
        "Problem_Type": "CWE-306",
        "Description": "Kubernetes Dashboard before 1.10.1 allows attackers to bypass authentication and use Dashboard's Service Account for reading secrets within the cluster.",
        "URL": "https://github.com/kubernetes/dashboard/pull/3289",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01b840c3f361ccb36dee9a1170957ad03a4b4ab2",
        "inducing_commit_hash_pyszz": [
            "39f814e12a5881e7a8913a4f4d3134b311c801f9"
        ],
        "inducing_commit_hash_pd": [
            "c209b32a771757c9c35056034aabf52de2a4c701"
        ],
        "matched": [
            "39f814e12a5881e7a8913a4f4d3134b311c801f9"
        ]
    },
    {
        "repo_name": "kubernetes/ingress-nginx",
        "CVE_ID": "CVE-2019-20372",
        "Problem_Type": "CWE-444",
        "Description": "NGINX before 1.17.7, with certain error_page configurations, allows HTTP request smuggling, as demonstrated by the ability of an attacker to read unauthorized web pages in environments where NGINX is being fronted by a load balancer.",
        "URL": "https://github.com/kubernetes/ingress-nginx/pull/4859",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a0523c3c8a81b54b728f75928020442db87f04f5",
        "inducing_commit_hash_pyszz": [
            "0ae589293556fef59368d5709f6c7dc11d36ca87"
        ],
        "inducing_commit_hash_pd": [
            "2fa55eabf68f5a43bc8e53ab1b5eaf59b542cdea",
            "2de5a893aa15f14102d714e918b0045b960ad1a5",
            "587c2a8765ee0ee7a1fc4e75df22d2b9e15a89ef",
            "7b507095f464d6ddc7f07a2f9c2a3ad8c0240c65",
            "23af068e1788e3094525e79ac8d24a80b69714a0",
            "0ae589293556fef59368d5709f6c7dc11d36ca87",
            "8cc9afe8eef02a4b974eafbcff93b61daea82c81"
        ],
        "matched": [
            "0ae589293556fef59368d5709f6c7dc11d36ca87"
        ]
    },
    {
        "repo_name": "kubevela/kubevela",
        "CVE_ID": "CVE-2022-39383",
        "Problem_Type": "CWE-918",
        "Description": "KubeVela is an open source application delivery platform. Users using the VelaUX APIServer could be affected by this vulnerability. When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability. Users who're using v1.6, please update the v1.6.1. Users who're using v1.5, please update the v1.5.8. There are no known workarounds for this issue.",
        "URL": "https://github.com/kubevela/kubevela/pull/5000",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "85489c63b4a3c2148229e5384af9e01e4e8471aa",
        "inducing_commit_hash_pyszz": [
            "e37b0276c87d4d2b97f926f6f0484f37ddcb5fa5"
        ],
        "inducing_commit_hash_pd": [
            "5de790413f12dcbd5882fac43828b54d00815b9f",
            "e37b0276c87d4d2b97f926f6f0484f37ddcb5fa5",
            "f6eea78ec860816869aecb6f017a4e047a443806"
        ],
        "matched": [
            "e37b0276c87d4d2b97f926f6f0484f37ddcb5fa5"
        ]
    },
    {
        "repo_name": "Kunena/Kunena-Forum",
        "CVE_ID": "CVE-2016-11020",
        "Problem_Type": "CWE-434",
        "Description": "Kunena before 5.0.4 does not restrict avatar file extensions to gif, jpeg, jpg, and png. This can lead to XSS and remote code execution.",
        "URL": "https://github.com/Kunena/Kunena-Forum/pull/5028",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62050c625a0798f86a6e51ea9e46164751ee3d19",
        "inducing_commit_hash_pyszz": [
            "beb371dde77ab92759daeda01d6918b18f77faff"
        ],
        "inducing_commit_hash_pd": [
            "b1bc461988663aefbaa569fdbaeaa31cac6b544f"
        ],
        "matched": [
            "beb371dde77ab92759daeda01d6918b18f77faff"
        ]
    },
    {
        "repo_name": "kyverno/kyverno",
        "CVE_ID": "CVE-2022-47633",
        "Problem_Type": "CWE-287",
        "Description": "An image signature validation bypass vulnerability in Kyverno 1.8.3 and 1.8.4 allows a malicious image registry (or a man-in-the-middle attacker) to inject unsigned arbitrary container images into a protected Kubernetes cluster. This is fixed in 1.8.5. This has been fixed in 1.8.5 and mitigations are available for impacted releases.",
        "URL": "https://github.com/kyverno/kyverno/pull/5713",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "14d82cbf6df091d0b12d2d1cdce1d9c9f29f659d",
        "inducing_commit_hash_pyszz": [
            "ed97ff66d03cb0de55d3ec062e30e3390b72fd68"
        ],
        "inducing_commit_hash_pd": [
            "0f186afb3ec44d0012595f5a6533ae3ca3b74f46",
            "ef06833613656a966e9810b1c82debdfb2fa16fa",
            "af787b9fe6d4b384970e53ed6fbef946020b48ca",
            "ff728d5f2b01980a35ba2a83d5812a06c1332bb8"
        ],
        "matched": [
            "ed97ff66d03cb0de55d3ec062e30e3390b72fd68"
        ]
    },
    {
        "repo_name": "langchain-ai/langchain",
        "CVE_ID": "CVE-2023-39659",
        "Problem_Type": "CWE-74",
        "Description": "An issue in langchain langchain-ai v.0.0.232 and before allows a remote attacker to execute arbitrary code via a crafted script to the PythonAstREPLTool._run component.",
        "URL": "https://github.com/langchain-ai/langchain/pull/5640",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "langchain-ai/langchain",
        "CVE_ID": "CVE-2023-46229",
        "Problem_Type": "CWE-918",
        "Description": "LangChain before 0.0.317 allows SSRF via document_loaders/recursive_url_loader.py because crawling can proceed from an external server to an internal server.",
        "URL": "https://github.com/langchain-ai/langchain/pull/11925",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "90e9ec6962dcb9bb6500007d95a11f6b2aee877c",
        "inducing_commit_hash_pyszz": [
            "2dcda8a8aca4c427ff5716e6ac37ab0c24a7f2e5"
        ],
        "inducing_commit_hash_pd": [
            "872605a5c5cddfef4b414186235c906ba8e8e13e",
            "48ea27ba607bd1f00e5efc0337f3d54d56742377",
            "2dcda8a8aca4c427ff5716e6ac37ab0c24a7f2e5",
            "a0cd6672aab7706790467e0fe4db45b3f55e4cfa"
        ],
        "matched": [
            "2dcda8a8aca4c427ff5716e6ac37ab0c24a7f2e5"
        ]
    },
    {
        "repo_name": "laravel/framework",
        "CVE_ID": "CVE-2021-21263",
        "Problem_Type": "CWE-89",
        "Description": "Laravel is a web application framework. Versions of Laravel before 6.20.11, 7.30.2 and 8.22.1 contain a query binding exploitation. This same exploit applies to the illuminate/database package which is used by Laravel. If a request is crafted where a field that is normally a non-array value is an array, and that input is not validated or cast to its expected type before being passed to the query builder, an unexpected number of query bindings can be added to the query. In some situations, this will simply lead to no results being returned by the query builder; however, it is possible certain queries could be affected in a way that causes the query to return unexpected results.",
        "URL": "https://github.com/laravel/framework/pull/35865",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d0954f4574f315f0c2e9e65e92cc74b80eadcac1",
        "inducing_commit_hash_pyszz": [
            "0c4ef0f549e172240ccfdac045494c1a27b6ca06"
        ],
        "inducing_commit_hash_pd": [
            "8511e41af5bd43c5dae2ae7d9e3010d355bdbbc6",
            "6117ba5303eac4b763cce888baca57adf19ba787",
            "5e33a96cd5fe9f5bea953a3e07ec827d5f19a9a3",
            "0c4ef0f549e172240ccfdac045494c1a27b6ca06"
        ],
        "matched": [
            "0c4ef0f549e172240ccfdac045494c1a27b6ca06"
        ]
    },
    {
        "repo_name": "laravel/framework",
        "CVE_ID": "CVE-2021-43808",
        "Problem_Type": "CWE-327",
        "Description": "Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.",
        "URL": "https://github.com/laravel/framework/pull/39909",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ee08338d235396a9ef86bc9613a3754e939b1d17",
        "inducing_commit_hash_pyszz": [
            "c613a18374ad3468dd1ff3cfc95407b6178b81fc"
        ],
        "inducing_commit_hash_pd": [
            "6dd859397c614349f87fda660827900ab4363522",
            "6be12dd818ed15c01ba28b2bbfd3bcadf0955da3",
            "7cdb6a6f6b77c91906c4ad0c6110b30042a43277",
            "f17c34a75fd02c2aa0f29abe135d45d4b2832a10",
            "c613a18374ad3468dd1ff3cfc95407b6178b81fc",
            "59816bb6ce342adb19c7eea530f06a3bb69412df",
            "afb0c034072a03a5ab1872fbdea54f8befd873c3",
            "64f7e9c4e37637df7b0820b11d5fcee1c1cca58d",
            "2a4acfb65f8fb69cec32cd9f4ccda4566524d5e2",
            "c762ce562bc5b6a8737ff8ee3f97f36897d42dff"
        ],
        "matched": [
            "c613a18374ad3468dd1ff3cfc95407b6178b81fc"
        ]
    },
    {
        "repo_name": "laravel/framework",
        "CVE_ID": "CVE-2021-43808",
        "Problem_Type": "CWE-327",
        "Description": "Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.",
        "URL": "https://github.com/laravel/framework/pull/39908",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b8174169b1807f36de1837751599e2828ceddb9b",
        "inducing_commit_hash_pyszz": [
            "6be12dd818ed15c01ba28b2bbfd3bcadf0955da3"
        ],
        "inducing_commit_hash_pd": [
            "6dd859397c614349f87fda660827900ab4363522",
            "6be12dd818ed15c01ba28b2bbfd3bcadf0955da3",
            "7cdb6a6f6b77c91906c4ad0c6110b30042a43277",
            "f17c34a75fd02c2aa0f29abe135d45d4b2832a10",
            "59816bb6ce342adb19c7eea530f06a3bb69412df",
            "64f7e9c4e37637df7b0820b11d5fcee1c1cca58d",
            "2a4acfb65f8fb69cec32cd9f4ccda4566524d5e2"
        ],
        "matched": [
            "6be12dd818ed15c01ba28b2bbfd3bcadf0955da3"
        ]
    },
    {
        "repo_name": "laravel/framework",
        "CVE_ID": "CVE-2021-43808",
        "Problem_Type": "CWE-327",
        "Description": "Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.",
        "URL": "https://github.com/laravel/framework/pull/39906",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "laravel/framework",
        "CVE_ID": "CVE-2022-40482",
        "Problem_Type": "CWE-203",
        "Description": "The authentication method in Laravel 8.x through 9.x before 9.32.0 was discovered to be vulnerable to user enumeration via timeless timing attacks with HTTP/2 multiplexing. This is caused by the early return inside the hasValidCredentials method in the Illuminate\\Auth\\SessionGuard class when a user is found to not exist.",
        "URL": "https://github.com/laravel/framework/pull/44069",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3145c6010fbba00ec80ef5cda87fe74885de2ade",
        "inducing_commit_hash_pyszz": [
            "035a0b2e2da129bac2756b1ee3ee10bb8bcda569"
        ],
        "inducing_commit_hash_pd": [
            "38b0ccd905587439c7036657faed101742b44d2d",
            "7d76a86b6d66b3d0416463c80b759c4631148d76",
            "ac745730492ef23a04ce614228d11e496feb625d",
            "67fd7ad2ff78d2204451043c278c5c42c3e23074",
            "035a0b2e2da129bac2756b1ee3ee10bb8bcda569",
            "1aa9577caf43fbcd769050d4c49f4af880991ef2",
            "1485f77e7ffae51bb0cb8d7d1212b08097d8bef5",
            "f8bb0890265fea058a0b26b04f50ec4800f117b9",
            "8cbe385362e6bbbd811c96e11336339da17221ac"
        ],
        "matched": [
            "035a0b2e2da129bac2756b1ee3ee10bb8bcda569"
        ]
    },
    {
        "repo_name": "latchset/pkcs11-provider",
        "CVE_ID": "CVE-2023-6258",
        "Problem_Type": "CWE-203",
        "Description": "A security vulnerability has been identified in the pkcs11-provider, which is associated with Public-Key Cryptography Standards (PKCS#11). If exploited successfully, this vulnerability could result in a Bleichenbacher-like security flaw, potentially enabling a side-channel attack on PKCS#1 1.5 decryption.",
        "URL": "https://github.com/latchset/pkcs11-provider/pull/308",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "de52d24c1b4b0bdc3a49a23db0f3231e209c3c68",
        "inducing_commit_hash_pyszz": [
            "740c64cdae24a018c0d5b03acd322e52795961fd"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "740c64cdae24a018c0d5b03acd322e52795961fd"
        ]
    },
    {
        "repo_name": "latchset/tang",
        "CVE_ID": "CVE-2021-4076",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A flaw exists in tang, a network-based cryptographic binding server, which could result in leak of private keys.",
        "URL": "https://github.com/latchset/tang/pull/81",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
        "inducing_commit_hash_pyszz": [
            "69b47ce9a3be7868fece4427bd8aac31500b7d4d"
        ],
        "inducing_commit_hash_pd": [
            "96189650948c136c0b23a570bfc4c9d987890f4b",
            "69b47ce9a3be7868fece4427bd8aac31500b7d4d",
            "609050586e4863329d2db9b7cb73da5c09eeea2b"
        ],
        "matched": [
            "69b47ce9a3be7868fece4427bd8aac31500b7d4d"
        ]
    },
    {
        "repo_name": "lh3/bwa",
        "CVE_ID": "CVE-2019-10269",
        "Problem_Type": "CWE-787",
        "Description": "BWA (aka Burrow-Wheeler Aligner) before 2019-01-23 has a stack-based buffer overflow in the bns_restore function in bntseq.c via a long sequence name in a .alt file.",
        "URL": "https://github.com/lh3/bwa/pull/232",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "20d0a13092aa4cb73230492b05f9697d5ef0b88e",
        "inducing_commit_hash_pyszz": [
            "a9c688ac923ea63c14f4a9dbf74a4aedb4d65459"
        ],
        "inducing_commit_hash_pd": [
            "71277f0fea035b580877bae63431ef1aff5e663f"
        ],
        "matched": [
            "a9c688ac923ea63c14f4a9dbf74a4aedb4d65459"
        ]
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2019-1000020",
        "Problem_Type": "CWE-835",
        "Description": "libarchive version commit 5a98dcf8a86364b3c2c469c85b93647dfb139961 onwards (version v2.8.0 onwards) contains a CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in ISO9660 parser, archive_read_support_format_iso9660.c, read_CE()/parse_rockridge() that can result in DoS by infinite loop. This attack appears to be exploitable via the victim opening a specially crafted ISO9660 file.",
        "URL": "https://github.com/libarchive/libarchive/pull/1120/commits/8312eaa576014cd9b965012af51bc1f967b12423",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8312eaa576014cd9b965012af51bc1f967b12423",
        "inducing_commit_hash_pyszz": [
            "0ddd7bf7eef98846e53eb833d4e7de93dbf454d5"
        ],
        "inducing_commit_hash_pd": [
            "0ddd7bf7eef98846e53eb833d4e7de93dbf454d5"
        ],
        "matched": [
            "0ddd7bf7eef98846e53eb833d4e7de93dbf454d5"
        ]
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2020-9308",
        "Problem_Type": "CWE-787",
        "Description": "archive_read_support_format_rar5.c in libarchive before 3.4.2 attempts to unpack a RAR5 file with an invalid or corrupted header (such as a header size of zero), leading to a SIGSEGV or possibly unspecified other impact.",
        "URL": "https://github.com/libarchive/libarchive/pull/1326/commits/94821008d6eea81e315c5881cdf739202961040a",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "94821008d6eea81e315c5881cdf739202961040a",
        "inducing_commit_hash_pyszz": [
            "087319f7060842233e0a705654d855e77ec71ff7"
        ],
        "inducing_commit_hash_pd": [
            "087319f7060842233e0a705654d855e77ec71ff7"
        ],
        "matched": [
            "087319f7060842233e0a705654d855e77ec71ff7"
        ]
    },
    {
        "repo_name": "libass/libass",
        "CVE_ID": "CVE-2016-7970",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in the calc_coeff function in libass/ass_blur.c in libass before 0.13.4 allows remote attackers to cause a denial of service via unspecified vectors.",
        "URL": "https://github.com/libass/libass/pull/240/commits/08e754612019ed84d1db0d1fc4f5798248decd75",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "08e754612019ed84d1db0d1fc4f5798248decd75",
        "inducing_commit_hash_pyszz": [
            "d787615845d78d8f8e6d1a4ffc3dc3eecd8a92f6"
        ],
        "inducing_commit_hash_pd": [
            "d787615845d78d8f8e6d1a4ffc3dc3eecd8a92f6"
        ],
        "matched": [
            "d787615845d78d8f8e6d1a4ffc3dc3eecd8a92f6"
        ]
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2018-20843",
        "Problem_Type": "CWE-611",
        "Description": "In libexpat in Expat before 2.2.7, XML input including XML names that contain a large number of colons could make the XML parser consume a high amount of RAM and CPU resources while processing (enough to be usable for denial-of-service attacks).",
        "URL": "https://github.com/libexpat/libexpat/pull/262",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "11f8838bf99ea0a6f0b76f9760c43704d00c4ff6",
        "inducing_commit_hash_pyszz": [
            "2b1702456dab2e8de6f74e8e4e03aac87571aafd"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "2b1702456dab2e8de6f74e8e4e03aac87571aafd"
        ]
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2018-20843",
        "Problem_Type": "CWE-611",
        "Description": "In libexpat in Expat before 2.2.7, XML input including XML names that contain a large number of colons could make the XML parser consume a high amount of RAM and CPU resources while processing (enough to be usable for denial-of-service attacks).",
        "URL": "https://github.com/libexpat/libexpat/pull/262/commits/11f8838bf99ea0a6f0b76f9760c43704d00c4ff6",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "11f8838bf99ea0a6f0b76f9760c43704d00c4ff6",
        "inducing_commit_hash_pyszz": [
            "2b1702456dab2e8de6f74e8e4e03aac87571aafd"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "2b1702456dab2e8de6f74e8e4e03aac87571aafd"
        ]
    },
    {
        "repo_name": "libgd/libgd",
        "CVE_ID": "CVE-2016-6911",
        "Problem_Type": "CWE-125",
        "Description": "The dynamicGetbuf function in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TIFF image.",
        "URL": "https://github.com/libgd/libgd/pull/353",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libgd/libgd",
        "CVE_ID": "CVE-2021-38115",
        "Problem_Type": "CWE-125",
        "Description": "read_header_tga in gd_tga.c in the GD Graphics Library (aka LibGD) through 2.3.2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file.",
        "URL": "https://github.com/libgd/libgd/pull/711/commits/8b111b2b4a4842179be66db68d84dda91a246032",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8b111b2b4a4842179be66db68d84dda91a246032",
        "inducing_commit_hash_pyszz": [
            "96d56876890aa156f2177bc217833905ed3f404b"
        ],
        "inducing_commit_hash_pd": [
            "96d56876890aa156f2177bc217833905ed3f404b"
        ],
        "matched": [
            "96d56876890aa156f2177bc217833905ed3f404b"
        ]
    },
    {
        "repo_name": "libjpeg-turbo/libjpeg-turbo",
        "CVE_ID": "CVE-2017-15232",
        "Problem_Type": "CWE-476",
        "Description": "libjpeg-turbo 1.5.2 has a NULL Pointer Dereference in jdpostct.c and jquant1.c via a crafted JPEG file.",
        "URL": "https://github.com/libjpeg-turbo/libjpeg-turbo/pull/182",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ab835bc4cc6489e6846a6224d12cfc19d0ea28ab",
        "inducing_commit_hash_pyszz": [
            "7bc738b0fc533365a45d0db3aacfdb8395f335dd"
        ],
        "inducing_commit_hash_pd": [
            "03e755bbd3392e0b9627b007898d552ada0ca13d",
            "f851fabffc0e769294284c1c859f8979d17ddc87",
            "7bc738b0fc533365a45d0db3aacfdb8395f335dd",
            "eb32cc1e6ded5c46052918d69f8de09bf2730b17"
        ],
        "matched": [
            "7bc738b0fc533365a45d0db3aacfdb8395f335dd"
        ]
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2021-22563",
        "Problem_Type": "CWE-125",
        "Description": "Invalid JPEG XL images using libjxl can cause an out of bounds access on a std::vector<std::vector<T>> when rendering splines. The OOB read access can either lead to a segfault, or rendering splines based on other process memory. It is recommended to upgrade past 0.6.0 or patch with https://github.com/libjxl/libjxl/pull/757",
        "URL": "https://github.com/libjxl/libjxl/pull/757",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0eff04c3a04e72e78d35f0965f17f54a98d61830",
        "inducing_commit_hash_pyszz": [
            "9d03bfe8111f49210e2d096688dd4db303654270"
        ],
        "inducing_commit_hash_pd": [
            "9d03bfe8111f49210e2d096688dd4db303654270"
        ],
        "matched": [
            "9d03bfe8111f49210e2d096688dd4db303654270"
        ]
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2021-22564",
        "Problem_Type": "CWE-787",
        "Description": "For certain valid JPEG XL images with a size slightly larger than an integer number of groups (256x256 pixels) when processing the groups out of order the decoder can perform an out of bounds copy of image pixels from an image buffer in the heap to another. This copy can occur when processing the right or bottom edges of the image, but only when groups are processed in certain order. Groups can be processed out of order in multi-threaded decoding environments with heavy thread load but also with images that contain the groups in an arbitrary order in the file. It is recommended to upgrade past 0.6.0 or patch with https://github.com/libjxl/libjxl/pull/775",
        "URL": "https://github.com/libjxl/libjxl/pull/775",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e6497057899269bb40f54a26729826a55d857fd7",
        "inducing_commit_hash_pyszz": [
            "62d73ec29aa111e9aec28cd761be4fca6e50b5d0"
        ],
        "inducing_commit_hash_pd": [
            "62d73ec29aa111e9aec28cd761be4fca6e50b5d0"
        ],
        "matched": [
            "62d73ec29aa111e9aec28cd761be4fca6e50b5d0"
        ]
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2021-45928",
        "Problem_Type": "CWE-787",
        "Description": "libjxl b02d6b9, as used in libvips 8.11 through 8.11.2 and other products, has an out-of-bounds write in jxl::ModularFrameDecoder::DecodeGroup (called from jxl::FrameDecoder::ProcessACGroup and jxl::ThreadPool::RunCallState<jxl::FrameDecoder::ProcessSections).",
        "URL": "https://github.com/libjxl/libjxl/pull/365",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1c05e110d69b457696366fb4e762057b6855349b",
        "inducing_commit_hash_pyszz": [
            "48e2a0ba25a7bac9ec510c48e322e5199de0583e"
        ],
        "inducing_commit_hash_pd": [
            "48e2a0ba25a7bac9ec510c48e322e5199de0583e",
            "ab7c5e9b6795134377aa4846ceaae2c5bc504f76",
            "56fd022ea6a8a8dd291cb6e840b5093e3f28e96c",
            "12293674f410c0cb604919cdb37073b8680049d5",
            "f84edfb254589f9581e66810e46400af28b208bd",
            "ef3f7a6254e09e6672d2f071b3f4da07c0436dbb",
            "ff09371267315c39fe0220082943c5834db04ab9"
        ],
        "matched": [
            "48e2a0ba25a7bac9ec510c48e322e5199de0583e"
        ]
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2023-0645",
        "Problem_Type": "CWE-125",
        "Description": "An out of bounds read exists in libjxl. An attacker using a specifically crafted file could cause an out of bounds read in the exif handler. We recommend upgrading to version 0.8.1 or past commit\u00c2\u00a0 https://github.com/libjxl/libjxl/pull/2101/commits/d95b050c1822a5b1ede9e0dc937e43fca1b10159 https://github.com/libjxl/libjxl/pull/2101/commits/d95b050c1822a5b1ede9e0dc937e43fca1b10159 ",
        "URL": "https://github.com/libjxl/libjxl/pull/2101/commits/d95b050c1822a5b1ede9e0dc937e43fca1b10159",
        "Tag": "['Patch']",
        "fix_commit_hash": "a7c8428b61299f3b055cbbdbba3fbcd8cb38d084",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "7ebce272bc5d17821c799aa861d2840ba3843414"
        ],
        "matched": [
            "7ebce272bc5d17821c799aa861d2840ba3843414"
        ]
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2023-0645",
        "Problem_Type": "CWE-125",
        "Description": "An out of bounds read exists in libjxl. An attacker using a specifically crafted file could cause an out of bounds read in the exif handler. We recommend upgrading to version 0.8.1 or past commit\u00c2\u00a0 https://github.com/libjxl/libjxl/pull/2101/commits/d95b050c1822a5b1ede9e0dc937e43fca1b10159 https://github.com/libjxl/libjxl/pull/2101/commits/d95b050c1822a5b1ede9e0dc937e43fca1b10159 ",
        "URL": "https://github.com/libjxl/libjxl/pull/2101",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a7c8428b61299f3b055cbbdbba3fbcd8cb38d084",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "7ebce272bc5d17821c799aa861d2840ba3843414"
        ],
        "matched": [
            "7ebce272bc5d17821c799aa861d2840ba3843414"
        ]
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2023-35790",
        "Problem_Type": "CWE-191",
        "Description": "An issue was discovered in dec_patch_dictionary.cc in libjxl before 0.8.2. An integer underflow in patch decoding can lead to a denial of service, such as an infinite loop.",
        "URL": "https://github.com/libjxl/libjxl/pull/2551",
        "Tag": "['Patch']",
        "fix_commit_hash": "d4e67a644d8babe7cb68de122d8b5ccb2ad8f226",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b1c6fdcd3f6f2720daf3eb953761f1087206f981"
        ],
        "matched": [
            "b1c6fdcd3f6f2720daf3eb953761f1087206f981"
        ]
    },
    {
        "repo_name": "libming/libming",
        "CVE_ID": "CVE-2023-50628",
        "Problem_Type": "CWE-120",
        "Description": "Buffer Overflow vulnerability in libming version 0.4.8, allows attackers to execute arbitrary code and obtain sensitive information via parser.c component.",
        "URL": "https://github.com/libming/libming/pull/290",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libreform/libreform",
        "CVE_ID": "CVE-2022-34867",
        "Problem_Type": "CWE-668",
        "Description": "Unauthenticated Sensitive Information Disclosure vulnerability in WP Libre Form 2 plugin <= 2.0.8 at WordPress allows attackers to list and delete submissions. Affects only versions from 2.0.0 to 2.0.8.",
        "URL": "https://github.com/libreform/libreform/pull/54/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1bfb97dc91a668b3a6b48b1038e3aaed0160f6c3",
        "inducing_commit_hash_pyszz": [
            "99aea9ec23472eb75ddb028abf95b166adf08870"
        ],
        "inducing_commit_hash_pd": [
            "7f8ea88d6c9a63e459fa8b2b5aed0919213ff76e"
        ],
        "matched": [
            "99aea9ec23472eb75ddb028abf95b166adf08870"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2020-15873",
        "Problem_Type": "CWE-89",
        "Description": "In LibreNMS before 1.65.1, an authenticated attacker can achieve SQL Injection via the customoid.inc.php device_id POST parameter to ajax_form.php.",
        "URL": "https://github.com/librenms/librenms/pull/11923",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6e6fde94c33322e724ef8f37c22ff78f6613f4b3",
        "inducing_commit_hash_pyszz": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ],
        "inducing_commit_hash_pd": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ],
        "matched": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2020-15877",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in LibreNMS before 1.65.1. It has insufficient access control for normal users because of \"'guard' => 'admin'\" instead of \"'middleware' => ['can:admin']\" in routes/web.php.",
        "URL": "https://github.com/librenms/librenms/pull/11915",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5bb6d80bc308fc56b9a01ffb76c34159995353c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "699aa8a042d686717ff6707a647a1b0dc1816eff"
        ],
        "matched": [
            "699aa8a042d686717ff6707a647a1b0dc1816eff"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2021-31274",
        "Problem_Type": "CWE-79",
        "Description": "In LibreNMS < 21.3.0, a stored XSS vulnerability was identified in the API Access page due to insufficient sanitization of the $api->description variable. As a result, arbitrary Javascript code can get executed.",
        "URL": "https://github.com/librenms/librenms/pull/12739",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e79413a5bb3468cd2f5cb0594232a1557f792fc",
        "inducing_commit_hash_pyszz": [
            "e8cf6bb38558cee67002420ee29d9f5daed51801"
        ],
        "inducing_commit_hash_pd": [
            "e8cf6bb38558cee67002420ee29d9f5daed51801"
        ],
        "matched": [
            "e8cf6bb38558cee67002420ee29d9f5daed51801"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2021-44277",
        "Problem_Type": "CWE-79",
        "Description": "Librenms 21.11.0 is affected by a Cross Site Scripting (XSS) vulnerability in includes/html/common/alert-log.inc.php.",
        "URL": "https://github.com/librenms/librenms/pull/13554",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35a69050922692e3aa69dae74bff981f30ee7689",
        "inducing_commit_hash_pyszz": [
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03"
        ],
        "inducing_commit_hash_pd": [
            "d8693f05ae4d9ec884cd2c2d850e7f78ba9dc2ae",
            "82f43cb98dbe25d6e6fea4e787fa26aca898e41d",
            "807fc9a3ba6ddb491233846fbf719ea5cca0abcf",
            "9b78424b0ca5c1d080de9e0719405e5575fdbb16",
            "c2dfe7b21c9dd0fe1878d606afcc25ce1c1787b3",
            "4ead80d06cd1c9425f891f06419758e722b35d23",
            "82bad5f70185db0e585323860c472c40553d6964",
            "1c379dcd056003ae135421f131110cc76dfce087",
            "f3ba8947f74eba94368b4af0c19f63b0e42767d2",
            "cf31776a6bd96243b9fa71dd123759f96ffd0d3d",
            "934260cc75a047daf4148b731ed6feed59e5e092",
            "eadbb50695f8d0f7aeb5f2251d55a092a15a75c6",
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03",
            "d26d142700bc02e9279efebea5b555af02c8bc87",
            "731e43bc665ba3c5456c4de4492e61ddff2e6c93",
            "564146dc8cfb9f1f20e1b334fd5e23284af93567"
        ],
        "matched": [
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2021-44278",
        "Problem_Type": "CWE-22",
        "Description": "Librenms 21.11.0 is affected by a path manipulation vulnerability in includes/html/pages/device/showconfig.inc.php.",
        "URL": "https://github.com/librenms/librenms/pull/13554",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35a69050922692e3aa69dae74bff981f30ee7689",
        "inducing_commit_hash_pyszz": [
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03"
        ],
        "inducing_commit_hash_pd": [
            "d8693f05ae4d9ec884cd2c2d850e7f78ba9dc2ae",
            "82f43cb98dbe25d6e6fea4e787fa26aca898e41d",
            "807fc9a3ba6ddb491233846fbf719ea5cca0abcf",
            "9b78424b0ca5c1d080de9e0719405e5575fdbb16",
            "c2dfe7b21c9dd0fe1878d606afcc25ce1c1787b3",
            "4ead80d06cd1c9425f891f06419758e722b35d23",
            "82bad5f70185db0e585323860c472c40553d6964",
            "1c379dcd056003ae135421f131110cc76dfce087",
            "f3ba8947f74eba94368b4af0c19f63b0e42767d2",
            "cf31776a6bd96243b9fa71dd123759f96ffd0d3d",
            "934260cc75a047daf4148b731ed6feed59e5e092",
            "eadbb50695f8d0f7aeb5f2251d55a092a15a75c6",
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03",
            "d26d142700bc02e9279efebea5b555af02c8bc87",
            "731e43bc665ba3c5456c4de4492e61ddff2e6c93",
            "564146dc8cfb9f1f20e1b334fd5e23284af93567"
        ],
        "matched": [
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2021-44279",
        "Problem_Type": "CWE-79",
        "Description": "Librenms 21.11.0 is affected by a Cross Site Scripting (XSS) vulnerability in includes/html/forms/poller-groups.inc.php.",
        "URL": "https://github.com/librenms/librenms/pull/13554",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35a69050922692e3aa69dae74bff981f30ee7689",
        "inducing_commit_hash_pyszz": [
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03"
        ],
        "inducing_commit_hash_pd": [
            "d8693f05ae4d9ec884cd2c2d850e7f78ba9dc2ae",
            "82f43cb98dbe25d6e6fea4e787fa26aca898e41d",
            "807fc9a3ba6ddb491233846fbf719ea5cca0abcf",
            "9b78424b0ca5c1d080de9e0719405e5575fdbb16",
            "c2dfe7b21c9dd0fe1878d606afcc25ce1c1787b3",
            "4ead80d06cd1c9425f891f06419758e722b35d23",
            "82bad5f70185db0e585323860c472c40553d6964",
            "1c379dcd056003ae135421f131110cc76dfce087",
            "f3ba8947f74eba94368b4af0c19f63b0e42767d2",
            "cf31776a6bd96243b9fa71dd123759f96ffd0d3d",
            "934260cc75a047daf4148b731ed6feed59e5e092",
            "eadbb50695f8d0f7aeb5f2251d55a092a15a75c6",
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03",
            "d26d142700bc02e9279efebea5b555af02c8bc87",
            "731e43bc665ba3c5456c4de4492e61ddff2e6c93",
            "564146dc8cfb9f1f20e1b334fd5e23284af93567"
        ],
        "matched": [
            "ae38a45b7e2db667074cf45f1c5802f2f1a43c03"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2022-29711",
        "Problem_Type": "CWE-79",
        "Description": "LibreNMS v22.3.0 was discovered to contain a cross-site scripting (XSS) vulnerability via the component /Table/GraylogController.php.",
        "URL": "https://github.com/librenms/librenms/pull/13931",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc6112b8fb36039b862b42d86eb79ef7ee89d31b",
        "inducing_commit_hash_pyszz": [
            "6394c35ce6f31a57ea70c3b09ec64f67a3f69b44"
        ],
        "inducing_commit_hash_pd": [
            "6394c35ce6f31a57ea70c3b09ec64f67a3f69b44"
        ],
        "matched": [
            "6394c35ce6f31a57ea70c3b09ec64f67a3f69b44"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2022-29712",
        "Problem_Type": "CWE-77",
        "Description": "LibreNMS v22.3.0 was discovered to contain multiple command injection vulnerabilities via the service_ip, hostname, and service_param parameters.",
        "URL": "https://github.com/librenms/librenms/pull/13932",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8b82341cb742e7bd4966964b399012f7ba017e0b",
        "inducing_commit_hash_pyszz": [
            "7e96d8702212765b3a62717f92186172c63d3ffe"
        ],
        "inducing_commit_hash_pd": [
            "29f45ca352a8c5d5c308f93ce1240b7fdfc1c936"
        ],
        "matched": [
            "7e96d8702212765b3a62717f92186172c63d3ffe"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2022-36745",
        "Problem_Type": "CWE-79",
        "Description": "LibreNMS v22.6.0 was discovered to contain a cross-site scripting (XSS) vulnerability via the component print-customoid.php.",
        "URL": "https://github.com/librenms/librenms/pull/14126",
        "Tag": "['Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "e5c91a0f835d59e058d9d3e4956e079476d59ee6",
        "inducing_commit_hash_pyszz": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ],
        "inducing_commit_hash_pd": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ],
        "matched": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ]
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2022-36746",
        "Problem_Type": "CWE-79",
        "Description": "LibreNMS v22.6.0 was discovered to contain a cross-site scripting (XSS) vulnerability via the component oxidized-cfg-check.inc.php.",
        "URL": "https://github.com/librenms/librenms/pull/14126",
        "Tag": "['Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "e5c91a0f835d59e058d9d3e4956e079476d59ee6",
        "inducing_commit_hash_pyszz": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ],
        "inducing_commit_hash_pd": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ],
        "matched": [
            "934260cc75a047daf4148b731ed6feed59e5e092"
        ]
    },
    {
        "repo_name": "418sec/mjs",
        "CVE_ID": "CVE-2021-31875",
        "Problem_Type": "CWE-787",
        "Description": "In mjs_json.c in Cesanta MongooseOS mJS 1.26, a maliciously formed JSON string can trigger an off-by-one heap-based buffer overflow in mjs_json_parse, which can potentially lead to redirection of control flow. NOTE: the original reporter disputes the significance of this finding because \"there isn\u00c2\u2019t very much of an opportunity to exploit this reliably for an information leak, so there isn\u00c2\u2019t any real security impact.\"",
        "URL": "https://github.com/418sec/mjs/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "achernya/hesiod",
        "CVE_ID": "CVE-2016-10152",
        "Problem_Type": "CWE-264",
        "Description": "The read_config_file function in lib/hesiod.c in Hesiod 3.2.1 falls back to the \".athena.mit.edu\" default domain when opening the configuration file fails, which allows remote attackers to gain root privileges by poisoning the DNS cache.",
        "URL": "https://github.com/achernya/hesiod/pull/10",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "acpica/acpica",
        "CVE_ID": "CVE-2017-13693",
        "Problem_Type": "CWE-200",
        "Description": "The acpi_ds_create_operands() function in drivers/acpi/acpica/dsutils.c in the Linux kernel through 4.12.9 does not flush the operand cache and causes a kernel stack dump, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism (in the kernel through 4.9) via a crafted ACPI table.",
        "URL": "https://github.com/acpica/acpica/pull/295/commits/987a3b5cf7175916e2a4b6ea5b8e70f830dfe732",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "acpica/acpica",
        "CVE_ID": "CVE-2017-13694",
        "Problem_Type": "CWE-200",
        "Description": "The acpi_ps_complete_final_op() function in drivers/acpi/acpica/psobject.c in the Linux kernel through 4.12.9 does not flush the node and node_ext caches and causes a kernel stack dump, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism (in the kernel through 4.9) via a crafted ACPI table.",
        "URL": "https://github.com/acpica/acpica/pull/278/commits/4a0243ecb4c94e2d73510d096c5ea4d0711fc6c0",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-43680",
        "Problem_Type": "CWE-416",
        "Description": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
        "URL": "https://github.com/libexpat/libexpat/pull/616",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "aircrack-ng/aircrack-ng",
        "CVE_ID": "CVE-2014-8321",
        "Problem_Type": "CWE-787",
        "Description": "Stack-based buffer overflow in the gps_tracker function in airodump-ng.c in Aircrack-ng before 1.2 RC 1 allows local users to execute arbitrary code or gain privileges via unspecified vectors.",
        "URL": "https://github.com/aircrack-ng/aircrack-ng/pull/13",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "aircrack-ng/aircrack-ng",
        "CVE_ID": "CVE-2014-8322",
        "Problem_Type": "CWE-787",
        "Description": "Stack-based buffer overflow in the tcp_test function in aireplay-ng.c in Aircrack-ng before 1.2 RC 1 allows remote attackers to execute arbitrary code via a crafted length parameter value.",
        "URL": "https://github.com/aircrack-ng/aircrack-ng/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-1746",
        "Problem_Type": "CWE-200",
        "Description": "A flaw was found in the Ansible Engine affecting Ansible Engine versions 2.7.x before 2.7.17 and 2.8.x before 2.8.11 and 2.9.x before 2.9.7 as well as Ansible Tower before and including versions 3.4.5 and 3.5.5 and 3.6.3 when the ldap_attr and ldap_entry community modules are used. The issue discloses the LDAP bind password to stdout or a log file if a playbook task is written using the bind_pw in the parameters field. The highest threat from this vulnerability is data confidentiality.",
        "URL": "https://github.com/ansible/ansible/pull/67866",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "antirez/linenoise",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/linenoise/pull/122",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/maven-shared-utils",
        "CVE_ID": "CVE-2022-29599",
        "Problem_Type": "CWE-116",
        "Description": "In Apache Maven maven-shared-utils prior to version 3.3.3, the Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks.",
        "URL": "https://github.com/apache/maven-shared-utils/pull/40",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2022-28487",
        "Problem_Type": "CWE-401",
        "Description": "Tcpreplay version 4.4.1 contains a memory leakage flaw in fix_ipv6_checksums() function. The highest threat from this vulnerability is to data confidentiality.",
        "URL": "https://github.com/appneta/tcpreplay/pull/720",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "argoproj/argo-workflows",
        "CVE_ID": "CVE-2021-37914",
        "Problem_Type": "CWE-20",
        "Description": "In Argo Workflows through 3.1.3, if EXPRESSION_TEMPLATES is enabled and untrusted users are allowed to specify input parameters when running workflows, an attacker may be able to disrupt a workflow because expression template output is evaluated.",
        "URL": "https://github.com/argoproj/argo-workflows/pull/6442",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "candlepin/candlepin",
        "CVE_ID": "CVE-2021-4142",
        "Problem_Type": "CWE-639",
        "Description": "The Candlepin component of Red Hat Satellite was affected by an improper authentication flaw. Few factors could allow an attacker to use the SCA (simple content access) certificate for authentication with Candlepin.",
        "URL": "https://github.com/candlepin/candlepin/pull/3199",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11588",
        "Problem_Type": "CWE-79",
        "Description": "Centreon 3.4.6 including Centreon Web 2.8.23 is vulnerable to an authenticated user injecting a payload into the username or command description, resulting in stored XSS. This is related to www/include/core/menu/menu.php and www/include/configuration/configObject/command/formArguments.php.",
        "URL": "https://github.com/centreon/centreon/pull/6260",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11588",
        "Problem_Type": "CWE-79",
        "Description": "Centreon 3.4.6 including Centreon Web 2.8.23 is vulnerable to an authenticated user injecting a payload into the username or command description, resulting in stored XSS. This is related to www/include/core/menu/menu.php and www/include/configuration/configObject/command/formArguments.php.",
        "URL": "https://github.com/centreon/centreon/pull/6259",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11589",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in Centreon 3.4.6 including Centreon Web 2.8.23 allow attacks via the searchU parameter in viewLogs.php, the id parameter in GetXmlHost.php, the chartId parameter in ExportCSVServiceData.php, the searchCurve parameter in listComponentTemplates.php, or the host_id parameter in makeXML_ListMetrics.php.",
        "URL": "https://github.com/centreon/centreon/pull/6257",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11589",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in Centreon 3.4.6 including Centreon Web 2.8.23 allow attacks via the searchU parameter in viewLogs.php, the id parameter in GetXmlHost.php, the chartId parameter in ExportCSVServiceData.php, the searchCurve parameter in listComponentTemplates.php, or the host_id parameter in makeXML_ListMetrics.php.",
        "URL": "https://github.com/centreon/centreon/pull/6256",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11589",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in Centreon 3.4.6 including Centreon Web 2.8.23 allow attacks via the searchU parameter in viewLogs.php, the id parameter in GetXmlHost.php, the chartId parameter in ExportCSVServiceData.php, the searchCurve parameter in listComponentTemplates.php, or the host_id parameter in makeXML_ListMetrics.php.",
        "URL": "https://github.com/centreon/centreon/pull/6255",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11589",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in Centreon 3.4.6 including Centreon Web 2.8.23 allow attacks via the searchU parameter in viewLogs.php, the id parameter in GetXmlHost.php, the chartId parameter in ExportCSVServiceData.php, the searchCurve parameter in listComponentTemplates.php, or the host_id parameter in makeXML_ListMetrics.php.",
        "URL": "https://github.com/centreon/centreon/pull/6251",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-11589",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in Centreon 3.4.6 including Centreon Web 2.8.23 allow attacks via the searchU parameter in viewLogs.php, the id parameter in GetXmlHost.php, the chartId parameter in ExportCSVServiceData.php, the searchCurve parameter in listComponentTemplates.php, or the host_id parameter in makeXML_ListMetrics.php.",
        "URL": "https://github.com/centreon/centreon/pull/6250",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-19280",
        "Problem_Type": "CWE-79",
        "Description": "Centreon 3.4.x (fixed in Centreon 18.10.0) has XSS via the resource name or macro expression of a poller macro.",
        "URL": "https://github.com/centreon/centreon/pull/6626",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-21021",
        "Problem_Type": "CWE-89",
        "Description": "img_gantt.php in Centreon Web before 2.8.27 allows attackers to perform SQL injections via the host_id parameter.",
        "URL": "https://github.com/centreon/centreon/pull/7086",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-21022",
        "Problem_Type": "CWE-89",
        "Description": "makeXML_ListServices.php in Centreon Web before 2.8.28 allows attackers to perform SQL injections via the host_id parameter.",
        "URL": "https://github.com/centreon/centreon/pull/7087",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-21023",
        "Problem_Type": "CWE-94",
        "Description": "getStats.php in Centreon Web before 2.8.28 allows authenticated attackers to execute arbitrary code via the ns_id parameter.",
        "URL": "https://github.com/centreon/centreon/pull/7271",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2018-21023",
        "Problem_Type": "CWE-94",
        "Description": "getStats.php in Centreon Web before 2.8.28 allows authenticated attackers to execute arbitrary code via the ns_id parameter.",
        "URL": "https://github.com/centreon/centreon/pull/7083",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-15299",
        "Problem_Type": "CWE-287",
        "Description": "An issue was discovered in Centreon Web through 19.04.3. When a user changes his password on his profile page, the contact_autologin_key field in the database becomes blank when it should be NULL. This makes it possible to partially bypass authentication.",
        "URL": "https://github.com/centreon/centreon/pull/8072",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-15300",
        "Problem_Type": "CWE-89",
        "Description": "A problem was found in Centreon Web through 19.04.3. An authenticated SQL injection is present in the page include/Administration/parameters/ldap/xml/ldap_host.php. The arId parameter is not properly filtered before being passed to the SQL query.",
        "URL": "https://github.com/centreon/centreon/pull/8008",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-15300",
        "Problem_Type": "CWE-89",
        "Description": "A problem was found in Centreon Web through 19.04.3. An authenticated SQL injection is present in the page include/Administration/parameters/ldap/xml/ldap_host.php. The arId parameter is not properly filtered before being passed to the SQL query.",
        "URL": "https://github.com/centreon/centreon/pull/8009",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-16194",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerabilities in Centreon through 19.04 allow attacks via the svc_id parameter in include/monitoring/status/Services/xml/makeXMLForOneService.php.",
        "URL": "https://github.com/centreon/centreon/pull/7862",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-16195",
        "Problem_Type": "CWE-79",
        "Description": "Centreon before 2.8.30, 18.x before 18.10.8, and 19.x before 19.04.5 allows XSS via myAccount alias and name fields.",
        "URL": "https://github.com/centreon/centreon/pull/7877",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-16195",
        "Problem_Type": "CWE-79",
        "Description": "Centreon before 2.8.30, 18.x before 18.10.8, and 19.x before 19.04.5 allows XSS via myAccount alias and name fields.",
        "URL": "https://github.com/centreon/centreon/pull/7876",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-16405",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Centreon Web before 2.8.30, 18.10.x before 18.10.8, 19.04.x before 19.04.5 and 19.10.x before 19.10.2 allows Remote Code Execution by an administrator who can modify Macro Expression location settings. CVE-2019-16405 and CVE-2019-17501 are similar to one another and may be the same.",
        "URL": "https://github.com/centreon/centreon/pull/7864",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-16405",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Centreon Web before 2.8.30, 18.10.x before 18.10.8, 19.04.x before 19.04.5 and 19.10.x before 19.10.2 allows Remote Code Execution by an administrator who can modify Macro Expression location settings. CVE-2019-16405 and CVE-2019-17501 are similar to one another and may be the same.",
        "URL": "https://github.com/centreon/centreon/pull/7884",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-17105",
        "Problem_Type": "CWE-330",
        "Description": "The token generator in index.php in Centreon Web before 2.8.27 is predictable.",
        "URL": "https://github.com/centreon/centreon/pull/7100",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-17107",
        "Problem_Type": "CWE-78",
        "Description": "minPlayCommand.php in Centreon Web before 2.8.27 allows authenticated attackers to execute arbitrary code via the command_hostaddress parameter. NOTE: some sources have listed CVE-2019-17017 for this, but that is incorrect.",
        "URL": "https://github.com/centreon/centreon/pull/7099",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2019-17646",
        "Problem_Type": "CWE-425",
        "Description": "An issue was discovered in Centreon before 18.10.8, 19.04.5, and 19.10.2. It provides sensitive information via an unauthenticated direct request for api/external.php?object=centreon_metric&action=listByService.",
        "URL": "https://github.com/centreon/centreon/pull/8021",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2020-13252",
        "Problem_Type": "CWE-78",
        "Description": "Centreon before 19.04.15 allows remote attackers to execute arbitrary OS commands by placing shell metacharacters in RRDdatabase_status_path (via a main.get.php request) and then visiting the include/views/graphs/graphStatus/displayServiceStatus.php page.",
        "URL": "https://github.com/centreon/centreon/pull/8467",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2020-22345",
        "Problem_Type": "CWE-78",
        "Description": "/graphStatus/displayServiceStatus.php in Centreon 19.10.8 allows remote attackers to execute arbitrary OS commands via shell metacharacters in the RRDdatabase_path parameter.",
        "URL": "https://github.com/centreon/centreon/pull/8467#event-3163627607",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2021-27676",
        "Problem_Type": "CWE-79",
        "Description": "Centreon version 20.10.2 is affected by a cross-site scripting (XSS) vulnerability. The dep_description (Dependency Description) and dep_name (Dependency Name) parameters are vulnerable to stored XSS. A user has to log in and go to the Configuration > Notifications > Hosts page.",
        "URL": "https://github.com/centreon/centreon/pull/9587",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2021-28055",
        "Problem_Type": "CWE-330",
        "Description": "An issue was discovered in Centreon-Web in Centreon Platform 20.10.0. The anti-CSRF token generation is predictable, which might allow CSRF attacks that add an admin user.",
        "URL": "https://github.com/centreon/centreon/pull/9612",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2021-37556",
        "Problem_Type": "CWE-89",
        "Description": "A SQL injection vulnerability in reporting export in Centreon before 20.04.14, 20.10.8, and 21.04.2 allows remote authenticated (but low-privileged) attackers to execute arbitrary SQL commands via the include/reporting/dashboard/csvExport/csv_HostGroupLogs.php start and end parameters.",
        "URL": "https://github.com/centreon/centreon/pull/9781",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2021-37557",
        "Problem_Type": "CWE-89",
        "Description": "A SQL injection vulnerability in image generation in Centreon before 20.04.14, 20.10.8, and 21.04.2 allows remote authenticated (but low-privileged) attackers to execute arbitrary SQL commands via the include/views/graphs/generateGraphs/generateImage.php index parameter.",
        "URL": "https://github.com/centreon/centreon/pull/9787",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2021-37558",
        "Problem_Type": "CWE-89",
        "Description": "A SQL injection vulnerability in a MediaWiki script in Centreon before 20.04.14, 20.10.8, and 21.04.2 allows remote unauthenticated attackers to execute arbitrary SQL commands via the host_name and service_description parameters. The vulnerability can be exploited only when a valid Knowledge Base URL is configured on the Knowledge Base configuration page and points to a MediaWiki instance. This relates to the proxy feature in class/centreon-knowledge/ProceduresProxy.class.php and include/configuration/configKnowledge/proxy/proxy.php.",
        "URL": "https://github.com/centreon/centreon/pull/9796",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centreon/centreon",
        "CVE_ID": "CVE-2022-3827",
        "Problem_Type": "CWE-707",
        "Description": "A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/centreon/centreon/pull/11869",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cesanta/mjs",
        "CVE_ID": "CVE-2023-50044",
        "Problem_Type": "CWE-120",
        "Description": "Cesanta MJS 2.20.0 has a getprop_builtin_foreign out-of-bounds read if a Built-in API name occurs in a substring of an input string.",
        "URL": "https://github.com/cesanta/mjs/pull/255",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CESNET/proxystatistics-simplesamlphp-module",
        "CVE_ID": "CVE-2019-15537",
        "Problem_Type": "CWE-89",
        "Description": "The proxystatistics module before 3.1.0 for SimpleSAMLphp allows SQL Injection in lib/Auth/Process/DatabaseCommand.php.",
        "URL": "https://github.com/CESNET/proxystatistics-simplesamlphp-module/pull/18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "chaijs/pathval",
        "CVE_ID": "CVE-2020-7751",
        "Problem_Type": "CWE-1321",
        "Description": "pathval before version 1.1.1 is vulnerable to prototype pollution.",
        "URL": "https://github.com/chaijs/pathval/pull/58/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cifsd-team/ksmbd",
        "CVE_ID": "CVE-2021-45100",
        "Problem_Type": "CWE-319",
        "Description": "The ksmbd server through 3.4.2, as used in the Linux kernel through 5.15.8, sometimes communicates in cleartext even though encryption has been enabled. This occurs because it sets the SMB2_GLOBAL_CAP_ENCRYPTION flag when using the SMB 3.1.1 protocol, which is a violation of the SMB protocol specification. When Windows 10 detects this protocol violation, it disables encryption.",
        "URL": "https://github.com/cifsd-team/ksmbd/pull/551",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "civicrm/civicrm-core",
        "CVE_ID": "CVE-2013-5957",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in CRM/Core/Page/AJAX/Location.php in CiviCRM before 4.2.12, 4.3.x before 4.3.7, and 4.4.x before 4.4.beta4 allow remote attackers to execute arbitrary SQL commands via the _value parameter to (1) ajax/jqState or (2) ajax/jqcounty.",
        "URL": "https://github.com/civicrm/civicrm-core/pull/1708.diff",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cometbft/cometbft",
        "CVE_ID": "CVE-2023-34450",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. An internal modification made in versions 0.34.28 and 0.37.1 to the way struct `PeerState` is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places. The first is via logs, setting the `consensus` logging module to \"debug\" level (should not happen in production), and setting the log output format to JSON. The second is via RPC `dump_consensus_state`.\n\nCase 1, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.\n\nIn case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.\n\nThe theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one `PeerState` struct. If `dump_consensus_state` is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different `PeerState` structs) and the chain will progress again. Then, the same process can be repeated.\n\nAs the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with two nodes decreases. Only the first `PeerState` struct will deadlock, and not the others (RPC `dump_consensus_state` accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).\n\nThis regression was fixed in versions 0.34.29 and 0.37.2. Some workarounds are available. For case 1 (hitting the deadlock via logs), either don't set the log output to \"json\", leave at \"plain\", or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher. For case 2 (hitting the deadlock via RPC `dump_consensus_state`), do not expose `dump_consensus_state` RPC endpoint to the public internet (e.g., via rules in one's nginx setup).",
        "URL": "https://github.com/cometbft/cometbft/pull/863",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "crater-invoice/crater",
        "CVE_ID": "CVE-2023-46865",
        "Problem_Type": "CWE-94",
        "Description": "/api/v1/company/upload-logo in CompanyController.php in crater through 6.0.6 allows a superadmin to execute arbitrary PHP code by placing this code into an image/png IDAT chunk of a Company Logo image.",
        "URL": "https://github.com/crater-invoice/crater/pull/1271",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "curl/curl",
        "CVE_ID": "CVE-2020-19909",
        "Problem_Type": "CWE-190",
        "Description": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
        "URL": "https://github.com/curl/curl/pull/4166",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "devttys0/yaffshiv",
        "CVE_ID": "CVE-2023-0593",
        "Problem_Type": "CWE-22",
        "Description": "A path traversal vulnerability affects yaffshiv YAFFS filesystem extractor. By crafting a malicious YAFFS file, an attacker could force yaffshiv to write outside of the extraction directory.\n\nThis issue affects yaffshiv up to version 0.1 included, which is the most recent at time of publication.\n\n",
        "URL": "https://github.com/devttys0/yaffshiv/pull/3/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dgrijalva/jwt-go",
        "CVE_ID": "CVE-2020-26160",
        "Problem_Type": "CWE-287",
        "Description": "jwt-go before 4.0.0-preview1 allows attackers to bypass intended access restrictions in situations with []string{} for m[\"aud\"] (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check.",
        "URL": "https://github.com/dgrijalva/jwt-go/pull/426",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DianoxDragon/Hawn",
        "CVE_ID": "CVE-2019-15559",
        "Problem_Type": "CWE-89",
        "Description": "DianoxDragon Hawn before 2019-07-10 allows SQL injection.",
        "URL": "https://github.com/DianoxDragon/Hawn/pull/6",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dom96/httpbeast",
        "CVE_ID": "CVE-2023-50694",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue in dom96 HTTPbeast v.0.4.1 and before allows a remote attacker to send a malicious crafted request due to insufficient parsing in the parser.nim component.",
        "URL": "https://github.com/dom96/httpbeast/pull/96",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "domoticz/domoticz",
        "CVE_ID": "CVE-2019-15480",
        "Problem_Type": "CWE-79",
        "Description": "Domoticz 4.10717 has XSS via item.Name.",
        "URL": "https://github.com/domoticz/domoticz/pull/3368",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-theia/theia",
        "CVE_ID": "CVE-2021-41038",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In versions of the @theia/plugin-ext component of Eclipse Theia prior to 1.18.0, Webview contents can be hijacked via postMessage().",
        "URL": "https://github.com/eclipse-theia/theia/pull/10125",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "edx/configuration",
        "CVE_ID": "CVE-2015-2186",
        "Problem_Type": "CWE-20",
        "Description": "The Ansible edxapp role in the Configuration Repo in edX allows remote websites to spoof edX accounts by leveraging use of the string literal \"False\" instead of a boolean False for the CORS_ORIGIN_ALLOW_ALL setting. Note: this vulnerability was fixed on 2015-03-06, but the version number was not changed.",
        "URL": "https://github.com/edx/configuration/pull/1885/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "edx/edx-platform",
        "CVE_ID": "CVE-2015-6671",
        "Problem_Type": "CWE-200",
        "Description": "Open edX edx-platform before 2015-08-25 requires use of the database for storage of SAML SSO secrets, which makes it easier for context-dependent attackers to obtain sensitive information by leveraging access to a database backup.",
        "URL": "https://github.com/edx/edx-platform/pull/9471",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "edx/edx-platform",
        "CVE_ID": "CVE-2017-18380",
        "Problem_Type": "CWE-284",
        "Description": "edx-platform before 2017-08-03 allows attackers to trigger password-reset e-mail messages in which the reset link has an attacker-controlled domain name.",
        "URL": "https://github.com/edx/edx-platform/pull/15773",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "edx/edx-platform",
        "CVE_ID": "CVE-2021-39248",
        "Problem_Type": "CWE-79",
        "Description": "Open edX through Lilac.1 allows XSS in common/static/common/js/discussion/utils.js via crafted LaTeX content within a discussion.",
        "URL": "https://github.com/edx/edx-platform/pull/28379",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "etcd-io/etcd",
        "CVE_ID": "CVE-2022-34038",
        "Problem_Type": "CWE-787",
        "Description": "Etcd v3.5.4 allows remote attackers to cause a denial of service via function PageWriter.write in pagewriter.go. NOTE: the vendor's position is that this is not a vulnerability.",
        "URL": "https://github.com/etcd-io/etcd/pull/14022",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13504",
        "Problem_Type": "CWE-125",
        "Description": "There is an out-of-bounds read in Exiv2::MrwImage::readMetadata in mrwimage.cpp in Exiv2 through 0.27.2.",
        "URL": "https://github.com/Exiv2/exiv2/pull/943",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-29458",
        "Problem_Type": "CWE-125",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.3 and earlier. The out-of-bounds read is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service by crashing Exiv2, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as insert. The bug is fixed in version v0.27.4.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1536",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fcitx/fcitx5",
        "CVE_ID": "CVE-2021-37311",
        "Problem_Type": "CWE-120",
        "Description": "Buffer Overflow vulnerability in fcitx5 5.0.8 allows attackers to cause a denial of service via crafted message to the application's listening port.",
        "URL": "https://github.com/fcitx/fcitx5/pull/308",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2022-24843",
        "Problem_Type": "CWE-22",
        "Description": "Gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. Gin-vue-admin 2.50 has arbitrary file read vulnerability due to a lack of parameter validation. This has been resolved in version 2.5.1. There are no known workarounds for this issue.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/1024",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2022-24844",
        "Problem_Type": "CWE-89",
        "Description": "Gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. The problem occurs in the following code in server/service/system/sys_auto_code_pgsql.go, which means that PostgreSQL must be used as the database for this vulnerability to occur. Users must: Require JWT login) and be using PostgreSQL to be affected. This issue has been resolved in version 2.5.1. There are no known workarounds.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/1024",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2022-39345",
        "Problem_Type": "CWE-22",
        "Description": "Gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. Gin-vue-admin prior to 2.5.4 is vulnerable to path traversal, which leads to file upload vulnerabilities. Version 2.5.4 contains a patch for this issue. There are no workarounds aside from upgrading to a patched version.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/1264",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flyteorg/flyteadmin",
        "CVE_ID": "CVE-2022-31145",
        "Problem_Type": "CWE-613",
        "Description": "FlyteAdmin is the control plane for Flyte responsible for managing entities and administering workflow executions. In versions 1.1.30 and prior, authenticated users using an external identity provider can continue to use Access Tokens and ID Tokens even after they expire. Users who use FlyteAdmin as the OAuth2 Authorization Server are unaffected by this issue. A patch is available on the `master` branch of the repository. As a workaround, rotating signing keys immediately will invalidate all open sessions and force all users to attempt to obtain new tokens. Those who use this workaround should continue to rotate keys until FlyteAdmin has been upgraded and hide FlyteAdmin deployment ingress URL from the internet.",
        "URL": "https://github.com/flyteorg/flyteadmin/pull/455",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GamerPolls/gamerpolls.com",
        "CVE_ID": "CVE-2018-10966",
        "Problem_Type": "CWE-798",
        "Description": "An issue was discovered in GamerPolls 0.4.6, related to config/environments/all.js and config/initializers/02_passport.js. An attacker can edit the Passport.js contents of the session cookie to contain the ID number of the account they wish to take over, and re-sign it using the hard coded secret.",
        "URL": "https://github.com/GamerPolls/gamerpolls.com/pull/56",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "github/advisory-database",
        "CVE_ID": "CVE-2023-43669",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The Tungstenite crate before 0.20.1 for Rust allows remote attackers to cause a denial of service (minutes of CPU consumption) via an excessive length of an HTTP header in a client handshake. The length affects both how many times a parse is attempted (e.g., thousands of times) and the average amount of data for each parse attempt (e.g., millions of bytes).",
        "URL": "https://github.com/github/advisory-database/pull/2752",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "go-yaml/yaml",
        "CVE_ID": "CVE-2021-4235",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Due to unbounded alias chasing, a maliciously crafted YAML file can cause the system to consume significant system resources. If parsing user input, this may be used as a denial of service vector.",
        "URL": "https://github.com/go-yaml/yaml/pull/375",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GomSpace/libcsp",
        "CVE_ID": "CVE-2016-8596",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in the csp_can_process_frame in csp_if_can.c in the libcsp library v1.4 and earlier allows hostile components connected to the canbus to execute arbitrary code via a long csp packet.",
        "URL": "https://github.com/GomSpace/libcsp/pull/80",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GomSpace/libcsp",
        "CVE_ID": "CVE-2016-8597",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in the csp_sfp_recv_fp in csp_sfp.c in the libcsp library v1.4 and earlier allows hostile components with network access to the SFP underlying network layers to execute arbitrary code via specially crafted SFP packets.",
        "URL": "https://github.com/GomSpace/libcsp/pull/80",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GomSpace/libcsp",
        "CVE_ID": "CVE-2016-8598",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in the zmq interface in csp_if_zmqhub.c in the libcsp library v1.4 and earlier allows hostile computers connected via a zmq interface to execute arbitrary code via a long packet.",
        "URL": "https://github.com/GomSpace/libcsp/pull/80",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/sa360-webquery-bigquery",
        "CVE_ID": "CVE-2021-22571",
        "Problem_Type": "CWE-276",
        "Description": "A local attacker could read files from some other users' SA360 reports stored in the /tmp folder during staging process before the files are loaded in BigQuery. We recommend upgrading to version 1.0.3 or above.",
        "URL": "https://github.com/google/sa360-webquery-bigquery/pull/15",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jbt/markdown-editor",
        "CVE_ID": "CVE-2020-19952",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulnerability in Rendering Engine in jbt Markdown Editor thru commit 2252418c27dffbb35147acd8ed324822b8919477, allows remote attackers to execute arbirary code via crafted payload or opening malicious .md file.",
        "URL": "https://github.com/jbt/markdown-editor/pull/110",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kiegroup/drools",
        "CVE_ID": "CVE-2021-41411",
        "Problem_Type": "CWE-611",
        "Description": "drools <=7.59.x is affected by an XML External Entity (XXE) vulnerability in KieModuleMarshaller.java. The Validator class is not used correctly, resulting in the XXE injection vulnerability.",
        "URL": "https://github.com/kiegroup/drools/pull/3808",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "latchset/jwcrypto",
        "CVE_ID": "CVE-2016-6298",
        "Problem_Type": "CWE-200",
        "Description": "The _Rsa15 class in the RSA 1.5 algorithm implementation in jwa.py in jwcrypto before 0.3.2 lacks the Random Filling protection mechanism, which makes it easier for remote attackers to obtain cleartext data via a Million Message Attack (MMA).",
        "URL": "https://github.com/latchset/jwcrypto/pull/66",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lecram/gifdec",
        "CVE_ID": "CVE-2022-43359",
        "Problem_Type": "CWE-125",
        "Description": "Gifdec commit 1dcbae19363597314f6623010cc80abad4e47f7c was discovered to contain an out-of-bounds read in the function read_image_data. This vulnerability is triggered when parsing a crafted Gif file.",
        "URL": "https://github.com/lecram/gifdec/pull/23",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "etcd-io/etcd",
        "CVE_ID": "CVE-2022-34038",
        "Problem_Type": "CWE-787",
        "Description": "Etcd v3.5.4 allows remote attackers to cause a denial of service via function PageWriter.write in pagewriter.go. NOTE: the vendor's position is that this is not a vulnerability.",
        "URL": "https://github.com/etcd-io/etcd/pull/14022",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "LimeSurvey/LimeSurvey",
        "CVE_ID": "CVE-2020-23710",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulneraiblity in LimeSurvey 4.2.5 on textbox via the Notifications & data feature.",
        "URL": "https://github.com/LimeSurvey/LimeSurvey/pull/1441#partial-pull-merging",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "LINBIT/csync2",
        "CVE_ID": "CVE-2019-15523",
        "Problem_Type": "CWE-252",
        "Description": "An issue was discovered in LINBIT csync2 through 2.0. It does not correctly check for the return value GNUTLS_E_WARNING_ALERT_RECEIVED of the gnutls_handshake() function. It neglects to call this function again, as required by the design of the API.",
        "URL": "https://github.com/LINBIT/csync2/pull/13/commits/92742544a56bcbcd9ec99ca15f898b31797e39e2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mandovinnie/Lute-Tab",
        "CVE_ID": "CVE-2019-15783",
        "Problem_Type": "CWE-119",
        "Description": "Lute-Tab before 2019-08-23 has a buffer overflow in pdf_print.cc.",
        "URL": "https://github.com/mandovinnie/Lute-Tab/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "memcached/memcached",
        "CVE_ID": "CVE-2021-37519",
        "Problem_Type": "CWE-787",
        "Description": "Buffer Overflow vulnerability in authfile.c memcached 1.6.9 allows attackers to cause a denial of service via crafted authenticattion file.",
        "URL": "https://github.com/memcached/memcached/pull/806/commits/264722ae4e248b453be00e97197dadc685b60fd0",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "microsoft/onefuzz",
        "CVE_ID": "CVE-2021-37705",
        "Problem_Type": "CWE-863",
        "Description": "OneFuzz is an open source self-hosted Fuzzing-As-A-Service platform. Starting with OneFuzz 2.12.0 or greater, an incomplete authorization check allows an authenticated user from any Azure Active Directory tenant to make authorized API calls to a vulnerable OneFuzz instance. To be vulnerable, a OneFuzz deployment must be both version 2.12.0 or greater and deployed with the non-default --multi_tenant_domain option. This can result in read/write access to private data such as software vulnerability and crash information, security testing tools and proprietary code and symbols. Via authorized API calls, this also enables tampering with existing data and unauthorized code execution on Azure compute resources. This issue is resolved starting in release 2.31.0, via the addition of application-level check of the bearer token's `issuer` against an administrator-configured allowlist. As a workaround users can restrict access to the tenant of a deployed OneFuzz instance < 2.31.0 by redeploying in the default configuration, which omits the `--multi_tenant_domain` option.",
        "URL": "https://github.com/microsoft/onefuzz/pull/1153",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2023-28840",
        "Problem_Type": "CWE-420",
        "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby, is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in dockerd and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe overlay network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the u32 iptables extension provided by the xt_u32 kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nTwo iptables rules serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the INPUT filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container\u00c2\u2019s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\nPatches are available in Moby releases 23.0.3 and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary to prevent all VXLAN packet injection, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.",
        "URL": "https://github.com/moby/moby/pull/45118",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2023-28841",
        "Problem_Type": "CWE-311",
        "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn iptables rule designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may use Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability this is no longer guaranteed.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary in order to prevent unintentionally leaking unencrypted traffic over the Internet, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.",
        "URL": "https://github.com/moby/moby/pull/45118",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6830",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the alaw2linear_buf function in G711.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6832",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the decodeBlock in MSADPCM.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0, 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6833",
        "Problem_Type": "CWE-369",
        "Description": "The runPull function in libaudiofile/modules/BlockCodec.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (divide-by-zero error and crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6834",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the ulaw2linear_buf function in G711.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0, 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6835",
        "Problem_Type": "CWE-369",
        "Description": "The reset1 function in libaudiofile/modules/BlockCodec.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (divide-by-zero error and crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6836",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the Expand3To4Module::run function in libaudiofile/modules/SimpleModule.h in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "netty/netty",
        "CVE_ID": "CVE-2016-4970",
        "Problem_Type": "CWE-835",
        "Description": "handler/ssl/OpenSslEngine.java in Netty 4.0.x before 4.0.37.Final and 4.1.x before 4.1.1.Final allows remote attackers to cause a denial of service (infinite loop).",
        "URL": "https://github.com/netty/netty/pull/5364",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "neutrinolabs/xrdp",
        "CVE_ID": "CVE-2013-1430",
        "Problem_Type": "CWE-255",
        "Description": "An issue was discovered in xrdp before 0.9.1. When successfully logging in using RDP into an xrdp session, the file ~/.vnc/sesman_${username}_passwd is created. Its content is the equivalent of the user's cleartext password, DES encrypted with a known key.",
        "URL": "https://github.com/neutrinolabs/xrdp/pull/497",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "oauthjs/node-oauth2-server",
        "CVE_ID": "CVE-2017-18924",
        "Problem_Type": "CWE-94",
        "Description": "oauth2-server (aka node-oauth2-server) through 3.1.1 implements OAuth 2.0 without PKCE. It does not prevent authorization code injection. This is similar to CVE-2020-7692. NOTE: the vendor states 'As RFC7636 is an extension, I think the claim in the Readme of \"RFC 6749 compliant\" is valid and not misleading and I also therefore wouldn't describe this as a \"vulnerability\" with the library per se.",
        "URL": "https://github.com/oauthjs/node-oauth2-server/pull/452",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ofirdagan/cross-domain-local-storage",
        "CVE_ID": "CVE-2015-9544",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in xdLocalStorage through 2.0.5. The receiveMessage() function in xdLocalStoragePostMessageApi.js does not implement any validation of the origin of web messages. Remote attackers who can entice a user to load a malicious site can exploit this issue to impact the confidentiality and integrity of data in the local storage of the vulnerable site via malicious web messages.",
        "URL": "https://github.com/ofirdagan/cross-domain-local-storage/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ofirdagan/cross-domain-local-storage",
        "CVE_ID": "CVE-2015-9545",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in xdLocalStorage through 2.0.5. The receiveMessage() function in xdLocalStorage.js does not implement any validation of the origin of web messages. Remote attackers who can entice a user to load a malicious site can exploit this issue to impact the confidentiality and integrity of data in the local storage of the vulnerable site via malicious web messages.",
        "URL": "https://github.com/ofirdagan/cross-domain-local-storage/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OISF/libhtp",
        "CVE_ID": "CVE-2019-17420",
        "Problem_Type": "CWE-459",
        "Description": "In OISF LibHTP before 0.5.31, as used in Suricata 4.1.4 and other products, an HTTP protocol parsing error causes the http_header signature to not alert on a response with a single \\r\\n ending.",
        "URL": "https://github.com/OISF/libhtp/pull/213",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OISF/suricata",
        "CVE_ID": "CVE-2019-10051",
        "Problem_Type": "CWE-754",
        "Description": "An issue was discovered in Suricata 4.1.3. If the function filetracker_newchunk encounters an unsafe \"Some(sfcm) => { ft.new_chunk }\" item, then the program enters an smb/files.rs error condition and crashes.",
        "URL": "https://github.com/OISF/suricata/pull/3734",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openmrs/openmrs-module-htmlformentry",
        "CVE_ID": "CVE-2018-16521",
        "Problem_Type": "CWE-611",
        "Description": "An XML External Entity (XXE) vulnerability exists in HTML Form Entry 3.7.0, as distributed in OpenMRS Reference Application 2.8.0.",
        "URL": "https://github.com/openmrs/openmrs-module-htmlformentry/pull/137",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/cluster-kube-apiserver-operator",
        "CVE_ID": "CVE-2019-10200",
        "Problem_Type": "CWE-284",
        "Description": "A flaw was discovered in OpenShift Container Platform 4 where, by default, users with access to create pods also have the ability to schedule workloads on master nodes. Pods with permission to access the host network, running on master nodes, can retrieve security credentials for the master AWS IAM role, allowing management access to AWS resources. With access to the security credentials, the user then has access to the entire infrastructure. Impact to data and system availability is high.",
        "URL": "https://github.com/openshift/cluster-kube-apiserver-operator/pull/524",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openssh/openssh-portable",
        "CVE_ID": "CVE-2016-20012",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "OpenSSH through 8.7 allows remote attackers, who have a suspicion that a certain combination of username and public key is known to an SSH server, to test whether this suspicion is correct. This occurs because a challenge is sent only when that combination could be valid for a login session. NOTE: the vendor does not recognize user enumeration as a vulnerability for this product",
        "URL": "https://github.com/openssh/openssh-portable/pull/270",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openssh/openssh-portable",
        "CVE_ID": "CVE-2021-36368",
        "Problem_Type": "CWE-287",
        "Description": "An issue was discovered in OpenSSH before 8.9. If a client is using public-key authentication with agent forwarding but without -oLogLevel=verbose, and an attacker has silently modified the server to support the None authentication option, then the user cannot determine whether FIDO authentication is going to confirm that the user wishes to connect to that server, or that the user wishes to allow that server to connect to a different server on the user's behalf. NOTE: the vendor's position is \"this is not an authentication bypass, since nothing is being bypassed.",
        "URL": "https://github.com/openssh/openssh-portable/pull/258",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openthread/wpantund",
        "CVE_ID": "CVE-2020-8916",
        "Problem_Type": "CWE-401",
        "Description": "A memory leak in Openthread's wpantund versions up to commit 0e5d1601febb869f583e944785e5685c6c747be7, when used in an environment where wpanctl is directly interfacing with the control driver (eg: debug environments) can allow an attacker to crash the service (DoS). We recommend updating, or to restrict access in your debug environments.",
        "URL": "https://github.com/openthread/wpantund/pull/468/commits/0e5d1601febb869f583e944785e5685c6c747be7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3f108441e23e033b936e85be5b6877dd0a1fbf1c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "d013d22dcf7610375da6abf57cbe2302f0f1712e"
        ],
        "matched": [
            "d013d22dcf7610375da6abf57cbe2302f0f1712e"
        ]
    },
    {
        "repo_name": "OpenTSDB/opentsdb",
        "CVE_ID": "CVE-2023-25826",
        "Problem_Type": "CWE-78",
        "Description": "\nDue to insufficient validation of parameters passed to the legacy HTTP query API, it is possible to inject crafted OS commands into multiple parameters and execute malicious code on the OpenTSDB host system. This exploit exists due to an incomplete fix that was made when this vulnerability was previously disclosed as CVE-2020-35476. Regex validation that was implemented to restrict allowed input to the query API does not work as intended, allowing crafted commands to bypass validation.\n\n",
        "URL": "https://github.com/OpenTSDB/opentsdb/pull/2275",
        "Tag": "['Patch']",
        "fix_commit_hash": "07c4641471c6f5c2ab5aab615969e97211eb50d9",
        "inducing_commit_hash_pyszz": [
            "22b27ea30a859a6dbdcd65fcdf61190d46e1b677"
        ],
        "inducing_commit_hash_pd": [
            "439fd2a24cd4808ea993f3fc817c3cf9df8a55a1",
            "22b27ea30a859a6dbdcd65fcdf61190d46e1b677"
        ],
        "matched": [
            "22b27ea30a859a6dbdcd65fcdf61190d46e1b677"
        ]
    },
    {
        "repo_name": "OpenTSDB/opentsdb",
        "CVE_ID": "CVE-2023-25827",
        "Problem_Type": "CWE-79",
        "Description": "\nDue to insufficient validation of parameters reflected in error messages by the legacy HTTP query API and the logging endpoint, it is possible to inject and execute malicious JavaScript within the browser of a targeted OpenTSDB user. This issue shares the same root cause as CVE-2018-13003, a reflected XSS vulnerability with the suggestion endpoint.\n\n",
        "URL": "https://github.com/OpenTSDB/opentsdb/pull/2274",
        "Tag": "['Patch']",
        "fix_commit_hash": "fa88d3e4b5369f9fb73da384fab0b23e246309ba",
        "inducing_commit_hash_pyszz": [
            "e547b49634649deb40cc175913cb72738a684ef1"
        ],
        "inducing_commit_hash_pd": [
            "65d805391ed6ebee60fae1cf535eaea5deda1c19",
            "37b3a9d0008e63399d1e528b5c4bb496b6dec121",
            "e547b49634649deb40cc175913cb72738a684ef1"
        ],
        "matched": [
            "e547b49634649deb40cc175913cb72738a684ef1"
        ]
    },
    {
        "repo_name": "OpenZeppelin/cairo-contracts",
        "CVE_ID": "CVE-2022-31153",
        "Problem_Type": "CWE-863",
        "Description": "OpenZeppelin Contracts for Cairo is a library for contract development written in Cairo for StarkNet, a decentralized ZK Rollup. Version 0.2.0 is vulnerable to an error that renders account contracts unusable on live networks. This issue affects all accounts (vanilla and ethereum flavors) in the v0.2.0 release of OpenZeppelin Contracts for Cairo, which are not whitelisted on StarkNet mainnet. Only goerli deployments of v0.2.0 accounts are affected. This faulty behavior is not observed in StarkNet's testing framework. This bug has been patched in v0.2.1.",
        "URL": "https://github.com/OpenZeppelin/cairo-contracts/pull/387",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c2007df15001a411740376efb1b2b78df98e59d8",
        "inducing_commit_hash_pyszz": [
            "ccb95c520eda207d3f271d667afa9063f41eb85c"
        ],
        "inducing_commit_hash_pd": [
            "60f52a3db6c8cd0b3b0282d3eec4af742b7fa99e",
            "2cd60279c3332285d47edf9ee3888b71257acdc9"
        ],
        "matched": [
            "ccb95c520eda207d3f271d667afa9063f41eb85c"
        ]
    },
    {
        "repo_name": "OpenZeppelin/cairo-contracts",
        "CVE_ID": "CVE-2023-23940",
        "Problem_Type": "CWE-347",
        "Description": "OpenZeppelin Contracts for Cairo is a library for secure smart contract development written in Cairo for StarkNet, a decentralized ZK Rollup. `is_valid_eth_signature` is missing a call to `finalize_keccak` after calling `verify_eth_signature`. As a result, any contract using `is_valid_eth_signature` from the account library (such as the `EthAccount` preset) is vulnerable to a malicious sequencer. Specifically, the malicious sequencer would be able to bypass signature validation to impersonate an instance of these accounts. The issue has been patched in 0.6.1.\n",
        "URL": "https://github.com/OpenZeppelin/cairo-contracts/pull/542/commits/6d4cb750478fca2fd916f73297632f899aca9299",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8d5c0b4199a178f1d26d46c8d34de5edd97a5940",
        "inducing_commit_hash_pyszz": [
            "60f52a3db6c8cd0b3b0282d3eec4af742b7fa99e"
        ],
        "inducing_commit_hash_pd": [
            "2cd60279c3332285d47edf9ee3888b71257acdc9",
            "a9894b4e5cd59efb63757e846c603a5c64b6b44a"
        ],
        "matched": [
            "60f52a3db6c8cd0b3b0282d3eec4af742b7fa99e"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-31170",
        "Problem_Type": "CWE-252",
        "Description": "OpenZeppelin Contracts is a library for smart contract development. Versions 4.0.0 until 4.7.1 are vulnerable to ERC165Checker reverting instead of returning `false`. `ERC165Checker.supportsInterface` is designed to always successfully return a boolean, and under no circumstance revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-165 as expected, specifically if it returns a value other than 0 or 1. The contracts that may be affected are those that use `ERC165Checker` to check for support for an interface and then handle the lack of support in a way other than reverting. The issue was patched in version 4.7.1.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "628a6e2866620fe638fc3dd77419b5572d3b87d7",
        "inducing_commit_hash_pyszz": [
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ],
        "inducing_commit_hash_pd": [
            "60205944bbaf236c4591e905aaffdc770a906555",
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ],
        "matched": [
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-31172",
        "Problem_Type": "CWE-347",
        "Description": "OpenZeppelin Contracts is a library for smart contract development. Versions 4.1.0 until 4.7.1 are vulnerable to the SignatureChecker reverting. `SignatureChecker.isValidSignatureNow` is not expected to revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-1271 as expected. The contracts that may be affected are those that use `SignatureChecker` to check the validity of a signature and handle invalid signatures in a way other than reverting. The issue was patched in version 4.7.1.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "628a6e2866620fe638fc3dd77419b5572d3b87d7",
        "inducing_commit_hash_pyszz": [
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ],
        "inducing_commit_hash_pd": [
            "60205944bbaf236c4591e905aaffdc770a906555",
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ],
        "matched": [
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-31198",
        "Problem_Type": "CWE-682",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. This issue concerns instances of Governor that use the module `GovernorVotesQuorumFraction`, a mechanism that determines quorum requirements as a percentage of the voting token's total supply. In affected instances, when a proposal is passed to lower the quorum requirements, past proposals may become executable if they had been defeated only due to lack of quorum, and the number of votes it received meets the new quorum requirement. Analysis of instances on chain found only one proposal that met this condition, and we are actively monitoring for new occurrences of this particular issue. This issue has been patched in v4.7.2. Users are advised to upgrade. Users unable to upgrade should consider avoiding lowering quorum requirements if a past proposal was defeated for lack of quorum.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8ea1fc87c9686ce203a2fa38f7b789246e4e16f7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "6c1a6340539be1967e63158fb9f997ef62d47f70"
        ],
        "matched": [
            "6c1a6340539be1967e63158fb9f997ef62d47f70"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-35915",
        "Problem_Type": "CWE-770",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. The target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost. The issue has been fixed in v4.7.2. Users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dc4869eb233e2f1b1f9ee96f4a406efa449e9753",
        "inducing_commit_hash_pyszz": [
            "628a6e2866620fe638fc3dd77419b5572d3b87d7"
        ],
        "inducing_commit_hash_pd": [
            "60205944bbaf236c4591e905aaffdc770a906555",
            "cca71ab7095d66598758933505960b05d2a914ee",
            "628a6e2866620fe638fc3dd77419b5572d3b87d7"
        ],
        "matched": [
            "628a6e2866620fe638fc3dd77419b5572d3b87d7"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-35916",
        "Problem_Type": "CWE-669",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. Contracts using the cross chain utilities for Arbitrum L2, `CrossChainEnabledArbitrumL2` or `LibArbitrumL2`, will classify direct interactions of externally owned accounts (EOAs) as cross chain calls, even though they are not started on L1. This issue has been patched in v4.7.2. Users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "81336aefb52d5777cd140cf2eac31fdf65d9bc95",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "668a648bc677740ab64eb26337de72544c4119ca"
        ],
        "matched": [
            "668a648bc677740ab64eb26337de72544c4119ca"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-35961",
        "Problem_Type": "CWE-354",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. The functions `ECDSA.recover` and `ECDSA.tryRecover` are vulnerable to a kind of signature malleability due to accepting EIP-2098 compact signatures in addition to the traditional 65 byte signature format. This is only an issue for the functions that take a single `bytes` argument, and not the functions that take `r, v, s` or `r, vs` as separate arguments. The potentially affected contracts are those that implement signature reuse or replay protection by marking the signature itself as used rather than the signed message or a nonce included in it. A user may take a signature that has already been submitted, submit it again in a different form, and bypass this protection. The issue has been patched in 4.7.3.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3610",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d693d89d99325f395182e4f547dbf5ff8e5c3c87",
        "inducing_commit_hash_pyszz": [
            "3bdf4bfd29b145288ec741bef259a384007ed5cf"
        ],
        "inducing_commit_hash_pd": [
            "555be63c909cc29617d828df62052f0b95147e50",
            "0a05f6fa458b39ccf58c30d0632e435b0ee2aba9",
            "541e82144f691aa171c53ba8c3b32ef7f05b99a5"
        ],
        "matched": [
            "3bdf4bfd29b145288ec741bef259a384007ed5cf"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2022-39384",
        "Problem_Type": "CWE-665",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. Before version 4.4.1 but after 3.2.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible in the scenario described above, breaking the expectation that there is a single execution. Note that upgradeable proxies are commonly initialized together with contract creation, where reentrancy is not feasible, so the impact of this issue is believed to be minor. This issue has been patched, please upgrade to version 4.4.1. As a workaround, avoid untrusted external calls during initialization.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3006",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "08840b9f8c21b235466b6d0c5a00a4d3a2de2682",
        "inducing_commit_hash_pyszz": [
            "6481b05e4f748bcffd8bb39c2c7458fd87f66ff1"
        ],
        "inducing_commit_hash_pd": [
            "0059b17dfc1e2226ca1a1c3b5e7a56817c32d47d",
            "cb791a1b219c72e285ee49bda7b5b9e289fef1ee"
        ],
        "matched": [
            "6481b05e4f748bcffd8bb39c2c7458fd87f66ff1"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2023-30541",
        "Problem_Type": "CWE-436",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata. The probability of an accidental clash is negligible, but one could be caused deliberately and could cause a reduction in availability. The issue has been fixed in version 4.8.3. As a workaround if a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154",
        "Tag": "['Patch']",
        "fix_commit_hash": "5523c1482bd0a503e4c4dfe821bd2f6b523f3c86",
        "inducing_commit_hash_pyszz": [
            "2a62fb4a2d9b9248aa15bba9c89d75a7ddc8cfc6"
        ],
        "inducing_commit_hash_pd": [
            "2a62fb4a2d9b9248aa15bba9c89d75a7ddc8cfc6",
            "cb791a1b219c72e285ee49bda7b5b9e289fef1ee",
            "91f16a7e4751c1dadee93e1212e09baa868fa190",
            "b0cf6fbb7a70f31527f36579ad644e1cf12fdf4e",
            "90ed1af972299070f51bf4665a85da56ac4d355e",
            "18c7efe800df6fc19554ece3b1f238e9e028a1db",
            "faec973e09af21c57e22efdd0229486118476835",
            "5756e31999009f906b6179e42bf062889ba4081e",
            "1c676ac0ec344e07d5b78adbbdf18726b9b3019c"
        ],
        "matched": [
            "2a62fb4a2d9b9248aa15bba9c89d75a7ddc8cfc6"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2023-40014",
        "Problem_Type": "CWE-116",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. Starting in version 4.0.0 and prior to version 4.9.3, contracts using `ERC2771Context` along with a custom trusted forwarder may see `_msgSender` return `address(0)` in calls that originate from the forwarder with calldata shorter than 20 bytes. This combination of circumstances does not appear to be common, in particular it is not the case for `MinimalForwarder` from OpenZeppelin Contracts, or any deployed forwarder the team is aware of, given that the signer address is appended to all calls that originate from these forwarders. The problem has been patched in v4.9.3.\n",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4484",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "9445f96223041abf2bf08daa56f8da50b674cbcd",
        "inducing_commit_hash_pyszz": [
            "28d9ac2bdb321b24fe06b8b916ee2962889f772b"
        ],
        "inducing_commit_hash_pd": [
            "28d9ac2bdb321b24fe06b8b916ee2962889f772b",
            "f8cc8b844a9f92f63dc55aa581f7d643a1bc5ac1"
        ],
        "matched": [
            "28d9ac2bdb321b24fe06b8b916ee2962889f772b"
        ]
    },
    {
        "repo_name": "OpenZeppelin/openzeppelin-contracts",
        "CVE_ID": "CVE-2023-40014",
        "Problem_Type": "CWE-116",
        "Description": "OpenZeppelin Contracts is a library for secure smart contract development. Starting in version 4.0.0 and prior to version 4.9.3, contracts using `ERC2771Context` along with a custom trusted forwarder may see `_msgSender` return `address(0)` in calls that originate from the forwarder with calldata shorter than 20 bytes. This combination of circumstances does not appear to be common, in particular it is not the case for `MinimalForwarder` from OpenZeppelin Contracts, or any deployed forwarder the team is aware of, given that the signer address is appended to all calls that originate from these forwarders. The problem has been patched in v4.9.3.\n",
        "URL": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/4481",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "28d9ac2bdb321b24fe06b8b916ee2962889f772b",
        "inducing_commit_hash_pyszz": [
            "f8cc8b844a9f92f63dc55aa581f7d643a1bc5ac1"
        ],
        "inducing_commit_hash_pd": [
            "f8cc8b844a9f92f63dc55aa581f7d643a1bc5ac1"
        ],
        "matched": [
            "f8cc8b844a9f92f63dc55aa581f7d643a1bc5ac1"
        ]
    },
    {
        "repo_name": "openzfs/zfs",
        "CVE_ID": "CVE-2023-49298",
        "Problem_Type": "CWE-639",
        "Description": "OpenZFS through 2.1.13 and 2.2.x through 2.2.1, in certain scenarios involving applications that try to rely on efficient copying of file data, can replace file contents with zero-valued bytes and thus potentially disable security mechanisms. NOTE: this issue is not always security related, but can be security related in realistic situations. A possible example is cp, from a recent GNU Core Utilities (coreutils) version, when attempting to preserve a rule set for denying unauthorized access. (One might use cp when configuring access control, such as with the /etc/hosts.deny file specified in the IBM Support reference.) NOTE: this issue occurs less often in version 2.2.1, and in versions before 2.1.4, because of the default configuration in those versions.",
        "URL": "https://github.com/openzfs/zfs/pull/15571",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "30d581121bb122c90959658e7b28b1672d342897",
        "inducing_commit_hash_pyszz": [
            "accfdeb948dab87a9576084a582f5bfeda0bd2f2"
        ],
        "inducing_commit_hash_pd": [
            "accfdeb948dab87a9576084a582f5bfeda0bd2f2"
        ],
        "matched": [
            "accfdeb948dab87a9576084a582f5bfeda0bd2f2"
        ]
    },
    {
        "repo_name": "opf/openproject",
        "CVE_ID": "CVE-2021-32763",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "OpenProject is open-source, web-based project management software. In versions prior to 11.3.3, the `MessagesController` class of OpenProject has a `quote` method that implements the logic behind the Quote button in the discussion forums, and it uses a regex to strip `<pre>` tags from the message being quoted. The `(.|\\s)` part can match a space character in two ways, so an unterminated `<pre>` tag containing `n` spaces causes Ruby's regex engine to backtrack to try 2<sup>n</sup> states in the NFA. This will result in a Regular Expression Denial of Service. The issue is fixed in OpenProject 11.3.3. As a workaround, one may install the patch manually.",
        "URL": "https://github.com/opf/openproject/pull/9447.patch",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8365f575cb5626153aabbd73e55358987e353d52",
        "inducing_commit_hash_pyszz": [
            "29b3614bcb759214bb1aba77c27ac11c8ef6b15b"
        ],
        "inducing_commit_hash_pd": [
            "ab4f9b7ed55b2c102f734548173f4cb618660d71"
        ],
        "matched": [
            "29b3614bcb759214bb1aba77c27ac11c8ef6b15b"
        ]
    },
    {
        "repo_name": "opf/openproject",
        "CVE_ID": "CVE-2021-43830",
        "Problem_Type": "CWE-89",
        "Description": "OpenProject is a web-based project management software. OpenProject versions >= 12.0.0 are vulnerable to a SQL injection in the budgets module. For authenticated users with the \"Edit budgets\" permission, the request to reassign work packages to another budget unsufficiently sanitizes user input in the `reassign_to_id` parameter. The vulnerability has been fixed in version 12.0.4. Versions prior to 12.0.0 are not affected. If you're upgrading from an older version, ensure you are upgrading to at least version 12.0.4. If you are unable to upgrade in a timely fashion, the following patch can be applied: https://github.com/opf/openproject/pull/9983.patch",
        "URL": "https://github.com/opf/openproject/pull/9983",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8fe86234263465c31ee40ed55f9e78d6034cf8c8",
        "inducing_commit_hash_pyszz": [
            "5008824622c19384ff48289b4552938405c82602"
        ],
        "inducing_commit_hash_pd": [
            "5008824622c19384ff48289b4552938405c82602"
        ],
        "matched": [
            "5008824622c19384ff48289b4552938405c82602"
        ]
    },
    {
        "repo_name": "opf/openproject",
        "CVE_ID": "CVE-2021-43830",
        "Problem_Type": "CWE-89",
        "Description": "OpenProject is a web-based project management software. OpenProject versions >= 12.0.0 are vulnerable to a SQL injection in the budgets module. For authenticated users with the \"Edit budgets\" permission, the request to reassign work packages to another budget unsufficiently sanitizes user input in the `reassign_to_id` parameter. The vulnerability has been fixed in version 12.0.4. Versions prior to 12.0.0 are not affected. If you're upgrading from an older version, ensure you are upgrading to at least version 12.0.4. If you are unable to upgrade in a timely fashion, the following patch can be applied: https://github.com/opf/openproject/pull/9983.patch",
        "URL": "https://github.com/opf/openproject/pull/9983.patch",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8fe86234263465c31ee40ed55f9e78d6034cf8c8",
        "inducing_commit_hash_pyszz": [
            "5008824622c19384ff48289b4552938405c82602"
        ],
        "inducing_commit_hash_pd": [
            "5008824622c19384ff48289b4552938405c82602"
        ],
        "matched": [
            "5008824622c19384ff48289b4552938405c82602"
        ]
    },
    {
        "repo_name": "opf/openproject",
        "CVE_ID": "CVE-2023-33960",
        "Problem_Type": "CWE-319",
        "Description": "OpenProject is web-based project management software. For any OpenProject installation, a `robots.txt` file is generated through the server to denote which routes shall or shall not be accessed by crawlers. These routes contain project identifiers of all public projects in the instance. Prior to version 12.5.6, even if the entire instance is marked as `Login required` and prevents all truly anonymous access, the `/robots.txt` route remains publicly available.\n\nVersion 12.5.6 has a fix for this issue. Alternatively, users can download a patchfile to apply the patch to any OpenProject version greater than 10.0 As a workaround, one may mark any public project as non-public and give anyone in need of access to the project a membership.",
        "URL": "https://github.com/opf/openproject/pull/12708",
        "Tag": "['Patch']",
        "fix_commit_hash": "1b649bcd4a6c1abfe6363aa9f0947f13b4a10f99",
        "inducing_commit_hash_pyszz": [
            "ecfa05fad96974cc838a936c4e387b1a725ac80d"
        ],
        "inducing_commit_hash_pd": [
            "ecfa05fad96974cc838a936c4e387b1a725ac80d"
        ],
        "matched": [
            "ecfa05fad96974cc838a936c4e387b1a725ac80d"
        ]
    },
    {
        "repo_name": "oppia/oppia",
        "CVE_ID": "CVE-2021-41733",
        "Problem_Type": "CWE-601",
        "Description": "Oppia 3.1.4 does not verify that certain URLs are valid before navigating to them.",
        "URL": "https://github.com/oppia/oppia/pull/13892",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "88129853022f8f3d4416344e0350701d984b7c43",
        "inducing_commit_hash_pyszz": [
            "33a634b89808618d96e8a1d5f0d6a92f8a33ba8d"
        ],
        "inducing_commit_hash_pd": [
            "9ca25b9b205f279a889bf737845527ff1706f0ae",
            "33a634b89808618d96e8a1d5f0d6a92f8a33ba8d",
            "53b5e103b064937b276936a82c2228d608f26a4a",
            "616e2e5dc89b11de60af9c0576838c6eef449cf6",
            "89d23476a9d6b237d50213990b0812815a74eae1"
        ],
        "matched": [
            "33a634b89808618d96e8a1d5f0d6a92f8a33ba8d"
        ]
    },
    {
        "repo_name": "oppia/oppia",
        "CVE_ID": "CVE-2023-40021",
        "Problem_Type": "CWE-203",
        "Description": "Oppia is an online learning platform. When comparing a received CSRF token against the expected token, Oppia uses the string equality operator (`==`), which is not safe against timing attacks. By repeatedly submitting invalid tokens, an attacker can brute-force the expected CSRF token character by character. Once they have recovered the token, they can then submit a forged request on behalf of a logged-in user and execute privileged actions on that user's behalf. In particular the function to validate received CSRF tokens is at `oppia.core.controllers.base.CsrfTokenManager.is_csrf_token_valid`. An attacker who can lure a logged-in Oppia user to a malicious website can perform any change on Oppia that the user is authorized to do, including changing profile information; creating, deleting, and changing explorations; etc. Note that the attacker cannot change a user's login credentials. An attack would need to complete within 1 second because every second, the time used in computing the token changes. This issue has been addressed in commit `b89bf80837` which has been included in release `3.3.2-hotfix-2`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/oppia/oppia/pull/18769",
        "Tag": "['Patch']",
        "fix_commit_hash": "b89bf808378c1236874b5797a7bda32c77b4af23",
        "inducing_commit_hash_pyszz": [
            "7158cd7c406cc7c7e8c8c884acd23bb1562992dd"
        ],
        "inducing_commit_hash_pd": [
            "845efb776430ae7e8bc5bb4d0c8604739d2540d1",
            "dcc74a5f44eb42186609c6ac66af176fe800af39",
            "a19fe30778610878cef96345f14f0708f7f66f68",
            "72937725a323b0cc1ccec150c81b041abeacb575",
            "58d1033f97b1270e4c95133db7d52b94f4913fb4"
        ],
        "matched": [
            "7158cd7c406cc7c7e8c8c884acd23bb1562992dd"
        ]
    },
    {
        "repo_name": "orangehrm/orangehrm",
        "CVE_ID": "CVE-2019-12839",
        "Problem_Type": "CWE-78",
        "Description": "In OrangeHRM 4.3.1 and before, there is an input validation error within admin/listMailConfiguration (txtSendmailPath parameter) that allows authenticated attackers to achieve arbitrary command execution.",
        "URL": "https://github.com/orangehrm/orangehrm/pull/528",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cfd56018c0d5522d6069406468702b8a224d7b10",
        "inducing_commit_hash_pyszz": [
            "4a3847e5cba1ae97402b67de7fc0548767239965"
        ],
        "inducing_commit_hash_pd": [
            "058e5444f82ccf46777325c62de9e8f496b853d7",
            "7612633abe1d6fb2427e38193c4350c2804c9611",
            "ebaee1be2fa14d38195159721c906d5b1be76f97",
            "17fbf1a4d1ac52f42f262b55ce384359b986e388",
            "4a3847e5cba1ae97402b67de7fc0548767239965"
        ],
        "matched": [
            "4a3847e5cba1ae97402b67de7fc0548767239965"
        ]
    },
    {
        "repo_name": "orangehrm/orangehrm",
        "CVE_ID": "CVE-2020-29437",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection in the Buzz module of OrangeHRM through 4.6 allows remote authenticated attackers to execute arbitrary SQL commands via the orangehrmBuzzPlugin/lib/dao/BuzzDao.php loadMorePostsForm[profileUserId] parameter to the buzz/loadMoreProfile endpoint.",
        "URL": "https://github.com/orangehrm/orangehrm/pull/699",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31118702bc36baf0537c3f55fe20e403bfbeb8d0",
        "inducing_commit_hash_pyszz": [
            "d16790fa0fd392ced5012a79ebe84f16ccfcdc48"
        ],
        "inducing_commit_hash_pd": [
            "704b9ac36d58e770bd2be615a468899b356d7f86",
            "d16790fa0fd392ced5012a79ebe84f16ccfcdc48"
        ],
        "matched": [
            "d16790fa0fd392ced5012a79ebe84f16ccfcdc48"
        ]
    },
    {
        "repo_name": "ory/oathkeeper",
        "CVE_ID": "CVE-2021-32701",
        "Problem_Type": "CWE-863",
        "Description": "ORY Oathkeeper is an Identity & Access Proxy (IAP) and Access Control Decision API that authorizes HTTP requests based on sets of Access Rules. When you make a request to an endpoint that requires the scope `foo` using an access token granted with that `foo` scope, introspection will be valid and that token will be cached. The problem comes when a second requests to an endpoint that requires the scope `bar` is made before the cache has expired. Whether the token is granted or not to the `bar` scope, introspection will be valid. A patch will be released with `v0.38.12-beta.1`. Per default, caching is disabled for the `oauth2_introspection` authenticator. When caching is disabled, this vulnerability does not exist. The cache is checked in [`func (a *AuthenticatorOAuth2Introspection) Authenticate(...)`](https://github.com/ory/oathkeeper/blob/6a31df1c3779425e05db1c2a381166b087cb29a4/pipeline/authn/authenticator_oauth2_introspection.go#L152). From [`tokenFromCache()`](https://github.com/ory/oathkeeper/blob/6a31df1c3779425e05db1c2a381166b087cb29a4/pipeline/authn/authenticator_oauth2_introspection.go#L97) it seems that it only validates the token expiration date, but ignores whether the token has or not the proper scopes. The vulnerability was introduced in PR #424. During review, we failed to require appropriate test coverage by the submitter which is the primary reason that the vulnerability passed the review process.",
        "URL": "https://github.com/ory/oathkeeper/pull/424",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d4557aeac69e84d36dfc2a1ab97c61188c93457f",
        "inducing_commit_hash_pyszz": [
            "12e0fc20ac6c5f573438a270b71396ac67de76eb"
        ],
        "inducing_commit_hash_pd": [
            "b538e3c8fdd52be1e61ed88502fce1de7737d4a9",
            "a421293a05afaca2ac3695940bc72b4b9f7a1b68",
            "296e01254b50b645fae67e51aa668d39652b0778",
            "5e0c8dcdc4a64662f59372a488ec633bcdbc0d85",
            "89709aabfe002fc5ae2e76016fc45a13d74f3d8b",
            "12e0fc20ac6c5f573438a270b71396ac67de76eb",
            "6b509ad5e3ce109521de80540bd0c762b7ecd8d2",
            "b1e5cea5245c07142b6b34f2660ed41e6239b79f",
            "7acfbcaca36645a984baded2dc3cbb689154ef8c"
        ],
        "matched": [
            "12e0fc20ac6c5f573438a270b71396ac67de76eb"
        ]
    },
    {
        "repo_name": "osquery/osquery",
        "CVE_ID": "CVE-2020-11081",
        "Problem_Type": "CWE-114",
        "Description": "osquery before version 4.4.0 enables a privilege escalation vulnerability. If a Window system is configured with a PATH that contains a user-writable directory then a local user may write a zlib1.dll DLL, which osquery will attempt to load. Since osquery runs with elevated privileges this enables local escalation. This is fixed in version 4.4.0.",
        "URL": "https://github.com/osquery/osquery/pull/6433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4d4957f12a6aa0becc9d01d9f97061e1e3d809c5",
        "inducing_commit_hash_pyszz": [
            "c22ab5c404374e5fb7dabbc118d163acf72c1c02"
        ],
        "inducing_commit_hash_pd": [
            "c22ab5c404374e5fb7dabbc118d163acf72c1c02",
            "6481b34e2382ffb5b4c469de3157c63e0ed23ea3"
        ],
        "matched": [
            "c22ab5c404374e5fb7dabbc118d163acf72c1c02"
        ]
    },
    {
        "repo_name": "osquery/osquery",
        "CVE_ID": "CVE-2020-1887",
        "Problem_Type": "CWE-295",
        "Description": "Incorrect validation of the TLS SNI hostname in osquery versions after 2.9.0 and before 4.2.0 could allow an attacker to MITM osquery traffic in the absence of a configured root chain of trust.",
        "URL": "https://github.com/osquery/osquery/pull/6197",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "498d64e9eba3485bcb1333ee125d6e11bcd3baf1",
        "inducing_commit_hash_pyszz": [
            "a3acf2a3e59599a94b52dccb16bf559e45c336f5"
        ],
        "inducing_commit_hash_pd": [
            "971bee444168e7841bcd499867fa4c1c66ad39a6",
            "233f67265582039a815a40fedb22e67639248cba",
            "d0b42a98e2eec3df1b494f7806d0cf603704ed46",
            "2fb774218ae1e3ea768fba3a99ca0cdc10e55172",
            "2a1f496cc5bfdf36776569c566b4453c31cb5e99"
        ],
        "matched": [
            "a3acf2a3e59599a94b52dccb16bf559e45c336f5"
        ]
    },
    {
        "repo_name": "osTicket/osTicket",
        "CVE_ID": "CVE-2020-16193",
        "Problem_Type": "CWE-79",
        "Description": "osTicket before 1.14.3 allows XSS because include/staff/banrule.inc.php has an unvalidated echo $info['notes'] call.",
        "URL": "https://github.com/osTicket/osTicket/pull/5616/commits/fb570820ef1138776f929a179906e1d8089179d9",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fb570820ef1138776f929a179906e1d8089179d9",
        "inducing_commit_hash_pyszz": [
            "a763a4def915a3f4347f013429d543489520d97a"
        ],
        "inducing_commit_hash_pd": [
            "a8bf92862f47c6f96d076134eb1dd479435a4c08",
            "2bdbafec687cb2a64c101fc18092027e295132c6",
            "9478ccb8187e46b117a61aabeef827ab3927cd3e",
            "a763a4def915a3f4347f013429d543489520d97a",
            "864d35393eb940bcfd2e57a06941fb55089b0c0a"
        ],
        "matched": [
            "a763a4def915a3f4347f013429d543489520d97a"
        ]
    },
    {
        "repo_name": "pallets/werkzeug",
        "CVE_ID": "CVE-2020-28724",
        "Problem_Type": "CWE-601",
        "Description": "Open redirect vulnerability in werkzeug before 0.11.6 via a double slash in the URL.",
        "URL": "https://github.com/pallets/werkzeug/pull/890/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "parcel-bundler/parcel",
        "CVE_ID": "CVE-2018-14731",
        "Problem_Type": "CWE-200",
        "Description": "An issue was discovered in HMRServer.js in Parcel parcel-bundler. Attackers are able to steal developer's code because the origin of requests is not checked by the WebSocket server, which is used for HMR (Hot Module Replacement). Anyone can receive the HMR message sent by the WebSocket server via a ws://127.0.0.1 connection (with a random TCP port number) from any origin. The random port number can be found by connecting to http://127.0.0.1 and reading the \"new WebSocket\" line in the source code.",
        "URL": "https://github.com/parcel-bundler/parcel/pull/1794",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "92b5c0830662f8baebc6fd4eadfd5ddd3de963a3",
        "inducing_commit_hash_pyszz": [
            "4bd32f2f52dc7fec7af15d4b45a7582926bd27a6"
        ],
        "inducing_commit_hash_pd": [
            "4bd32f2f52dc7fec7af15d4b45a7582926bd27a6"
        ],
        "matched": [
            "4bd32f2f52dc7fec7af15d4b45a7582926bd27a6"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2021-41138",
        "Problem_Type": "CWE-20",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. In the newly introduced signed Frontier-specific extrinsic for `pallet-ethereum`, a large part of transaction validation logic was only called in transaction pool validation, but not in block execution. Malicious validators can take advantage of this to put invalid transactions into a block. The attack is limited in that the signature is always validated, and the majority of the validation is done again in the subsequent `pallet-evm` execution logic. However, do note that a chain ID replay attack was possible. In addition, spamming attacks are of main concerns, while they are limited by Substrate block size limits and other factors. The issue is patched in commit `146bb48849e5393004be5c88beefe76fdf009aba`.",
        "URL": "https://github.com/paritytech/frontier/pull/497",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "334409cff422258d0c35d1ee50d0d78c2a627ae6",
        "inducing_commit_hash_pyszz": [
            "146bb48849e5393004be5c88beefe76fdf009aba"
        ],
        "inducing_commit_hash_pd": [
            "5164d393e3bd8b5e9cfc95311c01cd415957e923",
            "d37ded92b44aed14e8111de3078b87e24fd4eb96",
            "a6e2e3ff4945720f5d6b0a8637e3644f0c322df7",
            "0a8e696fdfb9ce73a7f99941a2f2ec22eefd4f38",
            "05a5b8bba116e65d9f188edf37451f3cb9d7bdaa",
            "146bb48849e5393004be5c88beefe76fdf009aba",
            "42de7729389beac65879147959396e90eb68c12e"
        ],
        "matched": [
            "146bb48849e5393004be5c88beefe76fdf009aba"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-21685",
        "Problem_Type": "CWE-191",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number `8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664`, a bug in Frontier's MODEXP precompile implementation can cause an integer underflow in certain conditions. This will cause a node crash for debug builds. For release builds (and production WebAssembly binaries), the impact is limited as it can only cause a normal EVM out-of-gas. Users who do not use MODEXP precompile in their runtime are not impacted. A patch is available in pull request #549.",
        "URL": "https://github.com/paritytech/frontier/pull/549",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664",
        "inducing_commit_hash_pyszz": [
            "63781eab342ac573a63ad03e2a5b4a068e9b1ec5"
        ],
        "inducing_commit_hash_pd": [
            "bcae5695242cc346aa26814b1160fe7e041854b3",
            "d37ded92b44aed14e8111de3078b87e24fd4eb96"
        ],
        "matched": [
            "63781eab342ac573a63ad03e2a5b4a068e9b1ec5"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-31111",
        "Problem_Type": "CWE-670",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. In affected versions the truncation done when converting between EVM balance type and Substrate balance type was incorrectly implemented. This leads to possible discrepancy between appeared EVM transfer value and actual Substrate value transferred. It is recommended that an emergency upgrade to be planned and EVM execution temporarily paused in the mean time. The issue is patched in Frontier master branch commit fed5e0a9577c10bea021721e8c2c5c378e16bf66 and polkadot-v0.9.22 branch commit e3e427fa2e5d1200a784679f8015d4774cedc934. This vulnerability affects only EVM internal states, but not Substrate balance states or node. You can temporarily pause EVM execution (by setting up a Substrate `CallFilter` that disables `pallet-evm` and `pallet-ethereum` calls before the patch can be applied.",
        "URL": "https://github.com/paritytech/frontier/pull/753",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fed5e0a9577c10bea021721e8c2c5c378e16bf66",
        "inducing_commit_hash_pyszz": [
            "c2b56a8f3097826c85f23a16b744cec99335530d"
        ],
        "inducing_commit_hash_pd": [
            "88cf884d1e2b550ff1f2af3f0c0cf1a4e07bc0d5",
            "daf082f474c5a3caebd402b6b8c20f1427808402",
            "d37ded92b44aed14e8111de3078b87e24fd4eb96",
            "1490c01a31d80d4b71a50d2e358522adc9e0a23b",
            "c2b56a8f3097826c85f23a16b744cec99335530d",
            "4ad1dabd02b0998f7ad03da96575da994ce3b50b",
            "bdbabac2e30c1bd3ce0da2d2c53f1e9cc91018e7",
            "05a5b8bba116e65d9f188edf37451f3cb9d7bdaa",
            "96f2b50f7846d717a90381a40d095c41f5655563",
            "e4bf5ef3367bbc09ee0a6c9dd55535a769842439",
            "61c830012938b8e56f37e83641040375ed41f836",
            "42de7729389beac65879147959396e90eb68c12e"
        ],
        "matched": [
            "c2b56a8f3097826c85f23a16b744cec99335530d"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-36008",
        "Problem_Type": "CWE-190",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. A security issue was discovered affecting parsing of the RPC result of the exit reason in case of EVM reversion. In release build, this would cause the exit reason being incorrectly parsed and returned by RPC. In debug build, this would cause an overflow panic. No action is needed unless you have a bridge node that needs to distinguish different reversion exit reasons and you used RPC for this. There are currently no known workarounds.",
        "URL": "https://github.com/paritytech/frontier/pull/820",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fff8cc43b7756ce3979a38fc473f38e6e24ac451",
        "inducing_commit_hash_pyszz": [
            "bfa4c7b2c39ec31fb35390565eb1c9f18f639343"
        ],
        "inducing_commit_hash_pd": [
            "24062a191603bd8491d86aac03ef97d7e02251c3"
        ],
        "matched": [
            "bfa4c7b2c39ec31fb35390565eb1c9f18f639343"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-39242",
        "Problem_Type": "CWE-682",
        "Description": "Frontier is an Ethereum compatibility layer for Substrate. Prior to commit d3beddc6911a559a3ecc9b3f08e153dbe37a8658, the worst case weight was always accounted as the block weight for all cases. In case of large EVM gas refunds, this can lead to block spamming attacks -- the adversary can construct blocks with transactions that have large amount of refunds or unused gases with reverts, and as a result inflate up the chain gas prices. The impact of this issue is limited in that the spamming attack would still be costly for any adversary, and it has no ability to alter any chain state. This issue has been patched in commit d3beddc6911a559a3ecc9b3f08e153dbe37a8658. There are no known workarounds.",
        "URL": "https://github.com/paritytech/frontier/pull/851",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d3beddc6911a559a3ecc9b3f08e153dbe37a8658",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "88cf884d1e2b550ff1f2af3f0c0cf1a4e07bc0d5"
        ],
        "matched": [
            "88cf884d1e2b550ff1f2af3f0c0cf1a4e07bc0d5"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2023-28431",
        "Problem_Type": "CWE-682",
        "Description": "Frontier is an Ethereum compatibility layer for Substrate. Frontier's `modexp` precompile uses `num-bigint` crate under the hood. In the implementation prior to pull request 1017, the cases for modulus being even and modulus being odd are treated separately. Odd modulus uses the fast Montgomery multiplication, and even modulus uses the slow plain power algorithm. This gas cost discrepancy was not accounted for in the `modexp` precompile, leading to possible denial of service attacks.\n\nNo fixes for `num-bigint` are currently available, and thus this issue is fixed in the short term by raising the gas costs for even modulus, and in the long term fixing it in `num-bigint` or switching to another modexp implementation. The short-term fix for Frontier is deployed at pull request 1017. There are no known workarounds aside from applying the fix.",
        "URL": "https://github.com/paritytech/frontier/pull/1017",
        "Tag": "['Patch']",
        "fix_commit_hash": "5af12e94d7dfc8a0208a290643a800f55de7b219",
        "inducing_commit_hash_pyszz": [
            "76ad4c8fe970e15fafcdd931fa00d8af237ec513"
        ],
        "inducing_commit_hash_pd": [
            "1ef659002e96ca63a9383d5b5c7aaa77cce4c9b2",
            "76ad4c8fe970e15fafcdd931fa00d8af237ec513",
            "dec050340508bc052a23806acae564b9a71384d0"
        ],
        "matched": [
            "76ad4c8fe970e15fafcdd931fa00d8af237ec513"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2023-45130",
        "Problem_Type": "CWE-770",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit aea528198b3b226e0d20cce878551fd4c0e3d5d0, at the end of a contract execution, when opcode SUICIDE marks a contract to be deleted, the software uses `storage::remove_prefix` (now renamed to `storage::clear_prefix`) to remove all storages associated with it. This is a single IO primitive call passing the WebAssembly boundary. For large contracts, the call (without providing a `limit` parameter) can be slow. In addition, for parachains, all storages to be deleted will be part of the PoV, which easily exceed relay chain PoV size limit. On the other hand, Frontier's maintainers only charge a fixed cost for opcode SUICIDE. The maintainers consider the severity of this issue high, because an attacker can craft a contract with a lot of storage values on a parachain, and then call opcode SUICIDE on the contract. If the transaction makes into a parachain block, the parachain will then stall because the PoV size will exceed relay chain's limit. This is especially an issue for XCM transactions, because they can't be skipped. Commit aea528198b3b226e0d20cce878551fd4c0e3d5d0 contains a patch for this issue. For parachains, it's recommended to issue an emergency runtime upgrade as soon as possible. For standalone chains, the impact is less severe because the issue mainly affects PoV sizes. It's recommended to issue a normal runtime upgrade as soon as possible. There are no known workarounds.",
        "URL": "https://github.com/paritytech/frontier/pull/1212",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "aea528198b3b226e0d20cce878551fd4c0e3d5d0",
        "inducing_commit_hash_pyszz": [
            "cb041f1eb4f4acb7f9539d13d0b3e30a78b185a5"
        ],
        "inducing_commit_hash_pd": [
            "aa5e518923e9cfd1348cfb767a6b10b1acf8ecc1",
            "feec7ee566fc7ee3555df5b98e16f55138081b23"
        ],
        "matched": [
            "cb041f1eb4f4acb7f9539d13d0b3e30a78b185a5"
        ]
    },
    {
        "repo_name": "paritytech/ink",
        "CVE_ID": "CVE-2023-34449",
        "Problem_Type": "CWE-754",
        "Description": "ink! is an embedded domain specific language to write smart contracts in Rust for blockchains built on the Substrate framework. Starting in version 4.0.0 and prior to version 4.2.1, the return value when using delegate call mechanics, either through `CallBuilder::delegate` or `ink_env::invoke_contract_delegate`, is decoded incorrectly. This bug was related to the mechanics around decoding a call's return buffer, which was changed as part of pull request 1450. Since this feature was only released in ink! 4.0.0, no previous versions are affected. Users who have an ink! 4.x series contract should upgrade to 4.2.1 to receive a patch.",
        "URL": "https://github.com/paritytech/ink/pull/1450",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6c6e51a88802e1a7ed578f159caeca1c01ec0dea",
        "inducing_commit_hash_pyszz": [
            "e883ce5088553c93b49493e43185ce05485399d3"
        ],
        "inducing_commit_hash_pd": [
            "2c6502bf8b1d6791634b55df0baaa4c6b10ed965",
            "5d7d855c32a5ecf82ed08ef513b429968f46472c",
            "c0956e42904b78048242372c4ef11d4699dd94ab",
            "e8d4739649293a458c3958bec802d2d750067d98",
            "e883ce5088553c93b49493e43185ce05485399d3",
            "eb5e5f22505720a185219f34b6273a19800d9df7",
            "4f0c88be9c9d7e578522a256cec81baf05d6840f",
            "776df42c7b9681e345b0cb9b9422f2d7ccb74f5b",
            "9fe9a422455fe5cc859bca1d4a6a217d5fc5e4dd",
            "c5e8a4f788447129709e238264e8b11b2084940c",
            "3eb6eb06db97de1d418b62816fd6c97a973aa82b",
            "41561126a4d625d15f0138c13d868080324de1d4",
            "408a299584db9ac0bdc5f69af2b437628990f62c",
            "c9c81c79b77f30f0392ed7c046ae71593a7e1ca3"
        ],
        "matched": [
            "e883ce5088553c93b49493e43185ce05485399d3"
        ]
    },
    {
        "repo_name": "parse-community/parse-server-push-adapter",
        "CVE_ID": "CVE-2023-32688",
        "Problem_Type": "CWE-20",
        "Description": "parse-server-push-adapter is the official Push Notification adapter for Parse Server. The Parse Server Push Adapter can crash Parse Server due to an invalid push notification payload. This issue has been patched in version 4.1.3.\n",
        "URL": "https://github.com/parse-community/parse-server-push-adapter/pull/217",
        "Tag": "['Patch']",
        "fix_commit_hash": "598cb84d0866b7c5850ca96af920e8cb5ba243ec",
        "inducing_commit_hash_pyszz": [
            "175c26102ed0326a6ccef73ddc4fdc808ecedb9c"
        ],
        "inducing_commit_hash_pd": [
            "ee014429788d428e37021dfd4304896e441160bf"
        ],
        "matched": [
            "175c26102ed0326a6ccef73ddc4fdc808ecedb9c"
        ]
    },
    {
        "repo_name": "parse-community/parse-server",
        "CVE_ID": "CVE-2022-31083",
        "Problem_Type": "CWE-295",
        "Description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Prior to versions 4.10.11 and 5.2.2, the certificate in the Parse Server Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object. Versions 4.0.11 and 5.2.2 prevent this by introducing a new `rootCertificateUrl` property to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the current root certificate as of May 27, 2022. Keep in mind that the root certificate can change at any time and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter. There are no known workarounds for this issue.",
        "URL": "https://github.com/parse-community/parse-server/pull/8054",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba2b0a9cb9a568817a114b132a4c2e0911d76df1",
        "inducing_commit_hash_pyszz": [
            "af4a0417a9f3c1e99b3793806b4b18e04d9fa999"
        ],
        "inducing_commit_hash_pd": [
            "4c50c4d11c2c4c404c38413f01f2c59420a233af",
            "c1a217c6b8dc6c682a37c4bcfb9b858045f4cc36",
            "af4a0417a9f3c1e99b3793806b4b18e04d9fa999",
            "d3e914280ddca91e8dd6947a14d93fb9d4aea2e1"
        ],
        "matched": [
            "af4a0417a9f3c1e99b3793806b4b18e04d9fa999"
        ]
    },
    {
        "repo_name": "parse-community/parse-server",
        "CVE_ID": "CVE-2022-31112",
        "Problem_Type": "CWE-212",
        "Description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. In affected versions parse Server LiveQuery does not remove protected fields in classes, passing them to the client. The LiveQueryController now removes protected fields from the client response. Users are advised to upgrade. Users unable t upgrade should use `Parse.Cloud.afterLiveQueryEvent` to manually remove protected fields.",
        "URL": "https://github.com/parse-community/parse-server/pull/8074",
        "Tag": "['Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "054f3e6ab01d66a0dcfb77725af28eac1485b375",
        "inducing_commit_hash_pyszz": [
            "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559"
        ],
        "inducing_commit_hash_pd": [
            "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559",
            "bf39cd68ef2cdd3067f3a1f94cda1467e5e7768f",
            "0dec4931a0ea1bd9ec5e5dde61d814bfb5d4cac5",
            "7c81290252493e9eb0dcc094075ab71c5a70908a",
            "2b1c591cb72d039bf37e954ee64066179aa1c7e6"
        ],
        "matched": [
            "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559"
        ]
    },
    {
        "repo_name": "parse-community/parse-server",
        "CVE_ID": "CVE-2023-32689",
        "Problem_Type": "CWE-434",
        "Description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Versions prior to 5.4.4 and 6.1.1 are vulnerable to a phishing attack vulnerability that involves a user uploading malicious files. A malicious user could upload an HTML file to Parse Server via its public API. That HTML file would then be accessible at the internet domain at which Parse Server is hosted. The URL of the the uploaded HTML could be shared for phishing attacks. The HTML page may seem legitimate because it is served under the internet domain where Parse Server is hosted, which may be the same as a company's official website domain.\n\nAn additional security issue arises when the Parse JavaScript SDK is used. The SDK stores sessions in the internet browser's local storage, which usually restricts data access depending on the internet domain. A malicious HTML file could contain a script that retrieves the user's session token from local storage and then share it with the attacker.\n\nThe fix included in versions 5.4.4 and 6.1.1 adds a new Parse Server option `fileUpload.fileExtensions` to restrict file upload on Parse Server by file extension. It is recommended to restrict file upload for HTML file extensions, which this fix disables by default. If an app requires upload of files with HTML file extensions, the option can be set to `['.*']` or another custom value to override the default.",
        "URL": "https://github.com/parse-community/parse-server/pull/8537",
        "Tag": "['Patch']",
        "fix_commit_hash": "196e05f047a65f0fa96910905bb5bf24b6d30338",
        "inducing_commit_hash_pyszz": [
            "ae36200d1fbc7ede8b9d303d494ad0b5da230b8b"
        ],
        "inducing_commit_hash_pd": [
            "7f5d744ce2eea774a10ab0a8c47bd587941c7775",
            "e6ac3b6932186a6a85601c65143305f86f63e948",
            "045d941aefd1cb452c06c18c5adb1d179ea148e6",
            "c0249283accdf2924bfb84432331195f951b0846",
            "d83a0b680854f52ce30205d3558c0133d7f8cf19",
            "3997b1aa5aab2b0f7e19d8dd88587aacd8cbb121"
        ],
        "matched": [
            "ae36200d1fbc7ede8b9d303d494ad0b5da230b8b"
        ]
    },
    {
        "repo_name": "parse-community/parse-server",
        "CVE_ID": "CVE-2023-32689",
        "Problem_Type": "CWE-434",
        "Description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Versions prior to 5.4.4 and 6.1.1 are vulnerable to a phishing attack vulnerability that involves a user uploading malicious files. A malicious user could upload an HTML file to Parse Server via its public API. That HTML file would then be accessible at the internet domain at which Parse Server is hosted. The URL of the the uploaded HTML could be shared for phishing attacks. The HTML page may seem legitimate because it is served under the internet domain where Parse Server is hosted, which may be the same as a company's official website domain.\n\nAn additional security issue arises when the Parse JavaScript SDK is used. The SDK stores sessions in the internet browser's local storage, which usually restricts data access depending on the internet domain. A malicious HTML file could contain a script that retrieves the user's session token from local storage and then share it with the attacker.\n\nThe fix included in versions 5.4.4 and 6.1.1 adds a new Parse Server option `fileUpload.fileExtensions` to restrict file upload on Parse Server by file extension. It is recommended to restrict file upload for HTML file extensions, which this fix disables by default. If an app requires upload of files with HTML file extensions, the option can be set to `['.*']` or another custom value to override the default.",
        "URL": "https://github.com/parse-community/parse-server/pull/8538",
        "Tag": "['Patch']",
        "fix_commit_hash": "a318e7bbafcf7a3425b0a1b3c2dd30f526b4b6f9",
        "inducing_commit_hash_pyszz": [
            "ae36200d1fbc7ede8b9d303d494ad0b5da230b8b"
        ],
        "inducing_commit_hash_pd": [
            "7f5d744ce2eea774a10ab0a8c47bd587941c7775",
            "e6ac3b6932186a6a85601c65143305f86f63e948",
            "045d941aefd1cb452c06c18c5adb1d179ea148e6",
            "c0249283accdf2924bfb84432331195f951b0846",
            "d83a0b680854f52ce30205d3558c0133d7f8cf19",
            "3997b1aa5aab2b0f7e19d8dd88587aacd8cbb121"
        ],
        "matched": [
            "ae36200d1fbc7ede8b9d303d494ad0b5da230b8b"
        ]
    },
    {
        "repo_name": "patriksimek/vm2",
        "CVE_ID": "CVE-2022-25893",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package vm2 before 3.9.10 are vulnerable to Arbitrary Code Execution due to the usage of prototype lookup for the WeakMap.prototype.set method. Exploiting this vulnerability leads to access to a host object and a sandbox compromise.",
        "URL": "https://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3a9876482be487b78a90ac459675da7f83f46d69",
        "inducing_commit_hash_pyszz": [
            "b4f6e2bd2c4a1ef52fc4483d8e35f28bc4481886"
        ],
        "inducing_commit_hash_pd": [
            "2353ce60351c50379b8d1daab05812c4db634162"
        ],
        "matched": [
            "b4f6e2bd2c4a1ef52fc4483d8e35f28bc4481886"
        ]
    },
    {
        "repo_name": "petergoldstein/dalli",
        "CVE_ID": "CVE-2022-4064",
        "Problem_Type": "CWE-74",
        "Description": "A vulnerability was found in Dalli. It has been classified as problematic. Affected is the function self.meta_set of the file lib/dalli/protocol/meta/request_formatter.rb of the component Meta Protocol Handler. The manipulation leads to injection. The exploit has been disclosed to the public and may be used. The name of the patch is 48d594dae55934476fec61789e7a7c3700e0f50d. It is recommended to apply a patch to fix this issue. VDB-214026 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/petergoldstein/dalli/pull/933",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "48d594dae55934476fec61789e7a7c3700e0f50d",
        "inducing_commit_hash_pyszz": [
            "7be38027f36cfd5e3e8dd9fe0d2d5843bf7292da"
        ],
        "inducing_commit_hash_pd": [
            "5588d98f79eb04a9abcaeeff3263e08f93468b30",
            "5c783b6703679d4a6eeb3e884c0a2524976fa3a0",
            "e1da4b2013972be362f08671443528c17dfebfb1"
        ],
        "matched": [
            "7be38027f36cfd5e3e8dd9fe0d2d5843bf7292da"
        ]
    },
    {
        "repo_name": "petl-developers/petl",
        "CVE_ID": "CVE-2020-29128",
        "Problem_Type": "CWE-91",
        "Description": "petl before 1.68, in some configurations, allows resolution of entities in an XML document.",
        "URL": "https://github.com/petl-developers/petl/pull/527",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52447c0a2ff87f2c7bdd0017a5f3b6874ad262c6",
        "inducing_commit_hash_pyszz": [
            "238219ae808588e69bbe1b599ff9f3b38cd25929"
        ],
        "inducing_commit_hash_pd": [
            "238219ae808588e69bbe1b599ff9f3b38cd25929",
            "d45e25045002ab8bfa7ce6f8015ef80828728208"
        ],
        "matched": [
            "238219ae808588e69bbe1b599ff9f3b38cd25929"
        ]
    },
    {
        "repo_name": "petl-developers/petl",
        "CVE_ID": "CVE-2020-29128",
        "Problem_Type": "CWE-91",
        "Description": "petl before 1.68, in some configurations, allows resolution of entities in an XML document.",
        "URL": "https://github.com/petl-developers/petl/pull/527/commits/1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52447c0a2ff87f2c7bdd0017a5f3b6874ad262c6",
        "inducing_commit_hash_pyszz": [
            "238219ae808588e69bbe1b599ff9f3b38cd25929"
        ],
        "inducing_commit_hash_pd": [
            "238219ae808588e69bbe1b599ff9f3b38cd25929",
            "d45e25045002ab8bfa7ce6f8015ef80828728208"
        ],
        "matched": [
            "238219ae808588e69bbe1b599ff9f3b38cd25929"
        ]
    },
    {
        "repo_name": "pf4j/pf4j",
        "CVE_ID": "CVE-2023-40827",
        "Problem_Type": "CWE-22",
        "Description": "An issue in pf4j pf4j v.3.9.0 and before allows a remote attacker to obtain sensitive information and execute arbitrary code via the loadpluginPath parameter.",
        "URL": "https://github.com/pf4j/pf4j/pull/537",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pf4j/pf4j",
        "CVE_ID": "CVE-2023-40827",
        "Problem_Type": "CWE-22",
        "Description": "An issue in pf4j pf4j v.3.9.0 and before allows a remote attacker to obtain sensitive information and execute arbitrary code via the loadpluginPath parameter.",
        "URL": "https://github.com/pf4j/pf4j/pull/537/commits/ed9392069fe14c6c30d9f876710e5ad40f7ea8c1",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pf4j/pf4j",
        "CVE_ID": "CVE-2023-40828",
        "Problem_Type": "CWE-22",
        "Description": "An issue in pf4j pf4j v.3.9.0 and before allows a remote attacker to obtain sensitive information and execute arbitrary code via the expandIfZip method in the extract function.",
        "URL": "https://github.com/pf4j/pf4j/pull/537",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pf4j/pf4j",
        "CVE_ID": "CVE-2023-40828",
        "Problem_Type": "CWE-22",
        "Description": "An issue in pf4j pf4j v.3.9.0 and before allows a remote attacker to obtain sensitive information and execute arbitrary code via the expandIfZip method in the extract function.",
        "URL": "https://github.com/pf4j/pf4j/pull/538",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "8e0aa198c4e652cfc1eb9e05ca9b64397f67cc72",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2aeb77b8c8e6023651d1fc7b9ef31736b855cafa"
        ],
        "matched": [
            "2aeb77b8c8e6023651d1fc7b9ef31736b855cafa"
        ]
    },
    {
        "repo_name": "php/php-src",
        "CVE_ID": "CVE-2017-6441",
        "Problem_Type": "CWE-476",
        "Description": "The _zval_get_long_func_ex in Zend/zend_operators.c in PHP 7.1.2 allows attackers to cause a denial of service (NULL pointer dereference and application crash) via crafted use of \"declare(ticks=\" in a PHP script. NOTE: the vendor disputes the classification of this as a vulnerability, stating \"Please do not request CVEs for ordinary bugs. CVEs are relevant for security issues only.",
        "URL": "https://github.com/php/php-src/pull/2396",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "piastry/cifs-utils",
        "CVE_ID": "CVE-2022-27239",
        "Problem_Type": "CWE-787",
        "Description": "In cifs-utils through 6.14, a stack-based buffer overflow when parsing the mount.cifs ip= command-line argument could lead to local attackers gaining root privileges.",
        "URL": "https://github.com/piastry/cifs-utils/pull/7",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
        "inducing_commit_hash_pyszz": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693"
        ],
        "inducing_commit_hash_pd": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693",
            "6749397938642ed212ec92a194dda08546bf838b",
            "6c917ebf360b3dbbc4c7ad9af3e106170528aa3c",
            "e87a203fbaf059831292f2cb9a0692ef7a78a267"
        ],
        "matched": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693"
        ]
    },
    {
        "repo_name": "piastry/cifs-utils",
        "CVE_ID": "CVE-2022-27239",
        "Problem_Type": "CWE-787",
        "Description": "In cifs-utils through 6.14, a stack-based buffer overflow when parsing the mount.cifs ip= command-line argument could lead to local attackers gaining root privileges.",
        "URL": "https://github.com/piastry/cifs-utils/pull/7/commits/955fb147e97a6a74e1aaa65766de91e2c1479765",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
        "inducing_commit_hash_pyszz": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693"
        ],
        "inducing_commit_hash_pd": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693",
            "6749397938642ed212ec92a194dda08546bf838b",
            "6c917ebf360b3dbbc4c7ad9af3e106170528aa3c",
            "e87a203fbaf059831292f2cb9a0692ef7a78a267"
        ],
        "matched": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693"
        ]
    },
    {
        "repo_name": "piastry/cifs-utils",
        "CVE_ID": "CVE-2022-29869",
        "Problem_Type": "CWE-532",
        "Description": "cifs-utils through 6.14, with verbose logging, can cause an information leak when a file contains = (equal sign) characters but is not a valid credentials file.",
        "URL": "https://github.com/piastry/cifs-utils/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
        "inducing_commit_hash_pyszz": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693"
        ],
        "inducing_commit_hash_pd": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693",
            "6749397938642ed212ec92a194dda08546bf838b",
            "6c917ebf360b3dbbc4c7ad9af3e106170528aa3c",
            "e87a203fbaf059831292f2cb9a0692ef7a78a267"
        ],
        "matched": [
            "2fcf89a2077d3ddf203b73d72985aa68c6402693"
        ]
    },
    {
        "repo_name": "pimcore/admin-ui-classic-bundle",
        "CVE_ID": "CVE-2023-37280",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore Admin Classic Bundle provides a Backend UI for Pimcore based on the ExtJS framework. An admin who has not setup two factor authentication before is vulnerable for this attack, without need for any form of privilege, causing the application to execute arbitrary scripts/HTML content. This vulnerability has been patched in version 1.0.3.",
        "URL": "https://github.com/pimcore/admin-ui-classic-bundle/pull/147",
        "Tag": "['Patch']",
        "fix_commit_hash": "5fcd19bdc89a3fe4cb8ad8c356590e1e4740c743",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "e46c4620b0db1a2e9fe822e9236030cac323d420"
        ],
        "matched": [
            "e46c4620b0db1a2e9fe822e9236030cac323d420"
        ]
    },
    {
        "repo_name": "pimcore/admin-ui-classic-bundle",
        "CVE_ID": "CVE-2023-49075",
        "Problem_Type": "CWE-308",
        "Description": "The Admin Classic Bundle provides a Backend UI for Pimcore. `AdminBundle\\Security\\PimcoreUserTwoFactorCondition` introduced in v11 disable the two factor authentication for all non-admin security firewalls. An authenticated user can access the system without having to provide the two factor credentials. This issue has been patched in version 1.2.2.\n\n",
        "URL": "https://github.com/pimcore/admin-ui-classic-bundle/pull/345",
        "Tag": "['Patch', 'URL Repurposed', 'Vendor Advisory']",
        "fix_commit_hash": "e412b0597830ae564a604e2579eb40e76f7f0628",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "e46c4620b0db1a2e9fe822e9236030cac323d420"
        ],
        "matched": [
            "e46c4620b0db1a2e9fe822e9236030cac323d420"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2020-26246",
        "Problem_Type": "CWE-281",
        "Description": "Pimcore is an open source digital experience platform. In Pimcore before version 6.8.5 it is possible to modify & create website settings without having the appropriate permissions.",
        "URL": "https://github.com/pimcore/pimcore/pull/7618",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f2f6a565d30c69d56b91205ac8f5e060bb022498",
        "inducing_commit_hash_pyszz": [
            "f269c6da50107894ff925e3e741ac9204204257a"
        ],
        "inducing_commit_hash_pd": [
            "fa8298c6caabc3496d17a3b25107d4ad1e10bc9d",
            "7b1fe47e49dce5addac083f4532f7db8693e563e"
        ],
        "matched": [
            "f269c6da50107894ff925e3e741ac9204204257a"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2020-7759",
        "Problem_Type": "CWE-89",
        "Description": "The package pimcore/pimcore from 6.7.2 and before 6.8.3 are vulnerable to SQL Injection in data classification functionality in ClassificationstoreController. This can be exploited by sending a specifically-crafted input in the relationIds parameter as demonstrated by the following request: http://vulnerable.pimcore.example/admin/classificationstore/relations?relationIds=[{\"keyId\"%3a\"''\",\"groupId\"%3a\"'asd'))+or+1%3d1+union+(select+1,2,3,4,5,6,name,8,password,'',11,12,'',14+from+users)+--+\"}]",
        "URL": "https://github.com/pimcore/pimcore/pull/7315",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de423f04704f90f9c770dd9035c76d2a5f02edaf",
        "inducing_commit_hash_pyszz": [
            "484d2d07f11972296243ef9d20f860e084948ca4"
        ],
        "inducing_commit_hash_pd": [
            "fa8298c6caabc3496d17a3b25107d4ad1e10bc9d"
        ],
        "matched": [
            "484d2d07f11972296243ef9d20f860e084948ca4"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-23405",
        "Problem_Type": "CWE-89",
        "Description": "This affects the package pimcore/pimcore before 10.0.7. This issue exists due to the absence of check on the storeId parameter in the method collectionsActionGet and groupsActionGet method within the ClassificationstoreController class.",
        "URL": "https://github.com/pimcore/pimcore/pull/9572",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c54b532cd3779ce36b91ee145dbcfa9c0b745e7f",
        "inducing_commit_hash_pyszz": [
            "07d5cde17786bc0973e39866f0f51a7e844f5584"
        ],
        "inducing_commit_hash_pd": [
            "fa8298c6caabc3496d17a3b25107d4ad1e10bc9d",
            "5c4ca6a1b1104981f915165d31c60f006bc5879c"
        ],
        "matched": [
            "07d5cde17786bc0973e39866f0f51a7e844f5584"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-37702",
        "Problem_Type": "CWE-1236",
        "Description": "Pimcore is an open source data & experience management platform. Prior to version 10.1.1, Data Object CSV import allows formular injection. The problem is patched in 10.1.1. Aside from upgrading, one may apply the patch manually as a workaround.",
        "URL": "https://github.com/pimcore/pimcore/pull/9992",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "034f059964c352a561f5d4bba27080ae5789cabb",
        "inducing_commit_hash_pyszz": [
            "a4ba5448fc76b029df4a1210e5387b2302290a0a"
        ],
        "inducing_commit_hash_pd": [
            "a4ba5448fc76b029df4a1210e5387b2302290a0a",
            "c13e66b70c9aa169c75ffbad24c426acb2551cd6"
        ],
        "matched": [
            "a4ba5448fc76b029df4a1210e5387b2302290a0a"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-39166",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore is an open source data & experience management platform. Prior to version 10.1.2, text-values were not properly escaped before printed in the version preview. This allowed XSS by authenticated users with access to the resources. This issue is patched in Pimcore version 10.1.2.",
        "URL": "https://github.com/pimcore/pimcore/pull/10170",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "210c547273c294369c404dfdb82be611d6282e86",
        "inducing_commit_hash_pyszz": [
            "6321e8296bed7c0eefd4fbcfa3f90bffb54966b4"
        ],
        "inducing_commit_hash_pd": [
            "3605186b89e031a540f0a7436d87536b44df9e96",
            "6321e8296bed7c0eefd4fbcfa3f90bffb54966b4",
            "2bb642219880724573f3f6dd2f44e611b86c6c73"
        ],
        "matched": [
            "6321e8296bed7c0eefd4fbcfa3f90bffb54966b4"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-39170",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore is an open source data & experience management platform. Prior to version 10.1.2, an authenticated user could add XSS code as a value of custom metadata on assets. There is a patch for this issue in Pimcore version 10.1.2. As a workaround, users may apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/10178.patch",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8d741f37abc820f622bd2ada0778991fb47fcd0",
        "inducing_commit_hash_pyszz": [
            "c31dc976057f48dd5bb357e1f3f180b5146f5b6d"
        ],
        "inducing_commit_hash_pd": [
            "822e68012e49a87859d144c7f7fb8c81a61ea32b"
        ],
        "matched": [
            "c31dc976057f48dd5bb357e1f3f180b5146f5b6d"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-39170",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore is an open source data & experience management platform. Prior to version 10.1.2, an authenticated user could add XSS code as a value of custom metadata on assets. There is a patch for this issue in Pimcore version 10.1.2. As a workaround, users may apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/10178",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8d741f37abc820f622bd2ada0778991fb47fcd0",
        "inducing_commit_hash_pyszz": [
            "c31dc976057f48dd5bb357e1f3f180b5146f5b6d"
        ],
        "inducing_commit_hash_pd": [
            "822e68012e49a87859d144c7f7fb8c81a61ea32b"
        ],
        "matched": [
            "c31dc976057f48dd5bb357e1f3f180b5146f5b6d"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-39189",
        "Problem_Type": "CWE-203",
        "Description": "Pimcore is an open source data & experience management platform. In versions prior to 10.1.3, it is possible to enumerate usernames via the forgot password functionality. This issue is fixed in version 10.1.3. As a workaround, one may apply the available patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/10223.patch",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c398852390eec45bf26299751706ca44e7ee379f",
        "inducing_commit_hash_pyszz": [
            "5d140af8d83465eb6607f04997982d9f2cfe9fa3"
        ],
        "inducing_commit_hash_pd": [
            "5d140af8d83465eb6607f04997982d9f2cfe9fa3"
        ],
        "matched": [
            "5d140af8d83465eb6607f04997982d9f2cfe9fa3"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2021-39189",
        "Problem_Type": "CWE-203",
        "Description": "Pimcore is an open source data & experience management platform. In versions prior to 10.1.3, it is possible to enumerate usernames via the forgot password functionality. This issue is fixed in version 10.1.3. As a workaround, one may apply the available patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/10223/commits/d0a4de39cf05dce6af71f8ca039132bdfcbb0dce",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c398852390eec45bf26299751706ca44e7ee379f",
        "inducing_commit_hash_pyszz": [
            "5d140af8d83465eb6607f04997982d9f2cfe9fa3"
        ],
        "inducing_commit_hash_pd": [
            "5d140af8d83465eb6607f04997982d9f2cfe9fa3"
        ],
        "matched": [
            "5d140af8d83465eb6607f04997982d9f2cfe9fa3"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2022-31092",
        "Problem_Type": "CWE-89",
        "Description": "Pimcore is an Open Source Data & Experience Management Platform. Pimcore offers developers listing classes to make querying data easier. This listing classes also allow to order or group the results based on one or more columns which should be quoted by default. The actual issue is that quoting is not done properly in both cases, so there's the theoretical possibility to inject custom SQL if the developer is using this methods with input data and not doing proper input validation in advance and so relies on the auto-quoting being done by the listing classes. This issue has been resolved in version 10.4.4. Users are advised to upgrade or to apple the patch manually. There are no known workarounds for this issue.",
        "URL": "https://github.com/pimcore/pimcore/pull/12444",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "21559c6bf0e4e828d33ff7af6e88caecb5ac6549",
        "inducing_commit_hash_pyszz": [
            "b829787dc88118dca926a2757e4bbdf95c6c34bf"
        ],
        "inducing_commit_hash_pd": [
            "fa8298c6caabc3496d17a3b25107d4ad1e10bc9d",
            "2a1fad7ae4b193933d02f8188afc66b20abbbe9a"
        ],
        "matched": [
            "b829787dc88118dca926a2757e4bbdf95c6c34bf"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2022-39365",
        "Problem_Type": "CWE-94",
        "Description": "Pimcore is an open source data and experience management platform. Prior to version 10.5.9, the user controlled twig templates rendering in `Pimcore/Mail` & `ClassDefinition\\Layout\\Text` is vulnerable to server-side template injection, which could lead to remote code execution. Version 10.5.9 contains a patch for this issue. As a workaround, one may apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/13347",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "43aa34e018f5cd447bceb864358285ba92f68372",
        "inducing_commit_hash_pyszz": [
            "27b0b2201e44e6da9f69f80ecf87bcee7840ab26"
        ],
        "inducing_commit_hash_pd": [
            "c5d75b0bb863e15dd59c2d71a51261dd12187868",
            "f85ba025c30aae29a78805f822002bf9fd96b39e",
            "9183ee546040636557cac51f1a50d884dda3962f",
            "66fb7b1aa0244576b0806a12582443a627c2420e",
            "27b0b2201e44e6da9f69f80ecf87bcee7840ab26",
            "c72240bca7d123583eaabb645c79bc1d23b31d1e",
            "8075438d0110adee237333c5b290ce5e9fe050c3"
        ],
        "matched": [
            "27b0b2201e44e6da9f69f80ecf87bcee7840ab26"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2022-39365",
        "Problem_Type": "CWE-94",
        "Description": "Pimcore is an open source data and experience management platform. Prior to version 10.5.9, the user controlled twig templates rendering in `Pimcore/Mail` & `ClassDefinition\\Layout\\Text` is vulnerable to server-side template injection, which could lead to remote code execution. Version 10.5.9 contains a patch for this issue. As a workaround, one may apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/13347.patch",
        "Tag": "['Mailing List', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "43aa34e018f5cd447bceb864358285ba92f68372",
        "inducing_commit_hash_pyszz": [
            "27b0b2201e44e6da9f69f80ecf87bcee7840ab26"
        ],
        "inducing_commit_hash_pd": [
            "c5d75b0bb863e15dd59c2d71a51261dd12187868",
            "f85ba025c30aae29a78805f822002bf9fd96b39e",
            "9183ee546040636557cac51f1a50d884dda3962f",
            "66fb7b1aa0244576b0806a12582443a627c2420e",
            "27b0b2201e44e6da9f69f80ecf87bcee7840ab26",
            "c72240bca7d123583eaabb645c79bc1d23b31d1e",
            "8075438d0110adee237333c5b290ce5e9fe050c3"
        ],
        "matched": [
            "27b0b2201e44e6da9f69f80ecf87bcee7840ab26"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2023-28106",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore is an open source data and experience management platform. Prior to version 10.5.19, an attacker can use cross-site scripting to send a malicious script to an unsuspecting user. Users may upgrade to version 10.5.19 to receive a patch or, as a workaround, apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/14669.patch",
        "Tag": "['Mailing List', 'Patch']",
        "fix_commit_hash": "c59d0bf1d03a5037b586fe06230694fa3818dbf2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c029505a3e2ec3e13df7f607810279a5e63b117b"
        ],
        "matched": [
            "c029505a3e2ec3e13df7f607810279a5e63b117b"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2023-28108",
        "Problem_Type": "CWE-89",
        "Description": "Pimcore is an open source data and experience management platform. Prior to version 10.5.19, quoting is not done properly in UUID DAO model. There is the theoretical possibility to inject custom SQL if the developer is using this methods with input data and not doing proper input validation in advance and so relies on the auto-quoting being done by the DAO class. Users should update to version 10.5.19 to receive a patch or, as a workaround, apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/14633",
        "Tag": "['Patch']",
        "fix_commit_hash": "08e7ba56ae983c3c67ec563b6989b16ef8f35275",
        "inducing_commit_hash_pyszz": [
            "d598fb06fc11970da0e4fda6047aef0b14d4d076"
        ],
        "inducing_commit_hash_pd": [
            "fbdd5f1ce0bd7795bc5c5992f28a56b0e0de4638",
            "d598fb06fc11970da0e4fda6047aef0b14d4d076"
        ],
        "matched": [
            "d598fb06fc11970da0e4fda6047aef0b14d4d076"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2023-28429",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore is an open source data and experience management platform. Versions prior to 10.5.19 have an unsecured tooltip field in DataObject class definition. This vulnerability has the potential to steal a user's cookie and gain unauthorized access to that user's account through the stolen cookie or redirect users to other malicious sites. Users should upgrade to version 10.5.19 or, as a workaround, apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/14574.patch",
        "Tag": "['Patch']",
        "fix_commit_hash": "271d2151b8f1efa9960c6dbfe11ee33b142e272a",
        "inducing_commit_hash_pyszz": [
            "77a5dfa4d4cff81f50fbd3c1386fbe184ac874d9"
        ],
        "inducing_commit_hash_pd": [
            "77a5dfa4d4cff81f50fbd3c1386fbe184ac874d9"
        ],
        "matched": [
            "77a5dfa4d4cff81f50fbd3c1386fbe184ac874d9"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2023-28429",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore is an open source data and experience management platform. Versions prior to 10.5.19 have an unsecured tooltip field in DataObject class definition. This vulnerability has the potential to steal a user's cookie and gain unauthorized access to that user's account through the stolen cookie or redirect users to other malicious sites. Users should upgrade to version 10.5.19 or, as a workaround, apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/14574",
        "Tag": "['Patch']",
        "fix_commit_hash": "271d2151b8f1efa9960c6dbfe11ee33b142e272a",
        "inducing_commit_hash_pyszz": [
            "77a5dfa4d4cff81f50fbd3c1386fbe184ac874d9"
        ],
        "inducing_commit_hash_pd": [
            "77a5dfa4d4cff81f50fbd3c1386fbe184ac874d9"
        ],
        "matched": [
            "77a5dfa4d4cff81f50fbd3c1386fbe184ac874d9"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2023-28438",
        "Problem_Type": "CWE-89",
        "Description": "Pimcore is an open source data and experience management platform. Prior to version 10.5.19, since a user with 'report' permission can already write arbitrary SQL queries and given the fact that this endpoint is using the GET method (no CSRF protection), an attacker can inject an arbitrary query by manipulating a user to click on a link. Users should upgrade to version 10.5.19 to receive a patch or, as a workaround, may apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/14526",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "d1abadb181c88ebaa4bce1916f9077469d4ea2bc",
        "inducing_commit_hash_pyszz": [
            "d6f178b9f071d5028899ca5c9493bd9c6dc602d8"
        ],
        "inducing_commit_hash_pd": [
            "fa8298c6caabc3496d17a3b25107d4ad1e10bc9d",
            "d6f178b9f071d5028899ca5c9493bd9c6dc602d8"
        ],
        "matched": [
            "d6f178b9f071d5028899ca5c9493bd9c6dc602d8"
        ]
    },
    {
        "repo_name": "pimcore/pimcore",
        "CVE_ID": "CVE-2023-30855",
        "Problem_Type": "CWE-22",
        "Description": "Pimcore is an open source data and experience management platform. Versions of Pimcore prior to 10.5.18 are vulnerable to path traversal. The impact of this path traversal and arbitrary extension is limited to creation of arbitrary files and appending data to existing files. When combined with the SQL Injection, the exported data `RESTRICTED DIFFUSION 9 / 9` can be controlled and a webshell can be uploaded. Attackers can use that to execute arbitrary PHP code on the server with the permissions of the webserver. Users may upgrade to version 10.5.18 to receive a patch or, as a workaround, apply the patch manually.",
        "URL": "https://github.com/pimcore/pimcore/pull/14498",
        "Tag": "['Patch']",
        "fix_commit_hash": "7f788fa44bc18bc1c9182c25e26b770a1d30b62f",
        "inducing_commit_hash_pyszz": [
            "db567cc8e9f7375e119b2b9e1f616ddd30c61c7e"
        ],
        "inducing_commit_hash_pd": [
            "db567cc8e9f7375e119b2b9e1f616ddd30c61c7e",
            "1786bdd4962ee51544fad537352c2b4223309442"
        ],
        "matched": [
            "db567cc8e9f7375e119b2b9e1f616ddd30c61c7e"
        ]
    },
    {
        "repo_name": "pires/go-proxyproto",
        "CVE_ID": "CVE-2021-23409",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package github.com/pires/go-proxyproto before 0.6.0 are vulnerable to Denial of Service (DoS) via creating connections without the proxy protocol header.",
        "URL": "https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cdc63867da24fc609b727231f682670d0d1cd346",
        "inducing_commit_hash_pyszz": [
            "26a1d2a6885ac695962d06a25ed5bb231f45f0ef"
        ],
        "inducing_commit_hash_pd": [
            "26a1d2a6885ac695962d06a25ed5bb231f45f0ef",
            "467cc68f94c35abd3d9d2d5dd49267af04e0830f",
            "fa756e15a0eb9c2965750ffacb20f97bb5690abb"
        ],
        "matched": [
            "26a1d2a6885ac695962d06a25ed5bb231f45f0ef"
        ]
    },
    {
        "repo_name": "pjsip/pjproject",
        "CVE_ID": "CVE-2020-15260",
        "Problem_Type": "CWE-295",
        "Description": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In version 2.10 and earlier, PJSIP transport can be reused if they have the same IP address + port + protocol. However, this is insufficient for secure transport since it lacks remote hostname authentication. Suppose we have created a TLS connection to `sip.foo.com`, which has an IP address `100.1.1.1`. If we want to create a TLS connection to another hostname, say `sip.bar.com`, which has the same IP address, then it will reuse that existing connection, even though `100.1.1.1` does not have certificate to authenticate as `sip.bar.com`. The vulnerability allows for an insecure interaction without user awareness. It affects users who need access to connections to different destinations that translate to the same address, and allows man-in-the-middle attack if attacker can route a connection to another destination such as in the case of DNS spoofing.",
        "URL": "https://github.com/pjsip/pjproject/pull/2663",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90a7d70ae24eed1f482e1f67c1f009f11787f3f5",
        "inducing_commit_hash_pyszz": [
            "67e46c1ac45ad784db5b9080f5ed8b133c122872"
        ],
        "inducing_commit_hash_pd": [
            "1f56d56b4f6261de944527fb4fa6d28c42638271",
            "67e46c1ac45ad784db5b9080f5ed8b133c122872"
        ],
        "matched": [
            "67e46c1ac45ad784db5b9080f5ed8b133c122872"
        ]
    },
    {
        "repo_name": "pjsip/pjproject",
        "CVE_ID": "CVE-2021-32686",
        "Problem_Type": "CWE-362",
        "Description": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In PJSIP before version 2.11.1, there are a couple of issues found in the SSL socket. First, a race condition between callback and destroy, due to the accepted socket having no group lock. Second, the SSL socket parent/listener may get destroyed during handshake. Both issues were reported to happen intermittently in heavy load TLS connections. They cause a crash, resulting in a denial of service. These are fixed in version 2.11.1.",
        "URL": "https://github.com/pjsip/pjproject/pull/2716",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pjsip/pjproject",
        "CVE_ID": "CVE-2021-43845",
        "Problem_Type": "CWE-125",
        "Description": "PJSIP is a free and open source multimedia communication library. In version 2.11.1 and prior, if incoming RTCP XR message contain block, the data field is not checked against the received packet size, potentially resulting in an out-of-bound read access. This affects all users that use PJMEDIA and RTCP XR. A malicious actor can send a RTCP XR message with an invalid packet size.",
        "URL": "https://github.com/pjsip/pjproject/pull/2924",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "plataformatec/devise",
        "CVE_ID": "CVE-2019-5421",
        "Problem_Type": "CWE-307",
        "Description": "Plataformatec Devise version 4.5.0 and earlier, using the lockable module contains a CWE-367 vulnerability in The `Devise::Models::Lockable` class, more specifically at the `#increment_failed_attempts` method. File location: lib/devise/models/lockable.rb that can result in Multiple concurrent requests can prevent an attacker from being blocked on brute force attacks. This attack appear to be exploitable via Network connectivity - brute force attacks. This vulnerability appears to have been fixed in 4.6.0 and later.",
        "URL": "https://github.com/plataformatec/devise/pull/4996",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62703943bef75aba09ec3e346aba4c9159300ecd",
        "inducing_commit_hash_pyszz": [
            "0f0eb4e8cee4c1f042ffdbc4f77e755c757920a8"
        ],
        "inducing_commit_hash_pd": [
            "7b3081760f32e7150601776276bd809601b8eaaa"
        ],
        "matched": [
            "0f0eb4e8cee4c1f042ffdbc4f77e755c757920a8"
        ]
    },
    {
        "repo_name": "plone/volto",
        "CVE_ID": "CVE-2022-24740",
        "Problem_Type": "CWE-287",
        "Description": "Volto is a ReactJS-based frontend for the Plone Content Management System. Between versions 14.0.0-alpha.5 and 15.0.0-alpha.0, a user could have their authentication cookie replaced with an authentication cookie from another user, effectively giving them control of the other user's account and privileges. This occurs when using an outdated version of the `react-cookie` library and a server is under high load. A proof of concept does not currently exist, but it is possible for this issue to occur in the wild. The patch and fix is present in Volto 15.0.0-alpha.0. As a workaround, one may manually upgrade the `react-cookie` package to 4.1.1 and then override all Volto components that use this library.",
        "URL": "https://github.com/plone/volto/pull/3051",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "46ee42c98d5332071c0a61d51ad2c44b6618564e",
        "inducing_commit_hash_pyszz": [
            "2dd87b13e56347942aec00ea2db79554a8540e40"
        ],
        "inducing_commit_hash_pd": [
            "5281952efc0a8299786c56c646d483ff34b283fa",
            "1fa78d3e9738a177973b7559ea3d4c21770320bf",
            "129bc3d45d86d290fa4871b21ece85449653fe7e",
            "f7faa72beb6fc416919030dcf41c36c6c05410dd",
            "283928c31557d53d3bd2e2901a2e1b9af1014b0a",
            "c579124a00d6da0b32e3d26bc291e595a3e4ee85",
            "50ce379fc7b3cc4ad6e3b38a6b06da4633da8228",
            "6571778ceebd774d801aff0965138e3107a5ef7a",
            "ee0c3087c6f8e8749b6a5e497161af729027c217",
            "3199c3feb8c26e1737fbc8b19cbbc273c701a56e",
            "024140b7cc84883a2f45fae49d8d1f7775e0ed22",
            "da35197463f503b6710772dfa97e5b2b2bf2c42f",
            "a32c7609d5808e96009f40eac4d9d06b1be38711",
            "4d053e544cc1c4159452fbae1be2ebe762dd2775",
            "18143d010868a1dcac07f8073997e16047cf0192",
            "36555e6abd13f53ef4d860789ad19b926972bccc",
            "6e5fd38ea84c02d3eea2c50aa7a5c1180ed3b261",
            "1aaaf38bc90c4426b576810a254d9a4a40b38864",
            "42f395cbe7d636b832fab8fd2d594a400f331661",
            "42b1391c63847493e7a9472895cef515d3c2f7af",
            "48eaf70ecee675fe06fd2d6b6c5cb83f09d6bd6e",
            "2ed98a3b2f02578eb94b2c1f0aa651a67317a8c0",
            "e06eeb8cf8fc23ceca151ef6bb307ea2c21d16fa",
            "fe325b18603f2fdff4113acc8f44a38c9bc09bc4",
            "3e74e857247f23094d91d533b7219456cede9ecd",
            "5aae87f73d957c5c1a9033becc05e4de1e227f8c",
            "cea6ae94ba4fb407c56353a2b2aa95dddefcccb4",
            "b8e57cbb6e5876f89ccf4ada6af60c48ae71baa6",
            "37286468aba00d14b615a3b0c2de78a4a4a8d3ec",
            "b21675ad77c9676b22a25277388ec0ec818abcce",
            "64751322849283038bf9c7ee5bc0af102b469fc0",
            "bb129f37eb0db59e62de4de63e100e410c595486",
            "78ca945bbecacf029a9113f874c88723f5726809",
            "a6630713f8294600bb23f228ca623ad78e5d05ba",
            "bc0e54a9eef643ed43c7125600972601c62df25a"
        ],
        "matched": [
            "2dd87b13e56347942aec00ea2db79554a8540e40"
        ]
    },
    {
        "repo_name": "pluginsGLPI/news",
        "CVE_ID": "CVE-2019-12724",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in the Teclib News plugin through 1.5.2 for GLPI. It allows a stored XSS attack via the $_POST['name'] parameter.",
        "URL": "https://github.com/pluginsGLPI/news/pull/69",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aaffe6dc30bcab4142dd257a3e2647cdac458890",
        "inducing_commit_hash_pyszz": [
            "21f916cc0cf0105730fc3efc4695d7aeeb7b7aa7"
        ],
        "inducing_commit_hash_pd": [
            "21f916cc0cf0105730fc3efc4695d7aeeb7b7aa7"
        ],
        "matched": [
            "21f916cc0cf0105730fc3efc4695d7aeeb7b7aa7"
        ]
    },
    {
        "repo_name": "pomerium/pomerium",
        "CVE_ID": "CVE-2022-24797",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Pomerium is an identity-aware access proxy. In distributed service mode, Pomerium's Authenticate service exposes pprof debug and prometheus metrics handlers to untrusted traffic. This can leak potentially sensitive environmental information or lead to limited denial of service conditions. This issue is patched in version v0.17.1 Workarounds: Block access to `/debug` and `/metrics` paths on the authenticate service. This can be done with any L7 proxy, including Pomerium's own proxy service.",
        "URL": "https://github.com/pomerium/pomerium/pull/3212",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b435f73e2b54088da2aca5e8c3aa1808293d6903",
        "inducing_commit_hash_pyszz": [
            "a5034aabaeed210f30e2c1b34d6becebbb342201"
        ],
        "inducing_commit_hash_pd": [
            "8b42eb5ebd079d8859ee2806495230924ae997f6",
            "bbec2cae9f7ea9d75ebfea7ff7c20e656c350666",
            "a5034aabaeed210f30e2c1b34d6becebbb342201",
            "f822c9a5d274523200cb9d049629d697b50f91c3",
            "e2ebef44ef799961cab713f672bcd87224ca9a7e",
            "4ed3d8463268074f0150a07c9d8f4e78504eb0d5",
            "99e788a9b4efe828dc711499a8d7f218353d988c",
            "a825b060146c1d73adf4556fbb23aa47e1e8ae95",
            "bec98051ae96b307f8fa9daf8dabae38a15f0743",
            "f760cdece5a11c883e6b2f3a8017ed4b50a960e9",
            "bd0a5389bfa971c25caf0b9d447cb6d62c2bdf7b",
            "a8a703218fa6e1a91a667521dc4499c4c12d38ac",
            "cb09aa4199d128e4f7a65842f294bd01ac74acc7",
            "1dcccf2b56d8d6a472fba11be0a7658dd05001dc",
            "75f2ed93eab89d50637c0e908f00caeecc4feb60",
            "e0c09a09980d5355de8b2fffae0af89306eea381"
        ],
        "matched": [
            "a5034aabaeed210f30e2c1b34d6becebbb342201"
        ]
    },
    {
        "repo_name": "portainer/agent",
        "CVE_ID": "CVE-2022-24961",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Portainer Agent before 2.11.1, an API server can continue running even if not associated with a Portainer instance in the past few days.",
        "URL": "https://github.com/portainer/agent/pull/225/commits/a66977c76043fcff4a8f69c4b65988272d27c01f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e39fe0173fc4e63da02c56d10ca11f9967ed2e07",
        "inducing_commit_hash_pyszz": [
            "2ae25321db7113072183815bd2ab13b87cae9633"
        ],
        "inducing_commit_hash_pd": [
            "2ae25321db7113072183815bd2ab13b87cae9633",
            "0acb11b93647cd4078394072bed112a815f00176"
        ],
        "matched": [
            "2ae25321db7113072183815bd2ab13b87cae9633"
        ]
    },
    {
        "repo_name": "portainer/portainer",
        "CVE_ID": "CVE-2018-12678",
        "Problem_Type": "CWE-918",
        "Description": "Portainer before 1.18.0 supports unauthenticated requests to the websocket endpoint with an unvalidated id query parameter for the /websocket/exec endpoint, which allows remote attackers to bypass intended access restrictions or conduct SSRF attacks.",
        "URL": "https://github.com/portainer/portainer/pull/1979",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "da5a430b8cb7545bef6de7576c73afb1a3235138",
        "inducing_commit_hash_pyszz": [
            "30dfd3d616c242b7ffe56dbb8a8cdfba9c9a7542"
        ],
        "inducing_commit_hash_pd": [
            "5523fc9023c6056338531969f9b27b874a4da7c7",
            "2327d696e088d40232b105b4b3eff395d6566b4a",
            "80d50378c58ef3cfa5574d5be0b588cbb811b7a6",
            "e3d564325b669461153d23a76e9b2ffcd832ab2c",
            "b9a1c68ea05adb9ab5baefc42bfd1561535726e1",
            "1162549209d4700b846b8e0082b417eb8816a939"
        ],
        "matched": [
            "30dfd3d616c242b7ffe56dbb8a8cdfba9c9a7542"
        ]
    },
    {
        "repo_name": "portainer/portainer",
        "CVE_ID": "CVE-2018-19466",
        "Problem_Type": "CWE-522",
        "Description": "A vulnerability was found in Portainer before 1.20.0. Portainer stores LDAP credentials, corresponding to a master password, in cleartext and allows their retrieval via API calls.",
        "URL": "https://github.com/portainer/portainer/pull/2488",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d510bbbcfd470651cb62256dc547211f5b73b6fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "d27528a771f7c18c2ad93249eb18df9665bb0a10"
        ],
        "matched": [
            "d27528a771f7c18c2ad93249eb18df9665bb0a10"
        ]
    },
    {
        "repo_name": "portainer/portainer",
        "CVE_ID": "CVE-2021-42650",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS vulnerability exists in Portainer before 2.9.1 via the node input box in Custom Templates.",
        "URL": "https://github.com/portainer/portainer/pull/5766",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fce885901fa0ad7584fe38bec1e2c69edf3676dc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5523fc9023c6056338531969f9b27b874a4da7c7",
            "587e2fa673416201917d19b09db40aa31de874ac",
            "53b37ab8c80099df8801f2effc755e9e53d1ea7b",
            "f15cf3e8be96861770667c10a41a1512cc5f3fb4",
            "5e73a4947369535ff43bc304ea3fadd9714cd828"
        ],
        "matched": [
            "5523fc9023c6056338531969f9b27b874a4da7c7"
        ]
    },
    {
        "repo_name": "prasathmani/tinyfilemanager",
        "CVE_ID": "CVE-2021-45010",
        "Problem_Type": "CWE-22",
        "Description": "A path traversal vulnerability in the file upload functionality in tinyfilemanager.php in Tiny File Manager before 2.4.7 allows remote attackers (with valid user accounts) to upload malicious PHP files to the webroot, leading to code execution.",
        "URL": "https://github.com/prasathmani/tinyfilemanager/pull/636",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2046bbde72ed76af0cfdcae082de629bcc4b44c7",
        "inducing_commit_hash_pyszz": [
            "84baa9e14a3d7c7635d110278d830b8a4c04a8b0"
        ],
        "inducing_commit_hash_pd": [
            "84baa9e14a3d7c7635d110278d830b8a4c04a8b0"
        ],
        "matched": [
            "84baa9e14a3d7c7635d110278d830b8a4c04a8b0"
        ]
    },
    {
        "repo_name": "prasathmani/tinyfilemanager",
        "CVE_ID": "CVE-2021-45010",
        "Problem_Type": "CWE-22",
        "Description": "A path traversal vulnerability in the file upload functionality in tinyfilemanager.php in Tiny File Manager before 2.4.7 allows remote attackers (with valid user accounts) to upload malicious PHP files to the webroot, leading to code execution.",
        "URL": "https://github.com/prasathmani/tinyfilemanager/pull/636/files/a93fc321a3c89fdb9bee860bf6df5d89083298d1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2046bbde72ed76af0cfdcae082de629bcc4b44c7",
        "inducing_commit_hash_pyszz": [
            "84baa9e14a3d7c7635d110278d830b8a4c04a8b0"
        ],
        "inducing_commit_hash_pd": [
            "84baa9e14a3d7c7635d110278d830b8a4c04a8b0"
        ],
        "matched": [
            "84baa9e14a3d7c7635d110278d830b8a4c04a8b0"
        ]
    },
    {
        "repo_name": "prisma/language-tools",
        "CVE_ID": "CVE-2021-21415",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Prisma VS Code a VSCode extension for Prisma schema files. This is a Remote Code Execution Vulnerability that affects all versions of the Prisma VS Code extension older than 2.20.0. If a custom binary path for the Prisma format binary is set in VS Code Settings, for example by downloading a project that has a .vscode/settings.json file that sets a value for \"prismaFmtBinPath\". That custom binary is executed when auto-formatting is triggered by VS Code or when validation checks are triggered after each keypress on a *.prisma file. Fixed in versions 2.20.0 and 20.0.27. As a workaround users can either edit or delete the `.vscode/settings.json` file or check if the binary is malicious and delete it.",
        "URL": "https://github.com/prisma/language-tools/pull/750",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "94df49c2c3ebfca3e6f5c532382ccd59020422da",
        "inducing_commit_hash_pyszz": [
            "ea59415dc652020e874cde0fe9f2a53e5da265ff"
        ],
        "inducing_commit_hash_pd": [
            "9597969e7add9aeadf7e71ee872f7f4dee1782fc",
            "ea59415dc652020e874cde0fe9f2a53e5da265ff"
        ],
        "matched": [
            "ea59415dc652020e874cde0fe9f2a53e5da265ff"
        ]
    },
    {
        "repo_name": "prisma/prisma",
        "CVE_ID": "CVE-2021-21414",
        "Problem_Type": "CWE-78",
        "Description": "Prisma is an open source ORM for Node.js & TypeScript. As of today, we are not aware of any Prisma users or external consumers of the `@prisma/sdk` package who are affected by this security vulnerability. This issue may lead to remote code execution if a client of the library calls the vulnerable method with untrusted input. It only affects the `getPackedPackage` function and this function is not advertised and only used for tests & building our CLI, no malicious code was found after checking our codebase.",
        "URL": "https://github.com/prisma/prisma/pull/6245",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "05e8c867aa20204d36e776c82a0cc0fcca25c83b",
        "inducing_commit_hash_pyszz": [
            "f5797e2bc678a8d38fea64228bf31c412b841408"
        ],
        "inducing_commit_hash_pd": [
            "e59e1a25a11ec4f7151129b081e698af7924707f",
            "f5797e2bc678a8d38fea64228bf31c412b841408"
        ],
        "matched": [
            "f5797e2bc678a8d38fea64228bf31c412b841408"
        ]
    },
    {
        "repo_name": "PrismJS/prism",
        "CVE_ID": "CVE-2020-15138",
        "Problem_Type": "CWE-79",
        "Description": "Prism is vulnerable to Cross-Site Scripting. The easing preview of the Previewers plugin has an XSS vulnerability that allows attackers to execute arbitrary code in Safari and Internet Explorer. This impacts all Safari and Internet Explorer users of Prism >=v1.1.0 that use the _Previewers_ plugin (>=v1.10.0) or the _Previewer: Easing_ plugin (v1.1.0 to v1.9.0). This problem is fixed in version 1.21.0. To workaround the issue without upgrading, disable the easing preview on all impacted code blocks. You need Prism v1.10.0 or newer to apply this workaround.",
        "URL": "https://github.com/PrismJS/prism/pull/2506/commits/7bd7de05edf71112a3a77f87901a2409c9c5c20c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8bba4880202ef6bd7a1e379fe9aebe69dd75f7be",
        "inducing_commit_hash_pyszz": [
            "8403e4537b2fdc23435b7235ad082df1f6e6c6e4"
        ],
        "inducing_commit_hash_pd": [
            "8403e4537b2fdc23435b7235ad082df1f6e6c6e4",
            "28e4b4c66048b55ff2b4841746fa85769370c0e9"
        ],
        "matched": [
            "8403e4537b2fdc23435b7235ad082df1f6e6c6e4"
        ]
    },
    {
        "repo_name": "PrismJS/prism",
        "CVE_ID": "CVE-2021-23341",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package prismjs before 1.23.0 are vulnerable to Regular Expression Denial of Service (ReDoS) via the prism-asciidoc, prism-rest, prism-tap and prism-eiffel components.",
        "URL": "https://github.com/PrismJS/prism/pull/2584",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c2f6a64426f44497a675cb32dccb079b3eff1609",
        "inducing_commit_hash_pyszz": [
            "df922d908dd3d77f30fccb287e61b207264df6ec"
        ],
        "inducing_commit_hash_pd": [
            "28759d0d5429e73ee5232845707ee5dcbd91157a",
            "0fffa9df491290fa8630398d096232b91006e7bf",
            "328d0e0edaa2a6b247f80337fe0b50443e6aa54d",
            "44fed4d30911c4184448590b90e95fd20459bc10",
            "3e00bb9c412b2b83b17e7857c3ec0ae1c2c19a6b",
            "eab5b06eacb35d347107fae683c9ffcb7a95a25f",
            "198bc99a644fcd9afe2d0cdff036aa618a2597ba",
            "0536fb14e0c1957d7376296c5c14491bf08a5e67",
            "b081804639aed4f2e63ccd7a4130ac3f762ba1bd",
            "c939df8ed8e2dd9fa3a79ba148ab855e9de5dfb4",
            "0b4e1d3ded5c7482955ac00b757062fac9b81484",
            "77297288da8ced0eea15d940a4e9b630108d82c0",
            "1a8b3e948269c1fbcd5507f573216042e8e1d54a",
            "fa2225ff13a516d77276f2cea09e0ccd2582a52e",
            "f26197a50ca585dc1fbeb8ebc42547be36e6462b",
            "df922d908dd3d77f30fccb287e61b207264df6ec",
            "bfb367482c62988f12b8b18cd433949398993bf4",
            "8b5d67a3eab12234b5e57226a74aecbd101e543b",
            "4b6b6e8b5f11736b74bfcc3cb2378ccf7ad55fea",
            "addc9710030e3b51636780e575fcd1a0a255280b",
            "6eaf17684e62e5fc075cf4fc63ee9178f5081e19",
            "d6da70e0d03a31f2d69e063d42cf51c4fe01da74",
            "d33d259c5599813f1d45fe4b1d51c09b76fffef7",
            "40ae21533f9a5c5f69d1da60a6a114fa500b1a30",
            "f77b40b7e83839a17f1dac1933580285ce0c1411",
            "5d7aab56c20be735e9780886bf99725791d230ef",
            "f0f8210c1a9745c064d49bfb985544c654986b24",
            "964450e1579de7cf6f632d4cafff064c036a138b",
            "4902ed483389ac29bb9f436e58f0b88a1c699210",
            "48fac3b26c544473797539a952aa3ae861b5d41a",
            "791f400004d1f2503e1e462968c448c4a9d3ef3c",
            "7a554b5f894b49ae2cea500890281a1d8b8ec971",
            "b526e8c0caae2d3e4f579dea0043010f703c47a6",
            "7f341fc15726f3cdb12abbb38c80d4d6467e2ec4",
            "c743454aaa3463748aaa439744c92a32d8f9e420",
            "694a81b817b26cc8f406c38866f06da6dac7b1e3",
            "6c921801348f53b98400c06ed2224a237fdae834",
            "cc80ccda8a2ec5565750ce67a2135b109748b5cd",
            "81e1c3ddadda5451fb5b9743c5201b7452d1ae3e",
            "c187e229aafa1e8bf58bbf39dee7b228ade473f9",
            "1a4ff7aca1af3ed4577f517d8deda8c225355f1a",
            "68159d5b389701b9065297effa92187df149cea9"
        ],
        "matched": [
            "df922d908dd3d77f30fccb287e61b207264df6ec"
        ]
    },
    {
        "repo_name": "PrismJS/prism",
        "CVE_ID": "CVE-2021-32723",
        "Problem_Type": "CWE-400",
        "Description": "Prism is a syntax highlighting library. Some languages before 1.24.0 are vulnerable to Regular Expression Denial of Service (ReDoS). When Prism is used to highlight untrusted (user-given) text, an attacker can craft a string that will take a very very long time to highlight. This problem has been fixed in Prism v1.24. As a workaround, do not use ASCIIDoc or ERB to highlight untrusted text. Other languages are not affected and can be used to highlight untrusted text.",
        "URL": "https://github.com/PrismJS/prism/pull/2688",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "531514048a1dbfabe9ae983dab49bb4239589469",
        "inducing_commit_hash_pyszz": [
            "d85e30da6755fdbe7f8559f8e75d122297167018"
        ],
        "inducing_commit_hash_pd": [
            "1e3070a2ae608ad4631f1e5d49cdaf761d292c9e",
            "05afbb105ae6a9e6c59c7727b0d816f212dbcba0",
            "d85e30da6755fdbe7f8559f8e75d122297167018",
            "10ca6433b4b0b25d10c97c06fd6e9f121d88beed",
            "3e00bb9c412b2b83b17e7857c3ec0ae1c2c19a6b",
            "c187e229aafa1e8bf58bbf39dee7b228ade473f9",
            "772d42bec006e7d0d028a29daff84db9ccc8dfbc",
            "c805f85987702a19cb1e935d09fc15bcf4868cc9",
            "7d03ece4c8cd172cec3b7c5e340ee179d5100b38",
            "3fda5c95cc09f1bd0b12a3172ffd9ccb5c4dbba4",
            "e644178b8bbe0b307023ddb3a13478c41fdab9c7",
            "9cae4461612ad86782328063a24d7e2362c6e4e9"
        ],
        "matched": [
            "d85e30da6755fdbe7f8559f8e75d122297167018"
        ]
    },
    {
        "repo_name": "PrismJS/prism",
        "CVE_ID": "CVE-2021-32723",
        "Problem_Type": "CWE-400",
        "Description": "Prism is a syntax highlighting library. Some languages before 1.24.0 are vulnerable to Regular Expression Denial of Service (ReDoS). When Prism is used to highlight untrusted (user-given) text, an attacker can craft a string that will take a very very long time to highlight. This problem has been fixed in Prism v1.24. As a workaround, do not use ASCIIDoc or ERB to highlight untrusted text. Other languages are not affected and can be used to highlight untrusted text.",
        "URL": "https://github.com/PrismJS/prism/pull/2774",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d85e30da6755fdbe7f8559f8e75d122297167018",
        "inducing_commit_hash_pyszz": [
            "05afbb105ae6a9e6c59c7727b0d816f212dbcba0"
        ],
        "inducing_commit_hash_pd": [
            "7a554b5f894b49ae2cea500890281a1d8b8ec971",
            "05afbb105ae6a9e6c59c7727b0d816f212dbcba0",
            "0fe4cf62b1cb9dbcae55b46d72722afdb19f2a21",
            "e644178b8bbe0b307023ddb3a13478c41fdab9c7",
            "68159d5b389701b9065297effa92187df149cea9"
        ],
        "matched": [
            "05afbb105ae6a9e6c59c7727b0d816f212dbcba0"
        ]
    },
    {
        "repo_name": "PrismJS/prism",
        "CVE_ID": "CVE-2022-23647",
        "Problem_Type": "CWE-79",
        "Description": "Prism is a syntax highlighting library. Starting with version 1.14.0 and prior to version 1.27.0, Prism's command line plugin can be used by attackers to achieve a cross-site scripting attack. The command line plugin did not properly escape its output, leading to the input text being inserted into the DOM as HTML code. Server-side usage of Prism is not impacted. Websites that do not use the Command Line plugin are also not impacted. This bug has been fixed in v1.27.0. As a workaround, do not use the command line plugin on untrusted inputs, or sanitize all code blocks (remove all HTML code text) from all code blocks that use the command line plugin.",
        "URL": "https://github.com/PrismJS/prism/pull/3341",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c",
        "inducing_commit_hash_pyszz": [
            "1784b175dbf0be95af5e8bc436a3689d90b98a4f"
        ],
        "inducing_commit_hash_pd": [
            "1784b175dbf0be95af5e8bc436a3689d90b98a4f",
            "82d0ca15e85574e14d5714cdf2b989a5a9a36143"
        ],
        "matched": [
            "1784b175dbf0be95af5e8bc436a3689d90b98a4f"
        ]
    },
    {
        "repo_name": "proftpd/proftpd",
        "CVE_ID": "CVE-2017-7418",
        "Problem_Type": "CWE-59",
        "Description": "ProFTPD before 1.3.5e and 1.3.6 before 1.3.6rc5 controls whether the home directory of a user could contain a symbolic link through the AllowChrootSymlinks configuration option, but checks only the last path component when enforcing AllowChrootSymlinks. Attackers with local access could bypass the AllowChrootSymlinks control by replacing a path component (other than the last one) with a symbolic link. The threat model includes an attacker who is not granted full filesystem access by a hosting provider, but can reconfigure the home directory of an FTP user.",
        "URL": "https://github.com/proftpd/proftpd/pull/444/commits/349addc3be4fcdad9bd4ec01ad1ccd916c898ed8",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "349addc3be4fcdad9bd4ec01ad1ccd916c898ed8",
        "inducing_commit_hash_pyszz": [
            "628d2ffb99a924cefda2112046d7ec4bbf5e41da"
        ],
        "inducing_commit_hash_pd": [
            "7e2c2658df39930a033229d15b81386cd21150af",
            "628d2ffb99a924cefda2112046d7ec4bbf5e41da",
            "a94b69505ff905bf93db9ce52530bd840d636446",
            "b01d790c5083efc28c3b7edc4859cd1935b79a43",
            "66a84b251589fa0896fce69713a3b7aa6254ccae",
            "2fa62cb6b46c6452aef02f12149de7fb1a7c26b2"
        ],
        "matched": [
            "628d2ffb99a924cefda2112046d7ec4bbf5e41da"
        ]
    },
    {
        "repo_name": "projectacrn/acrn-hypervisor",
        "CVE_ID": "CVE-2020-28346",
        "Problem_Type": "CWE-476",
        "Description": "ACRN through 2.2 has a devicemodel/hw/pci/virtio/virtio.c NULL Pointer Dereference.",
        "URL": "https://github.com/projectacrn/acrn-hypervisor/pull/5453",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "188ab4f85b44bca0090be527c1f73e24b980e836",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "bd31b1c53e6c0e318b1902e916627cf985ec75ab"
        ],
        "matched": [
            "bd31b1c53e6c0e318b1902e916627cf985ec75ab"
        ]
    },
    {
        "repo_name": "projectacrn/acrn-hypervisor",
        "CVE_ID": "CVE-2020-28346",
        "Problem_Type": "CWE-476",
        "Description": "ACRN through 2.2 has a devicemodel/hw/pci/virtio/virtio.c NULL Pointer Dereference.",
        "URL": "https://github.com/projectacrn/acrn-hypervisor/pull/5453/commits/ae0ab82434509d6e75f4a2f1e1a0dd2ee3dc3681",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "188ab4f85b44bca0090be527c1f73e24b980e836",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "bd31b1c53e6c0e318b1902e916627cf985ec75ab"
        ],
        "matched": [
            "bd31b1c53e6c0e318b1902e916627cf985ec75ab"
        ]
    },
    {
        "repo_name": "projectacrn/acrn-hypervisor",
        "CVE_ID": "CVE-2021-36144",
        "Problem_Type": "CWE-416",
        "Description": "The polling timer handler in ACRN before 2.5 has a use-after-free for a freed virtio device, related to devicemodel/hw/pci/virtio/*.c.",
        "URL": "https://github.com/projectacrn/acrn-hypervisor/pull/6268/commits/dd88504804e186029f845a166dc5c31695e2cca2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a65e01ae9547be78ccad26333a907743c8c8c5d7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "bd31b1c53e6c0e318b1902e916627cf985ec75ab"
        ],
        "matched": [
            "bd31b1c53e6c0e318b1902e916627cf985ec75ab"
        ]
    },
    {
        "repo_name": "projectacrn/acrn-hypervisor",
        "CVE_ID": "CVE-2021-36145",
        "Problem_Type": "CWE-416",
        "Description": "The Device Model in ACRN through 2.5 has a devicemodel/core/mem.c use-after-free for a freed rb_entry.",
        "URL": "https://github.com/projectacrn/acrn-hypervisor/pull/6058/commits/f880086ffe5423e67d968c8f8f665954786582ce",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4b93f31b7e108d51bc1156ee4feacbc94a602f1",
        "inducing_commit_hash_pyszz": [
            "96085d960fd80451a38fda4b5600e915ae710ba2"
        ],
        "inducing_commit_hash_pd": [
            "96085d960fd80451a38fda4b5600e915ae710ba2"
        ],
        "matched": [
            "96085d960fd80451a38fda4b5600e915ae710ba2"
        ]
    },
    {
        "repo_name": "projectacrn/acrn-hypervisor",
        "CVE_ID": "CVE-2021-36147",
        "Problem_Type": "CWE-476",
        "Description": "An issue was discovered in ACRN before 2.5. It allows a devicemodel/hw/pci/virtio/virtio_net.c virtio_net_ping_rxq NULL pointer dereference for vq->used.",
        "URL": "https://github.com/projectacrn/acrn-hypervisor/pull/6121/commits/131116b15b0e35a62085d23686b43ed1c12c1331",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "81c5bdab5fc84d0a35239b454c6a0d8a52736a18",
        "inducing_commit_hash_pyszz": [
            "5253ac7af5d5401cef4caa7765da0dd947265138"
        ],
        "inducing_commit_hash_pd": [
            "5253ac7af5d5401cef4caa7765da0dd947265138"
        ],
        "matched": [
            "5253ac7af5d5401cef4caa7765da0dd947265138"
        ]
    },
    {
        "repo_name": "prometheus/client_golang",
        "CVE_ID": "CVE-2022-21698",
        "Problem_Type": "CWE-770",
        "Description": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
        "URL": "https://github.com/prometheus/client_golang/pull/962",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9075cdf61646b5adf54d3ba77a0e4f6c65cb4fd7",
        "inducing_commit_hash_pyszz": [
            "98eb6cbf7ccf0487b869d70efeebbb09dab53be1"
        ],
        "inducing_commit_hash_pd": [
            "2b3ab50dcde47cd137834c2e9e8b0f2e373b35d9",
            "d300d5cf215ea3b986927c0a577086b494853022",
            "d01fd6222241828327e3507d64c90f796673bad0"
        ],
        "matched": [
            "98eb6cbf7ccf0487b869d70efeebbb09dab53be1"
        ]
    },
    {
        "repo_name": "prometheus/client_golang",
        "CVE_ID": "CVE-2022-21698",
        "Problem_Type": "CWE-770",
        "Description": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
        "URL": "https://github.com/prometheus/client_golang/pull/987",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "989baa30fe956631907493ccee1f8e7708660d96",
        "inducing_commit_hash_pyszz": [
            "98eb6cbf7ccf0487b869d70efeebbb09dab53be1"
        ],
        "inducing_commit_hash_pd": [
            "2b3ab50dcde47cd137834c2e9e8b0f2e373b35d9",
            "d300d5cf215ea3b986927c0a577086b494853022",
            "d01fd6222241828327e3507d64c90f796673bad0"
        ],
        "matched": [
            "98eb6cbf7ccf0487b869d70efeebbb09dab53be1"
        ]
    },
    {
        "repo_name": "prometheus/prometheus",
        "CVE_ID": "CVE-2019-3826",
        "Problem_Type": "CWE-79",
        "Description": "A stored, DOM based, cross-site scripting (XSS) flaw was found in Prometheus before version 2.7.1. An attacker could exploit this by convincing an authenticated user to visit a crafted URL on a Prometheus server, allowing for the execution and persistent storage of arbitrary scripts.",
        "URL": "https://github.com/prometheus/prometheus/pull/5163",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b03d6f6eff8283bd7cb063edc21041d3fb6c9878",
        "inducing_commit_hash_pyszz": [
            "742583e836fc03ad7a96c32ed748c4406d5c82e6"
        ],
        "inducing_commit_hash_pd": [
            "50f8e35c54b7c4035f3267e9b106f4523d4a18bf",
            "a8ff643464ee5f3cf97f1c55c0aab44796f09167",
            "742583e836fc03ad7a96c32ed748c4406d5c82e6"
        ],
        "matched": [
            "742583e836fc03ad7a96c32ed748c4406d5c82e6"
        ]
    },
    {
        "repo_name": "protobufjs/protobuf.js",
        "CVE_ID": "CVE-2023-36665",
        "Problem_Type": "CWE-1321",
        "Description": "\"protobuf.js (aka protobufjs) 6.10.0 through 7.x before 7.2.5 allows Prototype Pollution, a different vulnerability than CVE-2022-25878. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: (1) using the function parse to parse protobuf messages on the fly, (2) loading .proto files by using load/loadSync functions, or (3) providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty.",
        "URL": "https://github.com/protobufjs/protobuf.js/pull/1899",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "e66379f451b0393c27d87b37fa7d271619e16b0d",
        "inducing_commit_hash_pyszz": [
            "3357ef753871b394b825d15429ceb27b26e24d63"
        ],
        "inducing_commit_hash_pd": [
            "3357ef753871b394b825d15429ceb27b26e24d63"
        ],
        "matched": [
            "3357ef753871b394b825d15429ceb27b26e24d63"
        ]
    },
    {
        "repo_name": "psi-im/iris",
        "CVE_ID": "CVE-2017-5593",
        "Problem_Type": "CWE-20",
        "Description": "An incorrect implementation of \"XEP-0280: Message Carbons\" in multiple XMPP clients allows a remote attacker to impersonate any user, including contacts, in the vulnerable application's display. This allows for various kinds of social engineering attacks. This CVE is for Psi+ (0.16.563.580 - 0.16.571.627).",
        "URL": "https://github.com/psi-im/iris/pull/47/commits/02e976d4426a1319a7af7d26d7aba9d8c6077570",
        "Tag": "['Patch']",
        "fix_commit_hash": "02e976d4426a1319a7af7d26d7aba9d8c6077570",
        "inducing_commit_hash_pyszz": [
            "cf4d6e5c04048b8938e2822667417187d79fa5d4"
        ],
        "inducing_commit_hash_pd": [
            "cf4d6e5c04048b8938e2822667417187d79fa5d4"
        ],
        "matched": [
            "cf4d6e5c04048b8938e2822667417187d79fa5d4"
        ]
    },
    {
        "repo_name": "pugjs/pug",
        "CVE_ID": "CVE-2021-21353",
        "Problem_Type": "CWE-74",
        "Description": "Pug is an npm package which is a high-performance template engine. In pug before version 3.0.1, if a remote attacker was able to control the `pretty` option of the pug compiler, e.g. if you spread a user provided object such as the query parameters of a request into the pug template inputs, it was possible for them to achieve remote code execution on the node.js backend. This is fixed in version 3.0.1. This advisory applies to multiple pug packages including \"pug\", \"pug-code-gen\". pug-code-gen has a backported fix at version 2.0.3. This advisory is not exploitable if there is no way for un-trusted input to be passed to pug as the `pretty` option, e.g. if you compile templates in advance before applying user input to them, you do not need to upgrade.",
        "URL": "https://github.com/pugjs/pug/pull/3314",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "991e78f7c4220b2f8da042877c6f0ef5a4683be0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f97ebdb48c7c0fdd4ff4b7418dcf4e03b27a1405"
        ],
        "matched": [
            "f97ebdb48c7c0fdd4ff4b7418dcf4e03b27a1405"
        ]
    },
    {
        "repo_name": "pulp/pulp",
        "CVE_ID": "CVE-2016-3095",
        "Problem_Type": "CWE-200",
        "Description": "server/bin/pulp-gen-ca-certificate in Pulp before 2.8.2 allows local users to read the generated private key.",
        "URL": "https://github.com/pulp/pulp/pull/2503/commits/9f969b94c4b4f310865455d36db207de6cffebca",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9f969b94c4b4f310865455d36db207de6cffebca",
        "inducing_commit_hash_pyszz": [
            "e48fe33ce3b5d850a4a7e1cbab2ae63ce7b8e0a0"
        ],
        "inducing_commit_hash_pd": [
            "e48fe33ce3b5d850a4a7e1cbab2ae63ce7b8e0a0"
        ],
        "matched": [
            "e48fe33ce3b5d850a4a7e1cbab2ae63ce7b8e0a0"
        ]
    },
    {
        "repo_name": "pulp/pulp",
        "CVE_ID": "CVE-2016-3108",
        "Problem_Type": "CWE-59",
        "Description": "The pulp-gen-nodes-certificate script in Pulp before 2.8.3 allows local users to leak the keys or write to arbitrary files via a symlink attack.",
        "URL": "https://github.com/pulp/pulp/pull/2528",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "puncsky/touchbase.ai",
        "CVE_ID": "CVE-2020-26220",
        "Problem_Type": "CWE-200",
        "Description": "toucbase.ai before version 2.0 leaks information by not stripping exif data from images. Anyone with access to the uploaded image of other users could obtain its geolocation, device, and software version data etc (if present. The issue is fixed in version 2.0.",
        "URL": "https://github.com/puncsky/touchbase.ai/pull/400/commits/69de77b163f6debaeb3f8d1a85367310a40d196f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4c4f9e6b3f91ef83d0de5204a202f896d0ab265a",
        "inducing_commit_hash_pyszz": [
            "ac9d49a54b32760bc34f96bdc2cbd45e8e9700b8"
        ],
        "inducing_commit_hash_pd": [
            "33f26ffaed7e8d0ad219eb2e39b7508f7fa682f1",
            "fd1c4999d914d1e2b98554a07a1396d0af8294bd",
            "2c6303f14f1204d1b93a867c35159ef7b6231253",
            "f345847615a057cb57e1c6afb334b42a61f45dd4",
            "27eaab6b1ba4a8ed80a0b67f281815a9a9ff2281",
            "546f9a85a028027447fb5a23b98998f04dda2ac1"
        ],
        "matched": [
            "ac9d49a54b32760bc34f96bdc2cbd45e8e9700b8"
        ]
    },
    {
        "repo_name": "pwndoc/pwndoc",
        "CVE_ID": "CVE-2021-31590",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "PwnDoc all versions until 0.4.0 (2021-08-23) has incorrect JSON Webtoken handling, leading to incorrect access control. With a valid JSON Webtoken that is used for authentication and authorization, a user can keep his admin privileges even if he is downgraded to the \"user\" privilege. Even after a user's account is deleted, the user can still access the administration panel (and add or delete users) and has complete access to the system.",
        "URL": "https://github.com/pwndoc/pwndoc/pull/128",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pwndoc/pwndoc",
        "CVE_ID": "CVE-2021-31590",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "PwnDoc all versions until 0.4.0 (2021-08-23) has incorrect JSON Webtoken handling, leading to incorrect access control. With a valid JSON Webtoken that is used for authentication and authorization, a user can keep his admin privileges even if he is downgraded to the \"user\" privilege. Even after a user's account is deleted, the user can still access the administration panel (and add or delete users) and has complete access to the system.",
        "URL": "https://github.com/pwndoc/pwndoc/pull/74",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "py-pdf/pypdf",
        "CVE_ID": "CVE-2023-36464",
        "Problem_Type": "CWE-835",
        "Description": "pypdf is an open source, pure-python PDF library. In affected versions an attacker may craft a PDF which leads to an infinite loop if `__parse_content_stream` is executed. That is, for example, the case if the user extracted text from such a PDF. This issue was introduced in pull request #969 and resolved in pull request #1828. Users are advised to upgrade. Users unable to upgrade may modify the line `while peek not in (b\"\\r\", b\"\\n\")` in `pypdf/generic/_data_structures.py` to `while peek not in (b\"\\r\", b\"\\n\", b\"\")`.",
        "URL": "https://github.com/py-pdf/pypdf/pull/969",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "72fcaae50e9676ca16346a556c29b688ae2714f8",
        "inducing_commit_hash_pyszz": [
            "41eff2a059ee4f4a9cbca931a110e65a3521bcd7"
        ],
        "inducing_commit_hash_pd": [
            "7647ab5f35f386050943fbe1be74351d8e5aac91",
            "b4d54ed59486abfcd429a281c4d12cc09780636b",
            "869c626074017195d506c977c52840feed874caf",
            "50e9079ae60f19c543b4c147369e988ad2edfe7c",
            "e38b23d40fcfedbbe09d9d9d8590a05d55c286ee",
            "648e3083314360444e3c03e7dd14834beb89538a",
            "5703b61b4232cbd44eed8689da604347e29bb51b",
            "cfe2d036e5e95d7cf1480e2518d814d1eaa35298",
            "bcafcff11374e11abaaf6608eb5715bc9a7dff59",
            "c66ee8cf01a9ef5984bdc5a8eb612227ede413ab",
            "4baedb2054648b9db70c2fbed82b6902aea52365",
            "6e14d3eeeef58cd1a48ace85211d217f2f9e8fad",
            "787c784c5ec1c68737717321204943071722e8dc",
            "1f0079401495ea94ff5b838b3e41412dc44c2c1d",
            "4429066367248fc4786a0d3c6ba59427b4b8bf63",
            "41eff2a059ee4f4a9cbca931a110e65a3521bcd7",
            "304d9ff223641b8425b3f8548d7826fb089adcb4",
            "eef03d935dfeacaa75848b39082cf94d833d3174",
            "833900060d7d9f1b3de18a4266d110394ad4264c",
            "8cd0cfe17c34c0fea89a94a92af7f061e67831ec",
            "57301980b8c44273a53d42ea4041ff7d73697f6f",
            "e1408f7488f2df54341b1208f2ad0a1b14eb8e81",
            "43276ab5002e37cd2c654cdbe67bbfa0b1fe2eb3",
            "38417347e86f2ca5ceb650a50a5a6200bfd97340",
            "b387b06718c5347ea641b06acd44ee636b7ca864",
            "9947c7b51f9e413458cc91eca2a1250829662fea",
            "d990367334964f8758857eaa266a82ee4bd49cb7",
            "94952e48b28c3eb31a572c092ffded643e8c5310",
            "fe403981046fee86321ff0f09ffe5ba38d05d27f",
            "444fca22836df061d9d23e71ffb7d68edcdfa766",
            "a5d68957dfdfdced04fb0fed1f1416266c65759e",
            "d659966f927ef5bd2559f9c658d30d5723ad4fc8",
            "0f0f7d65c93ef5ebd757b7476838d84085e0c25e",
            "b76ffcda07ae1c447bf3319e182b41ebf6d2057c",
            "a7dc37078012f7a4497d8e5fb3e34da647790c9e",
            "38d5ec462eb64cd686440716cae9c57dbb8e27d0",
            "e853ec1b65ee6b5c761289292b3b2835ec2f4320",
            "1f0fbf3267d34aad3405b17deb461459ec26559e",
            "012709f7a145d1fd85c3f6ca2a8e4c792d14e94b",
            "c008b0f448219d4727a8ba07570aba0abf4321e2",
            "f74d733ae5e93b2fa73e912754c9158f6018d851",
            "55f7c7b35be4431336a8c5a769a7c261445bd47a",
            "2867d77970118b595e03669aecf0041036125497",
            "97c55d4612adce6ee70a5df008c13db4840be6d9",
            "60dff8d785dcd4bea20be35b0f6a249ba4d44216",
            "c59a212a4cda512c184a987312970b464404d17b",
            "336d659c41dca4bce9554f70a8586fb1450dd676",
            "07bb859e91ce61d053a7abd3eac71665d92e10b7"
        ],
        "matched": [
            "41eff2a059ee4f4a9cbca931a110e65a3521bcd7"
        ]
    },
    {
        "repo_name": "py-pdf/pypdf",
        "CVE_ID": "CVE-2023-36464",
        "Problem_Type": "CWE-835",
        "Description": "pypdf is an open source, pure-python PDF library. In affected versions an attacker may craft a PDF which leads to an infinite loop if `__parse_content_stream` is executed. That is, for example, the case if the user extracted text from such a PDF. This issue was introduced in pull request #969 and resolved in pull request #1828. Users are advised to upgrade. Users unable to upgrade may modify the line `while peek not in (b\"\\r\", b\"\\n\")` in `pypdf/generic/_data_structures.py` to `while peek not in (b\"\\r\", b\"\\n\", b\"\")`.",
        "URL": "https://github.com/py-pdf/pypdf/pull/1828",
        "Tag": "['Patch']",
        "fix_commit_hash": "b0e5c689df689ab173df84dacd77b6fc3c161932",
        "inducing_commit_hash_pyszz": [
            "a85148ae83033de50e59dae7ca621305bb53ef6a"
        ],
        "inducing_commit_hash_pd": [
            "a85148ae83033de50e59dae7ca621305bb53ef6a"
        ],
        "matched": [
            "a85148ae83033de50e59dae7ca621305bb53ef6a"
        ]
    },
    {
        "repo_name": "py-pdf/pypdf",
        "CVE_ID": "CVE-2023-36807",
        "Problem_Type": "CWE-835",
        "Description": "pypdf is a pure-python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. In version 2.10.5 an attacker who uses this vulnerability can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case if the user extracted metadata from such a malformed PDF. Versions prior to 2.10.5 throw an error, but do not hang forever. This issue was fixed with https://github.com/py-pdf/pypdf/pull/1331 which has been included in release 2.10.6. Users are advised to upgrade. Users unable to upgrade should modify `PyPDF2/generic/_data_structures.py::read_object` to an an error throwing case. See GHSA-hm9v-vj3r-r55m for details. ",
        "URL": "https://github.com/py-pdf/pypdf/pull/1331",
        "Tag": "['Patch']",
        "fix_commit_hash": "e6531a25325e7e0174b6a1ba03b57320b5227f6b",
        "inducing_commit_hash_pyszz": [
            "a85148ae83033de50e59dae7ca621305bb53ef6a"
        ],
        "inducing_commit_hash_pd": [
            "2c53813dfac9791f639a2e6517cba1feb2671c32",
            "a85148ae83033de50e59dae7ca621305bb53ef6a"
        ],
        "matched": [
            "a85148ae83033de50e59dae7ca621305bb53ef6a"
        ]
    },
    {
        "repo_name": "py-pdf/pypdf",
        "CVE_ID": "CVE-2023-36810",
        "Problem_Type": "CWE-407",
        "Description": "pypdf is a pure-python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. An attacker who uses this vulnerability can craft a PDF which leads to unexpected long runtime. This quadratic runtime blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. This issue has been addressed in PR 808 and versions from 1.27.9 include this fix. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/py-pdf/pypdf/pull/808",
        "Tag": "['Patch']",
        "fix_commit_hash": "c6c56f550bb384e05f0139c796ba1308837d6373",
        "inducing_commit_hash_pyszz": [
            "793be4355bc276963b4a527d04c6588d4e4d42a3"
        ],
        "inducing_commit_hash_pd": [
            "c59a212a4cda512c184a987312970b464404d17b",
            "793be4355bc276963b4a527d04c6588d4e4d42a3",
            "bcafcff11374e11abaaf6608eb5715bc9a7dff59"
        ],
        "matched": [
            "793be4355bc276963b4a527d04c6588d4e4d42a3"
        ]
    },
    {
        "repo_name": "py-pdf/pypdf",
        "CVE_ID": "CVE-2023-46250",
        "Problem_Type": "CWE-835",
        "Description": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`.",
        "URL": "https://github.com/py-pdf/pypdf/pull/2264",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9b23ac3c9619492570011d551d521690de9a3e2d",
        "inducing_commit_hash_pyszz": [
            "39f52dceaef6b980d1e0e36214e373a97fb1fd15"
        ],
        "inducing_commit_hash_pd": [
            "74b8a6364ee806cc0510b024864502d1fdbd8204",
            "39f52dceaef6b980d1e0e36214e373a97fb1fd15"
        ],
        "matched": [
            "39f52dceaef6b980d1e0e36214e373a97fb1fd15"
        ]
    },
    {
        "repo_name": "py-pdf/PyPDF2",
        "CVE_ID": "CVE-2022-24859",
        "Problem_Type": "CWE-835",
        "Description": "PyPDF2 is an open source python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. In versions prior to 1.27.5 an attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 if the code attempts to get the content stream. The reason is that the last while-loop in `ContentStream._readInlineImage` only terminates when it finds the `EI` token, but never actually checks if the stream has already ended. This issue has been resolved in version `1.27.5`. Users unable to upgrade should validate and PDFs prior to iterating over their content stream.",
        "URL": "https://github.com/py-pdf/PyPDF2/pull/740",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d71fb3e6249a07682e8ebc456e26499923ff9031",
        "inducing_commit_hash_pyszz": [
            "fc05b046c05d9cf5c9cbbe67b12ffef7501babc7"
        ],
        "inducing_commit_hash_pd": [
            "c59a212a4cda512c184a987312970b464404d17b",
            "fa03c13edc2b7e1a5139e2cf9c261f18fe18d495",
            "fc05b046c05d9cf5c9cbbe67b12ffef7501babc7"
        ],
        "matched": [
            "fc05b046c05d9cf5c9cbbe67b12ffef7501babc7"
        ]
    },
    {
        "repo_name": "pyca/cryptography",
        "CVE_ID": "CVE-2020-25659",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "python-cryptography 3.2 is vulnerable to Bleichenbacher timing attacks in the RSA decryption API, via timed processing of valid PKCS#1 v1.5 ciphertext.",
        "URL": "https://github.com/pyca/cryptography/pull/5507/commits/ce1bef6f1ee06ac497ca0c837fbd1c7ef6c2472b",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "58494b41d6ecb0f56b7c5f05d5f5e3ca0320d494",
        "inducing_commit_hash_pyszz": [
            "bc609feef8bfd472bbf3cefad2a18a1761af9751"
        ],
        "inducing_commit_hash_pd": [
            "35a0e8d403fa5faf7a8e958b6cb63e5d90680d46",
            "bc609feef8bfd472bbf3cefad2a18a1761af9751"
        ],
        "matched": [
            "bc609feef8bfd472bbf3cefad2a18a1761af9751"
        ]
    },
    {
        "repo_name": "pyca/cryptography",
        "CVE_ID": "CVE-2023-23931",
        "Problem_Type": "CWE-754",
        "Description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. In affected versions `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers. This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python and resulting in corrupted output. This now correctly raises an exception. This issue has been present since `update_into` was originally introduced in cryptography 1.8.",
        "URL": "https://github.com/pyca/cryptography/pull/8230/commits/94a50a9731f35405f0357fa5f3b177d46a726ab3",
        "Tag": "['Patch']",
        "fix_commit_hash": "9fbf84efc861668755ab645530ec7be9cf3c6696",
        "inducing_commit_hash_pyszz": [
            "f90ba1808ee9bd9a13c5673b776484644f29d7ba"
        ],
        "inducing_commit_hash_pd": [
            "f90ba1808ee9bd9a13c5673b776484644f29d7ba"
        ],
        "matched": [
            "f90ba1808ee9bd9a13c5673b776484644f29d7ba"
        ]
    },
    {
        "repo_name": "pyca/cryptography",
        "CVE_ID": "CVE-2023-38325",
        "Problem_Type": "CWE-295",
        "Description": "The cryptography package before 41.0.2 for Python mishandles SSH certificates that have critical options.",
        "URL": "https://github.com/pyca/cryptography/pull/9208",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "1ca7adc97b76a9dfbd3d850628b613eb93b78fc3",
        "inducing_commit_hash_pyszz": [
            "1b4ad81ff3004b436e627b9e248905113b9cc4a1"
        ],
        "inducing_commit_hash_pd": [
            "1b4ad81ff3004b436e627b9e248905113b9cc4a1",
            "aca8de845e751dd45fe4e48f8492f357d34d1861"
        ],
        "matched": [
            "1b4ad81ff3004b436e627b9e248905113b9cc4a1"
        ]
    },
    {
        "repo_name": "pyca/cryptography",
        "CVE_ID": "CVE-2023-49083",
        "Problem_Type": "CWE-476",
        "Description": "cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Calling `load_pem_pkcs7_certificates` or `load_der_pkcs7_certificates` could lead to a NULL-pointer dereference and segfault. Exploitation of this vulnerability poses a serious risk of Denial of Service (DoS) for any application attempting to deserialize a PKCS7 blob/certificate. The consequences extend to potential disruptions in system availability and stability. This vulnerability has been patched in version 41.0.6.",
        "URL": "https://github.com/pyca/cryptography/pull/9926",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "1e7b4d074e14c4e694d3ce69ad6754a6039fd6ff",
        "inducing_commit_hash_pyszz": [
            "c898871daac710f00154cb7041e3876fc66c1ef5"
        ],
        "inducing_commit_hash_pd": [
            "c898871daac710f00154cb7041e3876fc66c1ef5"
        ],
        "matched": [
            "c898871daac710f00154cb7041e3876fc66c1ef5"
        ]
    },
    {
        "repo_name": "pyca/pyopenssl",
        "CVE_ID": "CVE-2018-1000807",
        "Problem_Type": "CWE-416",
        "Description": "Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.",
        "URL": "https://github.com/pyca/pyopenssl/pull/723",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e73818600065821d588af475b024f4eb518c3509",
        "inducing_commit_hash_pyszz": [
            "57051a53e154c2b401ab84d6f01c6512e6c7b346"
        ],
        "inducing_commit_hash_pd": [
            "7e166fe9cbd810ea7441e1e4fed0d600f47950dd",
            "6037d073170d054554405df944136c1ddd9bbf22",
            "e5912cef665cf21eaab078c440c2c684b8d14e26",
            "80b25efa407f15c1c21323b7e512e2e051c0f5e3"
        ],
        "matched": [
            "57051a53e154c2b401ab84d6f01c6512e6c7b346"
        ]
    },
    {
        "repo_name": "pyca/pyopenssl",
        "CVE_ID": "CVE-2018-1000808",
        "Problem_Type": "CWE-404",
        "Description": "Python Cryptographic Authority pyopenssl version Before 17.5.0 contains a CWE - 401 : Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 Store that can result in Denial of service if memory runs low or is exhausted. This attack appear to be exploitable via Depends upon calling application, however it could be as simple as initiating a TLS connection. Anything that would cause the calling application to reload certificates from a PKCS #12 store.. This vulnerability appears to have been fixed in 17.5.0.",
        "URL": "https://github.com/pyca/pyopenssl/pull/723",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e73818600065821d588af475b024f4eb518c3509",
        "inducing_commit_hash_pyszz": [
            "57051a53e154c2b401ab84d6f01c6512e6c7b346"
        ],
        "inducing_commit_hash_pd": [
            "7e166fe9cbd810ea7441e1e4fed0d600f47950dd",
            "6037d073170d054554405df944136c1ddd9bbf22",
            "e5912cef665cf21eaab078c440c2c684b8d14e26",
            "80b25efa407f15c1c21323b7e512e2e051c0f5e3"
        ],
        "matched": [
            "57051a53e154c2b401ab84d6f01c6512e6c7b346"
        ]
    },
    {
        "repo_name": "pyinstaller/pyinstaller",
        "CVE_ID": "CVE-2023-49797",
        "Problem_Type": "CWE-732",
        "Description": "PyInstaller bundles a Python application and all its dependencies into a single package. A PyInstaller built application, elevated as a privileged process, may be tricked by an unprivileged attacker into deleting files the unprivileged user does not otherwise have access to. A user is affected if **all** the following are satisfied: 1. The user runs an application containing either `matplotlib` or `win32com`. 2. The application is ran as administrator (or at least a user with higher privileges than the attacker). 3. The user's temporary directory is not locked to that specific user (most likely due to `TMP`/`TEMP` environment variables pointing to an unprotected, arbitrary, non default location). Either: A. The attacker is able to very carefully time the replacement of a temporary file with a symlink. This switch must occur exactly between `shutil.rmtree()`'s builtin symlink check and the deletion itself B: The application was built with Python 3.7.x or earlier which has no protection against Directory Junctions links. The vulnerability has been addressed in PR #7827 which corresponds to `pyinstaller >= 5.13.1`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/pyinstaller/pyinstaller/pull/7827",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "5a53dc58295b26eb8af1f146df990a657bc916d1",
        "inducing_commit_hash_pyszz": [
            "45faec8b2fdfa5877498a2ef74d9e2fe93a3b423"
        ],
        "inducing_commit_hash_pd": [
            "45faec8b2fdfa5877498a2ef74d9e2fe93a3b423",
            "24ba9242eab7dc30eafe3665640b37635864c1d3",
            "213bfc3923055cfc18ba7248db5124dbfccea3f9"
        ],
        "matched": [
            "45faec8b2fdfa5877498a2ef74d9e2fe93a3b423"
        ]
    },
    {
        "repo_name": "pypa/pip",
        "CVE_ID": "CVE-2013-1888",
        "Problem_Type": "CWE-59",
        "Description": "pip before 1.3 allows local users to overwrite arbitrary files via a symlink attack on a file in the /tmp/pip-build temporary directory.",
        "URL": "https://github.com/pypa/pip/pull/734/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pytest-dev/py",
        "CVE_ID": "CVE-2020-29651",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A denial of service via regular expression in the py.path.svnwc component of py (aka python-py) through 1.9.0 could be used by attackers to cause a compute-time denial of service attack by supplying malicious input to the blame functionality.",
        "URL": "https://github.com/pytest-dev/py/pull/257/commits/4a9017dc6199d2a564b6e4b0aa39d6d8870e4144",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a9017dc6199d2a564b6e4b0aa39d6d8870e4144",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5992a8ef21424d7571305a8d7e2a3431ee7e1e23"
        ],
        "matched": [
            "5992a8ef21424d7571305a8d7e2a3431ee7e1e23"
        ]
    },
    {
        "repo_name": "python-poetry/poetry-core",
        "CVE_ID": "CVE-2022-26184",
        "Problem_Type": "CWE-426",
        "Description": "Poetry v1.1.9 and below was discovered to contain an untrusted search path which causes the application to behave in unexpected ways when users execute Poetry commands in a directory containing malicious content. This vulnerability occurs when the application is ran on Windows OS.",
        "URL": "https://github.com/python-poetry/poetry-core/pull/205/commits/fa9cb6f358ae840885c700f954317f34838caba7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fa9cb6f358ae840885c700f954317f34838caba7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "d095e4a4af8f190d55199dd6ee60f4437143800e"
        ],
        "matched": [
            "d095e4a4af8f190d55199dd6ee60f4437143800e"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2018-1000117",
        "Problem_Type": "CWE-120",
        "Description": "Python Software Foundation CPython version From 3.2 until 3.6.4 on Windows contains a Buffer Overflow vulnerability in os.symlink() function on Windows that can result in Arbitrary code execution, likely escalation of privilege. This attack appears to be exploitable via a python script that creates a symlink with an attacker controlled name or location. This vulnerability appears to have been fixed in 3.7.0 and 3.6.5.",
        "URL": "https://github.com/python/cpython/pull/5989",
        "Tag": "['Issue Tracking', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6921e73e33edc3c61bc2d78ed558eaa22a89a564",
        "inducing_commit_hash_pyszz": [
            "deab18dfd0e16a75686d99f243f38826385bc8d1"
        ],
        "inducing_commit_hash_pd": [
            "3a09286790c58522195eadc3eaa4a21e8da89ea1",
            "89f507fe8c497b3f70fdcecce8bc240f9af2bbe2",
            "31b3b92f7af4adb44ef5ef21c329c383817d087e",
            "e7e7eba1088ce27c14d27d4c7dc81e417dce3641",
            "9cf065cfdc4245ea7e31edcb2e6ede0cea47d148",
            "2f93635d342a500053e97c9c7c30f1eaf11fc3ac",
            "deab18dfd0e16a75686d99f243f38826385bc8d1",
            "072318b178f9824de5e0672218495f699dbdce44"
        ],
        "matched": [
            "deab18dfd0e16a75686d99f243f38826385bc8d1"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2018-1000802",
        "Problem_Type": "CWE-77",
        "Description": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
        "URL": "https://github.com/python/cpython/pull/8985/commits/add531a1e55b0a739b0f42582f1c9747e5649ace",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "d8b103b8b3ef9644805341216963a64098642435",
        "inducing_commit_hash_pyszz": [
            "62e17ad2340f2c46aed45cf38ead786f5d5124d2"
        ],
        "inducing_commit_hash_pd": [
            "62e17ad2340f2c46aed45cf38ead786f5d5124d2",
            "48cc8dc958165053af6d52426743db365786c7bb"
        ],
        "matched": [
            "62e17ad2340f2c46aed45cf38ead786f5d5124d2"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2018-1000802",
        "Problem_Type": "CWE-77",
        "Description": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
        "URL": "https://github.com/python/cpython/pull/8985",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "d8b103b8b3ef9644805341216963a64098642435",
        "inducing_commit_hash_pyszz": [
            "62e17ad2340f2c46aed45cf38ead786f5d5124d2"
        ],
        "inducing_commit_hash_pd": [
            "62e17ad2340f2c46aed45cf38ead786f5d5124d2",
            "48cc8dc958165053af6d52426743db365786c7bb"
        ],
        "matched": [
            "62e17ad2340f2c46aed45cf38ead786f5d5124d2"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2019-9948",
        "Problem_Type": "CWE-22",
        "Description": "urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call.",
        "URL": "https://github.com/python/cpython/pull/11842",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b15bde8058e821b383d81fcae68b335a752083ca",
        "inducing_commit_hash_pyszz": [
            "7c6ebb572ea73cc7873f5d8b3277fa43529953f5"
        ],
        "inducing_commit_hash_pd": [
            "7c6ebb572ea73cc7873f5d8b3277fa43529953f5"
        ],
        "matched": [
            "7c6ebb572ea73cc7873f5d8b3277fa43529953f5"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2020-15523",
        "Problem_Type": "CWE-427",
        "Description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
        "URL": "https://github.com/python/cpython/pull/21297",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5",
        "inducing_commit_hash_pyszz": [
            "7b79dc9200a19ecbac667111dffd58e314be02a8"
        ],
        "inducing_commit_hash_pd": [
            "4d0d471a8031de90a2b1ce99c4ac4780e60b3bc9",
            "9c42f8cda552694f3b47d6388d4ae84d61731872",
            "7b79dc9200a19ecbac667111dffd58e314be02a8",
            "ed51b268580c1100b46bf5dbc4b4201146019644",
            "23bace26ec265557697cf3b578b361c178070cd5",
            "52ad33abbfb6637d74932617c7013bae0ccf6e32",
            "65e4cb10d9d9964f30bc72561bf0e86833328a3b",
            "9316ee4da2dcc217351418fc4dbe9205995689e0",
            "0327bde9da203bb256b58218d012ca76ad0db4e4",
            "52e14d640be3a7fa2c17f5a2a6bc9626d622aa40",
            "410759fba80aded5247b693c60745aa16906f3bb",
            "c422167749f92d4170203e996a2c619c818335ea",
            "b1147e43daeb3c51a63056b489e8d868404d4e22",
            "91c99873d115b9796377d5056785f2abc987520f",
            "12f2f177fc483723406d7917194e7f655a20631b",
            "1aa7e3a177756b9407cdde745fbb4adf7da35dbe",
            "331a6a56e9a9c72f3e4605987fabdaec72677702",
            "31a8393cf6a74c870c3484dd68500619f6232c6d",
            "85ce0a7178801b538160cbb5cf9ef50a713c45bf",
            "425717fee1c72df464c9f85b9a8d32b9197d1035"
        ],
        "matched": [
            "7b79dc9200a19ecbac667111dffd58e314be02a8"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2020-15801",
        "Problem_Type": "CWE-426",
        "Description": "In Python 3.8.4, sys.path restrictions specified in a python38._pth file are ignored, allowing code to be loaded from arbitrary locations. The <executable-name>._pth file (e.g., the python._pth file) is not affected.",
        "URL": "https://github.com/python/cpython/pull/21495",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "936a66094591dc0e67d4a60c170148bb700ec016",
        "inducing_commit_hash_pyszz": [
            "dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5"
        ],
        "inducing_commit_hash_pd": [
            "1da055ee0dd11b8c16644c27381a2b20bf0ff205",
            "dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5"
        ],
        "matched": [
            "dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2020-8492",
        "Problem_Type": "CWE-400",
        "Description": "Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking.",
        "URL": "https://github.com/python/cpython/pull/18284",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b297d4ff1c0e4480ad33acae793fbaf4bf015b4",
        "inducing_commit_hash_pyszz": [
            "783737625d1f06f78b53eee6331d2f428ffe4d27"
        ],
        "inducing_commit_hash_pd": [
            "477c8d5e70240744d24631b18341ad892c8a8e1c",
            "0ea91cb5c6eac161722b3109ac636d5c782bf454",
            "4d70c3d9dded0f0fa7a73c67217a71111d05df4d",
            "92a5bf0c0aae607da90bb08a01b7d06c4c8b45fe",
            "34f3fcc269be2ecded57ff3ae336977c5e74c42f",
            "783737625d1f06f78b53eee6331d2f428ffe4d27",
            "4de00a2e87ba7c69965ab4edcfcafc9eb63f0a97",
            "4fbc72b4ac7ac32d85f1fe8d465ed4c8736d002d",
            "1afc1696167547a5fa101c53e5a3ab4717f8852c",
            "1a129c882cbe2f3b51babc047b08d9266634de2b"
        ],
        "matched": [
            "783737625d1f06f78b53eee6331d2f428ffe4d27"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-23336",
        "Problem_Type": "CWE-444",
        "Description": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
        "URL": "https://github.com/python/cpython/pull/24297",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fcbe0cb04d35189401c0c880ebfb4311e952d776",
        "inducing_commit_hash_pyszz": [
            "f0853bcedf8531856bdda149a540eaa0fc26e692"
        ],
        "inducing_commit_hash_pd": [
            "f0853bcedf8531856bdda149a540eaa0fc26e692",
            "68f323715e6627c550d1e8ffed7e36f1bb4aa42b",
            "5c23b8e6ea7cdb0002842d16dbce4b4d716dd35a",
            "afde7e24b6c7cd75e1797a02fa6c3674f6419531",
            "e08c04c3871a58a59e931f23f4ff5a1165c8fd3e",
            "e38415e776341208b345d260e1ca5c5a5dd58fc6",
            "c469d4c3aa0a66579d1927f0e5d9630b3ea4024f",
            "116aa62bf54a39697e25f21d6cf6799f7faa1349",
            "cc3fa204d357be5fafc10eb8c2a80fe0bca998f1",
            "545c955be997efd6b3827b981024e6b9945d82d1",
            "b79b5c09493e98374e48fa122d82dab528fc6e72",
            "0d8f07305d7ddcf684c3db5680263c98cf70c067",
            "0147db07efa0f1d8d97900d278c402085ec9bb85",
            "209144831b0a19715bda3bd72b14a3e6192d9cc1"
        ],
        "matched": [
            "f0853bcedf8531856bdda149a540eaa0fc26e692"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-28861",
        "Problem_Type": "CWE-601",
        "Description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
        "URL": "https://github.com/python/cpython/pull/93879",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4abab6b603dd38bec1168e9a37c40a48ec89508e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b533e26dfae98f00facb50a6d3d6c200771d051f"
        ],
        "matched": [
            "b533e26dfae98f00facb50a6d3d6c200771d051f"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-28861",
        "Problem_Type": "CWE-601",
        "Description": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
        "URL": "https://github.com/python/cpython/pull/24848",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-29921",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
        "URL": "https://github.com/python/cpython/pull/25099",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "60ce8f0be6354ad565393ab449d8de5d713f35bc",
        "inducing_commit_hash_pyszz": [
            "3317466061509c83dce257caab3661d52571cab1"
        ],
        "inducing_commit_hash_pd": [
            "730f67f2fa2d1df828a93301e4df48f1f1c41b2b",
            "e653d4d8e820a7a004ad399530af0135b45db27a",
            "07c4e33c0776ee757b4ac24f4426cab5418c414e",
            "8b852f111eb3e3f2e4f53f207859fdb3654d9b10",
            "3317466061509c83dce257caab3661d52571cab1"
        ],
        "matched": [
            "3317466061509c83dce257caab3661d52571cab1"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-29921",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
        "URL": "https://github.com/python/cpython/pull/12577",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e653d4d8e820a7a004ad399530af0135b45db27a",
        "inducing_commit_hash_pyszz": [
            "07c4e33c0776ee757b4ac24f4426cab5418c414e"
        ],
        "inducing_commit_hash_pd": [
            "07c4e33c0776ee757b4ac24f4426cab5418c414e",
            "36f8dcde067659cb94a6666d745c103e7251875b"
        ],
        "matched": [
            "07c4e33c0776ee757b4ac24f4426cab5418c414e"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-3177",
        "Problem_Type": "CWE-120",
        "Description": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
        "URL": "https://github.com/python/cpython/pull/24239",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "916610ef90a0d0761f08747f7b0905541f0977c7",
        "inducing_commit_hash_pyszz": [
            "3ffa8b9ba190101f674a0e524e482a83ed09cccd"
        ],
        "inducing_commit_hash_pd": [
            "3ffa8b9ba190101f674a0e524e482a83ed09cccd",
            "062cbb67726f26794b1b461853e40696b4a0b220",
            "cd16bf640405065e4702539632ce577536207d88",
            "d4c9320412177895f598a93d73a0e654db27c351",
            "1ab833082738ced53318aca05901e596d5ede683"
        ],
        "matched": [
            "3ffa8b9ba190101f674a0e524e482a83ed09cccd"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-3733",
        "Problem_Type": "CWE-400",
        "Description": "There's a flaw in urllib's AbstractBasicAuthHandler class. An attacker who controls a malicious HTTP server that an HTTP client (such as web browser) connects to, could trigger a Regular Expression Denial of Service (ReDOS) during an authentication request with a specially crafted payload that is sent by the server to the client. The greatest threat that this flaw poses is to application availability.",
        "URL": "https://github.com/python/cpython/pull/24391",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7215d1ae25525c92b026166f9d5cac85fb1defe1",
        "inducing_commit_hash_pyszz": [
            "0b297d4ff1c0e4480ad33acae793fbaf4bf015b4"
        ],
        "inducing_commit_hash_pd": [
            "0b297d4ff1c0e4480ad33acae793fbaf4bf015b4"
        ],
        "matched": [
            "0b297d4ff1c0e4480ad33acae793fbaf4bf015b4"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-3737",
        "Problem_Type": "CWE-400",
        "Description": "A flaw was found in python. An improperly handled HTTP response in the HTTP client code of python may allow a remote attacker, who controls the HTTP server, to make the client script enter an infinite loop, consuming CPU time. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/python/cpython/pull/25916",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "47895e31b6f626bc6ce47d175fe9d43c1098909d",
        "inducing_commit_hash_pyszz": [
            "babc688180ac9214fcc217ef906b8d11c1babe36"
        ],
        "inducing_commit_hash_pd": [
            "820c1200597606f95bb996586be88a3283c6448c",
            "b2e0b92ef16b0a4752fa32822af986486439b80f",
            "be19ed77ddb047e02fe94d142181062af6d99dcc",
            "98eb6c283881168adbedf37bb34300c39954397a",
            "babc688180ac9214fcc217ef906b8d11c1babe36",
            "be4fcf1875c84dc22177530238b04b8036935567",
            "5466bf1c94d38e75bc053b0cfc163e2f948fe345"
        ],
        "matched": [
            "babc688180ac9214fcc217ef906b8d11c1babe36"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2021-3737",
        "Problem_Type": "CWE-400",
        "Description": "A flaw was found in python. An improperly handled HTTP response in the HTTP client code of python may allow a remote attacker, who controls the HTTP server, to make the client script enter an infinite loop, consuming CPU time. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/python/cpython/pull/26503",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e60ab843cbb016fb6ff8b4f418641ac05a9b2fcc",
        "inducing_commit_hash_pyszz": [
            "47895e31b6f626bc6ce47d175fe9d43c1098909d"
        ],
        "inducing_commit_hash_pd": [
            "47895e31b6f626bc6ce47d175fe9d43c1098909d"
        ],
        "matched": [
            "47895e31b6f626bc6ce47d175fe9d43c1098909d"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2022-40899",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Python Charmers Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.",
        "URL": "https://github.com/python/cpython/pull/17157",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1b779bfb8593739b11cbb988ef82a883ec9d077e",
        "inducing_commit_hash_pyszz": [
            "2a6ba9097ee3942ae328befaf074ce9722b93ca0"
        ],
        "inducing_commit_hash_pd": [
            "fd036451bf0e0ade8783e21df801abf7be96d020",
            "2a6ba9097ee3942ae328befaf074ce9722b93ca0"
        ],
        "matched": [
            "2a6ba9097ee3942ae328befaf074ce9722b93ca0"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-24329",
        "Problem_Type": "CWE-20",
        "Description": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
        "URL": "https://github.com/python/cpython/pull/99421",
        "Tag": "['Patch']",
        "fix_commit_hash": "439b9cfaf43080e91c4ad69f312f21fa098befc7",
        "inducing_commit_hash_pyszz": [
            "23cb2a83a5e709761e8f649371a935f7b676ea10"
        ],
        "inducing_commit_hash_pd": [
            "23cb2a83a5e709761e8f649371a935f7b676ea10"
        ],
        "matched": [
            "23cb2a83a5e709761e8f649371a935f7b676ea10"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-33595",
        "Problem_Type": "CWE-416",
        "Description": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
        "URL": "https://github.com/python/cpython/pull/103993/commits/c120bc2d354ca3d27d0c7a53bf65574ddaabaf3a",
        "Tag": "['Patch']",
        "fix_commit_hash": "d5a97074d24cd14cb2a35a2b1ad3074863cde264",
        "inducing_commit_hash_pyszz": [
            "e13d1d9dda8c27691180bc618bd5e9bf43dfa89f"
        ],
        "inducing_commit_hash_pd": [
            "e13d1d9dda8c27691180bc618bd5e9bf43dfa89f"
        ],
        "matched": [
            "e13d1d9dda8c27691180bc618bd5e9bf43dfa89f"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-40587",
        "Problem_Type": "CWE-22",
        "Description": "Pyramid is an open source Python web framework. A path traversal vulnerability in Pyramid versions 2.0.0 and 2.0.1 impacts users of Python 3.11 that are using a Pyramid static view with a full filesystem path and have a `index.html` file that is located exactly one directory above the location of the static view's file system path. No further path traversal exists, and the only file that could be disclosed accidentally is `index.html`. Pyramid version 2.0.2 rejects any path that contains a null-byte out of caution. While valid in directory/file names, we would strongly consider it a mistake to use null-bytes in naming files/directories. Secondly, Python 3.11, and 3.12 has fixed the underlying issue in `os.path.normpath` to no longer truncate on the first `0x00` found, returning the behavior to pre-3.11 Python, un an as of yet unreleased version. Fixes will be available in:Python 3.12.0rc2 and 3.11.5. Some workarounds are available. Use a version of Python 3 that is not affected, downgrade to Python 3.10 series temporarily, or wait until Python 3.11.5 is released and upgrade to the latest version of Python 3.11 series.",
        "URL": "https://github.com/python/cpython/pull/106816",
        "Tag": "['Patch']",
        "fix_commit_hash": "09322724319d4c23195300b222a1c0ea720af56b",
        "inducing_commit_hash_pyszz": [
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ],
        "inducing_commit_hash_pd": [
            "99fcf1505218464c489d419d4500f126b6d6dc28",
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ],
        "matched": [
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-41105",
        "Problem_Type": "CWE-426",
        "Description": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
        "URL": "https://github.com/python/cpython/pull/107982",
        "Tag": "['Patch']",
        "fix_commit_hash": "ccf81e1088c25a9f4464e478dc3b5c03ed7ee63b",
        "inducing_commit_hash_pyszz": [
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ],
        "inducing_commit_hash_pd": [
            "99fcf1505218464c489d419d4500f126b6d6dc28",
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ],
        "matched": [
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-41105",
        "Problem_Type": "CWE-426",
        "Description": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
        "URL": "https://github.com/python/cpython/pull/107983",
        "Tag": "['Patch']",
        "fix_commit_hash": "34e1917912f05e3ab5c9b1e39f678bd36388499e",
        "inducing_commit_hash_pyszz": [
            "09322724319d4c23195300b222a1c0ea720af56b"
        ],
        "inducing_commit_hash_pd": [
            "09322724319d4c23195300b222a1c0ea720af56b"
        ],
        "matched": [
            "09322724319d4c23195300b222a1c0ea720af56b"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-41105",
        "Problem_Type": "CWE-426",
        "Description": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
        "URL": "https://github.com/python/cpython/pull/107981",
        "Tag": "['Patch']",
        "fix_commit_hash": "ede98958810b76694cf756d305b564cd6adc1a48",
        "inducing_commit_hash_pyszz": [
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ],
        "inducing_commit_hash_pd": [
            "99fcf1505218464c489d419d4500f126b6d6dc28",
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ],
        "matched": [
            "9c5fa9c97c5c5336e60e4ae7a2e6e3f67acedfc7"
        ]
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2023-6507",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was found in CPython 3.12.0 `subprocess` module on POSIX platforms. The issue was fixed in CPython 3.12.1 and does not affect other stable releases.\n\nWhen using the `extra_groups=` parameter with an empty list as a value (ie `extra_groups=[]`) the logic regressed to not call `setgroups(0, NULL)` before calling `exec()`, thus not dropping the original processes' groups before starting the new process. There is no issue when the parameter isn't used or when any value is used besides an empty list.\n\nThis issue only impacts CPython processes run with sufficient privilege to make the `setgroups` system call (typically `root`).\n\n",
        "URL": "https://github.com/python/cpython/pull/112617",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9fe7655c6ce0b8e9adc229daf681b6d30e6b1610",
        "inducing_commit_hash_pyszz": [
            "dfc5c41632c5c9b54edd43d11dd492a52ed5d372"
        ],
        "inducing_commit_hash_pd": [
            "2b2ead74382513d0bb9ef34504e283a71e6a706f",
            "67b93f80c764bca01c81c989d74a99df208bea4d",
            "73245d084e383b5bc3affedc9444e6b6c881c546",
            "dfc5c41632c5c9b54edd43d11dd492a52ed5d372"
        ],
        "matched": [
            "dfc5c41632c5c9b54edd43d11dd492a52ed5d372"
        ]
    },
    {
        "repo_name": "pytorch/serve",
        "CVE_ID": "CVE-2023-48299",
        "Problem_Type": "CWE-22",
        "Description": "TorchServe is a tool for serving and scaling PyTorch models in production. Starting in version 0.1.0 and prior to version 0.9.0, using the model/workflow management API, there is a chance of uploading potentially harmful archives that contain files that are extracted to any location on the filesystem that is within the process permissions. Leveraging this issue could aid third-party actors in hiding harmful code in open-source/public models, which can be downloaded from the internet, and take advantage of machines running Torchserve. The ZipSlip issue in TorchServe has been fixed by validating the paths of files contained within a zip archive before extracting them. TorchServe release 0.9.0 includes fixes to address the ZipSlip vulnerability.",
        "URL": "https://github.com/pytorch/serve/pull/2634",
        "Tag": "['Patch']",
        "fix_commit_hash": "bfb3d42396727614aef625143b4381e64142f9bb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c776aed0036c07674da9e4ca02b58e4df532b21e"
        ],
        "matched": [
            "c776aed0036c07674da9e4ca02b58e4df532b21e"
        ]
    },
    {
        "repo_name": "quassel/quassel",
        "CVE_ID": "CVE-2021-34825",
        "Problem_Type": "CWE-319",
        "Description": "Quassel through 0.13.1, when --require-ssl is enabled, launches without SSL or TLS support if a usable X.509 certificate is not found on the local system.",
        "URL": "https://github.com/quassel/quassel/pull/581",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0674fae039bbc79bfe3f7e42b12ec9015b9b879b",
        "inducing_commit_hash_pyszz": [
            "f20d380a36e11a7591dacbf0a62d7c11d997f9db"
        ],
        "inducing_commit_hash_pd": [
            "f20d380a36e11a7591dacbf0a62d7c11d997f9db"
        ],
        "matched": [
            "f20d380a36e11a7591dacbf0a62d7c11d997f9db"
        ]
    },
    {
        "repo_name": "quay/clair",
        "CVE_ID": "CVE-2021-3762",
        "Problem_Type": "CWE-22",
        "Description": "A directory traversal vulnerability was found in the ClairCore engine of Clair. An attacker can exploit this by supplying a crafted container image which, when scanned by Clair, allows for arbitrary file write on the filesystem, potentially allowing for remote code execution.",
        "URL": "https://github.com/quay/clair/pull/1380",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7ee97e506372454963c81a3c5c045ce487056d87",
        "inducing_commit_hash_pyszz": [
            "90f2909ed8d29b90dad205f9ad92bbbf9660f88c"
        ],
        "inducing_commit_hash_pd": [
            "90f2909ed8d29b90dad205f9ad92bbbf9660f88c"
        ],
        "matched": [
            "90f2909ed8d29b90dad205f9ad92bbbf9660f88c"
        ]
    },
    {
        "repo_name": "quay/clair",
        "CVE_ID": "CVE-2021-3762",
        "Problem_Type": "CWE-22",
        "Description": "A directory traversal vulnerability was found in the ClairCore engine of Clair. An attacker can exploit this by supplying a crafted container image which, when scanned by Clair, allows for arbitrary file write on the filesystem, potentially allowing for remote code execution.",
        "URL": "https://github.com/quay/clair/pull/1379",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "63b5b3d97f50fc1c22eb4be55e9cfc2cdb7ed86b",
        "inducing_commit_hash_pyszz": [
            "f4d8255c3a7db8b7e59066bc13ff25d39be938ae"
        ],
        "inducing_commit_hash_pd": [
            "f4d8255c3a7db8b7e59066bc13ff25d39be938ae"
        ],
        "matched": [
            "f4d8255c3a7db8b7e59066bc13ff25d39be938ae"
        ]
    },
    {
        "repo_name": "quay/claircore",
        "CVE_ID": "CVE-2021-3762",
        "Problem_Type": "CWE-22",
        "Description": "A directory traversal vulnerability was found in the ClairCore engine of Clair. An attacker can exploit this by supplying a crafted container image which, when scanned by Clair, allows for arbitrary file write on the filesystem, potentially allowing for remote code execution.",
        "URL": "https://github.com/quay/claircore/pull/478",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "691f2023a1720a0579e688b69a2f4bfe1f4b7821",
        "inducing_commit_hash_pyszz": [
            "5528de0780fc06fddc5b9599105cbe09c5c5b320"
        ],
        "inducing_commit_hash_pd": [
            "3c2fafca5b051ec99cbd2a608271667b82d87d98",
            "5528de0780fc06fddc5b9599105cbe09c5c5b320"
        ],
        "matched": [
            "5528de0780fc06fddc5b9599105cbe09c5c5b320"
        ]
    },
    {
        "repo_name": "quic-go/quic-go",
        "CVE_ID": "CVE-2023-39533",
        "Problem_Type": "CWE-770",
        "Description": "go-libp2p is the Go implementation of the libp2p Networking Stack. Prior to versions 0.27.8, 0.28.2, and 0.29.1 malicious peer can use large RSA keys to run a resource exhaustion attack & force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step. To prevent this attack, go-libp2p versions 0.27.8, 0.28.2, and 0.29.1 restrict RSA keys to <= 8192 bits. To protect one's application, it is necessary to update to these patch releases and to use the updated Go compiler in 1.20.7 or 1.19.12. There are no known workarounds for this issue.",
        "URL": "https://github.com/quic-go/quic-go/pull/4012",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f9f6b9df6ec6769ec6bb7d4fd0b29177cbc2bf55",
        "inducing_commit_hash_pyszz": [
            "48e18b922d7a2bc6eb2bf93a4ef8ea1e164023bf"
        ],
        "inducing_commit_hash_pd": [
            "3d89e545d3f7da8e929b44d45bd0545b868849a2"
        ],
        "matched": [
            "48e18b922d7a2bc6eb2bf93a4ef8ea1e164023bf"
        ]
    },
    {
        "repo_name": "quinn-rs/quinn",
        "CVE_ID": "CVE-2023-42805",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "quinn-proto is a state machine for the QUIC transport protocol. Prior to versions 0.9.5 and 0.10.5, receiving unknown QUIC frames in a QUIC packet could result in a panic. The problem has been fixed in 0.9.5 and 0.10.5 maintenance releases.",
        "URL": "https://github.com/quinn-rs/quinn/pull/1668",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "4fe2e4007eb341eec2a4d8868bcb3d77b476f14b",
        "inducing_commit_hash_pyszz": [
            "e07003e856b2d05ce8ab8fa43ebe6c811ec938f4"
        ],
        "inducing_commit_hash_pd": [
            "e07003e856b2d05ce8ab8fa43ebe6c811ec938f4"
        ],
        "matched": [
            "e07003e856b2d05ce8ab8fa43ebe6c811ec938f4"
        ]
    },
    {
        "repo_name": "quinn-rs/quinn",
        "CVE_ID": "CVE-2023-42805",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "quinn-proto is a state machine for the QUIC transport protocol. Prior to versions 0.9.5 and 0.10.5, receiving unknown QUIC frames in a QUIC packet could result in a panic. The problem has been fixed in 0.9.5 and 0.10.5 maintenance releases.",
        "URL": "https://github.com/quinn-rs/quinn/pull/1667",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f81c2fafa7381a826c76506126b217c584082177",
        "inducing_commit_hash_pyszz": [
            "bab7b0af9105d274a77b945c5932f4ec1e97a9dc"
        ],
        "inducing_commit_hash_pd": [
            "6bddfdea1aaba04964ee902ce2f43200ca0c5e6d",
            "72334550786ac7517cd966e2e6f0a707648ea1f7",
            "77b47504b270a2823b14635e2bc58c0f6124eef3",
            "dc1e7884f4787bb83cc3bdde6dc90fd99058d974",
            "8476e117167a7e4f2718274039894a2cccf1bd17",
            "008e1970301187ea0f4237109dacd67ec5dd47ea",
            "472a091e22bf28464d09fd80c597907e271accc8",
            "7f141bf459fa6e17d806e049863d0df42e157e6d",
            "bab7b0af9105d274a77b945c5932f4ec1e97a9dc",
            "ad6f61b4a46f291567cec808e68b94050f0ff4e8",
            "0f47d3519338ce75468643cd60565fa7117daba9",
            "8722506c3b531494d16aee4e412632dbd33f1786"
        ],
        "matched": [
            "bab7b0af9105d274a77b945c5932f4ec1e97a9dc"
        ]
    },
    {
        "repo_name": "radareorg/radare2-extras",
        "CVE_ID": "CVE-2020-24133",
        "Problem_Type": "CWE-787",
        "Description": "A heap buffer overflow vulnerability in the r_asm_swf_disass function of Radare2-extras before commit e74a93c allows attackers to execute arbitrary code or carry out denial of service (DOS) attacks.",
        "URL": "https://github.com/radareorg/radare2-extras/pull/255",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e74a93c4add46ab5ed046825ebb22c3b120a4668",
        "inducing_commit_hash_pyszz": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ],
        "inducing_commit_hash_pd": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ],
        "matched": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ]
    },
    {
        "repo_name": "radareorg/radare2-extras",
        "CVE_ID": "CVE-2020-24133",
        "Problem_Type": "CWE-787",
        "Description": "A heap buffer overflow vulnerability in the r_asm_swf_disass function of Radare2-extras before commit e74a93c allows attackers to execute arbitrary code or carry out denial of service (DOS) attacks.",
        "URL": "https://github.com/radareorg/radare2-extras/pull/255/commits/4a8b24475549ff10bdf6d07fd4b5f6c1cc6246ea",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e74a93c4add46ab5ed046825ebb22c3b120a4668",
        "inducing_commit_hash_pyszz": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ],
        "inducing_commit_hash_pd": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ],
        "matched": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ]
    },
    {
        "repo_name": "radareorg/radare2-extras",
        "CVE_ID": "CVE-2020-24133",
        "Problem_Type": "CWE-787",
        "Description": "A heap buffer overflow vulnerability in the r_asm_swf_disass function of Radare2-extras before commit e74a93c allows attackers to execute arbitrary code or carry out denial of service (DOS) attacks.",
        "URL": "https://github.com/radareorg/radare2-extras/pull/255/commits/9f6a221433964d9b14f3ed78bc9fb059395b893b",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e74a93c4add46ab5ed046825ebb22c3b120a4668",
        "inducing_commit_hash_pyszz": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ],
        "inducing_commit_hash_pd": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ],
        "matched": [
            "00cd6d221e6a5d03968c4468835a0f73e7a64d8a"
        ]
    },
    {
        "repo_name": "radareorg/radare2",
        "CVE_ID": "CVE-2020-27795",
        "Problem_Type": "CWE-908",
        "Description": "A segmentation fault was discovered in radare2 with adf command. In libr/core/cmd_anal.c, when command \"adf\" has no or wrong argument, anal_fcn_data (core, input + 1) --> RAnalFunction *fcn = r_anal_get_fcn_in (core->anal, core->offset, -1); returns null pointer for fcn causing segmentation fault later in ensure_fcn_range (fcn).",
        "URL": "https://github.com/radareorg/radare2/pull/16230",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4d3811681a80f92a53e795f6a64c4b0fc2c8dd22",
        "inducing_commit_hash_pyszz": [
            "8727840e90bd0416b52f80b3337935dfcba7f57f"
        ],
        "inducing_commit_hash_pd": [
            "14215350af35cc8b14710557c248d2e77baf380d",
            "79cc7c99585c3d379324806daa011af893a6b0f0"
        ],
        "matched": [
            "8727840e90bd0416b52f80b3337935dfcba7f57f"
        ]
    },
    {
        "repo_name": "radare/radare2",
        "CVE_ID": "CVE-2018-15834",
        "Problem_Type": "CWE-787",
        "Description": "In radare2 before 2.9.0, a heap overflow vulnerability exists in the read_module_referenced_functions function in libr/anal/flirt.c via a crafted flirt signature file.",
        "URL": "https://github.com/radare/radare2/pull/11300",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c415dacc46f54b6d4a499946d0a3ecf695ebe645",
        "inducing_commit_hash_pyszz": [
            "88d4649cc67db2ba7402caf6dce4adba26c4c1d8"
        ],
        "inducing_commit_hash_pd": [
            "88d4649cc67db2ba7402caf6dce4adba26c4c1d8"
        ],
        "matched": [
            "88d4649cc67db2ba7402caf6dce4adba26c4c1d8"
        ]
    },
    {
        "repo_name": "radare/radare2",
        "CVE_ID": "CVE-2019-14745",
        "Problem_Type": "CWE-77",
        "Description": "In radare2 before 3.7.0, a command injection vulnerability exists in bin_symbols() in libr/core/cbin.c. By using a crafted executable file, it's possible to execute arbitrary shell commands with the permissions of the victim. This vulnerability is due to improper handling of symbol names embedded in executables.",
        "URL": "https://github.com/radare/radare2/pull/14690",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d30ff52fc1be6f9698b166107b8981eab6ec7ba",
        "inducing_commit_hash_pyszz": [
            "14a775f14f5eb074a48035cb5fd5dd72087d0e2f"
        ],
        "inducing_commit_hash_pd": [
            "c5d65fbd42964fddba5c35bd74836a7af5d855d6",
            "14a775f14f5eb074a48035cb5fd5dd72087d0e2f"
        ],
        "matched": [
            "14a775f14f5eb074a48035cb5fd5dd72087d0e2f"
        ]
    },
    {
        "repo_name": "ramda/ramda",
        "CVE_ID": "CVE-2021-42581",
        "Problem_Type": "CWE-1321",
        "Description": "Prototype poisoning in function mapObjIndexed in Ramda 0.27.0 and earlier allows attackers to compromise integrity or availability of application via supplying a crafted object (that contains an own property \"__proto__\") as an argument to the function. NOTE: the vendor disputes this because the observed behavior only means that a user can create objects that the user didn't know would contain custom prototypes",
        "URL": "https://github.com/ramda/ramda/pull/3192",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RamonSilva20/mapos",
        "CVE_ID": "CVE-2022-48324",
        "Problem_Type": "CWE-79",
        "Description": "Multiple Cross Site Scripting (XSS) vulnerabilities in Mapos 4.39.0 allow attackers to execute arbitrary code. Affects the following parameters: (1) pesquisa, (2) data, (3) data2, (4) nome, (5) descricao, (6) idDocumentos, (7) id in file application/controllers/Arquivos.php; (8) senha, (9) nomeCliente, (10) contato, (11) documento, (12) telefone, (13) celular, (14) email, (15) rua, (16) numero, (17) complemento, (18) bairro, (19) cidade, (20) estado, (21) cep, (22) idClientes, (23) id in file application/controllers/Clientes.php; (24) id, (25) tipo, (26) forma_pagamento, (27) gateway_de_pagamento, (28) excluir_id, (29) confirma_id, (30) cancela_id in file application/controllers/Cobrancas.php; (31) vencimento_de, (32) vencimento_ate, (33) cliente, (34) tipo, (35) status, (36) valor_desconto, (37) desconto, (38) periodo, (39) per_page, (40) urlAtual, (41) vencimento, (42) recebimento, (43) valor, (44) recebido, (45) formaPgto, (46) desconto_parc, (47) entrada, (48) qtdparcelas_parc, (49) valor_parc, (50) dia_pgto, (51) dia_base_pgto, (52) comissao, (53) descricao_parc, (54) cliente_parc, (55) observacoes_parc, (56) formaPgto_parc, (57) tipo_parc, (58) pagamento, (59) pago, (60) valor_desconto_editar, (61) descricao, (62) fornecedor, (63) observacoes, (64) id in file application/controllers/Financeiro.php; (65) refGarantia, (66) textoGarantia, (67) idGarantias in file application/controllers/Garantias.php; (68) email, (69) senha in file application/controllers/Login.php.",
        "URL": "https://github.com/RamonSilva20/mapos/pull/2015#pullrequestreview-1271395780",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RamonSilva20/mapos",
        "CVE_ID": "CVE-2022-48325",
        "Problem_Type": "CWE-79",
        "Description": "Multiple Cross Site Scripting (XSS) vulnerabilities in Mapos 4.39.0 allow attackers to execute arbitrary code. Affects the following parameters: (1) year, (2) oldSenha, (3) novaSenha, (4) termo, (5) nome, (6) cnpj, (7) ie, (8) cep, (9) logradouro, (10) numero, (11) bairro, (12) cidade, (13) uf, (14) telefone, (15) email, (16) id, (17) app_name, (18) per_page, (19) app_theme, (20) os_notification, (21) email_automatico, (22) control_estoque, (23) notifica_whats, (24) control_baixa, (25) control_editos, (26) control_edit_vendas, (27) control_datatable, (28) pix_key, (29) os_status_list, (30) control_2vias, (31) status, (32) start, (33) end in file application/controllers/Mapos.php; (34) token, (35) senha, (36) email, (37) nomeCliente, (38) documento, (39) telefone, (40) celular, (41) rua, (42) numero, (43) complemento, (44) bairro, (45) cidade, (46) estado, (47) cep, (48) idClientes, (49) descricaoProduto, (50) defeito in file application/controllers/Mine.php; (51) pesquisa, (52) status, (53) data, (54) data2, (55) dataInicial, (56) dataFinal, (57) termoGarantia, (58) garantias_id, (59) clientes_id, (60) usuarios_id, (61) idOs, (62) garantia, (63) descricaoProduto, (64) defeito, (65) observacoes, (66) laudoTecnico, (67) id, (68) preco, (69) quantidade, (70) idProduto, (71) idOsProduto, (72) produto, (73) idServico, (74) idOsServico, (75) desconto, (76) tipoDesconto, (77) resultado, (78) vencimento, (79) recebimento, (80) os_id, (81) valor, (82) recebido, (83) formaPgto, (84) tipo, (85) anotacao, (86) idAnotacao in file application/controllers/Os.php.",
        "URL": "https://github.com/RamonSilva20/mapos/pull/2015#pullrequestreview-1271395780",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RamonSilva20/mapos",
        "CVE_ID": "CVE-2022-48326",
        "Problem_Type": "CWE-79",
        "Description": "Multiple Cross Site Scripting (XSS) vulnerabilities in Mapos 4.39.0 allow attackers to execute arbitrary code. Affects the following parameters: (1) nome, (2) aCliente, (3) eCliente, (4) dCliente, (5) vCliente, (6) aProduto, (7) eProduto, (8) dProduto, (9) vProduto, (10) aServico, (11) eServico, (12) dServico, (13) vServico, (14) aOs, (15) eOs, (16) dOs, (17) vOs, (18) aVenda, (19) eVenda, (20) dVenda, (21) vVenda, (22) aGarantia, (23) eGarantia, (24) dGarantia, (25) vGarantia, (26) aArquivo, (27) eArquivo, (28) dArquivo, (29) vArquivo, (30) aPagamento, (31) ePagamento, (32) dPagamento, (33) vPagamento, (34) aLancamento, (35) eLancamento, (36) dLancamento, (37) vLancamento, (38) cUsuario, (39) cEmitente, (40) cPermissao, (41) cBackup, (42) cAuditoria, (43) cEmail, (44) cSistema, (45) rCliente, (46) rProduto, (47) rServico, (48) rOs, (49) rVenda, (50) rFinanceiro, (51) aCobranca, (52) eCobranca, (53) dCobranca, (54) vCobranca, (55) situacao, (56) idPermissao, (57) id in file application/controllers/Permissoes.php; (58) precoCompra, (59) precoVenda, (60) descricao, (61) unidade, (62) estoque, (63) estoqueMinimo, (64) idProdutos, (65) id, (66) estoqueAtual in file application/controllers/Produtos.php.",
        "URL": "https://github.com/RamonSilva20/mapos/pull/2015#pullrequestreview-1271395780",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RamonSilva20/mapos",
        "CVE_ID": "CVE-2022-48327",
        "Problem_Type": "CWE-79",
        "Description": "Multiple Cross Site Scripting (XSS) vulnerabilities in Mapos 4.39.0 allow attackers to execute arbitrary code. Affects the following parameters: (1) dataInicial, (2) dataFinal, (3) tipocliente, (4) format, (5) precoInicial, (6) precoFinal, (7) estoqueInicial, (8) estoqueFinal, (9) de_id, (10) ate_id, (11) clientes_id, (12) origem, (13) cliente, (14) responsavel, (15) status, (16) tipo, (17) situacao in file application/controllers/Relatorios.php; (18) preco, (19) nome, (20) descricao, (21) idServicos, (22) id in file application/controllers/Servicos.php; (23) senha, (24) permissoes_id, (25) idUsuarios, (26) situacao, (27) nome, (28) rg, (29) cpf, (30) cep, (31) rua, (32) numero, (33) bairro, (34) cidade, (35) estado, (36) email, (37) telefone, (38) celular in file application/controllers/Usuarios.php; (39) dataVenda, (40) observacoes, (41) observacoes_cliente, (42) clientes_id, (43) usuarios_id, (44) idVendas, (45) id, (46) idVendasProduto, (47) preco, (48) quantidade, (49) idProduto, (50) produto, (51) desconto, (52) tipoDesconto, (53) resultado, (54) vendas_id, (55) vencimento, (56) recebimento, (57) valor, (58) recebido, (59) formaPgto, (60) tipo in file application/controllers/Vendas.php; (61) situacao, (62) periodo, (63) vencimento_de, (64) vencimento_ate, (65) tipo, (66) status, (67) cliente in file application/views/financeiro/lancamentos.php; (68) year in file application/views/mapos/painel.php; (69) pesquisa in file application/views/os/os.php; (70) etiquetaCode in file application/views/relatorios/imprimir/imprimirEtiquetas.php.",
        "URL": "https://github.com/RamonSilva20/mapos/pull/2015#pullrequestreview-1271395780",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2013-2028",
        "Problem_Type": "CWE-787",
        "Description": "The ngx_http_parse_chunked function in http/ngx_http_parse.c in nginx 1.3.9 through 1.4.0 allows remote attackers to cause a denial of service (crash) and execute arbitrary code via a chunked Transfer-Encoding request with a large chunk size, which triggers an integer signedness error and a stack-based buffer overflow.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/1834",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2019-5624",
        "Problem_Type": "CWE-22",
        "Description": "Rapid7 Metasploit Framework suffers from an instance of CWE-22, Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') in the Zip import function of Metasploit. Exploiting this vulnerability can allow an attacker to execute arbitrary code in Metasploit at the privilege level of the user running Metasploit. This issue affects: Rapid7 Metasploit Framework version 4.14.0 and prior versions.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/11716",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cf7096f8ba899a93c254f9e83417865257681d1a",
        "inducing_commit_hash_pyszz": [
            "04dcd8a1f9d69b0937567b3ce4b3c79ab7a35e5e"
        ],
        "inducing_commit_hash_pd": [
            "04dcd8a1f9d69b0937567b3ce4b3c79ab7a35e5e"
        ],
        "matched": [
            "04dcd8a1f9d69b0937567b3ce4b3c79ab7a35e5e"
        ]
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2019-5645",
        "Problem_Type": "CWE-400",
        "Description": "By sending a specially crafted HTTP GET request to a listening Rapid7 Metasploit HTTP handler, an attacker can register an arbitrary regular expression. When evaluated, this malicious handler can either prevent new HTTP handler sessions from being established, or cause a resource exhaustion on the Metasploit server.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/12433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d87f752591c710cd30527d851788f7d196c3904c",
        "inducing_commit_hash_pyszz": [
            "d65775e5bf5cb5df93d753d3e2ea684235cc90a0"
        ],
        "inducing_commit_hash_pd": [
            "d65775e5bf5cb5df93d753d3e2ea684235cc90a0"
        ],
        "matched": [
            "d65775e5bf5cb5df93d753d3e2ea684235cc90a0"
        ]
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-27386",
        "Problem_Type": "CWE-434",
        "Description": "An unrestricted file upload issue in FlexDotnetCMS before v1.5.9 allows an authenticated remote attacker to upload and execute arbitrary files by using the FileManager to upload malicious code (e.g., ASP code) in the form of a safe file type (e.g., a TXT file), and then using the FileEditor (in v1.5.8 and prior) or the FileManager's rename function (in v1.5.7 and prior) to rename the file to an executable extension (e.g., ASP), and finally executing the file via an HTTP GET request to /<path_to_file>.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14339",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9417266d2125def4810a48cd5dbf065d83caeecc",
        "inducing_commit_hash_pyszz": [
            "ea70c15b56ac19f02eed13e8889d669f25271c49"
        ],
        "inducing_commit_hash_pd": [
            "8aceea18724d3b5b6b98ee800c02de107e74201c",
            "ea70c15b56ac19f02eed13e8889d669f25271c49"
        ],
        "matched": [
            "ea70c15b56ac19f02eed13e8889d669f25271c49"
        ]
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7352",
        "Problem_Type": "CWE-798",
        "Description": "The GalaxyClientService component of GOG Galaxy runs with elevated SYSTEM privileges in a Windows environment. Due to the software shipping with embedded, static RSA private key, an attacker with this key material and local user permissions can effectively send any operating system command to the service for execution in this elevated context. The service listens for such commands on a locally-bound network port, localhost:9978. A Metasploit module has been published which exploits this vulnerability. This issue affects the 2.0.x branch of the software (2.0.12 and earlier) as well as the 1.2.x branch (1.2.64 and earlier). A fix was issued for the 2.0.x branch of the affected software.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13444",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5508bda29e800f64d02b6587fd364dc43dacbaf2",
        "inducing_commit_hash_pyszz": [
            "601f8d6aadb980a0baa3f691f5a0cd1dcb5114b1"
        ],
        "inducing_commit_hash_pd": [
            "601f8d6aadb980a0baa3f691f5a0cd1dcb5114b1"
        ],
        "matched": [
            "601f8d6aadb980a0baa3f691f5a0cd1dcb5114b1"
        ]
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7373",
        "Problem_Type": "CWE-94",
        "Description": "vBulletin 5.5.4 through 5.6.2 allows remote command execution via crafted subWidgets data in an ajax/render/widget_tabbedcontainer_tab_panel request. NOTE: this issue exists because of an incomplete fix for CVE-2019-16759. ALSO NOTE: CVE-2020-7373 is a duplicate of CVE-2020-17496. CVE-2020-17496 is the preferred CVE ID to track this vulnerability.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13970",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b1efd0fe9f78297982f49ae03346bfbc8b4c09b",
        "inducing_commit_hash_pyszz": [
            "661e2a680bfea98c21787c69f1bdd0c02559ffe2"
        ],
        "inducing_commit_hash_pd": [
            "661e2a680bfea98c21787c69f1bdd0c02559ffe2"
        ],
        "matched": [
            "661e2a680bfea98c21787c69f1bdd0c02559ffe2"
        ]
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-28810",
        "Problem_Type": "CWE-78",
        "Description": "Zoho ManageEngine ADSelfService Plus before build 6122 allows a remote authenticated administrator to execute arbitrary operating OS commands as SYSTEM via the policy custom script feature. Due to the use of a default administrator password, attackers may be able to abuse this functionality with minimal effort. Additionally, a remote and partially authenticated attacker may be able to inject arbitrary commands into the custom script due to an unsanitized password field.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16475",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aba48a69058b1b385d2999255f3f53005ad4cde2",
        "inducing_commit_hash_pyszz": [
            "ae54c8c3d9e8ecb8bc29a601cdc57c91684d3a35"
        ],
        "inducing_commit_hash_pd": [
            "ae54c8c3d9e8ecb8bc29a601cdc57c91684d3a35"
        ],
        "matched": [
            "ae54c8c3d9e8ecb8bc29a601cdc57c91684d3a35"
        ]
    },
    {
        "repo_name": "ratpack/ratpack",
        "CVE_ID": "CVE-2021-29481",
        "Problem_Type": "CWE-312",
        "Description": "Ratpack is a toolkit for creating web applications. In versions prior to 1.9.0, the default configuration of client side sessions results in unencrypted, but signed, data being set as cookie values. This means that if something sensitive goes into the session, it could be read by something with access to the cookies. For this to be a vulnerability, some kind of sensitive data would need to be stored in the session and the session cookie would have to leak. For example, the cookies are not configured with httpOnly and an adjacent XSS vulnerability within the site allowed capture of the cookies. As of version 1.9.0, a securely randomly generated signing key is used. As a workaround, one may supply an encryption key, as per the documentation recommendation.",
        "URL": "https://github.com/ratpack/ratpack/pull/1590",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "603e0c56ab668c88234dd79d01b811581ea057b6",
        "inducing_commit_hash_pyszz": [
            "ed160af324779f6d7686cd45f260c6a4141b6b03"
        ],
        "inducing_commit_hash_pd": [
            "2318bdef1036bfe1e8ab84b58cc24289939ad674",
            "dddae7c000896874b6b8e4843e422dc9c5ec270c"
        ],
        "matched": [
            "ed160af324779f6d7686cd45f260c6a4141b6b03"
        ]
    },
    {
        "repo_name": "ravenclaw900/DietPi-Dashboard",
        "CVE_ID": "CVE-2023-38505",
        "Problem_Type": "CWE-667",
        "Description": "DietPi-Dashboard is a web dashboard for the operating system DietPi. The dashboard only allows for one TLS handshake to be in process at a given moment. Once a TCP connection is established in HTTPS mode, it will assume that it should be waiting for a handshake, and will stay this way indefinitely until a handshake starts or some error occurs. In version 0.6.1, this can be exploited by simply not starting the handshake, preventing any other TLS handshakes from getting through. An attacker can lock the dashboard in a state where it is waiting for a TLS handshake from the attacker, who won't provide it. This prevents any legitimate traffic from getting to the dashboard, and can last indefinitely. Version 0.6.2 has a patch for this issue. As a workaround, do not use HTTPS mode on the open internet where anyone can connect. Instead, put a reverse proxy in front of the dashboard, and have it handle any HTTPS connections.",
        "URL": "https://github.com/ravenclaw900/DietPi-Dashboard/pull/606",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2c810b34e49e6002a33d250e099c830453f655cb",
        "inducing_commit_hash_pyszz": [
            "19ad373db2db42b1d6bd0547d0f92a0b8c2fef20"
        ],
        "inducing_commit_hash_pd": [
            "6eff076ebe7863be8744797d84fef6c10d28e449",
            "5b3f2d48ccf4b06dcc87c0a3d72c6453e809f671",
            "f938983731037c4e5a75bdd1d1942f17cc69d91a",
            "098ff0d21dc5e5afae7d437a74bb3f22ab854331",
            "6db4740434fb33022195578c3befa4fa0d501dd9",
            "a8b1c2ba99a8ae78ea579bac6d19395deec1cdfd",
            "e1b47537bda0c6c30ed24ab30c27cc5c18c21fc9",
            "054958973c9b0e782398dd7fd7ece44a7c530cf1",
            "ab4dbd51a65e9cf0064618596bbdad385d1f2c34",
            "532811c7dc34b0091013baa1ab72c93e77ed1b23",
            "dc1ba9376b191f5875db5d95de4db0ab7bd37a24",
            "19ad373db2db42b1d6bd0547d0f92a0b8c2fef20",
            "720da4c1df81c32f374c77034695e2281627fa23",
            "3a6ffb9bf15568dfb5f68131c28bec66d28b7e8b",
            "6e93605e7ae127b359731f5cd123f934914b62b7",
            "3281e0ad6674d8702516cbaa250084b1014cb28c",
            "b30184c624bea747e441641c0fd1c033325e09a2",
            "ec36603ea3f571ad07fb03ee2850f11312bc336e",
            "9d96126b69148dcfcdd5151dbd5da05ff68f9fb3"
        ],
        "matched": [
            "19ad373db2db42b1d6bd0547d0f92a0b8c2fef20"
        ]
    },
    {
        "repo_name": "ReadyTalk/avian",
        "CVE_ID": "CVE-2020-28371",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in ReadyTalk Avian 1.2.0 before 2020-10-27. The FileOutputStream.write() method in FileOutputStream.java has a boundary check to prevent out-of-bounds memory read/write operations. However, an integer overflow leads to bypassing this check and achieving the out-of-bounds access. NOTE: This vulnerability only affects products that are no longer supported by the maintainer",
        "URL": "https://github.com/ReadyTalk/avian/pull/572",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0871979b298add320ca63f65060acb7532c8a0dd",
        "inducing_commit_hash_pyszz": [
            "7212ba1c30926f441b0e3da5f4e2cdbbd92e2205"
        ],
        "inducing_commit_hash_pd": [
            "7212ba1c30926f441b0e3da5f4e2cdbbd92e2205"
        ],
        "matched": [
            "7212ba1c30926f441b0e3da5f4e2cdbbd92e2205"
        ]
    },
    {
        "repo_name": "RedHatInsights/insights-core",
        "CVE_ID": "CVE-2023-3972",
        "Problem_Type": "CWE-668",
        "Description": "A vulnerability was found in insights-client. This security issue occurs because of insecure file operations or unsafe handling of temporary files and directories that lead to local privilege escalation. Before the insights-client has been registered on the system by root, an unprivileged local user or attacker could create the /var/tmp/insights-client directory (owning the directory with read, write, and execute permissions) on the system. After the insights-client is registered by root, an attacker could then control the directory content that insights are using by putting malicious scripts into it and executing arbitrary code as root (trivially bypassing SELinux protections because insights processes are allowed to disable SELinux system-wide).",
        "URL": "https://github.com/RedHatInsights/insights-core/pull/3878",
        "Tag": "['Patch']",
        "fix_commit_hash": "2286fbe65750736c03878f41a112d24ceb311afb",
        "inducing_commit_hash_pyszz": [
            "36cfe9546865ea54605b11112687789a26f5d8b3"
        ],
        "inducing_commit_hash_pd": [
            "d590d70046d2c95f10d26bfed6f1cd801cbf40dd",
            "022e77e91f46b107d449181d050b3c1f134cec4f",
            "d11d4e7efb29274b027a23335e20469a8d56af96",
            "57a3cd8d5be45a97173d4deae8ce55ae60a6522a",
            "36cfe9546865ea54605b11112687789a26f5d8b3",
            "b2f7ad6a6df3ed1a106b43d37d4aa5f0e4fb79e1",
            "d4dd9643b3265606253e2010c49f4f927255ae4a",
            "f90075ab2d78a3794479443c1b0d8306e2374071"
        ],
        "matched": [
            "36cfe9546865ea54605b11112687789a26f5d8b3"
        ]
    },
    {
        "repo_name": "RedisGraph/RedisGraph",
        "CVE_ID": "CVE-2020-35668",
        "Problem_Type": "CWE-476",
        "Description": "RedisGraph 2.x through 2.2.11 has a NULL Pointer Dereference that leads to a server crash because it mishandles an unquoted string, such as an alias that has not yet been introduced.",
        "URL": "https://github.com/RedisGraph/RedisGraph/pull/1503",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aed3fba39374eb11194a6a728263fbf31ffac3c9",
        "inducing_commit_hash_pyszz": [
            "50aa8681a51ed1b9816f40d39854d40c44e6a155"
        ],
        "inducing_commit_hash_pd": [
            "50aa8681a51ed1b9816f40d39854d40c44e6a155"
        ],
        "matched": [
            "50aa8681a51ed1b9816f40d39854d40c44e6a155"
        ]
    },
    {
        "repo_name": "redis/redis-py",
        "CVE_ID": "CVE-2023-28858",
        "Problem_Type": "CWE-193",
        "Description": "redis-py before 4.5.3 leaves a connection open after canceling an async Redis command at an inopportune time, and can send response data to the client of an unrelated request in an off-by-one manner. NOTE: this CVE Record was initially created in response to reports about ChatGPT, and 4.3.6, 4.4.3, and 4.5.3 were released (changing the behavior for pipeline operations); however, please see CVE-2023-28859 about addressing data leakage across AsyncIO connections in general.",
        "URL": "https://github.com/redis/redis-py/pull/2641",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "66a4d6b2a493dd3a20cc299ab5fef3c14baad965",
        "inducing_commit_hash_pyszz": [
            "318b114f4da9846a2a7c150e1fb702e9bebd9fdf"
        ],
        "inducing_commit_hash_pd": [
            "bac33d4a92892ca7982b461347151bff5a661f0d",
            "d56baeb683fc1935cfa343fa2eeb0fa9bd955283",
            "318b114f4da9846a2a7c150e1fb702e9bebd9fdf"
        ],
        "matched": [
            "318b114f4da9846a2a7c150e1fb702e9bebd9fdf"
        ]
    },
    {
        "repo_name": "redis/redis-py",
        "CVE_ID": "CVE-2023-28859",
        "Problem_Type": "CWE-459",
        "Description": "redis-py before 4.4.4 and 4.5.x before 4.5.4 leaves a connection open after canceling an async Redis command at an inopportune time, and can send response data to the client of an unrelated request. (This could, for example, happen for a non-pipeline operation.) NOTE: the solutions for CVE-2023-28859 address data leakage across AsyncIO connections in general.",
        "URL": "https://github.com/redis/redis-py/pull/2641",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "66a4d6b2a493dd3a20cc299ab5fef3c14baad965",
        "inducing_commit_hash_pyszz": [
            "318b114f4da9846a2a7c150e1fb702e9bebd9fdf"
        ],
        "inducing_commit_hash_pd": [
            "bac33d4a92892ca7982b461347151bff5a661f0d",
            "d56baeb683fc1935cfa343fa2eeb0fa9bd955283",
            "318b114f4da9846a2a7c150e1fb702e9bebd9fdf"
        ],
        "matched": [
            "318b114f4da9846a2a7c150e1fb702e9bebd9fdf"
        ]
    },
    {
        "repo_name": "redis/redis",
        "CVE_ID": "CVE-2021-21309",
        "Problem_Type": "CWE-190",
        "Description": "Redis is an open-source, in-memory database that persists on disk. In affected versions of Redis an integer overflow bug in 32-bit Redis version 4.0 or newer could be exploited to corrupt the heap and potentially result with remote code execution. Redis 4.0 or newer uses a configurable limit for the maximum supported bulk input size. By default, it is 512MB which is a safe value for all platforms. If the limit is significantly increased, receiving a large request from a client may trigger several integer overflow scenarios, which would result with buffer overflow and heap corruption. We believe this could in certain conditions be exploited for remote code execution. By default, authenticated Redis users have access to all configuration parameters and can therefore use the \u00c2\u201cCONFIG SET proto-max-bulk-len\u00c2\u201d to change the safe default, making the system vulnerable. **This problem only affects 32-bit Redis (on a 32-bit system, or as a 32-bit executable running on a 64-bit system).** The problem is fixed in version 6.2, and the fix is back ported to 6.0.11 and 5.0.11. Make sure you use one of these versions if you are running 32-bit Redis. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent clients from directly executing `CONFIG SET`: Using Redis 6.0 or newer, ACL configuration can be used to block the command. Using older versions, the `rename-command` configuration directive can be used to rename the command to a random string unknown to users, rendering it inaccessible. Please note that this workaround may have an additional impact on users or operational systems that expect `CONFIG SET` to behave in certain ways.",
        "URL": "https://github.com/redis/redis/pull/8522",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d32f2e9999ce003bad0bd2c3bca29f64dcce4433",
        "inducing_commit_hash_pyszz": [
            "bd4b33d7a2b00fddcaaccee9705d21b92d97311e"
        ],
        "inducing_commit_hash_pd": [
            "bd4b33d7a2b00fddcaaccee9705d21b92d97311e"
        ],
        "matched": [
            "bd4b33d7a2b00fddcaaccee9705d21b92d97311e"
        ]
    },
    {
        "repo_name": "redis/redis",
        "CVE_ID": "CVE-2022-33105",
        "Problem_Type": "CWE-401",
        "Description": "Redis v7.0 was discovered to contain a memory leak via the component streamGetEdgeID.",
        "URL": "https://github.com/redis/redis/pull/10753",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a7a4e42db8ff757cdf3f4a824f66426036034ef",
        "inducing_commit_hash_pyszz": [
            "814aad65f16ed27cb68c4177e4f8b61d7edb31e1"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "814aad65f16ed27cb68c4177e4f8b61d7edb31e1"
        ]
    },
    {
        "repo_name": "reds-heig/logisim-evolution",
        "CVE_ID": "CVE-2018-1000889",
        "Problem_Type": "CWE-611",
        "Description": "Logisim Evolution version 2.14.3 and earlier contains an XML External Entity (XXE) vulnerability in Circuit file loading functionality (loadXmlFrom in src/com/cburch/logisim/file/XmlReader.java) that can result in information leak, possible RCE depending on system configuration. This attack appears to be exploitable via the victim opening a specially crafted circuit file. This vulnerability appears to have been fixed in 2.14.4.",
        "URL": "https://github.com/reds-heig/logisim-evolution/pull/139",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "88aee5b55f7176e656c2468da3660403dec9ed86",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "eba12078d4ab5073c5bf79d096457bbfccaadc7c"
        ],
        "matched": [
            "eba12078d4ab5073c5bf79d096457bbfccaadc7c"
        ]
    },
    {
        "repo_name": "resque/resque",
        "CVE_ID": "CVE-2023-50725",
        "Problem_Type": "CWE-79",
        "Description": "Resque is a Redis-backed Ruby library for creating background jobs, placing them on multiple queues, and processing them later. The following paths in resque-web have been found to be vulnerable to reflected XSS: \"/failed/?class=<script>alert(document.cookie)</script>\" and \"/queues/><img src=a onerror=alert(document.cookie)>\". This issue has been patched in version 2.2.1.",
        "URL": "https://github.com/resque/resque/pull/1790",
        "Tag": "['Patch']",
        "fix_commit_hash": "ee99d2ed6cc75d9d384483b70c2d96d312115f07",
        "inducing_commit_hash_pyszz": [
            "bdd01cdf9889b3ce0b53213abad5e9b8040d2004"
        ],
        "inducing_commit_hash_pd": [
            "bdd01cdf9889b3ce0b53213abad5e9b8040d2004",
            "f341b0339ad5308b79955dc419fc4bda49399e34",
            "44eb889914e3858f7acedfe880e675db3f48f00d",
            "8ee8f098799a3052bdb3e6b3ccdc2d9f2230a196",
            "efe7ba105be95a942e6388ea198fa1a5f4718966"
        ],
        "matched": [
            "bdd01cdf9889b3ce0b53213abad5e9b8040d2004"
        ]
    },
    {
        "repo_name": "resque/resque",
        "CVE_ID": "CVE-2023-50727",
        "Problem_Type": "CWE-79",
        "Description": "Resque is a Redis-backed Ruby library for creating background jobs, placing them on multiple queues, and processing them later. Reflected XSS issue occurs when /queues is appended with /\"><svg%20onload=alert(domain)>. This issue has been patched in version 2.6.0.",
        "URL": "https://github.com/resque/resque/pull/1865",
        "Tag": "['Patch']",
        "fix_commit_hash": "7623b8dfbdd0a07eb04b19fb25b16a8d6f087f9a",
        "inducing_commit_hash_pyszz": [
            "fd40361a2f441b79a29be96a583ba676b50fa495"
        ],
        "inducing_commit_hash_pd": [
            "fd40361a2f441b79a29be96a583ba676b50fa495"
        ],
        "matched": [
            "fd40361a2f441b79a29be96a583ba676b50fa495"
        ]
    },
    {
        "repo_name": "resteasy/resteasy",
        "CVE_ID": "CVE-2023-0482",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In RESTEasy the insecure File.createTempFile() is used in the DataSourceProvider, FileProvider and Mime4JWorkaround classes which creates temp files with insecure permissions that could be read by a local user.",
        "URL": "https://github.com/resteasy/resteasy/pull/3409/commits/807d7456f2137cde8ef7c316707211bf4e542d56",
        "Tag": "['Patch']",
        "fix_commit_hash": "807d7456f2137cde8ef7c316707211bf4e542d56",
        "inducing_commit_hash_pyszz": [
            "371efcc2c54452eb03a4eb7f9b1f9cbaafc4863a"
        ],
        "inducing_commit_hash_pd": [
            "06a13509e0be34ce9b7658ade7658796b846213b",
            "c921997c78ccb1cf83a3166ecb11f36debfa8320",
            "371efcc2c54452eb03a4eb7f9b1f9cbaafc4863a",
            "e9b749fd4d5ee4cf405f8c8ad402029c2d521f60"
        ],
        "matched": [
            "371efcc2c54452eb03a4eb7f9b1f9cbaafc4863a"
        ]
    },
    {
        "repo_name": "returntocorp/semgrep",
        "CVE_ID": "CVE-2023-32758",
        "Problem_Type": "CWE-1333",
        "Description": "giturlparse (aka git-url-parse) through 1.2.2, as used in Semgrep 1.5.2 through 1.24.1, is vulnerable to ReDoS (Regular Expression Denial of Service) if parsing untrusted URLs. This might be relevant if Semgrep is analyzing an untrusted package (for example, to check whether it accesses any Git repository at an http:// URL), and that package's author placed a ReDoS attack payload in a URL used by the package.",
        "URL": "https://github.com/returntocorp/semgrep/pull/7611",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "52d6328f1e42aad840804282e090d5f26ccb6335",
        "inducing_commit_hash_pyszz": [
            "c85eb739ecb8713b0800303af45737acd1bb4822"
        ],
        "inducing_commit_hash_pd": [
            "846dab4c25ab27d9e8e2a111f5fe10bc60ce0d6c",
            "c85eb739ecb8713b0800303af45737acd1bb4822"
        ],
        "matched": [
            "c85eb739ecb8713b0800303af45737acd1bb4822"
        ]
    },
    {
        "repo_name": "ridhoq/soundslike",
        "CVE_ID": "CVE-2017-20172",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in ridhoq soundslike. It has been classified as critical. Affected is the function get_song_relations of the file app/api/songs.py. The manipulation leads to sql injection. The patch is identified as 90bb4fb667d9253d497b619b9adaac83bf0ce0f8. It is recommended to apply a patch to fix this issue. VDB-218490 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/ridhoq/soundslike/pull/5",
        "Tag": "['Patch']",
        "fix_commit_hash": "90bb4fb667d9253d497b619b9adaac83bf0ce0f8",
        "inducing_commit_hash_pyszz": [
            "d45460ef045843c711536a4a24973d73d0aa7569"
        ],
        "inducing_commit_hash_pd": [
            "d45460ef045843c711536a4a24973d73d0aa7569"
        ],
        "matched": [
            "d45460ef045843c711536a4a24973d73d0aa7569"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24818",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/0bec3e245ed3815ad6c8cae54673f0021777768b",
        "Tag": "['Patch']",
        "fix_commit_hash": "0bec3e245ed3815ad6c8cae54673f0021777768b",
        "inducing_commit_hash_pyszz": [
            "399b8026d3d2f578a513a362dc49b8fa529c88a9"
        ],
        "inducing_commit_hash_pd": [
            "399b8026d3d2f578a513a362dc49b8fa529c88a9"
        ],
        "matched": [
            "399b8026d3d2f578a513a362dc49b8fa529c88a9"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24818",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/17c70f7ee0b1445f2941f516f264ed4a096e82b7",
        "Tag": "['Patch']",
        "fix_commit_hash": "17c70f7ee0b1445f2941f516f264ed4a096e82b7",
        "inducing_commit_hash_pyszz": [
            "1d8dcae6867bcff4339affbecaaf49afba128122"
        ],
        "inducing_commit_hash_pd": [
            "1d8dcae6867bcff4339affbecaaf49afba128122"
        ],
        "matched": [
            "1d8dcae6867bcff4339affbecaaf49afba128122"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24818",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/4b23d93868a28edd8ebf2ff4ebe94540f2475008",
        "Tag": "['Patch']",
        "fix_commit_hash": "4b23d93868a28edd8ebf2ff4ebe94540f2475008",
        "inducing_commit_hash_pyszz": [
            "1d8dcae6867bcff4339affbecaaf49afba128122"
        ],
        "inducing_commit_hash_pd": [
            "1d8dcae6867bcff4339affbecaaf49afba128122"
        ],
        "matched": [
            "1d8dcae6867bcff4339affbecaaf49afba128122"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24818",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/f4df5b4c4f841ccb460930894cf68ab10b55b971",
        "Tag": "['Patch']",
        "fix_commit_hash": "f4df5b4c4f841ccb460930894cf68ab10b55b971",
        "inducing_commit_hash_pyszz": [
            "399b8026d3d2f578a513a362dc49b8fa529c88a9"
        ],
        "inducing_commit_hash_pd": [
            "399b8026d3d2f578a513a362dc49b8fa529c88a9"
        ],
        "matched": [
            "399b8026d3d2f578a513a362dc49b8fa529c88a9"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24819",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in an out of bounds write in the packet buffer. The overflow can be used to corrupt other packets and the allocator metadata. Corrupting a pointer will easily lead to denial of service. While carefully manipulating the allocator metadata gives an attacker the possibility to write data to arbitrary locations and thus execute arbitrary code. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/da63e45ee94c03a2e08625b04ea618653eab4a9f",
        "Tag": "['Patch']",
        "fix_commit_hash": "da63e45ee94c03a2e08625b04ea618653eab4a9f",
        "inducing_commit_hash_pyszz": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3"
        ],
        "inducing_commit_hash_pd": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3"
        ],
        "matched": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24819",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in an out of bounds write in the packet buffer. The overflow can be used to corrupt other packets and the allocator metadata. Corrupting a pointer will easily lead to denial of service. While carefully manipulating the allocator metadata gives an attacker the possibility to write data to arbitrary locations and thus execute arbitrary code. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/73615161c01fcfbbc7216cf502cabb12c1598ee4",
        "Tag": "['Patch']",
        "fix_commit_hash": "73615161c01fcfbbc7216cf502cabb12c1598ee4",
        "inducing_commit_hash_pyszz": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3"
        ],
        "inducing_commit_hash_pd": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3"
        ],
        "matched": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24820",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. An attacker can send a crafted frame to the device resulting in a large out of bounds write beyond the packet buffer. The write will create a hard fault exception after reaching the last page of RAM. The hard fault is not handled and the system will be stuck until reset. Thus the impact is denial of service. Version 2022.10 fixes this issue. As a workaround, apply the patch manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/d052e2ee166e55bbdfe4c455e65dbd7e3479ebe3",
        "Tag": "['Patch']",
        "fix_commit_hash": "d052e2ee166e55bbdfe4c455e65dbd7e3479ebe3",
        "inducing_commit_hash_pyszz": [
            "0b3f785dfee7ac245191fb92d429f51bd3a44ed7"
        ],
        "inducing_commit_hash_pd": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3",
            "0b3f785dfee7ac245191fb92d429f51bd3a44ed7",
            "3bf426e6fc94a22a7596ddd7a5a7e86584931002"
        ],
        "matched": [
            "0b3f785dfee7ac245191fb92d429f51bd3a44ed7"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24820",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. An attacker can send a crafted frame to the device resulting in a large out of bounds write beyond the packet buffer. The write will create a hard fault exception after reaching the last page of RAM. The hard fault is not handled and the system will be stuck until reset. Thus the impact is denial of service. Version 2022.10 fixes this issue. As a workaround, apply the patch manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/2709fbd827b688fe62df2c77c316914f4a3a6d4a",
        "Tag": "['Patch']",
        "fix_commit_hash": "2709fbd827b688fe62df2c77c316914f4a3a6d4a",
        "inducing_commit_hash_pyszz": [
            "0b3f785dfee7ac245191fb92d429f51bd3a44ed7"
        ],
        "inducing_commit_hash_pd": [
            "69d9ecc0d90f8b8c85881024b30b0456415a37d3",
            "0b3f785dfee7ac245191fb92d429f51bd3a44ed7",
            "3bf426e6fc94a22a7596ddd7a5a7e86584931002"
        ],
        "matched": [
            "0b3f785dfee7ac245191fb92d429f51bd3a44ed7"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24823",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a type confusion between IPv6 extension headers and a UDP header. This occurs while encoding a 6LoWPAN IPHC header. The type confusion manifests in an out of bounds write in the packet buffer. The overflow can be used to corrupt other packets and the allocator metadata. Corrupting a pointer will easily lead to denial of service. While carefully manipulating the allocator metadata gives an attacker the possibility to write data to arbitrary locations and thus execute arbitrary code. Version 2022.10 fixes this issue. As a workaround, apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
        "Tag": "['Patch']",
        "fix_commit_hash": "dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
        "inducing_commit_hash_pyszz": [
            "0a9793c49bf7d127f3281aaaa1b5584ee15b02c6"
        ],
        "inducing_commit_hash_pd": [
            "a0a334a4913b37d5a01bad3cb85bdc0f1a57d423"
        ],
        "matched": [
            "0a9793c49bf7d127f3281aaaa1b5584ee15b02c6"
        ]
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24823",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a type confusion between IPv6 extension headers and a UDP header. This occurs while encoding a 6LoWPAN IPHC header. The type confusion manifests in an out of bounds write in the packet buffer. The overflow can be used to corrupt other packets and the allocator metadata. Corrupting a pointer will easily lead to denial of service. While carefully manipulating the allocator metadata gives an attacker the possibility to write data to arbitrary locations and thus execute arbitrary code. Version 2022.10 fixes this issue. As a workaround, apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/4a081f86616cb5c9dd0b5d7b286da03285d1652a",
        "Tag": "['Patch']",
        "fix_commit_hash": "4a081f86616cb5c9dd0b5d7b286da03285d1652a",
        "inducing_commit_hash_pyszz": [
            "0a9793c49bf7d127f3281aaaa1b5584ee15b02c6"
        ],
        "inducing_commit_hash_pd": [
            "a0a334a4913b37d5a01bad3cb85bdc0f1a57d423"
        ],
        "matched": [
            "0a9793c49bf7d127f3281aaaa1b5584ee15b02c6"
        ]
    },
    {
        "repo_name": "ritterim/definely",
        "CVE_ID": "CVE-2015-10021",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in ritterim definely. It has been classified as problematic. Affected is an unknown function of the file src/database.js. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is b31a022ba4d8d17148445a13ebb5a42ad593dbaa. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217608.",
        "URL": "https://github.com/ritterim/definely/pull/51",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e33a8986c042f5388f7ac9dd89a2b358d7655187",
        "inducing_commit_hash_pyszz": [
            "b31a022ba4d8d17148445a13ebb5a42ad593dbaa"
        ],
        "inducing_commit_hash_pd": [
            "b31a022ba4d8d17148445a13ebb5a42ad593dbaa",
            "308c43a05b20d71e6fd2531b9aca686268f11918",
            "9f623967fcc0ccf0ca92d4f60cc717327051c23b"
        ],
        "matched": [
            "b31a022ba4d8d17148445a13ebb5a42ad593dbaa"
        ]
    },
    {
        "repo_name": "rizinorg/rizin",
        "CVE_ID": "CVE-2021-3674",
        "Problem_Type": "CWE-125",
        "Description": "A flaw was found in rizin. The create_section_from_phdr function allocates space for ELF section data by processing the headers. Crafted values in the headers can cause out of bounds reads, which can lead to memory corruption and possibly code execution through the binary object's callback function.",
        "URL": "https://github.com/rizinorg/rizin/pull/1313",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "432e4ba85fbd992f6e926012b5bf29d97ecbc092",
        "inducing_commit_hash_pyszz": [
            "0e11486f36aa784b471d8d4ecf291a8d962b4c47"
        ],
        "inducing_commit_hash_pd": [
            "0e11486f36aa784b471d8d4ecf291a8d962b4c47",
            "52ea36b9abf2acda8607ddd9f2c147651d598cf7"
        ],
        "matched": [
            "0e11486f36aa784b471d8d4ecf291a8d962b4c47"
        ]
    },
    {
        "repo_name": "rizinorg/rizin",
        "CVE_ID": "CVE-2022-34612",
        "Problem_Type": "CWE-190",
        "Description": "Rizin v0.4.0 and below was discovered to contain an integer overflow via the function get_long_object(). This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted binary.",
        "URL": "https://github.com/rizinorg/rizin/pull/2739",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e645e5827327d945307ddfde4f617ae4c36561fd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1ffdedcd07982be902bbba8153d11499dfb04c0a"
        ],
        "matched": [
            "1ffdedcd07982be902bbba8153d11499dfb04c0a"
        ]
    },
    {
        "repo_name": "rizinorg/rizin",
        "CVE_ID": "CVE-2023-27590",
        "Problem_Type": "CWE-120",
        "Description": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. In version 0.5.1 and prior, converting a GDB registers profile file into a Rizin register profile can result in a stack-based buffer overflow when the `name`, `type`, or `groups` fields have longer values than expected. Users opening untrusted GDB registers files (e.g. with the `drpg` or `arpg` commands) are affected by this flaw. Commit d6196703d89c84467b600ba2692534579dc25ed4 contains a patch for this issue. As a workaround, review the GDB register profiles before loading them with `drpg`/`arpg` commands.",
        "URL": "https://github.com/rizinorg/rizin/pull/3422",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "d6196703d89c84467b600ba2692534579dc25ed4",
        "inducing_commit_hash_pyszz": [
            "4fdb21643cf9997995ae2d35689fa0315f0e2f67"
        ],
        "inducing_commit_hash_pd": [
            "c5eb7ef05872de133439e9fb03d54864f203e103",
            "4fdb21643cf9997995ae2d35689fa0315f0e2f67",
            "466c9ff0669e32967a2a0251e6169fca3051879d"
        ],
        "matched": [
            "4fdb21643cf9997995ae2d35689fa0315f0e2f67"
        ]
    },
    {
        "repo_name": "rizinorg/rizin",
        "CVE_ID": "CVE-2023-40022",
        "Problem_Type": "CWE-190",
        "Description": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.6.0 and prior are vulnerable to integer overflow in `consume_count` of `src/gnu_v2/cplus-dem.c`. The overflow check is valid logic but, is missing the modulus if the block once compiled. The compiler sees this block as unreachable code since the prior statement is multiplication by 10 and fails to consider overflow assuming the count will always be a multiple of 10. Rizin version 0.6.1 contains a fix for the issue. A temporary workaround would be disabling C++ demangling using the configuration option `bin.demangle=false`.",
        "URL": "https://github.com/rizinorg/rizin/pull/3753",
        "Tag": "['Patch']",
        "fix_commit_hash": "a4ec3563ca1395793360945440699768cda6ca97",
        "inducing_commit_hash_pyszz": [
            "4ffdf2766d2144e8dac3ddf9880c1c9a3bf64d1c"
        ],
        "inducing_commit_hash_pd": [
            "4ffdf2766d2144e8dac3ddf9880c1c9a3bf64d1c"
        ],
        "matched": [
            "4ffdf2766d2144e8dac3ddf9880c1c9a3bf64d1c"
        ]
    },
    {
        "repo_name": "rizinorg/rz-libdemangle",
        "CVE_ID": "CVE-2023-40022",
        "Problem_Type": "CWE-190",
        "Description": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.6.0 and prior are vulnerable to integer overflow in `consume_count` of `src/gnu_v2/cplus-dem.c`. The overflow check is valid logic but, is missing the modulus if the block once compiled. The compiler sees this block as unreachable code since the prior statement is multiplication by 10 and fails to consider overflow assuming the count will always be a multiple of 10. Rizin version 0.6.1 contains a fix for the issue. A temporary workaround would be disabling C++ demangling using the configuration option `bin.demangle=false`.",
        "URL": "https://github.com/rizinorg/rz-libdemangle/pull/54",
        "Tag": "['Patch']",
        "fix_commit_hash": "51d016750e704b27ab8ace23c0f72acabca67018",
        "inducing_commit_hash_pyszz": [
            "59073247ead50f00a6e70954e88c6ecc5c1a1872"
        ],
        "inducing_commit_hash_pd": [
            "59073247ead50f00a6e70954e88c6ecc5c1a1872"
        ],
        "matched": [
            "59073247ead50f00a6e70954e88c6ecc5c1a1872"
        ]
    },
    {
        "repo_name": "rmagick/rmagick",
        "CVE_ID": "CVE-2023-5349",
        "Problem_Type": "CWE-401",
        "Description": "A memory leak flaw was found in ruby-magick, an interface between Ruby and ImageMagick. This issue can lead to a denial of service (DOS) by memory exhaustion.",
        "URL": "https://github.com/rmagick/rmagick/pull/1406",
        "Tag": "['Patch']",
        "fix_commit_hash": "fec7a7e639ae565386f7615155dbcf49b957b64a",
        "inducing_commit_hash_pyszz": [
            "291dce5ef6ff9b08c678d313a5e8e4f0889970ed"
        ],
        "inducing_commit_hash_pd": [
            "291dce5ef6ff9b08c678d313a5e8e4f0889970ed"
        ],
        "matched": [
            "291dce5ef6ff9b08c678d313a5e8e4f0889970ed"
        ]
    },
    {
        "repo_name": "RobotsAndPencils/go-saml",
        "CVE_ID": "CVE-2020-36563",
        "Problem_Type": "CWE-347",
        "Description": "XML Digital Signatures generated and validated using this package use SHA-1, which may allow an attacker to craft inputs which cause hash collisions depending on their control over the input.",
        "URL": "https://github.com/RobotsAndPencils/go-saml/pull/38",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rockcarry/ffjpeg",
        "CVE_ID": "CVE-2021-45385",
        "Problem_Type": "CWE-476",
        "Description": "A Null Pointer Dereference vulnerability exits in ffjpeg d5cfd49 (2021-12-06) in bmp_load(). When the size information in metadata of the bmp is out of range, it returns without assign memory buffer to `pb->pdata` and did not exit the program. So the program crashes when it tries to access the pb->data, in jfif_encode() at jfif.c:763. This is due to the incomplete patch for CVE-2020-13438.",
        "URL": "https://github.com/rockcarry/ffjpeg/pull/48",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "caade60a69633d74100bd3c2528bddee0b6a1291",
        "inducing_commit_hash_pyszz": [
            "9e7fa7c24e5c0d8a6952658f621afa477b609288"
        ],
        "inducing_commit_hash_pd": [
            "9e7fa7c24e5c0d8a6952658f621afa477b609288"
        ],
        "matched": [
            "9e7fa7c24e5c0d8a6952658f621afa477b609288"
        ]
    },
    {
        "repo_name": "RocketChat/Rocket.Chat",
        "CVE_ID": "CVE-2020-15926",
        "Problem_Type": "CWE-79",
        "Description": "Rocket.Chat through 3.4.2 allows XSS where an attacker can send a specially crafted message to a channel or in a direct message to the client which results in remote code execution on the client side.",
        "URL": "https://github.com/RocketChat/Rocket.Chat/pull/18356",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "59ca315ce3fdcede132cc4f133b7e8b116dcc49b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c492c61c9b237f867fd6745eabcbe02f5e31eca6",
            "b64fb67263e053d8ec8c8d561e02baf020ec370c"
        ],
        "matched": [
            "c492c61c9b237f867fd6745eabcbe02f5e31eca6"
        ]
    },
    {
        "repo_name": "RocketChat/Rocket.Chat",
        "CVE_ID": "CVE-2020-8291",
        "Problem_Type": "CWE-79",
        "Description": "A link preview rendering issue in Rocket.Chat versions before 3.9 could lead to potential XSS attacks.",
        "URL": "https://github.com/RocketChat/Rocket.Chat/pull/19854",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "43fe12d775b2329e780a1369a1b2c25070cdcab9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b93b31b8dcc9b95eb332f2df89e133a34b706891"
        ],
        "matched": [
            "b93b31b8dcc9b95eb332f2df89e133a34b706891"
        ]
    },
    {
        "repo_name": "RocketChat/Rocket.Chat",
        "CVE_ID": "CVE-2021-22886",
        "Problem_Type": "CWE-79",
        "Description": "Rocket.Chat before 3.11, 3.10.5, 3.9.7, 3.8.8 is vulnerable to persistent cross-site scripting (XSS) using nested markdown tags allowing a remote attacker to inject arbitrary JavaScript in a message. This flaw leads to arbitrary file read and RCE on Rocket.Chat desktop app.",
        "URL": "https://github.com/RocketChat/Rocket.Chat/pull/20430",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ac9d7612a8fd6eae8074bd06e5449da843065be6",
        "inducing_commit_hash_pyszz": [
            "eeec50af5098f08836c8a9ce83cc85cdb798c815"
        ],
        "inducing_commit_hash_pd": [
            "b83cbf97398853902dc7562b042be89e437edc20",
            "0e88ac2a6150200c34ae2c12234afe8831180d3c",
            "35728d61a66b2d0ddd6fdb0bcc98330ac3986540",
            "85fc1cf39412f5605a6436748a91c6f37cca3615",
            "97311da8aff2b6ed03c9b0bd42e85971126ca04f",
            "6c2f4ff703f2815f5fb86e3cd55d857a0fb35985",
            "d8054b38c5cac43b6d0ce2840d3f99b25474f1ad",
            "25c3a62861aa79c888f100badc63fc108c990cba",
            "41ef0fcba95d9aaca47da68b3135deeca87a57c6",
            "0d42efc22d3c1bdf7ff353f581ce6ee129c48a1b",
            "63f7e8fea6ef939455193e8e8661ea1197d410f9",
            "bda6e000c7bdde00ba3809c26a6235f5c5e86cd8",
            "33e67e48c04369650df5d2cb26665def703c4c68",
            "1dc96dd6f79665495a276b5f9c4436313c32b616",
            "0ec692c92c1ba5ac21686b861e57caf08ba23ca5",
            "7a21974bb39a1255bb9838d0476f9f15b107a270",
            "eeec50af5098f08836c8a9ce83cc85cdb798c815"
        ],
        "matched": [
            "eeec50af5098f08836c8a9ce83cc85cdb798c815"
        ]
    },
    {
        "repo_name": "rodnaph/sockso",
        "CVE_ID": "CVE-2012-4267",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site scripting (XSS) vulnerability in user/register in Sockso 1.5 and earlier allows remote attackers to inject arbitrary web script or HTML via the name parameter.",
        "URL": "https://github.com/rodnaph/sockso/pull/99/files",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "roots/soil",
        "CVE_ID": "CVE-2022-4524",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, was found in Roots soil Plugin up to 4.0.x. Affected is the function language_attributes of the file src/Modules/CleanUpModule.php. The manipulation of the argument language leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 4.1.0 is able to address this issue. The name of the patch is 0c9151e00ab047da253e5cdbfccb204dd423269d. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-215904.",
        "URL": "https://github.com/roots/soil/pull/285",
        "Tag": "['Patch']",
        "fix_commit_hash": "0c9151e00ab047da253e5cdbfccb204dd423269d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c798a19ff9c05076990dc466018be12fb8d49b3f"
        ],
        "matched": [
            "c798a19ff9c05076990dc466018be12fb8d49b3f"
        ]
    },
    {
        "repo_name": "ros/actionlib",
        "CVE_ID": "CVE-2020-10289",
        "Problem_Type": "CWE-502",
        "Description": "Use of unsafe yaml load. Allows instantiation of arbitrary objects. The flaw itself is caused by an unsafe parsing of YAML values which happens whenever an action message is processed to be sent, and allows for the creation of Python objects. Through this flaw in the ROS core package of actionlib, an attacker with local or remote access can make the ROS Master, execute arbitrary code in Python form. Consider yaml.safe_load() instead. Located first in actionlib/tools/library.py:132. See links for more info on the bug.",
        "URL": "https://github.com/ros/actionlib/pull/171",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b003365642227049abd01281c296977d8749f85f",
        "inducing_commit_hash_pyszz": [
            "7cdbc7065ed6805a13607184f1f03e9745578d6d"
        ],
        "inducing_commit_hash_pd": [
            "7cdbc7065ed6805a13607184f1f03e9745578d6d"
        ],
        "matched": [
            "7cdbc7065ed6805a13607184f1f03e9745578d6d"
        ]
    },
    {
        "repo_name": "ros/ros_comm",
        "CVE_ID": "CVE-2019-13445",
        "Problem_Type": "CWE-190",
        "Description": "An issue was discovered in the ROS communications-related packages (aka ros_comm or ros-melodic-ros-comm) through 1.14.3. parseOptions() in tools/rosbag/src/record.cpp has an integer overflow when a crafted split option can be entered on the command line.",
        "URL": "https://github.com/ros/ros_comm/pull/1741",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7b69fc9e439c8e5b28a4f6a8e1c451ca7c96a8e8",
        "inducing_commit_hash_pyszz": [
            "28ae321d6168688e868b7f87a2de1c1b2addae84"
        ],
        "inducing_commit_hash_pd": [
            "28ae321d6168688e868b7f87a2de1c1b2addae84"
        ],
        "matched": [
            "28ae321d6168688e868b7f87a2de1c1b2addae84"
        ]
    },
    {
        "repo_name": "ros/ros_comm",
        "CVE_ID": "CVE-2019-13566",
        "Problem_Type": "CWE-120",
        "Description": "An issue was discovered in the ROS communications-related packages (aka ros_comm or ros-melodic-ros-comm) through 1.14.3. A buffer overflow allows attackers to cause a denial of service and possibly execute arbitrary code via an IP address with a long hostname.",
        "URL": "https://github.com/ros/ros_comm/pull/1771",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eaa160d00f05a7e1ce5efa09bcc630792b22b17d",
        "inducing_commit_hash_pyszz": [
            "6980ae43fc50fee7227b5326db7b230c803777bb"
        ],
        "inducing_commit_hash_pd": [
            "6980ae43fc50fee7227b5326db7b230c803777bb",
            "8f6063025665b87e6de73f1f3c1e100f747eff78"
        ],
        "matched": [
            "6980ae43fc50fee7227b5326db7b230c803777bb"
        ]
    },
    {
        "repo_name": "ros/ros_comm",
        "CVE_ID": "CVE-2020-16124",
        "Problem_Type": "CWE-190",
        "Description": "Integer Overflow or Wraparound vulnerability in the XML RPC library of OpenRobotics ros_comm communications packages allows unauthenticated network traffic to cause unexpected behavior. This issue affects: OpenRobotics ros_comm communications packages Noetic and prior versions. Fixed in https://github.com/ros/ros_comm/pull/2065.",
        "URL": "https://github.com/ros/ros_comm/pull/2065",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "78ed4d5e9dfafb6fe97902a84f1d7c6e7dcc3f8b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "79bfbe8f05fcf73840c88b14b6f80ee48c5a78b9"
        ],
        "matched": [
            "79bfbe8f05fcf73840c88b14b6f80ee48c5a78b9"
        ]
    },
    {
        "repo_name": "roundcube/roundcubemail",
        "CVE_ID": "CVE-2020-12626",
        "Problem_Type": "CWE-352",
        "Description": "An issue was discovered in Roundcube Webmail before 1.4.4. A CSRF attack can cause an authenticated user to be logged out because POST was not considered.",
        "URL": "https://github.com/roundcube/roundcubemail/pull/7302",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cceeff2472c00acb2c6b96c9df7a289f1db77713",
        "inducing_commit_hash_pyszz": [
            "0301d9347f8c59882cdd7b6ed59686b286a77876"
        ],
        "inducing_commit_hash_pd": [
            "681ba6fc3c296cd6cd11050531b8f4e785141786",
            "1854c4525bf1fce227a8cc0fa8aad06615df0eae",
            "0129d7c914f4d9247a7e8bb5ff5f655cfa98de1f"
        ],
        "matched": [
            "0301d9347f8c59882cdd7b6ed59686b286a77876"
        ]
    },
    {
        "repo_name": "rpm-software-management/rpm",
        "CVE_ID": "CVE-2021-3521",
        "Problem_Type": "CWE-347",
        "Description": "There is a flaw in RPM's signature functionality. OpenPGP subkeys are associated with a primary key via a \"binding signature.\" RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources.",
        "URL": "https://github.com/rpm-software-management/rpm/pull/1795/",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bd36c5dc9fb6d90c46fbfed8c2d67516fc571ec8",
        "inducing_commit_hash_pyszz": [
            "9f03f42e2614a68f589f9db8fe76287146522c0c"
        ],
        "inducing_commit_hash_pd": [
            "03879e09cf880adf6c2cec5c73779d77bd6a7f95",
            "9f03f42e2614a68f589f9db8fe76287146522c0c",
            "0bed4327fcecf151dd4555be539bf5aa1d2f01a2",
            "345a0612409ef8bc82b2cae90a71c8131bd84f7a"
        ],
        "matched": [
            "9f03f42e2614a68f589f9db8fe76287146522c0c"
        ]
    },
    {
        "repo_name": "rpm-software-management/rpm",
        "CVE_ID": "CVE-2021-35938",
        "Problem_Type": "CWE-59",
        "Description": "A symbolic link issue was found in rpm. It occurs when rpm sets the desired permissions and credentials after installing a file. A local unprivileged user could use this flaw to exchange the original file with a symbolic link to a security-critical file and escalate their privileges on the system. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
        "URL": "https://github.com/rpm-software-management/rpm/pull/1919",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6dd62720fe84f7e2ad902c915b952fc0b29e3dcd",
        "inducing_commit_hash_pyszz": [
            "35195684d29f495bfd982516044e05deed832b6e"
        ],
        "inducing_commit_hash_pd": [
            "96ec957e281220f8e137a2d5eb23b83a6377d556",
            "a6479a8e47d3d8b95dd818b03f0b186ac1a66cbc",
            "0dd22bf80659eab7adbfe113688c077499320bc4",
            "09984c40158cb629b1f9a7579ba49bc82dd4ff00",
            "661a37905ed3b79cab76dcbddf8fff26291c7d40",
            "468726ece5f3ed1209460120044d2d63bd0a561b",
            "35195684d29f495bfd982516044e05deed832b6e"
        ],
        "matched": [
            "35195684d29f495bfd982516044e05deed832b6e"
        ]
    },
    {
        "repo_name": "rpm-software-management/rpm",
        "CVE_ID": "CVE-2021-35939",
        "Problem_Type": "CWE-59",
        "Description": "It was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
        "URL": "https://github.com/rpm-software-management/rpm/pull/1919",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6dd62720fe84f7e2ad902c915b952fc0b29e3dcd",
        "inducing_commit_hash_pyszz": [
            "35195684d29f495bfd982516044e05deed832b6e"
        ],
        "inducing_commit_hash_pd": [
            "96ec957e281220f8e137a2d5eb23b83a6377d556",
            "a6479a8e47d3d8b95dd818b03f0b186ac1a66cbc",
            "0dd22bf80659eab7adbfe113688c077499320bc4",
            "09984c40158cb629b1f9a7579ba49bc82dd4ff00",
            "661a37905ed3b79cab76dcbddf8fff26291c7d40",
            "468726ece5f3ed1209460120044d2d63bd0a561b",
            "35195684d29f495bfd982516044e05deed832b6e"
        ],
        "matched": [
            "35195684d29f495bfd982516044e05deed832b6e"
        ]
    },
    {
        "repo_name": "rrweb-io/rrweb",
        "CVE_ID": "CVE-2023-33187",
        "Problem_Type": "CWE-319",
        "Description": "Highlight is an open source, full-stack monitoring platform. Highlight may record passwords on customer deployments when a password html input is switched to `type=\"text\"` via a javascript \"Show Password\" button. This differs from the expected behavior which always obfuscates `type=\"password\"` inputs. A customer may assume that switching to `type=\"text\"` would also not record this input; hence, they would not add additional `highlight-mask` css-class obfuscation to this part of the DOM, resulting in unintentional recording of a password value when a `Show Password` button is used. This issue was patched in version 6.0.0.\nThis patch tracks changes to the `type` attribute of an input to ensure an input that used to be a `type=\"password\"` continues to be obfuscated. \n",
        "URL": "https://github.com/rrweb-io/rrweb/pull/1184",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "aa79db7568578ea3a413292450cd64f07481e5dd",
        "inducing_commit_hash_pyszz": [
            "267e990dc0e45a5acaaa3ee89db7ae9171520d54"
        ],
        "inducing_commit_hash_pd": [
            "267e990dc0e45a5acaaa3ee89db7ae9171520d54",
            "d2582e9a81197130cd93bc1dd778e16fddfb0be3",
            "38090606847007ffec0a78d3aeffd9b9783f9914"
        ],
        "matched": [
            "267e990dc0e45a5acaaa3ee89db7ae9171520d54"
        ]
    },
    {
        "repo_name": "ruby-git/ruby-git",
        "CVE_ID": "CVE-2022-25648",
        "Problem_Type": "CWE-88",
        "Description": "The package git before 1.11.0 are vulnerable to Command Injection via git argument injection. When calling the fetch(remote = 'origin', opts = {}) function, the remote parameter is passed to the git fetch subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
        "URL": "https://github.com/ruby-git/ruby-git/pull/569",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "291ca0946bec7164b90ad5c572ac147f512c7159",
        "inducing_commit_hash_pyszz": [
            "e7f1880b41c798f65ce5e9c3f1c3854d8c3b10c9"
        ],
        "inducing_commit_hash_pd": [
            "e7f1880b41c798f65ce5e9c3f1c3854d8c3b10c9",
            "7045d8aa374c7a22637df43b48f140165e3e5eb1",
            "d5175ed049a7bc108394176cdcfd191d6e8d7a38",
            "907b03949bab53e2f7d55094100a71abd22f23e7",
            "35683a16e012009ce45fc068fab098593ca4941d",
            "32fbe703605310c91677225442a62ae0869d0892"
        ],
        "matched": [
            "e7f1880b41c798f65ce5e9c3f1c3854d8c3b10c9"
        ]
    },
    {
        "repo_name": "ruby-git/ruby-git",
        "CVE_ID": "CVE-2022-46648",
        "Problem_Type": "CWE-94",
        "Description": "ruby-git versions prior to v1.13.0 allows a remote authenticated attacker to execute an arbitrary ruby code by having a user to load a repository containing a specially crafted filename to the product. This vulnerability is different from CVE-2022-47318.",
        "URL": "https://github.com/ruby-git/ruby-git/pull/602",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4fe8738e8348567255ab4be25867684b5d0d282d",
        "inducing_commit_hash_pyszz": [
            "ee90922f3da3f67ef19853a0759c1d09860fe3b3"
        ],
        "inducing_commit_hash_pd": [
            "ee90922f3da3f67ef19853a0759c1d09860fe3b3"
        ],
        "matched": [
            "ee90922f3da3f67ef19853a0759c1d09860fe3b3"
        ]
    },
    {
        "repo_name": "ruby-git/ruby-git",
        "CVE_ID": "CVE-2022-47318",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "ruby-git versions prior to v1.13.0 allows a remote authenticated attacker to execute an arbitrary ruby code by having a user to load a repository containing a specially crafted filename to the product. This vulnerability is different from CVE-2022-46648.",
        "URL": "https://github.com/ruby-git/ruby-git/pull/602",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4fe8738e8348567255ab4be25867684b5d0d282d",
        "inducing_commit_hash_pyszz": [
            "ee90922f3da3f67ef19853a0759c1d09860fe3b3"
        ],
        "inducing_commit_hash_pd": [
            "ee90922f3da3f67ef19853a0759c1d09860fe3b3"
        ],
        "matched": [
            "ee90922f3da3f67ef19853a0759c1d09860fe3b3"
        ]
    },
    {
        "repo_name": "rubysec/ruby-advisory-db",
        "CVE_ID": "CVE-2022-23837",
        "Problem_Type": "CWE-770",
        "Description": "In api.rb in Sidekiq before 5.2.10 and 6.4.0, there is no limit on the number of days when requesting stats for the graph. This overloads the system, affecting the Web UI, and makes it unavailable to users.",
        "URL": "https://github.com/rubysec/ruby-advisory-db/pull/495",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b4cfdf5edaee4f083ba3aa4d08a7fb1bb92e8f51",
        "inducing_commit_hash_pyszz": [
            "d1240386e755906528acca7aec7c2e1334e08c3d"
        ],
        "inducing_commit_hash_pd": [
            "d1240386e755906528acca7aec7c2e1334e08c3d"
        ],
        "matched": [
            "d1240386e755906528acca7aec7c2e1334e08c3d"
        ]
    },
    {
        "repo_name": "rudderlabs/rudder-server",
        "CVE_ID": "CVE-2023-30625",
        "Problem_Type": "CWE-89",
        "Description": "rudder-server is part of RudderStack, an open source Customer Data Platform (CDP). Versions of rudder-server prior to 1.3.0-rc.1 are vulnerable to SQL injection. This issue may lead to Remote Code Execution (RCE) due to the `rudder` role in PostgresSQL having superuser permissions by default. Version 1.3.0-rc.1 contains patches for this issue.",
        "URL": "https://github.com/rudderlabs/rudder-server/pull/2652",
        "Tag": "['Patch']",
        "fix_commit_hash": "2f956b7eb3d5eb2de3e79d7df2c87405af25071e",
        "inducing_commit_hash_pyszz": [
            "9b944c91a5493171698f4f5af26ab760672497db"
        ],
        "inducing_commit_hash_pd": [
            "09ec9ae4b7be8159c999fcf633637fa07cdadc65",
            "623cd9b11aef4c4afc8111ad2370429c75df1fcb",
            "9b944c91a5493171698f4f5af26ab760672497db"
        ],
        "matched": [
            "9b944c91a5493171698f4f5af26ab760672497db"
        ]
    },
    {
        "repo_name": "rudderlabs/rudder-server",
        "CVE_ID": "CVE-2023-30625",
        "Problem_Type": "CWE-89",
        "Description": "rudder-server is part of RudderStack, an open source Customer Data Platform (CDP). Versions of rudder-server prior to 1.3.0-rc.1 are vulnerable to SQL injection. This issue may lead to Remote Code Execution (RCE) due to the `rudder` role in PostgresSQL having superuser permissions by default. Version 1.3.0-rc.1 contains patches for this issue.",
        "URL": "https://github.com/rudderlabs/rudder-server/pull/2663",
        "Tag": "['Patch']",
        "fix_commit_hash": "9c009d9775abc99e72fc470f4c4c8e8f1775e82a",
        "inducing_commit_hash_pyszz": [
            "1e81af900808e19439d6dde3e23d19e5d50053ba"
        ],
        "inducing_commit_hash_pd": [
            "1e81af900808e19439d6dde3e23d19e5d50053ba"
        ],
        "matched": [
            "1e81af900808e19439d6dde3e23d19e5d50053ba"
        ]
    },
    {
        "repo_name": "rudderlabs/rudder-server",
        "CVE_ID": "CVE-2023-30625",
        "Problem_Type": "CWE-89",
        "Description": "rudder-server is part of RudderStack, an open source Customer Data Platform (CDP). Versions of rudder-server prior to 1.3.0-rc.1 are vulnerable to SQL injection. This issue may lead to Remote Code Execution (RCE) due to the `rudder` role in PostgresSQL having superuser permissions by default. Version 1.3.0-rc.1 contains patches for this issue.",
        "URL": "https://github.com/rudderlabs/rudder-server/pull/2664",
        "Tag": "['Patch']",
        "fix_commit_hash": "0d061ff2d8c16845179d215bf8012afceba12a30",
        "inducing_commit_hash_pyszz": [
            "9c009d9775abc99e72fc470f4c4c8e8f1775e82a"
        ],
        "inducing_commit_hash_pd": [
            "1e81af900808e19439d6dde3e23d19e5d50053ba",
            "9c009d9775abc99e72fc470f4c4c8e8f1775e82a"
        ],
        "matched": [
            "9c009d9775abc99e72fc470f4c4c8e8f1775e82a"
        ]
    },
    {
        "repo_name": "run-llama/llama-hub",
        "CVE_ID": "CVE-2024-23730",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The OpenAPI and ChatGPT plugin loaders in LlamaHub (aka llama-hub) before 0.0.67 allow attackers to execute arbitrary code because safe_load is not used for YAML.",
        "URL": "https://github.com/run-llama/llama-hub/pull/841/commits/9dc9c21a5c6d0226d1d2101c3121d4f085743d52",
        "Tag": "['Patch']",
        "fix_commit_hash": "9dc9c21a5c6d0226d1d2101c3121d4f085743d52",
        "inducing_commit_hash_pyszz": [
            "c4b4c568f89082a6b7fcf6797061a8c238db7327"
        ],
        "inducing_commit_hash_pd": [
            "cecc081e8bdccd42bdedac8512cce42948f46a85",
            "c4b4c568f89082a6b7fcf6797061a8c238db7327"
        ],
        "matched": [
            "c4b4c568f89082a6b7fcf6797061a8c238db7327"
        ]
    },
    {
        "repo_name": "rust-blockchain/evm",
        "CVE_ID": "CVE-2021-41153",
        "Problem_Type": "CWE-670",
        "Description": "The evm crate is a pure Rust implementation of Ethereum Virtual Machine. In `evm` crate `< 0.31.0`, `JUMPI` opcode's condition is checked after the destination validity check. However, according to Geth and OpenEthereum, the condition check should happen before the destination validity check. This is a **high** severity security advisory if you use `evm` crate for Ethereum mainnet. In this case, you should update your library dependency immediately to on or after `0.31.0`. This is a **low** severity security advisory if you use `evm` crate in Frontier or in a standalone blockchain, because there's no security exploit possible with this advisory. It is **not** recommended to update to on or after `0.31.0` until all the normal chain upgrade preparations have been done. If you use Frontier or other `pallet-evm` based Substrate blockchain, please ensure to update your `spec_version` before updating this. For other blockchains, please make sure to follow a hard-fork process before you update this.",
        "URL": "https://github.com/rust-blockchain/evm/pull/67",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "15a867f05f63c65359b0470f89e047da9571717c",
        "inducing_commit_hash_pyszz": [
            "e7d0cf355aee0cf085083144a08935fbc3063ad1"
        ],
        "inducing_commit_hash_pd": [
            "e7d0cf355aee0cf085083144a08935fbc3063ad1"
        ],
        "matched": [
            "e7d0cf355aee0cf085083144a08935fbc3063ad1"
        ]
    },
    {
        "repo_name": "rust-blockchain/evm",
        "CVE_ID": "CVE-2022-39354",
        "Problem_Type": "CWE-670",
        "Description": "SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use the `is_static` parameter to determine if the call is executed in a static context (via `STATICCALL`), and thus decide if stateful operations should be done. Prior to version 0.36.0, the passed `is_static` parameter was incorrect -- it was only set to `true` if the call came from a direct `STATICCALL` opcode. However, once a static call context is entered, it should stay static. The issue only impacts custom precompiles that actually uses `is_static`. For those affected, the issue can lead to possible incorrect state transitions. Version 0.36.0 contains a patch. There are no known workarounds.",
        "URL": "https://github.com/rust-blockchain/evm/pull/133",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6534c1dd8ad77b53d05032f80e8a5f2de4d37fd2",
        "inducing_commit_hash_pyszz": [
            "51b8c2ce3104265e1fd5bb0fe5cdfd2e0938239c"
        ],
        "inducing_commit_hash_pd": [
            "aff8692dc42b720e739eb120f798edd025cd859a",
            "01bcbd2205a212c34451d3b4fabc962793b057d3",
            "51b8c2ce3104265e1fd5bb0fe5cdfd2e0938239c"
        ],
        "matched": [
            "51b8c2ce3104265e1fd5bb0fe5cdfd2e0938239c"
        ]
    },
    {
        "repo_name": "rust-ethereum/evm",
        "CVE_ID": "CVE-2024-21629",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Rust EVM is an Ethereum Virtual Machine interpreter. In `rust-evm`, a feature called `record_external_operation` was introduced, allowing library users to record custom gas changes. This feature can have some bogus interactions with the call stack. In particular, during finalization of a `CREATE` or `CREATE2`, in the case that the substack execution happens successfully, `rust-evm` will first commit the substate, and then call `record_external_operation(Write(out_code.len()))`. If `record_external_operation` later fails, this error is returned to the parent call stack, instead of `Succeeded`. Yet, the substate commitment already happened. This causes smart contracts able to commit state changes, when the parent caller contract receives zero address (which usually indicates that the execution has failed). This issue only impacts library users with custom `record_external_operation` that returns errors. The issue is patched in release 0.41.1. No known workarounds are available.",
        "URL": "https://github.com/rust-ethereum/evm/pull/264",
        "Tag": "['Patch']",
        "fix_commit_hash": "d8991ec727ad0fb64fe9957a3cd307387a6701e4",
        "inducing_commit_hash_pyszz": [
            "d543f105c2ce61494f9cedd6011f7f14989fd611"
        ],
        "inducing_commit_hash_pd": [
            "842e03d068ddb6a3195a2dedc4a9b63caadb3355",
            "d543f105c2ce61494f9cedd6011f7f14989fd611"
        ],
        "matched": [
            "d543f105c2ce61494f9cedd6011f7f14989fd611"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2017-20004",
        "Problem_Type": "CWE-362",
        "Description": "In the standard library in Rust before 1.19.0, there is a synchronization problem in the MutexGuard object. MutexGuards can be used across threads with any types, allowing for memory safety issues through race conditions.",
        "URL": "https://github.com/rust-lang/rust/pull/41624",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "23522f6cabf9fc5803411c3dec4a90c56cc3dab2",
        "inducing_commit_hash_pyszz": [
            "998a8777379d8f1cd7b263eff50411ba56f1f9e7"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "998a8777379d8f1cd7b263eff50411ba56f1f9e7"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2018-25008",
        "Problem_Type": "CWE-662",
        "Description": "In the standard library in Rust before 1.29.0, there is weak synchronization in the Arc::get_mut method. This synchronization issue can be lead to memory safety issues through race conditions.",
        "URL": "https://github.com/rust-lang/rust/pull/52031",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f96c2468695911222ba7557ce04af0dd8fbb6df2",
        "inducing_commit_hash_pyszz": [
            "d77c4b0fa63d420b2f995e37ee07402f9a243361"
        ],
        "inducing_commit_hash_pd": [
            "d77c4b0fa63d420b2f995e37ee07402f9a243361"
        ],
        "matched": [
            "d77c4b0fa63d420b2f995e37ee07402f9a243361"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2019-1010299",
        "Problem_Type": "CWE-908",
        "Description": "The Rust Programming Language Standard Library 1.18.0 and later is affected by: CWE-200: Information Exposure. The impact is: Contents of uninitialized memory could be printed to string or to log file. The component is: Debug trait implementation for std::collections::vec_deque::Iter. The attack vector is: The program needs to invoke debug printing for iterator over an empty VecDeque. The fixed version is: 1.30.0, nightly versions after commit b85e4cc8fadaabd41da5b9645c08c68b8f89908d.",
        "URL": "https://github.com/rust-lang/rust/pull/53571/commits/b85e4cc8fadaabd41da5b9645c08c68b8f89908d",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b85e4cc8fadaabd41da5b9645c08c68b8f89908d",
        "inducing_commit_hash_pyszz": [
            "a850cdcb7ec82cc5eaec76ee90b6ee1794a6da9b"
        ],
        "inducing_commit_hash_pd": [
            "61fbdbba41163b6fd327b166338a8feb89133444",
            "a850cdcb7ec82cc5eaec76ee90b6ee1794a6da9b"
        ],
        "matched": [
            "a850cdcb7ec82cc5eaec76ee90b6ee1794a6da9b"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-32715",
        "Problem_Type": "CWE-444",
        "Description": "hyper is an HTTP library for rust. hyper's HTTP/1 server code had a flaw that incorrectly parses and accepts requests with a `Content-Length` header with a prefixed plus sign, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that doesn't parse such `Content-Length` headers, but forwards them, can result in \"request smuggling\" or \"desync attacks\". The flaw exists in all prior versions of hyper prior to 0.14.10, if built with `rustc` v1.5.0 or newer. The vulnerability is patched in hyper version 0.14.10. Two workarounds exist: One may reject requests manually that contain a plus sign prefix in the `Content-Length` header or ensure any upstream proxy handles `Content-Length` headers with a plus sign prefix.",
        "URL": "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "123a83326fb95366e94a3be1a74775df4db97739",
        "inducing_commit_hash_pyszz": [
            "c073f81920bc2324b026cf9610a096df0d97c6a5"
        ],
        "inducing_commit_hash_pd": [
            "68bd495f0b2355e390c5dc382e17d056c113d069",
            "c073f81920bc2324b026cf9610a096df0d97c6a5",
            "0cdde6e5e015ee6f6d9381ab624a312af7c9b069",
            "eeb94886adccb3f13003f92f117115d17846ce1f"
        ],
        "matched": [
            "c073f81920bc2324b026cf9610a096df0d97c6a5"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2022-21658",
        "Problem_Type": "CWE-363",
        "Description": "Rust is a multi-paradigm, general-purpose programming language designed for performance and safety, especially safe concurrency. The Rust Security Response WG was notified that the `std::fs::remove_dir_all` standard library function is vulnerable a race condition enabling symlink following (CWE-363). An attacker could use this security issue to trick a privileged program into deleting files and directories the attacker couldn't otherwise access or delete. Rust 1.0.0 through Rust 1.58.0 is affected by this vulnerability with 1.58.1 containing a patch. Note that the following build targets don't have usable APIs to properly mitigate the attack, and are thus still vulnerable even with a patched toolchain: macOS before version 10.10 (Yosemite) and REDOX. We recommend everyone to update to Rust 1.58.1 as soon as possible, especially people developing programs expected to run in privileged contexts (including system daemons and setuid binaries), as those have the highest risk of being affected by this. Note that adding checks in your codebase before calling remove_dir_all will not mitigate the vulnerability, as they would also be vulnerable to race conditions like remove_dir_all itself. The existing mitigation is working as intended outside of race conditions.",
        "URL": "https://github.com/rust-lang/rust/pull/93110/commits/32ed6e599bb4722efefd78bbc9cd7ec4613cb946",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "32ed6e599bb4722efefd78bbc9cd7ec4613cb946",
        "inducing_commit_hash_pyszz": [
            "2c2c1593acc5479a4b502d51bb5fea239766c235"
        ],
        "inducing_commit_hash_pd": [
            "93b6d9e086c6910118a57e4332c9448ab550931f",
            "a06baa56b95674fc626b3c3fd680d6a65357fe60",
            "2c2c1593acc5479a4b502d51bb5fea239766c235",
            "f189d7a6937c063f9592136a39c836b17c008a93"
        ],
        "matched": [
            "2c2c1593acc5479a4b502d51bb5fea239766c235"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2022-21658",
        "Problem_Type": "CWE-363",
        "Description": "Rust is a multi-paradigm, general-purpose programming language designed for performance and safety, especially safe concurrency. The Rust Security Response WG was notified that the `std::fs::remove_dir_all` standard library function is vulnerable a race condition enabling symlink following (CWE-363). An attacker could use this security issue to trick a privileged program into deleting files and directories the attacker couldn't otherwise access or delete. Rust 1.0.0 through Rust 1.58.0 is affected by this vulnerability with 1.58.1 containing a patch. Note that the following build targets don't have usable APIs to properly mitigate the attack, and are thus still vulnerable even with a patched toolchain: macOS before version 10.10 (Yosemite) and REDOX. We recommend everyone to update to Rust 1.58.1 as soon as possible, especially people developing programs expected to run in privileged contexts (including system daemons and setuid binaries), as those have the highest risk of being affected by this. Note that adding checks in your codebase before calling remove_dir_all will not mitigate the vulnerability, as they would also be vulnerable to race conditions like remove_dir_all itself. The existing mitigation is working as intended outside of race conditions.",
        "URL": "https://github.com/rust-lang/rust/pull/93110/commits/406cc071d6cfdfdb678bf3d83d766851de95abaf",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "406cc071d6cfdfdb678bf3d83d766851de95abaf",
        "inducing_commit_hash_pyszz": [
            "2c2c1593acc5479a4b502d51bb5fea239766c235"
        ],
        "inducing_commit_hash_pd": [
            "61b487ca8be1d8667a82c1357dc2729cfe56186d",
            "2c2c1593acc5479a4b502d51bb5fea239766c235",
            "f3fb1c5e95b9fef29df00f0924a27790b03c524b"
        ],
        "matched": [
            "2c2c1593acc5479a4b502d51bb5fea239766c235"
        ]
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2022-21658",
        "Problem_Type": "CWE-363",
        "Description": "Rust is a multi-paradigm, general-purpose programming language designed for performance and safety, especially safe concurrency. The Rust Security Response WG was notified that the `std::fs::remove_dir_all` standard library function is vulnerable a race condition enabling symlink following (CWE-363). An attacker could use this security issue to trick a privileged program into deleting files and directories the attacker couldn't otherwise access or delete. Rust 1.0.0 through Rust 1.58.0 is affected by this vulnerability with 1.58.1 containing a patch. Note that the following build targets don't have usable APIs to properly mitigate the attack, and are thus still vulnerable even with a patched toolchain: macOS before version 10.10 (Yosemite) and REDOX. We recommend everyone to update to Rust 1.58.1 as soon as possible, especially people developing programs expected to run in privileged contexts (including system daemons and setuid binaries), as those have the highest risk of being affected by this. Note that adding checks in your codebase before calling remove_dir_all will not mitigate the vulnerability, as they would also be vulnerable to race conditions like remove_dir_all itself. The existing mitigation is working as intended outside of race conditions.",
        "URL": "https://github.com/rust-lang/rust/pull/93110/commits/4f0ad1c92ca08da6e8dc17838070975762f59714",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4f0ad1c92ca08da6e8dc17838070975762f59714",
        "inducing_commit_hash_pyszz": [
            "fc40aa059bdf917866e9b22aa9095c654333c88c"
        ],
        "inducing_commit_hash_pd": [
            "dcf53c1590b741a16e92c7e5a306e923827ae301",
            "0f02309e4b0ea05ee905205278fb6d131341c41f",
            "9407ed759fd31fca3c32c1bc3b3e2f26313c462f",
            "d47036cbd1e181da6eca7f4f125e092bedeb35e0",
            "c42d76d3c80b4938e26e628706363b677fde6ca1",
            "cdb1df749e848c2d0e0a87fa6140aa7c74220b80",
            "4c05073d1d64b82ad10478324b87816cec16d74c",
            "fc40aa059bdf917866e9b22aa9095c654333c88c"
        ],
        "matched": [
            "fc40aa059bdf917866e9b22aa9095c654333c88c"
        ]
    },
    {
        "repo_name": "rust-vmm/linux-loader",
        "CVE_ID": "CVE-2022-23523",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In versions prior to 0.8.1, the linux-loader crate uses the offsets and sizes provided in the ELF headers to determine the offsets to read from. If those offsets point beyond the end of the file this could lead to Virtual Machine Monitors using the `linux-loader` crate entering an infinite loop if the ELF header of the kernel they are loading was modified in a malicious manner. This issue has been addressed in 0.8.1. The issue can be mitigated by ensuring that only trusted kernel images are loaded or by verifying that the headers do not point beyond the end of the file.",
        "URL": "https://github.com/rust-vmm/linux-loader/pull/125",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a44f152da4f38c538ed492b1efa8515be2047db2",
        "inducing_commit_hash_pyszz": [
            "c69c23abce133b1967969759f51cd3101fe1913b"
        ],
        "inducing_commit_hash_pd": [
            "c69c23abce133b1967969759f51cd3101fe1913b"
        ],
        "matched": [
            "c69c23abce133b1967969759f51cd3101fe1913b"
        ]
    },
    {
        "repo_name": "rust-vmm/vm-superio",
        "CVE_ID": "CVE-2020-27173",
        "Problem_Type": "CWE-770",
        "Description": "In vm-superio before 0.1.1, the serial console FIFO can grow to unlimited memory usage when data is sent to the input source (i.e., standard input). This behavior cannot be reproduced from the guest side. When no rate limiting is in place, the host can be subject to memory pressure, impacting all other VMs running on the same host.",
        "URL": "https://github.com/rust-vmm/vm-superio/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4961023a1088971196fe0efeff15296c2bbb493e",
        "inducing_commit_hash_pyszz": [
            "c108ec7d21cb7b7708bd350eb517948e4abf56c9"
        ],
        "inducing_commit_hash_pd": [
            "c108ec7d21cb7b7708bd350eb517948e4abf56c9"
        ],
        "matched": [
            "c108ec7d21cb7b7708bd350eb517948e4abf56c9"
        ]
    },
    {
        "repo_name": "sahellebusch/flattenizer",
        "CVE_ID": "CVE-2020-28279",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Prototype pollution vulnerability in 'flattenizer' versions 0.0.5 through 1.0.5 allows an attacker to cause a denial of service and may lead to remote code execution.",
        "URL": "https://github.com/sahellebusch/flattenizer/pull/13",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c6a6353df7c8879e931973b81a49a47f6c2b399",
        "inducing_commit_hash_pyszz": [
            "8bb5f8bcc6af7421d579c50d59c49abb28b8c94b"
        ],
        "inducing_commit_hash_pd": [
            "f012dd167ed9b78b65c775ad8690f71fc89c5cf6",
            "8bb5f8bcc6af7421d579c50d59c49abb28b8c94b"
        ],
        "matched": [
            "8bb5f8bcc6af7421d579c50d59c49abb28b8c94b"
        ]
    },
    {
        "repo_name": "sajari/docconv",
        "CVE_ID": "CVE-2022-4643",
        "Problem_Type": "CWE-78",
        "Description": "A vulnerability was found in docconv up to 1.2.0. It has been declared as critical. This vulnerability affects the function ConvertPDFImages of the file pdf_ocr.go. The manipulation of the argument path leads to os command injection. The attack can be initiated remotely. Upgrading to version 1.2.1 is able to address this issue. The name of the patch is b19021ade3d0b71c89d35cb00eb9e589a121faa5. It is recommended to upgrade the affected component. VDB-216502 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/sajari/docconv/pull/110",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b19021ade3d0b71c89d35cb00eb9e589a121faa5",
        "inducing_commit_hash_pyszz": [
            "d6ef475743288224ff31c13545b77fc6f5ca3984"
        ],
        "inducing_commit_hash_pd": [
            "84ca013daac3198c6d37298bd83372a3beb9f182"
        ],
        "matched": [
            "d6ef475743288224ff31c13545b77fc6f5ca3984"
        ]
    },
    {
        "repo_name": "sajari/docconv",
        "CVE_ID": "CVE-2022-4741",
        "Problem_Type": "CWE-789",
        "Description": "A vulnerability was found in docconv up to 1.2.0 and classified as problematic. This issue affects the function ConvertDocx/ConvertODT/ConvertPages/ConvertXML/XMLToText. The manipulation leads to uncontrolled memory allocation. The attack may be initiated remotely. Upgrading to version 1.2.1 is able to address this issue. The name of the patch is 42bcff666855ab978e67a9041d0cdea552f20301. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216779.",
        "URL": "https://github.com/sajari/docconv/pull/111",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42bcff666855ab978e67a9041d0cdea552f20301",
        "inducing_commit_hash_pyszz": [
            "e3975370dc8372af9d461ab8d1803e7d9ff40715"
        ],
        "inducing_commit_hash_pd": [
            "b6e6e9b3bb3610024cab1c2a8c2073da89099c69",
            "cf2e37efda0aadfc69f00c755c33ff85075df327",
            "e3975370dc8372af9d461ab8d1803e7d9ff40715"
        ],
        "matched": [
            "e3975370dc8372af9d461ab8d1803e7d9ff40715"
        ]
    },
    {
        "repo_name": "sakaiproject/sakai",
        "CVE_ID": "CVE-2019-16148",
        "Problem_Type": "CWE-79",
        "Description": "Sakai through 12.6 allows XSS via a chat user name.",
        "URL": "https://github.com/sakaiproject/sakai/pull/6971",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "57dc8c9ec8f09c374e48c06a1690fb7639a00c90",
        "inducing_commit_hash_pyszz": [
            "79a9624403fc671c60e36729cde07fabb0c006cf"
        ],
        "inducing_commit_hash_pd": [
            "b3af6e7ffdcee25396eddb68629da97329ac99a0",
            "9ea42a888f76947f44224a992b88e6a08289385c",
            "79a9624403fc671c60e36729cde07fabb0c006cf"
        ],
        "matched": [
            "79a9624403fc671c60e36729cde07fabb0c006cf"
        ]
    },
    {
        "repo_name": "saltstack/salt",
        "CVE_ID": "CVE-2017-8109",
        "Problem_Type": "CWE-200",
        "Description": "The salt-ssh minion code in SaltStack Salt 2016.11 before 2016.11.4 copied over configuration from the Salt Master without adjusting permissions, which might leak credentials to local attackers on configured minions (clients).",
        "URL": "https://github.com/saltstack/salt/pull/40609/commits/6e34c2b5e5e849302af7ccd00509929c3809c658",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6e34c2b5e5e849302af7ccd00509929c3809c658",
        "inducing_commit_hash_pyszz": [
            "73a156d28cafd45dcc6c2aac9f1ac3ad905695e3"
        ],
        "inducing_commit_hash_pd": [
            "dbe850121fa954e05d0cea9f2f7262aae1123c42",
            "73a156d28cafd45dcc6c2aac9f1ac3ad905695e3",
            "1cad9b474ac43d7d6a0a66b981d3b039250e7c20",
            "44d60a3252cbeefa1defd102cd0c452776aea400",
            "9ba86c7b90b87b909423f664b1119b374cbeea82",
            "f4912bc797377da725bdef8150b53368ba5fd05f"
        ],
        "matched": [
            "73a156d28cafd45dcc6c2aac9f1ac3ad905695e3"
        ]
    },
    {
        "repo_name": "Samsung/escargot",
        "CVE_ID": "CVE-2023-41268",
        "Problem_Type": "CWE-787",
        "Description": "Improper input validation vulnerability in Samsung Open Source Escargot allows stack overflow and segmentation fault.\u00c2\u00a0This issue affects Escargot: from 3.0.0 through 4.0.0.\n\n",
        "URL": "https://github.com/Samsung/escargot/pull/1260",
        "Tag": "['Patch']",
        "fix_commit_hash": "97e698db347454bd11b7d58bae2d966f967739f1",
        "inducing_commit_hash_pyszz": [
            "161f516c54703d69654406244812381c48374b88"
        ],
        "inducing_commit_hash_pd": [
            "e4098e1d367caeb8ba5eef067122094d61a88091",
            "161f516c54703d69654406244812381c48374b88",
            "42231eba48ade11b70592db6781b88af40226e25"
        ],
        "matched": [
            "161f516c54703d69654406244812381c48374b88"
        ]
    },
    {
        "repo_name": "samtools/htsjdk",
        "CVE_ID": "CVE-2022-21126",
        "Problem_Type": "CWE-668",
        "Description": "The package com.github.samtools:htsjdk before 3.0.1 are vulnerable to Creation of Temporary File in Directory with Insecure Permissions due to the createTempDir() function in util/IOUtil.java not checking for the existence of the temporary directory before attempting to create it.",
        "URL": "https://github.com/samtools/htsjdk/pull/1617",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a4024a97ee3e87096df6ad9b22c8260bd527772",
        "inducing_commit_hash_pyszz": [
            "a98d3a7571affa0a35e637df3203b2ca9489313b"
        ],
        "inducing_commit_hash_pd": [
            "5a509100d0fe22eb7507fdd639073cbf72c4e2a5",
            "c21055b9093814ac8a96926e4a25d70f91d651a3",
            "1c44869cb00643e6336985ee738e1ae7e70e94c8",
            "3f8ba3519e8420089d63a3b3a35745b086926d17",
            "0ab0667c9eb7987eaf73e5add7e91098e1feacdf",
            "8b63854db9edf73cf255735f33d9193afc3e54ff",
            "854d7365539c63e39a4ada03ec7abbb408b12993",
            "a98d3a7571affa0a35e637df3203b2ca9489313b",
            "d25bbb435231690fc457b161f1655fbb24777d16",
            "cc8a1a13f7b0a4af5273fad7d8708dc1f871e5ae"
        ],
        "matched": [
            "a98d3a7571affa0a35e637df3203b2ca9489313b"
        ]
    },
    {
        "repo_name": "sanic-org/sanic",
        "CVE_ID": "CVE-2022-35920",
        "Problem_Type": "CWE-22",
        "Description": "Sanic is an opensource python web server/framework. Affected versions of sanic allow access to lateral directories when using `app.static` if using encoded `%2F` URLs. Parent directory traversal is not impacted. Users are advised to upgrade. There is no known workaround for this issue.",
        "URL": "https://github.com/sanic-org/sanic/pull/2495",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9d415e4ec63d31b3749fd540e2c2ac7c98dedcdd",
        "inducing_commit_hash_pyszz": [
            "86ae5f981cbe64fd85bee34fee3989b009e90dd2"
        ],
        "inducing_commit_hash_pd": [
            "86ae5f981cbe64fd85bee34fee3989b009e90dd2",
            "8f06d035cb764d94522b4c3f9e604656f7bb188f",
            "7f63ad548458e289885feb4551f069913dae4a6f",
            "27f64ddae2bd5a3ce40387f493d3e1b1068cdac7"
        ],
        "matched": [
            "86ae5f981cbe64fd85bee34fee3989b009e90dd2"
        ]
    },
    {
        "repo_name": "SAP/cloud-sdk-js",
        "CVE_ID": "CVE-2021-41251",
        "Problem_Type": "CWE-200",
        "Description": "@sap-cloud-sdk/core contains the core functionality of the SAP Cloud SDK as well as the SAP Business Technology Platform abstractions. This affects applications on SAP Business Technology Platform that use the SAP Cloud SDK and enabled caching of destinations. In affected versions and in some cases, when user information was missing, destinations were cached without user information, allowing other users to retrieve the same destination with its permissions. By default, destination caching is disabled. The security for caching has been increased. The changes are released in version 1.52.0. Users unable to upgrade are advised to disable destination caching (it is disabled by default).",
        "URL": "https://github.com/SAP/cloud-sdk-js/pull/1770",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe1ba94ad0c2dae306634725bbd4fe525f81c77d",
        "inducing_commit_hash_pyszz": [
            "0b0b993d4f70403f42f14ab3b5c6b4318012f165"
        ],
        "inducing_commit_hash_pd": [
            "021c3b5745a563b80682b1bba137427bce5da68a",
            "342e2747b13a2574f10ce2d75389b278e0f60da3",
            "1087e7296bb2c9462efc8dffd7b3134af4ac199a",
            "f1289182cddb8417d17177e5d3f7ee0ad57269a4",
            "3c0a2bc4db5d9ffa504019451a497680f6a213f3",
            "6e37d2f0c85be232f559262c2e4ac986e156a20c",
            "728e46e271c31f8e401e2223f9a07c5d7c8e67b3",
            "4e3a525689287d94a64de15913858a2bc063ef82"
        ],
        "matched": [
            "0b0b993d4f70403f42f14ab3b5c6b4318012f165"
        ]
    },
    {
        "repo_name": "SAP/cloud-sdk-js",
        "CVE_ID": "CVE-2021-41251",
        "Problem_Type": "CWE-200",
        "Description": "@sap-cloud-sdk/core contains the core functionality of the SAP Cloud SDK as well as the SAP Business Technology Platform abstractions. This affects applications on SAP Business Technology Platform that use the SAP Cloud SDK and enabled caching of destinations. In affected versions and in some cases, when user information was missing, destinations were cached without user information, allowing other users to retrieve the same destination with its permissions. By default, destination caching is disabled. The security for caching has been increased. The changes are released in version 1.52.0. Users unable to upgrade are advised to disable destination caching (it is disabled by default).",
        "URL": "https://github.com/SAP/cloud-sdk-js/pull/1769",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fbef1d2eefe3744a55aebe6d45923e8a07eeca3f",
        "inducing_commit_hash_pyszz": [
            "183ee1a5607bad1e2edef29be5379692c37bb2fb"
        ],
        "inducing_commit_hash_pd": [
            "183ee1a5607bad1e2edef29be5379692c37bb2fb",
            "021c3b5745a563b80682b1bba137427bce5da68a",
            "342e2747b13a2574f10ce2d75389b278e0f60da3",
            "f1289182cddb8417d17177e5d3f7ee0ad57269a4",
            "6e37d2f0c85be232f559262c2e4ac986e156a20c"
        ],
        "matched": [
            "183ee1a5607bad1e2edef29be5379692c37bb2fb"
        ]
    },
    {
        "repo_name": "sass/libsass",
        "CVE_ID": "CVE-2018-19839",
        "Problem_Type": "CWE-125",
        "Description": "In LibSass prior to 3.5.5, the function handle_error in sass_context.cpp allows attackers to cause a denial-of-service resulting from a heap-based buffer over-read via a crafted sass file.",
        "URL": "https://github.com/sass/libsass/pull/2767",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cabd116b95d67dcd9d44fcb936dee03f4fc71b9",
        "inducing_commit_hash_pyszz": [
            "26df96f095ab78cdf6dc142189950d1b6d67d4a5"
        ],
        "inducing_commit_hash_pd": [
            "18ecebd80cc30644659ddde12664ccdd6ae76555",
            "26df96f095ab78cdf6dc142189950d1b6d67d4a5"
        ],
        "matched": [
            "26df96f095ab78cdf6dc142189950d1b6d67d4a5"
        ]
    },
    {
        "repo_name": "sbs20/scanservjs",
        "CVE_ID": "CVE-2023-1647",
        "Problem_Type": "CWE-284",
        "Description": "Improper Access Control in GitHub repository calcom/cal.com prior to 2.7.\n\n",
        "URL": "https://github.com/sbs20/scanservjs/pull/606/commits/d51fd52c1569813990b8f74e64ae6979c665dca1",
        "Tag": "['Patch']",
        "fix_commit_hash": "83145992c0395ea9d05679d90e0d0c2159490b0e",
        "inducing_commit_hash_pyszz": [
            "e30b6882a45b2cad435e9ae2551a00a6f61d4dd0"
        ],
        "inducing_commit_hash_pd": [
            "cd5f7f2693ce719ea3ebe6fc33755aed49e36137",
            "385d4a4e7e6f85b4536ab3ead4b8fc5e17e616ae",
            "9ece924604beb1cd119437ca19a73f607fbff894",
            "e30b6882a45b2cad435e9ae2551a00a6f61d4dd0"
        ],
        "matched": [
            "e30b6882a45b2cad435e9ae2551a00a6f61d4dd0"
        ]
    },
    {
        "repo_name": "sbs20/scanservjs",
        "CVE_ID": "CVE-2023-2564",
        "Problem_Type": "CWE-78",
        "Description": "OS Command Injection in GitHub repository sbs20/scanservjs prior to v2.27.0.\n\n",
        "URL": "https://github.com/sbs20/scanservjs/pull/606/commits/d51fd52c1569813990b8f74e64ae6979c665dca1",
        "Tag": "['Patch']",
        "fix_commit_hash": "83145992c0395ea9d05679d90e0d0c2159490b0e",
        "inducing_commit_hash_pyszz": [
            "e30b6882a45b2cad435e9ae2551a00a6f61d4dd0"
        ],
        "inducing_commit_hash_pd": [
            "cd5f7f2693ce719ea3ebe6fc33755aed49e36137",
            "385d4a4e7e6f85b4536ab3ead4b8fc5e17e616ae",
            "9ece924604beb1cd119437ca19a73f607fbff894",
            "e30b6882a45b2cad435e9ae2551a00a6f61d4dd0"
        ],
        "matched": [
            "e30b6882a45b2cad435e9ae2551a00a6f61d4dd0"
        ]
    },
    {
        "repo_name": "scipy/scipy",
        "CVE_ID": "CVE-2023-29824",
        "Problem_Type": "CWE-416",
        "Description": "A use-after-free issue was discovered in Py_FindObjects() function in SciPy versions prior to 1.8.0. NOTE: the vendor and discoverer indicate that this is not a security issue.",
        "URL": "https://github.com/scipy/scipy/pull/15013",
        "Tag": "['Patch']",
        "fix_commit_hash": "e32fc2329d3dd23298725153c5b2cc7fcd0f14f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ca465a651f693acfbedc6395b0e3f1154ddd6bd7"
        ],
        "matched": [
            "ca465a651f693acfbedc6395b0e3f1154ddd6bd7"
        ]
    },
    {
        "repo_name": "scullyio/scully",
        "CVE_ID": "CVE-2020-28470",
        "Problem_Type": "CWE-79",
        "Description": "This affects the package @scullyio/scully before 1.0.9. The transfer state is serialised with the JSON.stringify() function and then written into the HTML page.",
        "URL": "https://github.com/scullyio/scully/pull/1182",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "64581f147698aa6ec8437a79a23815f0cdf9fff3",
        "inducing_commit_hash_pyszz": [
            "8f91e507096409c956f5edff9ed42960af739928"
        ],
        "inducing_commit_hash_pd": [
            "1215955dd20c032c34592b36a6341381efbe0a3b",
            "0009e0401ae3f88efcc6292127d0a5a13dbde2e0",
            "f80e78241773d91d3c53ede8b8af6f418257593a",
            "85770a3912b5b8505d4e348e634b53a37b9d4851",
            "b62d08488000a485791a6b98beee5166ed8237e8",
            "589ca4fc15bcb728b2760d8e9afa25310b7a3869",
            "a106c7969a403fd612949b645c412b3530a498f3",
            "a51456c9834f72857ac4ebda227ff18eb64d93b3",
            "1a05af8f1b13e6e913f8b0a89b36d2c7a82011fb",
            "94e275c96328a824671350b0830f3a8a9234f812",
            "70efac5c8685dd5e56fdbf918b3493b85dac04b7",
            "b8a7ee0233f906c86c0d2045297f748b8e224abd",
            "f4bd856ebad609f5f7517e4f7287c72505fbe85f",
            "23c8fcf740b15c8cb420c5dc1bc2ac7339edea83",
            "c89076f8eb17bd2fe44b060099b3f5d686d5226d",
            "99ae9f8648cf444fe177a5614f5d308b34e79ecc",
            "1c8afa24baf3bbddcc3a27dffcec0790e353422f",
            "eba6fba6a5df182137fdb7b434893162bc962dc3",
            "9411ec606536440e445a8dca70a5f135eef05ee0",
            "012230e0c55d4ad5d3fa25d2f4df4c6f57201490",
            "4367831b2c47c5095495b05798c154ffd80a08fc",
            "8f91e507096409c956f5edff9ed42960af739928",
            "f856a0adda3bcdd482d34f0e117975d735e07048",
            "84153557ec1d331d8a2cfde6a6330f45eb09c548",
            "417bd2b6034ffd8f26d7039a7f46ffefd818bc0c",
            "308d4231dd9e385d7b83a93cf295a0ab75d67026",
            "db16d15569a364feb6b85ed6025377e180d1da50",
            "fc4f5c1a82e8f617fcbd24fc5fbd0ea452a587f9"
        ],
        "matched": [
            "8f91e507096409c956f5edff9ed42960af739928"
        ]
    },
    {
        "repo_name": "sebastianbergmann/phpunit",
        "CVE_ID": "CVE-2017-9841",
        "Problem_Type": "CWE-94",
        "Description": "Util/PHP/eval-stdin.php in PHPUnit before 4.8.28 and 5.x before 5.6.3 allows remote attackers to execute arbitrary PHP code via HTTP POST data beginning with a \"<?php \" substring, as demonstrated by an attack on a site with an exposed /vendor folder, i.e., external access to the /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php URI.",
        "URL": "https://github.com/sebastianbergmann/phpunit/pull/1956",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0c1ae1b5324fa10f96129c5679b788cc1ca9468e",
        "inducing_commit_hash_pyszz": [
            "3aaddb1c5bd9b9b8d070b4cf120e71c36fd08412"
        ],
        "inducing_commit_hash_pd": [
            "6f908b194abd4a0f04b01f03b9920602ada687b5",
            "3aaddb1c5bd9b9b8d070b4cf120e71c36fd08412"
        ],
        "matched": [
            "3aaddb1c5bd9b9b8d070b4cf120e71c36fd08412"
        ]
    },
    {
        "repo_name": "sequelize/sequelize",
        "CVE_ID": "CVE-2016-10550",
        "Problem_Type": "CWE-89",
        "Description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS If user input goes into the `limit` or `order` parameters, a malicious user can put in their own SQL statements. This affects sequelize 3.16.0 and earlier.",
        "URL": "https://github.com/sequelize/sequelize/pull/5167/commits/f282d85e60e3df5e57ecdb82adccb4eaef404f03",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sequelize/sequelize",
        "CVE_ID": "CVE-2019-11069",
        "Problem_Type": "CWE-20",
        "Description": "Sequelize version 5 before 5.3.0 does not properly ensure that standard conforming strings are used.",
        "URL": "https://github.com/sequelize/sequelize/pull/10746/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "850c7fd04669e0fef9238b6dc4f8d6ee93ed71e9",
        "inducing_commit_hash_pyszz": [
            "fa2f37335f93cd905b5a69ab98045aec2bd185a6"
        ],
        "inducing_commit_hash_pd": [
            "fa2f37335f93cd905b5a69ab98045aec2bd185a6",
            "49a7e543adcdaa49564c0fafe3aa2831713385c1"
        ],
        "matched": [
            "fa2f37335f93cd905b5a69ab98045aec2bd185a6"
        ]
    },
    {
        "repo_name": "serbanghita/Mobile-Detect",
        "CVE_ID": "CVE-2018-25080",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in MobileDetect 2.8.31. This issue affects the function initLayoutType of the file examples/session_example.php of the component Example. The manipulation of the argument $_SERVER['PHP_SELF'] leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.8.32 is able to address this issue. The identifier of the patch is 31818a441b095bdc4838602dbb17b8377d1e5cce. It is recommended to upgrade the affected component. The identifier VDB-220061 was assigned to this vulnerability.",
        "URL": "https://github.com/serbanghita/Mobile-Detect/pull/741",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "31818a441b095bdc4838602dbb17b8377d1e5cce",
        "inducing_commit_hash_pyszz": [
            "5098bd37b10ddc9c2436b4aef824feae55a0e288"
        ],
        "inducing_commit_hash_pd": [
            "5098bd37b10ddc9c2436b4aef824feae55a0e288"
        ],
        "matched": [
            "5098bd37b10ddc9c2436b4aef824feae55a0e288"
        ]
    },
    {
        "repo_name": "SerenityOS/serenity",
        "CVE_ID": "CVE-2021-31272",
        "Problem_Type": "CWE-22",
        "Description": "SerenityOS before commit 3844e8569689dd476064a0759d704bc64fb3ca2c contains a directory traversal vulnerability in tar/unzip that may lead to command execution or privilege escalation.",
        "URL": "https://github.com/SerenityOS/serenity/pull/5713/commits/3844e8569689dd476064a0759d704bc64fb3ca2c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sharkdp/bat",
        "CVE_ID": "CVE-2021-36753",
        "Problem_Type": "CWE-427",
        "Description": "sharkdp BAT before 0.18.2 executes less.exe from the current working directory.",
        "URL": "https://github.com/sharkdp/bat/pull/1724",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3fa09dbe2e1755740eda1de0900853c4a6ee5f3a",
        "inducing_commit_hash_pyszz": [
            "f874c8e4dbb13defbb842398853cdea8e23e39d9"
        ],
        "inducing_commit_hash_pd": [
            "6a52f69b5816819ae3d44f231e236e6249c4eff7",
            "dec94b4111ea7e484df6ce52041c0a86c3f5e713",
            "f874c8e4dbb13defbb842398853cdea8e23e39d9",
            "ebb97e94a9f3936e7db23c211f9dba779b0daa89"
        ],
        "matched": [
            "f874c8e4dbb13defbb842398853cdea8e23e39d9"
        ]
    },
    {
        "repo_name": "Shopify/hydrogen",
        "CVE_ID": "CVE-2022-29230",
        "Problem_Type": "CWE-79",
        "Description": "Hydrogen is a React-based framework for building dynamic, Shopify-powered custom storefronts. There is a potential Cross-Site Scripting (XSS) vulnerability where an arbitrary user is able to execute scripts on pages that are built with Hydrogen. This affects all versions of Hydrogen starting from version 0.10.0 to 0.18.0. This vulnerability is exploitable in applications whose hydrating data is user controlled. All Hydrogen users should upgrade their project to version 0.19.0. There is no current workaround, and users should update as soon as possible. Additionally, the Content Security Policy is not an effective mitigation for this vulnerability.",
        "URL": "https://github.com/Shopify/hydrogen/pull/1272",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "291115da68625c5f992b7bc6e10480d4ec54c246",
        "inducing_commit_hash_pyszz": [
            "6725b132e32e473310629accd57ce621b8bf1370"
        ],
        "inducing_commit_hash_pd": [
            "a21515221d1815163b5a3b7ab970e37a1ee1a715",
            "076bab7d31ffcd918c4a3b0dd7be03e00d2dd913",
            "6725b132e32e473310629accd57ce621b8bf1370",
            "dbf16d0f0ad3ae4d39ad0b073bc7c71c85ad7935",
            "9e870986e646da3e1f9d8ec978f6b68b8b1529d0",
            "999425a11340e0460aa846fb7862c0e48df47d26",
            "804062eb4395902bc67530f8dd069cd0d76be2c1",
            "b7a8ecf6a687e72de7745a78c61c1a78a9a52629",
            "a18891520cfd73d581d8ff802922f2064206a039",
            "92f880072aedbf521f3904cf60175c9279f3e77d",
            "32f64c68607d187147d2feb75ca4f0848fb2d3ca",
            "cc9d84e92c1357e9632594deb8745b6bf0ec5cb4",
            "b38506faaf19c6ae84d1977017167c40cb9d8fc4",
            "d053978dc49a12651a5c7c15efd543884b9f03db",
            "d9f06c04e1051419882aee63da6c807f48943de7",
            "6b408452873cbc866daa6a1f70f193b9cf68b1f8",
            "2d4c5d9340c5a2458c682aa3f9b12352dacdd759",
            "f29e178ada608ef3797c5049fd498afeed272152",
            "ed9782bc43921d02a2fdbc951c1df1d200812f2d",
            "1a8f79ffb12d4712970a6794e5a5478a91bd1314",
            "f6897dca635172f45e82ecd9b894c17624c35610",
            "f39d650d2b49c689f8c192fcfaaf957e42ff9c6a",
            "1015f17028beb2ab00e381a61e9f4132e74b17ad"
        ],
        "matched": [
            "6725b132e32e473310629accd57ce621b8bf1370"
        ]
    },
    {
        "repo_name": "Shopify/omniauth-shopify-oauth2",
        "CVE_ID": "CVE-2012-6134",
        "Problem_Type": "CWE-352",
        "Description": "Cross-site request forgery (CSRF) vulnerability in the omniauth-oauth2 gem 1.1.1 and earlier for Ruby allows remote attackers to hijack the authentication of users for requests that modify session state.",
        "URL": "https://github.com/Shopify/omniauth-shopify-oauth2/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "shoppingflux/module-prestashop",
        "CVE_ID": "CVE-2023-28839",
        "Problem_Type": "CWE-89",
        "Description": "Shoppingfeed PrestaShop is an add-on to the PrestaShop ecommerce platform to synchronize data. The module Shoppingfeed for PrestaShop is vulnerable to SQL injection between version 1.4.0 and 1.8.2 due to a lack of input sanitization. This issue has been addressed in version 1.8.3. Users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/shoppingflux/module-prestashop/pull/209",
        "Tag": "['Patch']",
        "fix_commit_hash": "a0a12f3084e0bcb593078b67c51be8d752dfd192",
        "inducing_commit_hash_pyszz": [
            "8b73074a72cd832a111c662cff13f22ad0134506"
        ],
        "inducing_commit_hash_pd": [
            "39fae0b6c48a0b588b3d8ae9c28bfaaca60a1a44",
            "8b73074a72cd832a111c662cff13f22ad0134506"
        ],
        "matched": [
            "8b73074a72cd832a111c662cff13f22ad0134506"
        ]
    },
    {
        "repo_name": "Significant-Gravitas/Auto-GPT",
        "CVE_ID": "CVE-2023-37274",
        "Problem_Type": "CWE-94",
        "Description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. When Auto-GPT is executed directly on the host system via the provided run.sh or run.bat files, custom Python code execution is sandboxed using a temporary dedicated docker container which should not have access to any files outside of the Auto-GPT workspace directory.\nBefore v0.4.3, the `execute_python_code` command (introduced in v0.4.1) does not sanitize the `basename` arg before writing LLM-supplied code to a file with an LLM-supplied name. This allows for a path traversal attack that can overwrite any .py file outside the workspace directory by specifying a `basename` such as `../../../main.py`. This can further be abused to achieve arbitrary code execution on the host running Auto-GPT by e.g. overwriting autogpt/main.py which will be executed outside of the docker environment meant to sandbox custom python code execution the next time Auto-GPT is started. The issue has been patched in version 0.4.3. As a workaround, the risk introduced by this vulnerability can be remediated by running Auto-GPT in a virtual machine, or another environment in which damage to files or corruption of the program is not a critical problem.",
        "URL": "https://github.com/Significant-Gravitas/Auto-GPT/pull/4756",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "32038c9f5b415c4781ae78b8821149305c46013a",
        "inducing_commit_hash_pyszz": [
            "9f737274b78c84f509cd8b740752444b5fa09722"
        ],
        "inducing_commit_hash_pd": [
            "1073954fb74578cb392ca19a2887bea8c984c06f",
            "94280b2d14c9000ec113322cb060e9d6d2d7c107",
            "9f737274b78c84f509cd8b740752444b5fa09722",
            "fdc6e12945f01a27dd88d83515cac61743056ba9",
            "0594ba33a2c58e6006718692ecf059e713340704",
            "74aa4add1b066bcab5d1749a6f50898a576c9499"
        ],
        "matched": [
            "9f737274b78c84f509cd8b740752444b5fa09722"
        ]
    },
    {
        "repo_name": "Significant-Gravitas/Auto-GPT",
        "CVE_ID": "CVE-2023-37275",
        "Problem_Type": "CWE-117",
        "Description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. The Auto-GPT command line UI makes heavy use of color-coded print statements to signify different types of system messages to the user, including messages that are crucial for the user to review and control which commands should be executed. Before v0.4.3, it was possible for a malicious external resource (such as a website browsed by Auto-GPT) to cause misleading messages to be printed to the console by getting the LLM to regurgitate JSON encoded ANSI escape sequences (`\\u001b[`). These escape sequences were JSON decoded and printed to the console as part of the model's \"thinking process\". The issue has been patched in release version 0.4.3.\n",
        "URL": "https://github.com/Significant-Gravitas/Auto-GPT/pull/4810",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bafcdcea7c89ffa1cdac037673b9110a6313e086",
        "inducing_commit_hash_pyszz": [
            "428caa9bef83e93a6f97a1341a03a0f41b71dec0"
        ],
        "inducing_commit_hash_pd": [
            "1073954fb74578cb392ca19a2887bea8c984c06f",
            "4bb7a598a502b9f9642bda63eb1c44c4663e5bff",
            "b2b31dbc8f58671871c7043d98bf1247a46648d1"
        ],
        "matched": [
            "428caa9bef83e93a6f97a1341a03a0f41b71dec0"
        ]
    },
    {
        "repo_name": "sigstore/gitsign",
        "CVE_ID": "CVE-2023-47122",
        "Problem_Type": "CWE-347",
        "Description": "Gitsign is software for keyless Git signing using Sigstore. In versions of gitsign starting with 0.6.0 and prior to 0.8.0, Rekor public keys were fetched via the Rekor API, instead of through the local TUF client. If the upstream Rekor server happened to be compromised, gitsign clients could potentially be tricked into trusting incorrect signatures. There is no known compromise the default public good instance (`rekor.sigstore.dev`) - anyone using this instance is unaffected. This issue was fixed in v0.8.0. No known workarounds are available.",
        "URL": "https://github.com/sigstore/gitsign/pull/399",
        "Tag": "['Patch']",
        "fix_commit_hash": "cd66ccb03c86a3600955f0c15f6bfeb75f697236",
        "inducing_commit_hash_pyszz": [
            "b9ab03bf3f2a28b163a05076b94da138aa932e9c"
        ],
        "inducing_commit_hash_pd": [
            "262c05491554c57ee641461f315bf4023d0e93c7",
            "c0db8830c5db7b62cfd1227d869e9685d0765f27",
            "2e8ad3c85fdc6d50646a80882dc120cb51c4c21f",
            "f215bd8f5a2afc340767aa9e555d16e5c2d9836f",
            "b9ab03bf3f2a28b163a05076b94da138aa932e9c"
        ],
        "matched": [
            "b9ab03bf3f2a28b163a05076b94da138aa932e9c"
        ]
    },
    {
        "repo_name": "sileht/bird-lg",
        "CVE_ID": "CVE-2021-4274",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in sileht bird-lg. This issue affects some unknown processing of the file templates/layout.html. The manipulation of the argument request_args leads to cross site scripting. The attack may be initiated remotely. The name of the patch is ef6b32c527478fefe7a4436e10b96ee28ed5b308. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216479.",
        "URL": "https://github.com/sileht/bird-lg/pull/82",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ef6b32c527478fefe7a4436e10b96ee28ed5b308",
        "inducing_commit_hash_pyszz": [
            "6311df95e82f519aad6ec67c0edf5792c9fb94e8"
        ],
        "inducing_commit_hash_pd": [
            "6311df95e82f519aad6ec67c0edf5792c9fb94e8"
        ],
        "matched": [
            "6311df95e82f519aad6ec67c0edf5792c9fb94e8"
        ]
    },
    {
        "repo_name": "Silverpeas/Silverpeas-Core",
        "CVE_ID": "CVE-2023-47324",
        "Problem_Type": "CWE-79",
        "Description": "Silverpeas Core 6.3.1 is vulnerable to Cross Site Scripting (XSS) via the message/notification feature.",
        "URL": "https://github.com/Silverpeas/Silverpeas-Core/pull/1298/commits",
        "Tag": "['Patch']",
        "fix_commit_hash": "9cb2941e9242db3df179c1170d7695c9917e4e9c",
        "inducing_commit_hash_pyszz": [
            "ea7f5c4db416ecbbe89f68b4ad6f67947cb42335"
        ],
        "inducing_commit_hash_pd": [
            "93b9ec8010a104d28ea40333f6d8311d23fbcc52",
            "869ad1cec6f2c760b4ebfbfc87e8b5ffb4794291",
            "38a23fa37fa470d591723aa767fb3feb7896e9c9",
            "fafac817b6ad49f8bf771e518d45b7ecd807bdf7",
            "d0960b3005fc15e0823ab0fcca4827e7a13e5acb",
            "268e803be3b2d0ccd6a0868e054f1e5392ded213",
            "465cc622d7fab0a53eef80d5fa8053c80e71dd2f",
            "1cb4d66304c6c75f7264ceb9f833af868ab5046a",
            "ea7f5c4db416ecbbe89f68b4ad6f67947cb42335",
            "5ba1a6df1697bfcc8881d1a2e8ee91c48f74a344",
            "53ca23dc6d908751afb1510fbe60e50f8b3997ca",
            "1671379d11813939aafa65fa7867456fd5236f5b",
            "833f4afb926eed3822f7f0d5e90a4276922705cb",
            "fbee290e541667a00346ec23322b82784188aa1b",
            "13e43f3e7197c55d2c548ad5a530609125ae77d5",
            "de0b90dc3bc1a740062f363a933aec4323f56f15",
            "98ed22d09bc6e6f56a920ede0b96587a4f2a5b7d",
            "6ebf504e5ce5f97a29c2ef39ac52a319930ea803",
            "48e459619983ce92f316704e31b85bc7805800a1",
            "0427e945470f5d61c81296dd4ebcb37d103c6aaa",
            "c94195b11a695eaf6c5f2666ab61283730b2b2fc",
            "17a8a656b1106473007d5eaa0735129fd6afc146",
            "e94d0611f7635af54fff4c7feca23f5bea2b5d5b",
            "d3e1f5412fd272f5c17e2ce5d329f5e51e1fb849",
            "7510ea52a00667438cf9672b3053b6ab7168fcfd",
            "719475b36c1a45ae67339bf8957060221a04101f",
            "b89d83f454e63b2e406cf4f8f32470847e85864a",
            "8b038e60ece19ec4b91a92387dc09dc94a630012",
            "ec03514a16f2891d4e42747086b794732289d623",
            "691b44773f62ded53c4fc0f2c5cfd928e115083a"
        ],
        "matched": [
            "ea7f5c4db416ecbbe89f68b4ad6f67947cb42335"
        ]
    },
    {
        "repo_name": "simonmichael/hledger",
        "CVE_ID": "CVE-2021-46888",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in hledger before 1.23. A Stored Cross-Site Scripting (XSS) vulnerability exists in toBloodhoundJson that allows an attacker to execute JavaScript by encoding user-controlled values in a payload with base64 and parsing them with the atob function.",
        "URL": "https://github.com/simonmichael/hledger/pull/1663",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3504a91b42ae3b2dbeed1cda1cb142d2a7478cc1",
        "inducing_commit_hash_pyszz": [
            "9ce55146c8f830cb6bc13db2dea67bd9ee73127b"
        ],
        "inducing_commit_hash_pd": [
            "aa47d8ddc9912963795a9e556bd953aa5ba4c6f6",
            "9ce55146c8f830cb6bc13db2dea67bd9ee73127b",
            "cc1241fa205beee103fe39d1c1c9e0523c74edfb",
            "74778efcf5af94c949ee88164d7fe26fc2a3d1ce"
        ],
        "matched": [
            "9ce55146c8f830cb6bc13db2dea67bd9ee73127b"
        ]
    },
    {
        "repo_name": "simplex-chat/simplexmq",
        "CVE_ID": "CVE-2022-45195",
        "Problem_Type": "CWE-327",
        "Description": "SimpleXMQ before 3.4.0, as used in SimpleX Chat before 4.2, does not apply a key derivation function to intended data, which can interfere with forward secrecy and can have other impacts if there is a compromise of a single private key. This occurs in the X3DH key exchange for the double ratchet protocol.",
        "URL": "https://github.com/simplex-chat/simplexmq/pull/548",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d06bb2b9c59902586034f59ca7fa7b2e0c80e977",
        "inducing_commit_hash_pyszz": [
            "882d2b123b58a7c886b00426700f9e1d0b7876b3"
        ],
        "inducing_commit_hash_pd": [
            "c1348aa54fba292d34339d6b111572cb1c74b546",
            "2a89394174f59a981f9e7188af1e43f6647c6f5e",
            "68138c08d29ba27cbf23a29cf9c2ab6653173685",
            "488398df9f3d1a9bab844f25d42170b5a2bff65a",
            "882d2b123b58a7c886b00426700f9e1d0b7876b3",
            "926e515bc06f598c3e9a60e04cb85edad03f53fd"
        ],
        "matched": [
            "882d2b123b58a7c886b00426700f9e1d0b7876b3"
        ]
    },
    {
        "repo_name": "sindresorhus/got",
        "CVE_ID": "CVE-2022-33987",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
        "URL": "https://github.com/sindresorhus/got/pull/2047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "861ccd9ac2237df762a9e2beed7edd88c60782dc",
        "inducing_commit_hash_pyszz": [
            "8ff71d972ae55700887b45d50a265e3659ac8cce"
        ],
        "inducing_commit_hash_pd": [
            "cf066a0918806dd1aca88dd2b838a59eddb0518d"
        ],
        "matched": [
            "8ff71d972ae55700887b45d50a265e3659ac8cce"
        ]
    },
    {
        "repo_name": "sindresorhus/hide-files-on-github",
        "CVE_ID": "CVE-2019-25084",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in Hide Files on GitHub up to 2.x. This issue affects the function addEventListener of the file extension/options.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is 9de0c57df81db1178e0e79431d462f6d9842742e. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216767.",
        "URL": "https://github.com/sindresorhus/hide-files-on-github/pull/73",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9de0c57df81db1178e0e79431d462f6d9842742e",
        "inducing_commit_hash_pyszz": [
            "1157a69fa59df4ab78d7df61a251087a425e49af"
        ],
        "inducing_commit_hash_pd": [
            "1157a69fa59df4ab78d7df61a251087a425e49af"
        ],
        "matched": [
            "1157a69fa59df4ab78d7df61a251087a425e49af"
        ]
    },
    {
        "repo_name": "sirdude/gurbalib",
        "CVE_ID": "CVE-2020-12649",
        "Problem_Type": "CWE-22",
        "Description": "Gurbalib through 2020-04-30 allows lib/cmds/player/help.c directory traversal for reading administrative paths.",
        "URL": "https://github.com/sirdude/gurbalib/pull/38",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "siwapp/siwapp-ror",
        "CVE_ID": "CVE-2021-4265",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in siwapp-ror. It has been rated as problematic. This issue affects some unknown processing. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 924d16008cfcc09356c87db01848e45290cb58ca. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216467.",
        "URL": "https://github.com/siwapp/siwapp-ror/pull/365",
        "Tag": "['Patch']",
        "fix_commit_hash": "924d16008cfcc09356c87db01848e45290cb58ca",
        "inducing_commit_hash_pyszz": [
            "fba3c8f811358e6b37fde2cb27de7a738a5d5326"
        ],
        "inducing_commit_hash_pd": [
            "6f8f9de99d7838397c6061e88344259591967a8b",
            "e428e46119f683666ea5f223c23a1175b07041b6",
            "d9b1cba0a115bb9f9e92b0b3ce77d213e70e7995",
            "3ecfb176ebf9a19a60d3a88fe04a7227b614780d",
            "77a634ba7b009ed789c90dc5d0cbe78ba289e491",
            "fba3c8f811358e6b37fde2cb27de7a738a5d5326",
            "7e5e0d6883919dacefb968761046ee78deaa301c",
            "af59c5b85276f9364cbcdd3b733fbe8f5bde3c5c",
            "9b562e07573bca9baaaa5c966bfcf526f6a1ca97",
            "a74aad01be04b57b574c192bd5904d6823babcd1",
            "97f68d1e60c13d64e2199a1e365fb515621fbbac",
            "e464dcf12620e50c7456994080fd08e00588335d",
            "fa1fd85d8dbcf101c7f819db36fa23ffa2249208",
            "636d225d1f235959b995a535124973bf773591df",
            "2811bba94633690100dea7409aa9043bc89d2ef6",
            "a86267f920aac165fa3ee5befc1b5e3718323f97",
            "df7906023717997fa59ad264df9702d06439938f",
            "3cdd8fc4895017b720b5f22001c06aa1ad5fc536"
        ],
        "matched": [
            "fba3c8f811358e6b37fde2cb27de7a738a5d5326"
        ]
    },
    {
        "repo_name": "sjelfull/craft-audit",
        "CVE_ID": "CVE-2023-36259",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulnerability in Craft CMS Audit Plugin before version 3.0.2 allows attackers to execute arbitrary code during user creation.",
        "URL": "https://github.com/sjelfull/craft-audit/pull/73",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "c2888aa48457f24696ac0a2ba4f54f39e5c672ed",
        "inducing_commit_hash_pyszz": [
            "134783bd20388d490fb57a15c4c93f2c46200bb2"
        ],
        "inducing_commit_hash_pd": [
            "134783bd20388d490fb57a15c4c93f2c46200bb2"
        ],
        "matched": [
            "134783bd20388d490fb57a15c4c93f2c46200bb2"
        ]
    },
    {
        "repo_name": "slackhq/nebula",
        "CVE_ID": "CVE-2020-11498",
        "Problem_Type": "CWE-22",
        "Description": "Slack Nebula through 1.1.0 contains a relative path vulnerability that allows a low-privileged attacker to execute code in the context of the root user via tun_darwin.go or tun_windows.go. A user can also use Nebula to execute arbitrary code in the user's own context, e.g., for user-level persistence or to bypass security controls. NOTE: the vendor states that this \"requires a high degree of access and other preconditions that are tough to achieve.\"",
        "URL": "https://github.com/slackhq/nebula/pull/191",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df69371620ef8fdf0fc4693274f9b524c8250d0e",
        "inducing_commit_hash_pyszz": [
            "4e0da13180a07da4df31f91dea98237ff3bd0322"
        ],
        "inducing_commit_hash_pd": [
            "4e0da13180a07da4df31f91dea98237ff3bd0322",
            "f22b4b584d64c945da3dfc22361a76b1f87bd8af"
        ],
        "matched": [
            "4e0da13180a07da4df31f91dea98237ff3bd0322"
        ]
    },
    {
        "repo_name": "Smashing/smashing",
        "CVE_ID": "CVE-2021-35440",
        "Problem_Type": "CWE-79",
        "Description": "Smashing 1.3.4 is vulnerable to Cross Site Scripting (XSS). A URL for a widget can be crafted and used to execute JavaScript on the victim's computer. The JavaScript code can then steal data available in the session/cookies depending on the user environment (e.g. if re-using internal URL's for deploying, or cookies that are very permissive) private information may be retrieved by the attacker.",
        "URL": "https://github.com/Smashing/smashing/pull/186#issuecomment-871727614",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d1577b1119b483071634c2e100503639de648580",
        "inducing_commit_hash_pyszz": [
            "d9816ce1fbea0c6219c6660fda6887375c5f1e84"
        ],
        "inducing_commit_hash_pd": [
            "d9816ce1fbea0c6219c6660fda6887375c5f1e84"
        ],
        "matched": [
            "d9816ce1fbea0c6219c6660fda6887375c5f1e84"
        ]
    },
    {
        "repo_name": "Smashing/smashing",
        "CVE_ID": "CVE-2021-35440",
        "Problem_Type": "CWE-79",
        "Description": "Smashing 1.3.4 is vulnerable to Cross Site Scripting (XSS). A URL for a widget can be crafted and used to execute JavaScript on the victim's computer. The JavaScript code can then steal data available in the session/cookies depending on the user environment (e.g. if re-using internal URL's for deploying, or cookies that are very permissive) private information may be retrieved by the attacker.",
        "URL": "https://github.com/Smashing/smashing/pull/186",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d1577b1119b483071634c2e100503639de648580",
        "inducing_commit_hash_pyszz": [
            "d9816ce1fbea0c6219c6660fda6887375c5f1e84"
        ],
        "inducing_commit_hash_pd": [
            "d9816ce1fbea0c6219c6660fda6887375c5f1e84"
        ],
        "matched": [
            "d9816ce1fbea0c6219c6660fda6887375c5f1e84"
        ]
    },
    {
        "repo_name": "snapcore/snapd",
        "CVE_ID": "CVE-2023-1523",
        "Problem_Type": "CWE-74",
        "Description": "Using the TIOCLINUX ioctl request, a malicious snap could inject contents into the input of the controlling terminal which could allow it to cause arbitrary commands to be executed outside of the snap sandbox after the snap exits. Graphical terminal emulators like xterm, gnome-terminal and others are not affected - this can only be exploited when snaps are run on a virtual console.",
        "URL": "https://github.com/snapcore/snapd/pull/12849",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "d7b49dd6f5911eed28cc765e39204bccd2382821",
        "inducing_commit_hash_pyszz": [
            "453f9e839524d99b72a9ed9a811d7a88e857b8f6"
        ],
        "inducing_commit_hash_pd": [
            "84c4f0c4b972a895beb32181aa7600b47d7560d6",
            "c0208fd07f6a3e6b663e31f84e96713109aac0e4"
        ],
        "matched": [
            "453f9e839524d99b72a9ed9a811d7a88e857b8f6"
        ]
    },
    {
        "repo_name": "snipe/snipe-it",
        "CVE_ID": "CVE-2016-10744",
        "Problem_Type": "CWE-79",
        "Description": "In Select2 through 4.0.5, as used in Snipe-IT and other products, rich selectlists allow XSS. This affects use cases with Ajax remote data loading when HTML templates are used to display listbox data.",
        "URL": "https://github.com/snipe/snipe-it/pull/6831/commits/5848d9a10c7d62c73ff6a3858edfae96a429402a",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dee92cfc6c016986b341c57ed06f3d65e9d18d43",
        "inducing_commit_hash_pyszz": [
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f"
        ],
        "inducing_commit_hash_pd": [
            "58b1ac5f0f00c9a79cb8d206112a6255ced41282",
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f",
            "c8bff3ef38721f582aa23627751be0d41513456b",
            "fd0165b4b846cf7caa3381d2d6913fe5d6bf83dc",
            "82690e1fd7538c7578d6f06204d21aca9f34fb81",
            "f16ce09a7acc0e42ec0338b236fb55403e0f384a",
            "612f23f6e0a77334a3f70ad2d2f01354e0a5fde3"
        ],
        "matched": [
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f"
        ]
    },
    {
        "repo_name": "snipe/snipe-it",
        "CVE_ID": "CVE-2016-10744",
        "Problem_Type": "CWE-79",
        "Description": "In Select2 through 4.0.5, as used in Snipe-IT and other products, rich selectlists allow XSS. This affects use cases with Ajax remote data loading when HTML templates are used to display listbox data.",
        "URL": "https://github.com/snipe/snipe-it/pull/6831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dee92cfc6c016986b341c57ed06f3d65e9d18d43",
        "inducing_commit_hash_pyszz": [
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f"
        ],
        "inducing_commit_hash_pd": [
            "58b1ac5f0f00c9a79cb8d206112a6255ced41282",
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f",
            "c8bff3ef38721f582aa23627751be0d41513456b",
            "fd0165b4b846cf7caa3381d2d6913fe5d6bf83dc",
            "82690e1fd7538c7578d6f06204d21aca9f34fb81",
            "f16ce09a7acc0e42ec0338b236fb55403e0f384a",
            "612f23f6e0a77334a3f70ad2d2f01354e0a5fde3"
        ],
        "matched": [
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f"
        ]
    },
    {
        "repo_name": "snipe/snipe-it",
        "CVE_ID": "CVE-2019-10118",
        "Problem_Type": "CWE-79",
        "Description": "Snipe-IT before 4.6.14 has XSS, as demonstrated by log_meta values and the user's last name in the API.",
        "URL": "https://github.com/snipe/snipe-it/pull/6831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dee92cfc6c016986b341c57ed06f3d65e9d18d43",
        "inducing_commit_hash_pyszz": [
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f"
        ],
        "inducing_commit_hash_pd": [
            "58b1ac5f0f00c9a79cb8d206112a6255ced41282",
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f",
            "c8bff3ef38721f582aa23627751be0d41513456b",
            "fd0165b4b846cf7caa3381d2d6913fe5d6bf83dc",
            "82690e1fd7538c7578d6f06204d21aca9f34fb81",
            "f16ce09a7acc0e42ec0338b236fb55403e0f384a",
            "612f23f6e0a77334a3f70ad2d2f01354e0a5fde3"
        ],
        "matched": [
            "3d4a5a806654148dff93f102b36d7f2d0b1f048f"
        ]
    },
    {
        "repo_name": "etcd-io/etcd",
        "CVE_ID": "CVE-2022-34038",
        "Problem_Type": "CWE-787",
        "Description": "Etcd v3.5.4 allows remote attackers to cause a denial of service via function PageWriter.write in pagewriter.go. NOTE: the vendor's position is that this is not a vulnerability.",
        "URL": "https://github.com/etcd-io/etcd/pull/14022",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "LimeSurvey/LimeSurvey",
        "CVE_ID": "CVE-2020-23710",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulneraiblity in LimeSurvey 4.2.5 on textbox via the Notifications & data feature.",
        "URL": "https://github.com/LimeSurvey/LimeSurvey/pull/1441#partial-pull-merging",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "LINBIT/csync2",
        "CVE_ID": "CVE-2019-15523",
        "Problem_Type": "CWE-252",
        "Description": "An issue was discovered in LINBIT csync2 through 2.0. It does not correctly check for the return value GNUTLS_E_WARNING_ALERT_RECEIVED of the gnutls_handshake() function. It neglects to call this function again, as required by the design of the API.",
        "URL": "https://github.com/LINBIT/csync2/pull/13/commits/92742544a56bcbcd9ec99ca15f898b31797e39e2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mandovinnie/Lute-Tab",
        "CVE_ID": "CVE-2019-15783",
        "Problem_Type": "CWE-119",
        "Description": "Lute-Tab before 2019-08-23 has a buffer overflow in pdf_print.cc.",
        "URL": "https://github.com/mandovinnie/Lute-Tab/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "memcached/memcached",
        "CVE_ID": "CVE-2021-37519",
        "Problem_Type": "CWE-787",
        "Description": "Buffer Overflow vulnerability in authfile.c memcached 1.6.9 allows attackers to cause a denial of service via crafted authenticattion file.",
        "URL": "https://github.com/memcached/memcached/pull/806/commits/264722ae4e248b453be00e97197dadc685b60fd0",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "microsoft/onefuzz",
        "CVE_ID": "CVE-2021-37705",
        "Problem_Type": "CWE-863",
        "Description": "OneFuzz is an open source self-hosted Fuzzing-As-A-Service platform. Starting with OneFuzz 2.12.0 or greater, an incomplete authorization check allows an authenticated user from any Azure Active Directory tenant to make authorized API calls to a vulnerable OneFuzz instance. To be vulnerable, a OneFuzz deployment must be both version 2.12.0 or greater and deployed with the non-default --multi_tenant_domain option. This can result in read/write access to private data such as software vulnerability and crash information, security testing tools and proprietary code and symbols. Via authorized API calls, this also enables tampering with existing data and unauthorized code execution on Azure compute resources. This issue is resolved starting in release 2.31.0, via the addition of application-level check of the bearer token's `issuer` against an administrator-configured allowlist. As a workaround users can restrict access to the tenant of a deployed OneFuzz instance < 2.31.0 by redeploying in the default configuration, which omits the `--multi_tenant_domain` option.",
        "URL": "https://github.com/microsoft/onefuzz/pull/1153",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2023-28840",
        "Problem_Type": "CWE-420",
        "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby, is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in dockerd and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe overlay network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the u32 iptables extension provided by the xt_u32 kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nTwo iptables rules serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the INPUT filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container\u00c2\u2019s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\nPatches are available in Moby releases 23.0.3 and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary to prevent all VXLAN packet injection, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.",
        "URL": "https://github.com/moby/moby/pull/45118",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2023-28841",
        "Problem_Type": "CWE-311",
        "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as moby/moby is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of SwarmKit and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of VXLAN, which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with the VXLAN metadata, including a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the IPsec Encapsulating Security Payload protocol in Transport mode. By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three iptables (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn iptables rule designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may use Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability this is no longer guaranteed.\n\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\nSome workarounds are available. Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary in order to prevent unintentionally leaking unencrypted traffic over the Internet, and/or ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.",
        "URL": "https://github.com/moby/moby/pull/45118",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6830",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the alaw2linear_buf function in G711.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6832",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the decodeBlock in MSADPCM.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0, 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6833",
        "Problem_Type": "CWE-369",
        "Description": "The runPull function in libaudiofile/modules/BlockCodec.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (divide-by-zero error and crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6834",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the ulaw2linear_buf function in G711.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0, 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6835",
        "Problem_Type": "CWE-369",
        "Description": "The reset1 function in libaudiofile/modules/BlockCodec.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (divide-by-zero error and crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mpruett/audiofile",
        "CVE_ID": "CVE-2017-6836",
        "Problem_Type": "CWE-119",
        "Description": "Heap-based buffer overflow in the Expand3To4Module::run function in libaudiofile/modules/SimpleModule.h in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "URL": "https://github.com/mpruett/audiofile/pull/42",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "netty/netty",
        "CVE_ID": "CVE-2016-4970",
        "Problem_Type": "CWE-835",
        "Description": "handler/ssl/OpenSslEngine.java in Netty 4.0.x before 4.0.37.Final and 4.1.x before 4.1.1.Final allows remote attackers to cause a denial of service (infinite loop).",
        "URL": "https://github.com/netty/netty/pull/5364",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "neutrinolabs/xrdp",
        "CVE_ID": "CVE-2013-1430",
        "Problem_Type": "CWE-255",
        "Description": "An issue was discovered in xrdp before 0.9.1. When successfully logging in using RDP into an xrdp session, the file ~/.vnc/sesman_${username}_passwd is created. Its content is the equivalent of the user's cleartext password, DES encrypted with a known key.",
        "URL": "https://github.com/neutrinolabs/xrdp/pull/497",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "oauthjs/node-oauth2-server",
        "CVE_ID": "CVE-2017-18924",
        "Problem_Type": "CWE-94",
        "Description": "oauth2-server (aka node-oauth2-server) through 3.1.1 implements OAuth 2.0 without PKCE. It does not prevent authorization code injection. This is similar to CVE-2020-7692. NOTE: the vendor states 'As RFC7636 is an extension, I think the claim in the Readme of \"RFC 6749 compliant\" is valid and not misleading and I also therefore wouldn't describe this as a \"vulnerability\" with the library per se.",
        "URL": "https://github.com/oauthjs/node-oauth2-server/pull/452",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ofirdagan/cross-domain-local-storage",
        "CVE_ID": "CVE-2015-9544",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in xdLocalStorage through 2.0.5. The receiveMessage() function in xdLocalStoragePostMessageApi.js does not implement any validation of the origin of web messages. Remote attackers who can entice a user to load a malicious site can exploit this issue to impact the confidentiality and integrity of data in the local storage of the vulnerable site via malicious web messages.",
        "URL": "https://github.com/ofirdagan/cross-domain-local-storage/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ofirdagan/cross-domain-local-storage",
        "CVE_ID": "CVE-2015-9545",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in xdLocalStorage through 2.0.5. The receiveMessage() function in xdLocalStorage.js does not implement any validation of the origin of web messages. Remote attackers who can entice a user to load a malicious site can exploit this issue to impact the confidentiality and integrity of data in the local storage of the vulnerable site via malicious web messages.",
        "URL": "https://github.com/ofirdagan/cross-domain-local-storage/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OISF/libhtp",
        "CVE_ID": "CVE-2019-17420",
        "Problem_Type": "CWE-459",
        "Description": "In OISF LibHTP before 0.5.31, as used in Suricata 4.1.4 and other products, an HTTP protocol parsing error causes the http_header signature to not alert on a response with a single \\r\\n ending.",
        "URL": "https://github.com/OISF/libhtp/pull/213",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OISF/suricata",
        "CVE_ID": "CVE-2019-10051",
        "Problem_Type": "CWE-754",
        "Description": "An issue was discovered in Suricata 4.1.3. If the function filetracker_newchunk encounters an unsafe \"Some(sfcm) => { ft.new_chunk }\" item, then the program enters an smb/files.rs error condition and crashes.",
        "URL": "https://github.com/OISF/suricata/pull/3734",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openmrs/openmrs-module-htmlformentry",
        "CVE_ID": "CVE-2018-16521",
        "Problem_Type": "CWE-611",
        "Description": "An XML External Entity (XXE) vulnerability exists in HTML Form Entry 3.7.0, as distributed in OpenMRS Reference Application 2.8.0.",
        "URL": "https://github.com/openmrs/openmrs-module-htmlformentry/pull/137",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/cluster-kube-apiserver-operator",
        "CVE_ID": "CVE-2019-10200",
        "Problem_Type": "CWE-284",
        "Description": "A flaw was discovered in OpenShift Container Platform 4 where, by default, users with access to create pods also have the ability to schedule workloads on master nodes. Pods with permission to access the host network, running on master nodes, can retrieve security credentials for the master AWS IAM role, allowing management access to AWS resources. With access to the security credentials, the user then has access to the entire infrastructure. Impact to data and system availability is high.",
        "URL": "https://github.com/openshift/cluster-kube-apiserver-operator/pull/524",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "snowflakedb/snowflake-connector-nodejs",
        "CVE_ID": "CVE-2023-34232",
        "Problem_Type": "CWE-77",
        "Description": "snowflake-connector-nodejs, a NodeJS driver for Snowflake, is vulnerable to command injection via single sign on (SSO) browser URL authentication in versions prior to 1.6.21. In order to exploit the potential for command injection, an attacker would need to be successful in (1) establishing a malicious resource and (2) redirecting users to utilize the resource. The attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the user\u00c2\u2019s local machine would render the malicious payload, leading to a remote code execution. This attack scenario can be mitigated through URL whitelisting as well as common anti-phishing resources. Version 1.6.21 contains a patch for this issue.",
        "URL": "https://github.com/snowflakedb/snowflake-connector-nodejs/pull/465",
        "Tag": "['Patch']",
        "fix_commit_hash": "0c9622ae12cd7d627df404b73a783b4a5f60728a",
        "inducing_commit_hash_pyszz": [
            "8cf1a6616f74e8331e48549c11a5c4bb63941ee4"
        ],
        "inducing_commit_hash_pd": [
            "5500d22cb8513659f1459dc6a562e00cf6ac8a57",
            "8cf1a6616f74e8331e48549c11a5c4bb63941ee4",
            "6b128c7da67c0db38acf90608522e166384dd020"
        ],
        "matched": [
            "8cf1a6616f74e8331e48549c11a5c4bb63941ee4"
        ]
    },
    {
        "repo_name": "snowflakedb/snowflake-connector-python",
        "CVE_ID": "CVE-2023-34233",
        "Problem_Type": "CWE-77",
        "Description": "The Snowflake Connector for Python provides an interface for developing Python applications that can connect to Snowflake and perform all standard operations. Versions prior to 3.0.2 are vulnerable to command injection via single sign-on(SSO) browser URL authentication. In order to exploit the potential for command injection, an attacker would need to be successful in (1) establishing a malicious resource and (2) redirecting users to utilize the resource. The attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the user\u00c2\u2019s local machine would render the malicious payload, leading to a remote code execution. This attack scenario can be mitigated through URL whitelisting as well as common anti-phishing resources. Version 3.0.2 contains a patch for this issue.",
        "URL": "https://github.com/snowflakedb/snowflake-connector-python/pull/1480",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "1cdbd3b1403c5ef520d7f4d9614fe35165e101ac",
        "inducing_commit_hash_pyszz": [
            "54a3004b4382a080cbc27dd08b531351aa8aa37f"
        ],
        "inducing_commit_hash_pd": [
            "83dfe771c5404657f2008fec15bf0386185b6d70",
            "6d7a7eac56a5255aade98a2f6b3573df85a90407",
            "adb34d69a2c2819b6ea31e58558093ccc0450626",
            "15f7b2239f4db5a38662dba18c1ae9321263dc9a"
        ],
        "matched": [
            "54a3004b4382a080cbc27dd08b531351aa8aa37f"
        ]
    },
    {
        "repo_name": "snoyberg/xml",
        "CVE_ID": "CVE-2021-4249",
        "Problem_Type": "CWE-404",
        "Description": "A vulnerability was found in xml-conduit. It has been classified as problematic. Affected is an unknown function of the file xml-conduit/src/Text/XML/Stream/Parse.hs of the component DOCTYPE Entity Expansion Handler. The manipulation leads to infinite loop. It is possible to launch the attack remotely. Upgrading to version 1.9.1.0 is able to address this issue. The name of the patch is 4be1021791dcdee8b164d239433a2043dc0939ea. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216204.",
        "URL": "https://github.com/snoyberg/xml/pull/161",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4be1021791dcdee8b164d239433a2043dc0939ea",
        "inducing_commit_hash_pyszz": [
            "8e7b7b19205cb41fb30996cfa6ed64585800a1d1"
        ],
        "inducing_commit_hash_pd": [
            "fe9c13d68fb4c3bacb79b308733591524d2f6d52",
            "8e7b7b19205cb41fb30996cfa6ed64585800a1d1",
            "4bbc31fef3b03d04bc8fd44823ce0213bce7deb4"
        ],
        "matched": [
            "8e7b7b19205cb41fb30996cfa6ed64585800a1d1"
        ]
    },
    {
        "repo_name": "software-mansion/react-native-reanimated",
        "CVE_ID": "CVE-2022-24373",
        "Problem_Type": "CWE-1333",
        "Description": "The package react-native-reanimated before 3.0.0-rc.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.",
        "URL": "https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6025581335f38e8117d321d6f2e0f73a8e6aa902",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ff1c09035d6124ea736f97e7dce16e42e76a00e9"
        ],
        "matched": [
            "ff1c09035d6124ea736f97e7dce16e42e76a00e9"
        ]
    },
    {
        "repo_name": "software-mansion/react-native-reanimated",
        "CVE_ID": "CVE-2022-24373",
        "Problem_Type": "CWE-1333",
        "Description": "The package react-native-reanimated before 3.0.0-rc.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.",
        "URL": "https://github.com/software-mansion/react-native-reanimated/pull/3382",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6025581335f38e8117d321d6f2e0f73a8e6aa902",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ff1c09035d6124ea736f97e7dce16e42e76a00e9"
        ],
        "matched": [
            "ff1c09035d6124ea736f97e7dce16e42e76a00e9"
        ]
    },
    {
        "repo_name": "solana-labs/rbpf",
        "CVE_ID": "CVE-2021-46102",
        "Problem_Type": "CWE-190",
        "Description": "From version 0.2.14 to 0.2.16 for Solana rBPF, function \"relocate\" in the file src/elf.rs has an integer overflow bug because the sym.st_value is read directly from ELF file without checking. If the sym.st_value is rather large, an integer overflow is triggered while calculating the variable \"addr\" via \"addr = (sym.st_value + refd_pa) as u64\";",
        "URL": "https://github.com/solana-labs/rbpf/pull/236",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "849c7c21d20628d1c76204fe33363bd6ca58c80b",
        "inducing_commit_hash_pyszz": [
            "6a974772f1cbd1220bfc288786fdea51cadd4860"
        ],
        "inducing_commit_hash_pd": [
            "e18d880480ec1772461b8eb4e25a809a4a26dd79",
            "7ceff4581986867e8bb9299bd06c0ab866441980",
            "97e6a556369ebcd8af0f165444de05c816bec77a",
            "472e42dd37e5a77c4fe67b3c5e24cd2e85b72441",
            "72d556655b74851d1a80ad39c38cf62509e74635",
            "3639ab890eb2776e745e70bafa28d823555290a5",
            "11e4a9c7cf9eb405e97dcfa08f1ab446e30ef5d3",
            "a40d74ecee75fead27d6b3652ffc390cd5a5df8c",
            "2e9f65efa462ec761bb7e3c007f83dd8346589db",
            "708393a0ffff586c9b10c0fcb9561ddced80560d",
            "cfd58f89a138bfddeb69fa0c3d8f55665d2598a9",
            "db06a20759ee575681617c6f7ee162803a9f8e37",
            "1e2c8bc853e48704792eb090d7429176bd4e0674",
            "709167719f339cefa01d7b9915128a51a458082d",
            "b755584353c78c961c60d18211303bf204516014"
        ],
        "matched": [
            "6a974772f1cbd1220bfc288786fdea51cadd4860"
        ]
    },
    {
        "repo_name": "solana-labs/rbpf",
        "CVE_ID": "CVE-2021-46102",
        "Problem_Type": "CWE-190",
        "Description": "From version 0.2.14 to 0.2.16 for Solana rBPF, function \"relocate\" in the file src/elf.rs has an integer overflow bug because the sym.st_value is read directly from ELF file without checking. If the sym.st_value is rather large, an integer overflow is triggered while calculating the variable \"addr\" via \"addr = (sym.st_value + refd_pa) as u64\";",
        "URL": "https://github.com/solana-labs/rbpf/pull/200",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2e9f65efa462ec761bb7e3c007f83dd8346589db",
        "inducing_commit_hash_pyszz": [
            "a278fbb9533c5ed34965bc9cb502a244a9b95b3c"
        ],
        "inducing_commit_hash_pd": [
            "3639ab890eb2776e745e70bafa28d823555290a5",
            "a40d74ecee75fead27d6b3652ffc390cd5a5df8c",
            "a278fbb9533c5ed34965bc9cb502a244a9b95b3c",
            "3cda9b5ee9c5d0f5f053490111ea187ce99810b0",
            "4432dcff7ecd74946273983f9d1016dbbec60124"
        ],
        "matched": [
            "a278fbb9533c5ed34965bc9cb502a244a9b95b3c"
        ]
    },
    {
        "repo_name": "Sorcery/sorcery",
        "CVE_ID": "CVE-2020-11052",
        "Problem_Type": "CWE-307",
        "Description": "In Sorcery before 0.15.0, there is a brute force vulnerability when using password authentication via Sorcery. The brute force protection submodule will prevent a brute force attack for the defined lockout period, but once expired, protection will not be re-enabled until a user or malicious actor logs in successfully. This does not affect users that do not use the built-in brute force protection submodule, nor users that use permanent account lockout. This has been patched in 0.15.0.",
        "URL": "https://github.com/Sorcery/sorcery/pull/235",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0f116d223826895a73b12492f17486e5d54ab7a7",
        "inducing_commit_hash_pyszz": [
            "7c5fee441e03779ee2888ecef317440cd10a17e7"
        ],
        "inducing_commit_hash_pd": [
            "7c5fee441e03779ee2888ecef317440cd10a17e7"
        ],
        "matched": [
            "7c5fee441e03779ee2888ecef317440cd10a17e7"
        ]
    },
    {
        "repo_name": "sosreport/sos",
        "CVE_ID": "CVE-2022-2806",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "It was found that the ovirt-log-collector/sosreport collects the RHV admin password unfiltered. Fixed in: sos-4.2-20.el8_6, ovirt-log-collector-4.4.7-2.el8ev",
        "URL": "https://github.com/sosreport/sos/pull/2947",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5fd872c64c53af37015f366295e0c2418c969757",
        "inducing_commit_hash_pyszz": [
            "0aec209ec6870c6ec3cbb6e2209d35adb2b62009"
        ],
        "inducing_commit_hash_pd": [
            "0aec209ec6870c6ec3cbb6e2209d35adb2b62009"
        ],
        "matched": [
            "0aec209ec6870c6ec3cbb6e2209d35adb2b62009"
        ]
    },
    {
        "repo_name": "SpiderLabs/ModSecurity",
        "CVE_ID": "CVE-2023-24021",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Incorrect handling of '\\0' bytes in file uploads in ModSecurity before 2.9.7 may allow for Web Application Firewall bypasses and buffer over-reads on the Web Application Firewall when executing rules that read the FILES_TMP_CONTENT collection.",
        "URL": "https://github.com/SpiderLabs/ModSecurity/pull/2857/commits/4324f0ac59f8225aa44bc5034df60dbeccd1d334",
        "Tag": "['Patch']",
        "fix_commit_hash": "4324f0ac59f8225aa44bc5034df60dbeccd1d334",
        "inducing_commit_hash_pyszz": [
            "accb1820e058dc97c666c384afa697a906d372ec"
        ],
        "inducing_commit_hash_pd": [
            "accb1820e058dc97c666c384afa697a906d372ec"
        ],
        "matched": [
            "accb1820e058dc97c666c384afa697a906d372ec"
        ]
    },
    {
        "repo_name": "spinnaker/echo",
        "CVE_ID": "CVE-2023-39348",
        "Problem_Type": "CWE-532",
        "Description": "Spinnaker is an open source, multi-cloud continuous delivery platform. Log output when updating GitHub status is improperly set to FULL always.  It's recommended to apply the patch and rotate the GitHub token used for github status notifications.  Given that this would output github tokens to a log system, the risk is slightly higher than a \"low\" since token exposure could grant elevated access to repositories outside of control.  If using READ restricted tokens, the exposure is such that the token itself could be used to access resources otherwise restricted from reads. This only affects users of GitHub Status Notifications. This issue has been addressed in pull request 1316. Users are advised to upgrade. Users unable to upgrade should disable GH Status Notifications, Filter their logs for Echo log data and use read-only tokens that are limited in scope.",
        "URL": "https://github.com/spinnaker/echo/pull/1316",
        "Tag": "['Patch']",
        "fix_commit_hash": "7d8130d37d4c63106fd1eee207634be4893faafa",
        "inducing_commit_hash_pyszz": [
            "05ba834e2a4fbce256e355d7234e815ae1706722"
        ],
        "inducing_commit_hash_pd": [
            "05ba834e2a4fbce256e355d7234e815ae1706722"
        ],
        "matched": [
            "05ba834e2a4fbce256e355d7234e815ae1706722"
        ]
    },
    {
        "repo_name": "spring-projects/spring-framework",
        "CVE_ID": "CVE-2013-4152",
        "Problem_Type": "CWE-264",
        "Description": "The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.",
        "URL": "https://github.com/spring-projects/spring-framework/pull/317/files",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-13345",
        "Problem_Type": "CWE-79",
        "Description": "The cachemgr.cgi web module of Squid through 4.7 has XSS via the user_name or auth parameter.",
        "URL": "https://github.com/squid-cache/squid/pull/429",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5730c2b5cb56e7639dc423dd62651c8736a54e35",
        "inducing_commit_hash_pyszz": [
            "7395afb806a3a4c008b8464637ac03974a994359"
        ],
        "inducing_commit_hash_pd": [
            "7395afb806a3a4c008b8464637ac03974a994359",
            "df339671ac052db36e99540c63c7e042929d1005"
        ],
        "matched": [
            "7395afb806a3a4c008b8464637ac03974a994359"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-18676",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in Squid 3.x and 4.x through 4.8. Due to incorrect input validation, there is a heap-based buffer overflow that can result in Denial of Service to all clients using the proxy. Severity is high due to this vulnerability occurring before normal security checks; any remote client that can reach the proxy port can trivially perform the attack via a crafted URI scheme.",
        "URL": "https://github.com/squid-cache/squid/pull/275",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fbbdf75efd7a5cc244b4886a9d42ea458c5a3a73",
        "inducing_commit_hash_pyszz": [
            "e10887e67fe84f52fa28d8c9b9e3d91e118fee3c"
        ],
        "inducing_commit_hash_pd": [
            "def915dbcf75f90b75b674e6bd6be8c0089f4214",
            "9ce5e3e62a4c519fbc1d524ceaa170fa3bf7a634",
            "add2192dfeb5b40768d31ba3b9b05151263af5b5",
            "cc192b5087ebbd5c214fcacdf26f117e4f15241b",
            "3d0ac046413f0737ff32e00fb591b67af4faaee5",
            "887c98ac5d2ea0a3e885a0be1b436ac362b7827f",
            "3dc8ff10a2020c8dd7de9d3e0f724812a070023c",
            "ba0fd1b602f60459d0ca0311e553ee3395a5f33a",
            "30abd2216c340de83251e6e42e6566de0fd23766",
            "51b5dcf59c93ef76fefacfeae837b076a624596e",
            "c6528ea4851596f4255cd6550bbd02c383a50ac5",
            "5db6bf73931d8c426d81085d757c8b1206b02c9b",
            "8803e22fa27297583b8440ca773e516291934f6d",
            "a0b3b22c8938bbd358f6e3c47b8c69d4a21fba37",
            "47d5b9d8da24d997c99be7edf63d62c83a88f807",
            "190154cf6d4d0cd99d468756980c8c6e325718a1",
            "d6067ac1ee0abb9d8a70fbdc56e31c47cad59c5a",
            "39a19cb77dd290852f7ebeef8ce8e2143101a3e8",
            "26ac04309f51d4be5c9fa41ea3da88688024d9db",
            "863d85ee0444590909c991dc54da448c61f67365",
            "b515fc11e59277b439702078d9304579d85809aa",
            "3f0e38d60af2b79103a5d7ff8f93943f4ee2f7e0",
            "c21ad0f5b4216a1840a69fc8d59b7f4753b1bbb3",
            "bf8fe701ad4d77da617b6847fdd42ed1eae940da",
            "5a7fb80ae92b27a09f0b74fa9ba414589934d31d",
            "e10887e67fe84f52fa28d8c9b9e3d91e118fee3c",
            "d31d59d80a8ef8a2b85058fe6504188e43cee5ce",
            "0c3d3f65531d4c9f8267118441fbd2bad9c85147",
            "d4a04ed5cd6b82e20582caf649bc7d59b6e07efc",
            "f205251390db049376f82ba0e0291d61773bd703",
            "5e245980a191eec39d0ad5cb2c5102689df23e03",
            "de28f103e78d44a4f4f5221fb20dad8cf063540b",
            "e6ccf245f6ed6b3a56569453cfdceacae14d524d",
            "3dd52a0bce52e3f4654e38cd13891b74d5aa6309",
            "c2a7cefd2e76ef704cd3cd7cec6577f220d01bf6",
            "573b129854eab41f2ac2054c9966c863b9ee2353",
            "330f829eab2600b30e2527a08d4c1a87e0b7b6ca"
        ],
        "matched": [
            "e10887e67fe84f52fa28d8c9b9e3d91e118fee3c"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-18677",
        "Problem_Type": "CWE-352",
        "Description": "An issue was discovered in Squid 3.x and 4.x through 4.8 when the append_domain setting is used (because the appended characters do not properly interact with hostname length restrictions). Due to incorrect message processing, it can inappropriately redirect traffic to origins it should not be delivered to.",
        "URL": "https://github.com/squid-cache/squid/pull/427",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5f1813a674848dde570f7920873e1071f96e0b4",
        "inducing_commit_hash_pyszz": [
            "532e5dd46a2b8091fd93ddd7edcb240474faccc3"
        ],
        "inducing_commit_hash_pd": [
            "532e5dd46a2b8091fd93ddd7edcb240474faccc3",
            "cc192b5087ebbd5c214fcacdf26f117e4f15241b",
            "1224d7408e1b4fc6715cc1cb577cb5e5bb8239e2"
        ],
        "matched": [
            "532e5dd46a2b8091fd93ddd7edcb240474faccc3"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-18678",
        "Problem_Type": "CWE-444",
        "Description": "An issue was discovered in Squid 3.x and 4.x through 4.8. It allows attackers to smuggle HTTP requests through frontend software to a Squid instance that splits the HTTP Request pipeline differently. The resulting Response messages corrupt caches (between a client and Squid) with attacker-controlled content at arbitrary URLs. Effects are isolated to software between the attacker client and Squid. There are no effects on Squid itself, nor on any upstream servers. The issue is related to a request header containing whitespace between a header name and a colon.",
        "URL": "https://github.com/squid-cache/squid/pull/445",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "671ba97abe929156dc4c717ee52ad22fba0f7443",
        "inducing_commit_hash_pyszz": [
            "a1b9ec20f3249d0478b2357edad095c1cc3fbcf4"
        ],
        "inducing_commit_hash_pd": [
            "e02369182f073da2147fc3ff090249929492ba87",
            "789217a2d102b1c99734afd7d48e4d4210ec009d",
            "a1b9ec20f3249d0478b2357edad095c1cc3fbcf4",
            "cdce6c61485ea0b64866c15562df73f98f222e55",
            "eede25e76011c7d3b822c27aaeb33fa4381008e7",
            "52d3f1986d5dd7a7a89d039f20c359f593d24658",
            "30abd2216c340de83251e6e42e6566de0fd23766"
        ],
        "matched": [
            "a1b9ec20f3249d0478b2357edad095c1cc3fbcf4"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-18679",
        "Problem_Type": "CWE-200",
        "Description": "An issue was discovered in Squid 2.x, 3.x, and 4.x through 4.8. Due to incorrect data management, it is vulnerable to information disclosure when processing HTTP Digest Authentication. Nonce tokens contain the raw byte value of a pointer that sits within heap memory allocation. This information reduces ASLR protections and may aid attackers isolating memory areas to target for remote code execution attacks.",
        "URL": "https://github.com/squid-cache/squid/pull/491",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c1b0acc83b38fef177363e6b1acbbc3cb7db21a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2d70df7262cac3e29d34bed03b758695f5961b74"
        ],
        "matched": [
            "2d70df7262cac3e29d34bed03b758695f5961b74"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-18860",
        "Problem_Type": "CWE-74",
        "Description": "Squid before 4.9, when certain web browsers are used, mishandles HTML in the host (aka hostname) parameter to cachemgr.cgi.",
        "URL": "https://github.com/squid-cache/squid/pull/505",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "47f1e147afb24c3e69b2a9de3fb60df043229b5d",
        "inducing_commit_hash_pyszz": [
            "b339d00cb4db358576f145aa5ab35afd5073af69"
        ],
        "inducing_commit_hash_pd": [
            "b339d00cb4db358576f145aa5ab35afd5073af69"
        ],
        "matched": [
            "b339d00cb4db358576f145aa5ab35afd5073af69"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2019-18860",
        "Problem_Type": "CWE-74",
        "Description": "Squid before 4.9, when certain web browsers are used, mishandles HTML in the host (aka hostname) parameter to cachemgr.cgi.",
        "URL": "https://github.com/squid-cache/squid/pull/504",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5a90b4ce64c346ba7f317a278ba601091d9de076",
        "inducing_commit_hash_pyszz": [
            "1f1eee3f84f3874ea982b10c6186c20d373ac6fc"
        ],
        "inducing_commit_hash_pd": [
            "d23f4e1b36396b975b3de1a630942be944069f3b",
            "fe35e35d1d85b1821c63c179af352dd77ec5cf02",
            "958caaf8802a24a136d116de3a3e75b5a1de630c"
        ],
        "matched": [
            "1f1eee3f84f3874ea982b10c6186c20d373ac6fc"
        ]
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2020-11945",
        "Problem_Type": "CWE-190",
        "Description": "An issue was discovered in Squid before 5.0.2. A remote attacker can replay a sniffed Digest Authentication nonce to gain access to resources that are otherwise forbidden. This occurs because the attacker can overflow the nonce reference counter (a short integer). Remote code execution may occur if the pooled token credentials are freed (instead of replayed as valid credentials).",
        "URL": "https://github.com/squid-cache/squid/pull/585",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eeebf0f37a72a2de08348e85ae34b02c34e9a811",
        "inducing_commit_hash_pyszz": [
            "c78aa6676200e65af26fbb832b15baf51fe22551"
        ],
        "inducing_commit_hash_pd": [
            "c78aa6676200e65af26fbb832b15baf51fe22551",
            "2d70df7262cac3e29d34bed03b758695f5961b74"
        ],
        "matched": [
            "c78aa6676200e65af26fbb832b15baf51fe22551"
        ]
    },
    {
        "repo_name": "stackrox/stackrox",
        "CVE_ID": "CVE-2022-1902",
        "Problem_Type": "CWE-497",
        "Description": "A flaw was found in the Red Hat Advanced Cluster Security for Kubernetes. Notifier secrets were not properly sanitized in the GraphQL API. This flaw allows authenticated ACS users to retrieve Notifiers from the GraphQL API, revealing secrets that can escalate their privileges.",
        "URL": "https://github.com/stackrox/stackrox/pull/1803",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c08f23ffb4c8db10cc962597c98cc7599950715b",
        "inducing_commit_hash_pyszz": [
            "11e7f6d262b3459fffda6997c83000b9381015ce"
        ],
        "inducing_commit_hash_pd": [
            "2dff0ec48fcf82d75c6b817100f68922f80798a6",
            "11e7f6d262b3459fffda6997c83000b9381015ce",
            "8104a5aabf155bceefffc960640e90daa202c6d4",
            "3df8526a92b1d495c09dcfec76fbe77b27fc343b",
            "0a18316b38a41846f338b0dce510b5bed1254286",
            "12d9644dfb7e58a943d8c438030aed2b50d488b1"
        ],
        "matched": [
            "11e7f6d262b3459fffda6997c83000b9381015ce"
        ]
    },
    {
        "repo_name": "statamic/cms",
        "CVE_ID": "CVE-2023-36828",
        "Problem_Type": "CWE-79",
        "Description": "Statamic is a flat-first, Laravel and Git powered content management system. Prior to version 4.10.0, the SVG tag does not sanitize malicious SVG. Therefore, an attacker can exploit this vulnerability to perform cross-site scripting attacks using SVG, even when using the `sanitize` function. Version 4.10.0 contains a patch for this issue.",
        "URL": "https://github.com/statamic/cms/pull/8408",
        "Tag": "['Patch']",
        "fix_commit_hash": "c714893ad92de6e5ede17b501003441af505b30d",
        "inducing_commit_hash_pyszz": [
            "db917df87e8ee12a9ee855427a3202fa07498e20"
        ],
        "inducing_commit_hash_pd": [
            "db917df87e8ee12a9ee855427a3202fa07498e20",
            "518c9c7ac3ea3dfb9c0ebe348374e5c5a2632d30"
        ],
        "matched": [
            "db917df87e8ee12a9ee855427a3202fa07498e20"
        ]
    },
    {
        "repo_name": "status-im/react-native-desktop",
        "CVE_ID": "CVE-2019-12164",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "ubuntu-server.js in Status React Native Desktop before v0.57.8_mobile_ui allows Remote Code Execution.",
        "URL": "https://github.com/status-im/react-native-desktop/pull/475/commits/f6945f1e4b157c69e414cd94fe5cde1876aabcc1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0d3a6e755a768c6589b005c2f7ab56679629f96c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2dc4396918ff615e22576bc75342f9ff038b9fde"
        ],
        "matched": [
            "2dc4396918ff615e22576bc75342f9ff038b9fde"
        ]
    },
    {
        "repo_name": "stellar/freighter",
        "CVE_ID": "CVE-2023-40580",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Freighter is a Stellar chrome extension. It may be possible for a malicious website to access the recovery mnemonic phrase when the Freighter wallet is unlocked. This vulnerability impacts access control to the mnemonic recovery phrase. This issue was patched in version 5.3.1.",
        "URL": "https://github.com/stellar/freighter/pull/948",
        "Tag": "['Patch']",
        "fix_commit_hash": "81f78ba008c41ce631a3d0f9e4449f4bbd90baee",
        "inducing_commit_hash_pyszz": [
            "3b4573b4970c61db911d0b13437d7a82c73e5674"
        ],
        "inducing_commit_hash_pd": [
            "ee2a3219ce16a821a22b6c0f3e6a1baa35729e36",
            "3fb1cefa1b87b8f2735ce28b43ee7e3bfd42fd9d",
            "1a8c054105db01986a9519721e864483a7a522c2",
            "b23faa7b5c376bc75050c2eb2a61f69b227bb472",
            "17952d9d3cacea8117d49367f3abf9c1d168db35",
            "28afbfcfa1111f30d5a93e9bd8219e166329ae2a",
            "3b4573b4970c61db911d0b13437d7a82c73e5674",
            "b643b182edcbd82369639bee08631782082202e2",
            "e9bd5c11dc1e8299ec715d2ac34313e83665954e",
            "920ebb2f03739113d2b43628fe8e5fe673f1ebf4",
            "0b206a224c223dabe49269ead17384c2eaebc787",
            "a46a8b8fe92eab5a8f78caecc234eb5075c0293c",
            "4a4b639618f7a681ec3902f5d099b95db6a5a247",
            "d56f72a5a9a6a7fcd04c91b55dd9e3261a3be2b3",
            "f2e89931f21bdea8eb73a8136c5afe3a15c64166",
            "e674997ab745672ef82f39c102efa3ff5a8fc3a0",
            "cfa00883193a460c9358e8423c44337705ebc500"
        ],
        "matched": [
            "3b4573b4970c61db911d0b13437d7a82c73e5674"
        ]
    },
    {
        "repo_name": "stevegraham/slanger",
        "CVE_ID": "CVE-2019-1010306",
        "Problem_Type": "CWE-502",
        "Description": "Slanger 0.6.0 is affected by: Remote Code Execution (RCE). The impact is: A remote attacker can execute arbitrary commands by sending a crafted request to the server. The component is: Message handler & request validator. The attack vector is: Remote unauthenticated. The fixed version is: after commit 5267b455caeb2e055cccf0d2b6a22727c111f5c3.",
        "URL": "https://github.com/stevegraham/slanger/pull/238/commits/5267b455caeb2e055cccf0d2b6a22727c111f5c3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5267b455caeb2e055cccf0d2b6a22727c111f5c3",
        "inducing_commit_hash_pyszz": [
            "58cced418277490c8ef25a8de67a28342ab38493"
        ],
        "inducing_commit_hash_pd": [
            "58cced418277490c8ef25a8de67a28342ab38493"
        ],
        "matched": [
            "58cced418277490c8ef25a8de67a28342ab38493"
        ]
    },
    {
        "repo_name": "steveukx/git-js",
        "CVE_ID": "CVE-2022-25860",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Versions of the package simple-git before 3.16.0 are vulnerable to Remote Code Execution (RCE) via the clone(), pull(), push() and listRemote() methods, due to improper input sanitization.\nThis vulnerability exists due to an incomplete fix of [CVE-2022-25912](https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3112221).\n\n",
        "URL": "https://github.com/steveukx/git-js/pull/881/commits/95459310e5b8f96e20bb77ef1a6559036b779e13",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0a623e53fd4b7617ca9c4d1d51bc53d105f52b2b",
        "inducing_commit_hash_pyszz": [
            "6b3c631eadea81f80ed10f6dec7d19a9db4d7084"
        ],
        "inducing_commit_hash_pd": [
            "f4a01a813a7e1a932649674dc1f9bb75be48adb7",
            "aa6b78ec22f2675f24d011444865ae87fac815e7",
            "6b3c631eadea81f80ed10f6dec7d19a9db4d7084",
            "5b591bf48a1739fcae856f6ecdb82710814e94f6",
            "42aea16e914f0bc7811a72770673e82164816cd3"
        ],
        "matched": [
            "6b3c631eadea81f80ed10f6dec7d19a9db4d7084"
        ]
    },
    {
        "repo_name": "strukturag/libheif",
        "CVE_ID": "CVE-2023-0996",
        "Problem_Type": "CWE-120",
        "Description": "\nThere is a vulnerability in the strided image data parsing code in the emscripten wrapper for libheif. An attacker could exploit this through a crafted image file to cause a buffer overflow in linear memory during a memcpy call.\n\n\n\n\n",
        "URL": "https://github.com/strukturag/libheif/pull/759",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3c8e92448c10a57a7f1ec8536c6e5427fb2c7c62",
        "inducing_commit_hash_pyszz": [
            "c088c78ef60b41dfa109316b9e164a1b8199dee2"
        ],
        "inducing_commit_hash_pd": [
            "c088c78ef60b41dfa109316b9e164a1b8199dee2"
        ],
        "matched": [
            "c088c78ef60b41dfa109316b9e164a1b8199dee2"
        ]
    },
    {
        "repo_name": "Submitty/Submitty",
        "CVE_ID": "CVE-2023-43193",
        "Problem_Type": "CWE-79",
        "Description": "Submitty before v22.06.00 is vulnerable to Cross Site Scripting (XSS). An attacker can create a malicious link in the forum that leads to XSS.",
        "URL": "https://github.com/Submitty/Submitty/pull/8032",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "9c8199ca9cc8c651343061b8bbbe00c18082bdd3",
        "inducing_commit_hash_pyszz": [
            "94a26d99941ab4ccb5aa4edbe21c6ab12fccbc9c"
        ],
        "inducing_commit_hash_pd": [
            "94a26d99941ab4ccb5aa4edbe21c6ab12fccbc9c"
        ],
        "matched": [
            "94a26d99941ab4ccb5aa4edbe21c6ab12fccbc9c"
        ]
    },
    {
        "repo_name": "Submitty/Submitty",
        "CVE_ID": "CVE-2023-43194",
        "Problem_Type": "CWE-862",
        "Description": "Submitty before v22.06.00 is vulnerable to Incorrect Access Control. An attacker can delete any post in the forum by modifying request parameter.",
        "URL": "https://github.com/Submitty/Submitty/pull/8032",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "9c8199ca9cc8c651343061b8bbbe00c18082bdd3",
        "inducing_commit_hash_pyszz": [
            "94a26d99941ab4ccb5aa4edbe21c6ab12fccbc9c"
        ],
        "inducing_commit_hash_pd": [
            "94a26d99941ab4ccb5aa4edbe21c6ab12fccbc9c"
        ],
        "matched": [
            "94a26d99941ab4ccb5aa4edbe21c6ab12fccbc9c"
        ]
    },
    {
        "repo_name": "sviehb/jefferson",
        "CVE_ID": "CVE-2022-4885",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability has been found in sviehb jefferson up to 0.3 and classified as critical. This vulnerability affects unknown code of the file src/scripts/jefferson. The manipulation leads to path traversal. The attack can be initiated remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. Upgrading to version 0.4 is able to address this issue. The name of the patch is 53b3f2fc34af0bb32afbcee29d18213e61471d87. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218020.",
        "URL": "https://github.com/sviehb/jefferson/pull/36",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "swaywm/swaylock",
        "CVE_ID": "CVE-2022-26530",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "swaylock before 1.6 allows attackers to trigger a crash and achieve unlocked access to a Wayland compositor.",
        "URL": "https://github.com/swaywm/swaylock/pull/219",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d1c75b6316d21933069a9d201f966d84099f6ca",
        "inducing_commit_hash_pyszz": [
            "978ce498940ad6739b30c12c8a24ade11a423b5f"
        ],
        "inducing_commit_hash_pd": [
            "2d1a44703ba207bafbf0db85b38f0ac6943f525c",
            "e3935ad1431623b5e3966e95cd75b45e7e00e278",
            "f3f3e642bdd1cf608c0f8bc2607c492a433a693b",
            "788b771632039853dcf301a93d7ef3807270636d",
            "4b312c1389ebc2ec73612bb4b9b4e7ea5f844f50",
            "ab7d22052a18f7124ef0840ff048d5f3ea20a411",
            "978ce498940ad6739b30c12c8a24ade11a423b5f",
            "b0c5fa2bdfebfc2500a395dadba0ed5522f13d37"
        ],
        "matched": [
            "978ce498940ad6739b30c12c8a24ade11a423b5f"
        ]
    },
    {
        "repo_name": "swoole/swoole-src",
        "CVE_ID": "CVE-2020-24275",
        "Problem_Type": "CWE-74",
        "Description": "A HTTP response header injection vulnerability in Swoole v4.5.2 allows attackers to execute arbitrary code via supplying a crafted URL.",
        "URL": "https://github.com/swoole/swoole-src/pull/3539",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "19ae389d3c2093d37cbc03163a3dbb91f01f1876",
        "inducing_commit_hash_pyszz": [
            "9eb89bd20c84a1532560034c4554d861a80a628b"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "9eb89bd20c84a1532560034c4554d861a80a628b"
        ]
    },
    {
        "repo_name": "swoole/swoole-src",
        "CVE_ID": "CVE-2020-24275",
        "Problem_Type": "CWE-74",
        "Description": "A HTTP response header injection vulnerability in Swoole v4.5.2 allows attackers to execute arbitrary code via supplying a crafted URL.",
        "URL": "https://github.com/swoole/swoole-src/pull/3545",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "4bab1a2403adcbf97104ea81a521987f77d32790",
        "inducing_commit_hash_pyszz": [
            "20f556249da2296c3259047a7c53cdd07d4e75f0"
        ],
        "inducing_commit_hash_pd": [
            "52d6b10b2a1476acf7e94a750da409a2c813e1fa",
            "20f556249da2296c3259047a7c53cdd07d4e75f0"
        ],
        "matched": [
            "20f556249da2296c3259047a7c53cdd07d4e75f0"
        ]
    },
    {
        "repo_name": "symfony/debug",
        "CVE_ID": "CVE-2017-18343",
        "Problem_Type": "CWE-79",
        "Description": "The debug handler in Symfony before v2.7.33, 2.8.x before v2.8.26, 3.x before v3.2.13, and 3.3.x before v3.3.6 has XSS via an array key during exception pretty printing in ExceptionHandler.php, as demonstrated by a /_debugbar/open?op=get URI. NOTE: the vendor's position is that this is not a vulnerability because the debug tools are not intended for production use. NOTE: the Symfony Debug component is used by Laravel Debugbar",
        "URL": "https://github.com/symfony/debug/pull/7/commits/e48bda29143bd1a83001780b4a78e483822d985c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2017-9217",
        "Problem_Type": "CWE-476",
        "Description": "systemd-resolved through 233 allows remote attackers to cause a denial of service (daemon crash) via a crafted DNS response with an empty question section.",
        "URL": "https://github.com/systemd/systemd/pull/5998",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2021-33910",
        "Problem_Type": "CWE-770",
        "Description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
        "URL": "https://github.com/systemd/systemd/pull/20256/commits/441e0115646d54f080e5c3bb0ba477c892861ab9",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "441e0115646d54f080e5c3bb0ba477c892861ab9",
        "inducing_commit_hash_pyszz": [
            "7546145e26e4feecf0994d84e888d7da9c47424b"
        ],
        "inducing_commit_hash_pd": [
            "7546145e26e4feecf0994d84e888d7da9c47424b",
            "7410616cd9dbbec97cf98d75324da5cda2b2f7a2"
        ],
        "matched": [
            "7546145e26e4feecf0994d84e888d7da9c47424b"
        ]
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2022-3821",
        "Problem_Type": "CWE-193",
        "Description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
        "URL": "https://github.com/systemd/systemd/pull/23933",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9102c625a673a3246d7e73d8737f3494446bad4e",
        "inducing_commit_hash_pyszz": [
            "9a98c7a156709ae16f7e043f866ecb452ce906f8"
        ],
        "inducing_commit_hash_pd": [
            "9a98c7a156709ae16f7e043f866ecb452ce906f8"
        ],
        "matched": [
            "9a98c7a156709ae16f7e043f866ecb452ce906f8"
        ]
    },
    {
        "repo_name": "taglib/taglib",
        "CVE_ID": "CVE-2017-12678",
        "Problem_Type": "CWE-434",
        "Description": "In TagLib 1.11.1, the rebuildAggregateFrames function in id3v2framefactory.cpp has a pointer to cast vulnerability, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted audio file.",
        "URL": "https://github.com/taglib/taglib/pull/831",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "cb9f07d9dcd791b63e622da43f7b232adaec0a9a",
        "inducing_commit_hash_pyszz": [
            "463e8f313a030056dad0cc6705579690f1239977"
        ],
        "inducing_commit_hash_pd": [
            "bd7419f0bdc9eb818776b6e42e8dad9784dc261f",
            "463e8f313a030056dad0cc6705579690f1239977"
        ],
        "matched": [
            "463e8f313a030056dad0cc6705579690f1239977"
        ]
    },
    {
        "repo_name": "TasmoAdmin/TasmoAdmin",
        "CVE_ID": "CVE-2023-6552",
        "Problem_Type": "CWE-601",
        "Description": "Lack of \"current\" GET parameter validation during the action of changing a language leads to an open redirect vulnerability.\n",
        "URL": "https://github.com/TasmoAdmin/TasmoAdmin/pull/1039",
        "Tag": "['Patch']",
        "fix_commit_hash": "e49453f199cd8b0d3f22ca79ff05d34619458f37",
        "inducing_commit_hash_pyszz": [
            "603bd84a6700ec6baa73eb2bf0945c3f6e88b2ad"
        ],
        "inducing_commit_hash_pd": [
            "603bd84a6700ec6baa73eb2bf0945c3f6e88b2ad",
            "ee305e5dae409cd8744c29e9bee8cb344790962b"
        ],
        "matched": [
            "603bd84a6700ec6baa73eb2bf0945c3f6e88b2ad"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2022-39215",
        "Problem_Type": "CWE-59",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. Due to missing canonicalization when `readDir` is called recursively, it was possible to display directory listings outside of the defined `fs` scope. This required a crafted symbolic link or junction folder inside an allowed path of the `fs` scope. No arbitrary file content could be leaked. The issue has been resolved in version 1.0.6 and the implementation now properly checks if the requested (sub) directory is a symbolic link outside of the defined `scope`. Users are advised to upgrade. Users unable to upgrade should disable the `readDir` endpoint in the `allowlist` inside the `tauri.conf.json`.",
        "URL": "https://github.com/tauri-apps/tauri/pull/5123",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4121c128e69b06c3eb5eea14dd2af4720afed49",
        "inducing_commit_hash_pyszz": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ],
        "inducing_commit_hash_pd": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1",
            "d6918efdaf386e0b1075d80430da8e807b10541f",
            "35468f68e58cfc54dbf9cdb908517fd36d7eec14",
            "dd1bffe91eec992c95616aa0321822c7c805128b",
            "060538331c138473159cf8fee0fcb7904ca33d3b"
        ],
        "matched": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2022-39215",
        "Problem_Type": "CWE-59",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. Due to missing canonicalization when `readDir` is called recursively, it was possible to display directory listings outside of the defined `fs` scope. This required a crafted symbolic link or junction folder inside an allowed path of the `fs` scope. No arbitrary file content could be leaked. The issue has been resolved in version 1.0.6 and the implementation now properly checks if the requested (sub) directory is a symbolic link outside of the defined `scope`. Users are advised to upgrade. Users unable to upgrade should disable the `readDir` endpoint in the `allowlist` inside the `tauri.conf.json`.",
        "URL": "https://github.com/tauri-apps/tauri/pull/5123/commits/1f9b9e8d26a2c915390323e161020bcb36d44678",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4121c128e69b06c3eb5eea14dd2af4720afed49",
        "inducing_commit_hash_pyszz": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ],
        "inducing_commit_hash_pd": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1",
            "d6918efdaf386e0b1075d80430da8e807b10541f",
            "35468f68e58cfc54dbf9cdb908517fd36d7eec14",
            "dd1bffe91eec992c95616aa0321822c7c805128b",
            "060538331c138473159cf8fee0fcb7904ca33d3b"
        ],
        "matched": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2023-34460",
        "Problem_Type": "CWE-285",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. The 1.4.0 release includes a regression on the Filesystem scope check for dotfiles on Unix. Previously dotfiles were not implicitly allowed by the glob wildcard scopes (eg. `$HOME/*`), but a regression was introduced when a configuration option for this behavior was implemented. Only Tauri applications using wildcard scopes in the `fs` endpoint are affected. The regression has been patched on version 1.4.1.\n\n",
        "URL": "https://github.com/tauri-apps/tauri/pull/6969#discussion_r1232018347",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "acc36fe1176cc8aa9063bde932abeb94796c5c72",
        "inducing_commit_hash_pyszz": [
            "72389b00d7b495ffd7750eb1e75a3b8537d07cf3"
        ],
        "inducing_commit_hash_pd": [
            "4de285c3967d32250d73acdd5d171a6fd332d2b3",
            "ae83d008f9e1b89bfc8dddaca42aa5c1fbc36f6d",
            "72389b00d7b495ffd7750eb1e75a3b8537d07cf3",
            "983ccb815b1cb094ac681c2b36c69ec16f123b4e",
            "f8a3becb287942db7f7b551b5db6aeb5a2e939ee",
            "2ca762d207030a892a6d128b519e150e2d733468",
            "8b807e09d6868f6bff8357f16d27b15bd1fccadd"
        ],
        "matched": [
            "72389b00d7b495ffd7750eb1e75a3b8537d07cf3"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2023-34460",
        "Problem_Type": "CWE-285",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. The 1.4.0 release includes a regression on the Filesystem scope check for dotfiles on Unix. Previously dotfiles were not implicitly allowed by the glob wildcard scopes (eg. `$HOME/*`), but a regression was introduced when a configuration option for this behavior was implemented. Only Tauri applications using wildcard scopes in the `fs` endpoint are affected. The regression has been patched on version 1.4.1.\n\n",
        "URL": "https://github.com/tauri-apps/tauri/pull/7227",
        "Tag": "['Patch']",
        "fix_commit_hash": "066c09a6ea06f42f550d090715e06beb65cd5564",
        "inducing_commit_hash_pyszz": [
            "acc36fe1176cc8aa9063bde932abeb94796c5c72"
        ],
        "inducing_commit_hash_pd": [
            "acc36fe1176cc8aa9063bde932abeb94796c5c72"
        ],
        "matched": [
            "acc36fe1176cc8aa9063bde932abeb94796c5c72"
        ]
    },
    {
        "repo_name": "tdunning/pig-vector",
        "CVE_ID": "CVE-2022-4641",
        "Problem_Type": "CWE-377",
        "Description": "A vulnerability was found in pig-vector and classified as problematic. Affected by this issue is the function LogisticRegression of the file src/main/java/org/apache/mahout/pig/LogisticRegression.java. The manipulation leads to insecure temporary file. The attack needs to be approached locally. The name of the patch is 1e7bd9fab5401a2df18d2eabd802adcf0dcf1f15. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216500.",
        "URL": "https://github.com/tdunning/pig-vector/pull/2",
        "Tag": "['Mitigation', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1e7bd9fab5401a2df18d2eabd802adcf0dcf1f15",
        "inducing_commit_hash_pyszz": [
            "eda51674022bbcc1dd9a139b4620a4b6934896d9"
        ],
        "inducing_commit_hash_pd": [
            "eda51674022bbcc1dd9a139b4620a4b6934896d9"
        ],
        "matched": [
            "eda51674022bbcc1dd9a139b4620a4b6934896d9"
        ]
    },
    {
        "repo_name": "tendermint/tendermint",
        "CVE_ID": "CVE-2023-34451",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. In `v0.37.0`, and `v0.37.1`, as well as in `v0.34.28`, and all previous releases of the CometBFT repo2, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction. Because the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list. This happens even if the duplicated transaction is later committed in a block. The only way to remove the transaction is by restarting the node.\n\nThe above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node. The problem is fixed in releases `v0.34.29` and `v0.37.2`. Some workarounds are available. Increasing the value of `cache_size` in `config.toml` makes it very difficult to effectively attack a full node. Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p.",
        "URL": "https://github.com/tendermint/tendermint/pull/2778",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "6de7effb05581f9bea2e8af06e4e74a85c34bc5f",
        "inducing_commit_hash_pyszz": [
            "41f91318e9e253a1b59cc1cc128ad412941b8e2a"
        ],
        "inducing_commit_hash_pd": [
            "c147b41013b88ec0b6ed0350cf1ed41bb0e59faf",
            "1ea64fc27ff51079a85c3cc741115ad8fe6ee88c",
            "92343ef484374b6010a87e8c3c8de9fb77e0ef7a",
            "3a7ee13ece56dc28d26f3c9c4a9bdea6b20ec46d",
            "ef43af19ab2af994afaf9fdb148df2918454d9c4",
            "35a1d747b0d1fee110e749dca84a58387588f074",
            "d55243f0e640de98f7adf0ad5fed4855e0942c1e",
            "331857c9e6df11eb46785a89e1142a301c0b3c45",
            "8a1a79257e8e8b309cd35bb1fe40bf9b3330fd7d",
            "111e62703707d9898c3287bcff487fe40b9f50de",
            "b38748ad1ab14b723307cd82ae87997e6a1a0b4f",
            "12566f51af2bbdc73e3c79c603be0593d8cb1574",
            "41f91318e9e253a1b59cc1cc128ad412941b8e2a",
            "d31d3c58ad69474c455a6fddbf217cd766da61a2",
            "88138c38cf77a4fa93fa616f0e1045eb6f17fdfd",
            "d460df1335fb3e0af2a9346c16cc35013552ba5d",
            "bd531401a0ed903ace22f1154408360984323500",
            "a4f57e164b4fbd137c797d8b8852553c4be627b2",
            "d73c5cbdb16e35624885f73e7e5c4897094d73be"
        ],
        "matched": [
            "41f91318e9e253a1b59cc1cc128ad412941b8e2a"
        ]
    },
    {
        "repo_name": "terraform-providers/terraform-provider-aws",
        "CVE_ID": "CVE-2018-9057",
        "Problem_Type": "CWE-332",
        "Description": "aws/resource_aws_iam_user_login_profile.go in the HashiCorp Terraform Amazon Web Services (AWS) provider through v1.12.0 has an inappropriate PRNG algorithm and seeding, which makes it easier for remote attackers to obtain access by leveraging an IAM account that was provisioned with a weak password.",
        "URL": "https://github.com/terraform-providers/terraform-provider-aws/pull/3934",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TestLinkOpenSourceTRMS/testlink-code",
        "CVE_ID": "CVE-2023-50110",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "TestLink through 1.9.20 allows type juggling for authentication bypass because === is not used.",
        "URL": "https://github.com/TestLinkOpenSourceTRMS/testlink-code/pull/357",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "42324f1d354917b9747f2da9ffd5f2cd463b826d",
        "inducing_commit_hash_pyszz": [
            "efbb645dbfb3ea6f567b989b4bfa8225493be1ff"
        ],
        "inducing_commit_hash_pd": [
            "efbb645dbfb3ea6f567b989b4bfa8225493be1ff",
            "eb9a289e3adf83e20f61142e256bf4cb6ee2631c"
        ],
        "matched": [
            "efbb645dbfb3ea6f567b989b4bfa8225493be1ff"
        ]
    },
    {
        "repo_name": "Tethik/flask-session-captcha",
        "CVE_ID": "CVE-2022-24880",
        "Problem_Type": "CWE-754",
        "Description": "flask-session-captcha is a package which allows users to extend Flask by adding an image based captcha stored in a server side session. In versions prior to 1.2.1, he `captcha.validate()` function would return `None` if passed no value (e.g. by submitting an having an empty form). If implementing users were checking the return value to be **False**, the captcha verification check could be bypassed. Version 1.2.1 fixes the issue. Users can workaround the issue by not explicitly checking that the value is False. Checking the return value less explicitly should still work.",
        "URL": "https://github.com/Tethik/flask-session-captcha/pull/27",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a65c5a4ff37f0c6f17a220f6819199618bdd0743",
        "inducing_commit_hash_pyszz": [
            "3b7ab6ffc5b197e8194fecf2acc52ea1bff8536b"
        ],
        "inducing_commit_hash_pd": [
            "3b7ab6ffc5b197e8194fecf2acc52ea1bff8536b"
        ],
        "matched": [
            "3b7ab6ffc5b197e8194fecf2acc52ea1bff8536b"
        ]
    },
    {
        "repo_name": "theforeman/foreman",
        "CVE_ID": "CVE-2015-1844",
        "Problem_Type": "CWE-264",
        "Description": "Foreman before 1.7.5 allows remote authenticated users to bypass organization and location restrictions by connecting through the REST API.",
        "URL": "https://github.com/theforeman/foreman/pull/2273",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "theforeman/foreman",
        "CVE_ID": "CVE-2015-3155",
        "Problem_Type": "CWE-284",
        "Description": "Foreman before 1.8.1 does not set the secure flag for the _session_id cookie in an https session, which makes it easier for remote attackers to capture this cookie by intercepting its transmission within an http session.",
        "URL": "https://github.com/theforeman/foreman/pull/2328",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "theforeman/foreman",
        "CVE_ID": "CVE-2016-6320",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site scripting (XSS) vulnerability in app/assets/javascripts/host_edit_interfaces.js in Foreman before 1.12.2 allows remote authenticated users to inject arbitrary web script or HTML via the network interface device identifier in the host interface form.",
        "URL": "https://github.com/theforeman/foreman/pull/3714/commits/850c38451c7bbde75521b796d16aca26e4d240a0",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "theforeman/foreman",
        "CVE_ID": "CVE-2017-15100",
        "Problem_Type": "CWE-79",
        "Description": "An attacker submitting facts to the Foreman server containing HTML can cause a stored XSS on certain pages: (1) Facts page, when clicking on the \"chart\" button and hovering over the chart; (2) Trends page, when checking the graph for a trend based on a such fact; (3) Statistics page, for facts that are aggregated on this page.",
        "URL": "https://github.com/theforeman/foreman/pull/4967",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "81e40e3a14a90c11c4193bebc7eecb79c2cfb9b1",
        "inducing_commit_hash_pyszz": [
            "a9ea3490cea22f5bbb61c2257e87578ad4448762"
        ],
        "inducing_commit_hash_pd": [
            "ee878ae8d644d902f3a9b60a2eb34a3c1a31eea1",
            "070b83feac98a613b3d6a287ea31aed6ec9089b7",
            "870e7fcc86322c5d332fef028fa68728d410208c",
            "a9ea3490cea22f5bbb61c2257e87578ad4448762",
            "ad01d4d20f0392a56d8bd13601966a87802e235c",
            "f5975f9490749ee35f204f49f3bd92069e47c414"
        ],
        "matched": [
            "a9ea3490cea22f5bbb61c2257e87578ad4448762"
        ]
    },
    {
        "repo_name": "theforeman/foreman",
        "CVE_ID": "CVE-2017-7505",
        "Problem_Type": "CWE-269",
        "Description": "Foreman since version 1.5 is vulnerable to an incorrect authorization check due to which users with user management permission who are assigned to some organization(s) can do all operations granted by these permissions on all administrator user object outside of their scope, such as editing global admin accounts including changing their passwords.",
        "URL": "https://github.com/theforeman/foreman/pull/4545",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "af9edf1098bf8e643e1607f9375595e375e7ade6",
        "inducing_commit_hash_pyszz": [
            "38b81aed2578c53201f5aa20e56975254d74400f"
        ],
        "inducing_commit_hash_pd": [
            "5f606e11cf39719bf62f8b1f3396861b32387905",
            "cad9cce912a371018a489a874d896af241f91bd0",
            "363cab56dd3bee87a547714e9003190afee0bef6",
            "38b81aed2578c53201f5aa20e56975254d74400f",
            "dc38aad38be047b11952a9db118cc2994a2cb402"
        ],
        "matched": [
            "38b81aed2578c53201f5aa20e56975254d74400f"
        ]
    },
    {
        "repo_name": "theforeman/foreman",
        "CVE_ID": "CVE-2021-3584",
        "Problem_Type": "CWE-78",
        "Description": "A server side remote code execution vulnerability was found in Foreman project. A authenticated attacker could use Sendmail configuration options to overwrite the defaults and perform command injection. The highest threat from this vulnerability is to confidentiality, integrity and availability of system. Fixed releases are 2.4.1, 2.5.1, 3.0.0.",
        "URL": "https://github.com/theforeman/foreman/pull/8599",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c83d799eee3d10d27d9e7d5900232b9e979e4a21",
        "inducing_commit_hash_pyszz": [
            "5a8f4579cbf581b7c54d86f3dc055d45362e6508"
        ],
        "inducing_commit_hash_pd": [
            "5a8f4579cbf581b7c54d86f3dc055d45362e6508",
            "c86ed9c68adedaaff5562ddaa6e7229ec416427d"
        ],
        "matched": [
            "5a8f4579cbf581b7c54d86f3dc055d45362e6508"
        ]
    },
    {
        "repo_name": "theforeman/smart-proxy",
        "CVE_ID": "CVE-2014-3691",
        "Problem_Type": "CWE-310",
        "Description": "Smart Proxy (aka Smart-Proxy and foreman-proxy) in Foreman before 1.5.4 and 1.6.x before 1.6.2 does not validate SSL certificates, which allows remote attackers to bypass intended authentication and execute arbitrary API requests via a request without a certificate.",
        "URL": "https://github.com/theforeman/smart-proxy/pull/217",
        "Tag": "['Patch', 'Issue Tracking']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "theupdateframework/tuf",
        "CVE_ID": "CVE-2020-15163",
        "Problem_Type": "CWE-345",
        "Description": "Python TUF (The Update Framework) reference implementation before version 0.12 it will incorrectly trust a previously downloaded root metadata file which failed verification at download time. This allows an attacker who is able to serve multiple new versions of root metadata (i.e. by a person-in-the-middle attack) culminating in a version which has not been correctly signed to control the trust chain for future updates. This is fixed in version 0.12 and newer.",
        "URL": "https://github.com/theupdateframework/tuf/pull/885",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7dbb30ae1006d0b5f506bba19d4b53398c44f139",
        "inducing_commit_hash_pyszz": [
            "55941d75517b4e64911194c8f45a09236c4927d3"
        ],
        "inducing_commit_hash_pd": [
            "a7f28b9af46632c072c991fc1c8b0dd5a31de0e3"
        ],
        "matched": [
            "55941d75517b4e64911194c8f45a09236c4927d3"
        ]
    },
    {
        "repo_name": "thorsten/phpMyFAQ",
        "CVE_ID": "CVE-2024-24574",
        "Problem_Type": "CWE-79",
        "Description": "phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. Unsafe echo of filename in phpMyFAQ\\phpmyfaq\\admin\\attachments.php leads to allowed execution of JavaScript code in client side (XSS). This vulnerability has been patched in version 3.2.5.",
        "URL": "https://github.com/thorsten/phpMyFAQ/pull/2827",
        "Tag": "['Patch']",
        "fix_commit_hash": "5479b4a4603cce71aa7eb4437f1c201153a1f1f5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "8de74436d729f2ef13e07ff925508869aa1a159d"
        ],
        "matched": [
            "8de74436d729f2ef13e07ff925508869aa1a159d"
        ]
    },
    {
        "repo_name": "thoughtbot/clearance",
        "CVE_ID": "CVE-2021-23435",
        "Problem_Type": "CWE-601",
        "Description": "This affects the package clearance before 2.5.0. The vulnerability can be possible when users are able to set the value of session[:return_to]. If the value used for return_to contains multiple leading slashes (/////example.com) the user ends up being redirected to the external domain that comes after the slashes (http://example.com).",
        "URL": "https://github.com/thoughtbot/clearance/pull/945",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5bcab3d83da74884c7853c9bd20d12987a249dd3",
        "inducing_commit_hash_pyszz": [
            "5cec3a8af844e3cbb5364a676f426725864ff8d0"
        ],
        "inducing_commit_hash_pd": [
            "5cec3a8af844e3cbb5364a676f426725864ff8d0"
        ],
        "matched": [
            "5cec3a8af844e3cbb5364a676f426725864ff8d0"
        ]
    },
    {
        "repo_name": "thoughtbot/paperclip",
        "CVE_ID": "CVE-2017-0889",
        "Problem_Type": "CWE-918",
        "Description": "Paperclip ruby gem version 3.1.4 and later suffers from a Server-SIde Request Forgery (SSRF) vulnerability in the Paperclip::UriAdapter class. Attackers may be able to access information about internal network resources.",
        "URL": "https://github.com/thoughtbot/paperclip/pull/2435",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80847b44f1965d20a2ed6e98a3fa4bf4c1194515",
        "inducing_commit_hash_pyszz": [
            "38166cf0a0e663a97d64b54fddcf0dee77c7882f"
        ],
        "inducing_commit_hash_pd": [
            "ccaaaad63fad99fe199fa9e4b6d00958dcc9f041",
            "25be0b25d67923e28419c6146e8f8307741a974b",
            "38166cf0a0e663a97d64b54fddcf0dee77c7882f",
            "1f3a74678f459dc1b2d60efd49f3cfe4addc6f63",
            "e54b5bdf4273714835d6b4d33523529ac66ca9df",
            "a49c59f559839b52945f3dc445f62cb0e690bbff",
            "5202acbf4b642230bef71a8dd534bcca11fb4373",
            "e367efc2a44d8f137aad35facd9d4f61749204af",
            "81b74f6d5e047018b516f85bd534c6b11287af4a",
            "89c8d117e756815333a0e46d387cd64a1f4d37ab",
            "a12dec104dde656917963ec6328390003595234a",
            "5d06ad8c570354db59d067613b04841833252a8d",
            "b256381c3215fe80aaa1be892410982ab3b965af",
            "ca8ecfb994e3fc116476fe52b69bbeff1df3e464",
            "3131601f2724814efc00718443db7a9ef1b7fb26",
            "38a6b4dc502853f44cda3f014712893e61486277",
            "41c092d9d8801ac88fbfdfff8dfdc9262444cc86",
            "24d143978e0df6f8424e8a333605a89a87e33e23"
        ],
        "matched": [
            "38166cf0a0e663a97d64b54fddcf0dee77c7882f"
        ]
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-5581",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in the ModifiablePixelBuffer::fillRect function in TigerVNC before 1.7.1 allows remote servers to execute arbitrary code via an RRE message with subrectangle outside framebuffer boundaries.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/399",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18c020124ff1b2441f714da2017f63dba50720ba",
        "inducing_commit_hash_pyszz": [
            "a32040d7c9972f70272218effbc0242416d417d2"
        ],
        "inducing_commit_hash_pd": [
            "5c1a1536db0bd3f59e8c9ed0fd8a0a0fb8108ef2",
            "a32040d7c9972f70272218effbc0242416d417d2",
            "a43a3f4e0e1ae9faa389a91ad9a38db4af4c54c8"
        ],
        "matched": [
            "a32040d7c9972f70272218effbc0242416d417d2"
        ]
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7393",
        "Problem_Type": "CWE-415",
        "Description": "In TigerVNC 1.7.1 (VNCSConnectionST.cxx VNCSConnectionST::fence), an authenticated client can cause a double free, leading to denial of service or potentially code execution.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/438",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f3afa24da144409a3c3a0e35913112583d987671",
        "inducing_commit_hash_pyszz": [
            "7638e9c5b1c59abc98e27986b8178f19e5e6cf2a"
        ],
        "inducing_commit_hash_pd": [
            "7638e9c5b1c59abc98e27986b8178f19e5e6cf2a"
        ],
        "matched": [
            "7638e9c5b1c59abc98e27986b8178f19e5e6cf2a"
        ]
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7395",
        "Problem_Type": "CWE-190",
        "Description": "In TigerVNC 1.7.1 (SMsgReader.cxx SMsgReader::readClientCutText), by causing an integer overflow, an authenticated client can crash the server.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/436",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
        "inducing_commit_hash_pyszz": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4"
        ],
        "inducing_commit_hash_pd": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4",
            "f324dc451b343721a0721bdb6ab89608b8792d75",
            "d3b4deac38b30dcd692bff14ca9066127dd2a797",
            "a6578bfc986695bf9e5d4272b6d2e57516aa4cbf",
            "bfd66c1e8c526dff1757bf349c9bb4d87906265f",
            "05a0cd66288265805ae21fe9c1322216fda4fce0"
        ],
        "matched": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4"
        ]
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7396",
        "Problem_Type": "CWE-772",
        "Description": "In TigerVNC 1.7.1 (CConnection.cxx CConnection::CConnection), an unauthenticated client can cause a small memory leak in the server.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/436/commits/dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
        "inducing_commit_hash_pyszz": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4"
        ],
        "inducing_commit_hash_pd": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4",
            "f324dc451b343721a0721bdb6ab89608b8792d75",
            "d3b4deac38b30dcd692bff14ca9066127dd2a797",
            "a6578bfc986695bf9e5d4272b6d2e57516aa4cbf",
            "bfd66c1e8c526dff1757bf349c9bb4d87906265f",
            "05a0cd66288265805ae21fe9c1322216fda4fce0"
        ],
        "matched": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4"
        ]
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7396",
        "Problem_Type": "CWE-772",
        "Description": "In TigerVNC 1.7.1 (CConnection.cxx CConnection::CConnection), an unauthenticated client can cause a small memory leak in the server.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/436",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dccb5f7d776e93863ae10bbff56a45c523c6eeb0",
        "inducing_commit_hash_pyszz": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4"
        ],
        "inducing_commit_hash_pd": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4",
            "f324dc451b343721a0721bdb6ab89608b8792d75",
            "d3b4deac38b30dcd692bff14ca9066127dd2a797",
            "a6578bfc986695bf9e5d4272b6d2e57516aa4cbf",
            "bfd66c1e8c526dff1757bf349c9bb4d87906265f",
            "05a0cd66288265805ae21fe9c1322216fda4fce0"
        ],
        "matched": [
            "0068a4f5faa309b1f5e49dbf37d49f72db806cb4"
        ]
    },
    {
        "repo_name": "timescale/timescaledb",
        "CVE_ID": "CVE-2023-25149",
        "Problem_Type": "CWE-269",
        "Description": "TimescaleDB, an open-source time-series SQL database, has a privilege escalation vulnerability in versions 2.8.0 through 2.9.2. During installation, TimescaleDB creates a telemetry job that is runs as the installation user. The queries run as part of the telemetry data collection were not run with a locked down `search_path`, allowing malicious users to create functions that would be executed by the telemetry job, leading to privilege escalation. In order to be able to take advantage of this vulnerability, a user would need to be able to create objects in a database and then get a superuser to install TimescaleDB into their database. When TimescaleDB is installed as trusted extension, non-superusers can install the extension without help from a superuser.\n\nVersion 2.9.3 fixes this issue. As a mitigation, the `search_path` of the user running the telemetry job can be locked down to not include schemas writable by other users. The vulnerability is not exploitable on instances in Timescale Cloud and Managed Service for TimescaleDB due to additional security provisions in place on those platforms.",
        "URL": "https://github.com/timescale/timescaledb/pull/5259",
        "Tag": "['Patch']",
        "fix_commit_hash": "789bb26dfbf1aaf85163e5ddfc70fa6dae0894fb",
        "inducing_commit_hash_pyszz": [
            "c54cf3ea56de9e05852ea54f90c55c5a221fa1bb"
        ],
        "inducing_commit_hash_pd": [
            "c54cf3ea56de9e05852ea54f90c55c5a221fa1bb",
            "f49492b83dd2b206cff20d5537cb68ab8d0596a5"
        ],
        "matched": [
            "c54cf3ea56de9e05852ea54f90c55c5a221fa1bb"
        ]
    },
    {
        "repo_name": "timonwong/vscode-shellcheck",
        "CVE_ID": "CVE-2021-28794",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The unofficial ShellCheck extension before 0.13.4 for Visual Studio Code mishandles shellcheck.executablePath.",
        "URL": "https://github.com/timonwong/vscode-shellcheck/pull/181",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3d68e17bcbf879e3303da9de4b48228a393f3b5e",
        "inducing_commit_hash_pyszz": [
            "7808a0a1a1b6940d37e767ad873fa3b61cfac6a3"
        ],
        "inducing_commit_hash_pd": [
            "7808a0a1a1b6940d37e767ad873fa3b61cfac6a3"
        ],
        "matched": [
            "7808a0a1a1b6940d37e767ad873fa3b61cfac6a3"
        ]
    },
    {
        "repo_name": "tj/node-growl",
        "CVE_ID": "CVE-2017-16042",
        "Problem_Type": "CWE-78",
        "Description": "Growl adds growl notification support to nodejs. Growl before 1.10.2 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution.",
        "URL": "https://github.com/tj/node-growl/pull/61",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "togglz/togglz",
        "CVE_ID": "CVE-2020-28191",
        "Problem_Type": "CWE-352",
        "Description": "The console in Togglz before 2.9.4 allows CSRF.",
        "URL": "https://github.com/togglz/togglz/pull/495",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed66e3f584de954297ebaf98ea4a235286784707",
        "inducing_commit_hash_pyszz": [
            "ac54a100f0a0f78b9ca96ad70908f1eccd39515d"
        ],
        "inducing_commit_hash_pd": [
            "ac54a100f0a0f78b9ca96ad70908f1eccd39515d"
        ],
        "matched": [
            "ac54a100f0a0f78b9ca96ad70908f1eccd39515d"
        ]
    },
    {
        "repo_name": "tokio-rs/tokio",
        "CVE_ID": "CVE-2023-22466",
        "Problem_Type": "CWE-665",
        "Description": "Tokio is a runtime for writing applications with Rust. Starting with version 1.7.0 and prior to versions 1.18.4, 1.20.3, and 1.23.1, when configuring a Windows named pipe server, setting `pipe_mode` will reset `reject_remote_clients` to `false`. If the application has previously configured `reject_remote_clients` to `true`, this effectively undoes the configuration. Remote clients may only access the named pipe if the named pipe's associated path is accessible via a publicly shared folder (SMB). Versions 1.23.1, 1.20.3, and 1.18.4 have been patched. The fix will also be present in all releases starting from version 1.24.0. Named pipes were introduced to Tokio in version 1.7.0, so releases older than 1.7.0 are not affected. As a workaround, ensure that `pipe_mode` is set first after initializing a `ServerOptions`.",
        "URL": "https://github.com/tokio-rs/tokio/pull/5336",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9241c3eddf4a6a218681b088d71f7191513e2376",
        "inducing_commit_hash_pyszz": [
            "5c76d070e28bd9153ec72f13d0ebe24935b9dea0"
        ],
        "inducing_commit_hash_pd": [
            "5c76d070e28bd9153ec72f13d0ebe24935b9dea0"
        ],
        "matched": [
            "5c76d070e28bd9153ec72f13d0ebe24935b9dea0"
        ]
    },
    {
        "repo_name": "TokTok/c-toxcore",
        "CVE_ID": "CVE-2018-25022",
        "Problem_Type": "CWE-200",
        "Description": "The Onion module in toxcore before 0.2.2 doesn't restrict which packets can be onion-routed, which allows a remote attacker to discover a target user's IP address (when knowing only their Tox Id) by positioning themselves close to target's Tox Id in the DHT for the target to establish an onion connection with the attacker, guessing the target's DHT public key and creating a DHT node with public key close to it, and finally onion-routing a NAT Ping Request to the target, requesting it to ping the just created DHT node.",
        "URL": "https://github.com/TokTok/c-toxcore/pull/872",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6b97acb773622f9abca5ef305cd55bdef1ecc484",
        "inducing_commit_hash_pyszz": [
            "1c676147a2fb50e1513fa6f7a1bb5d61b75fb98f"
        ],
        "inducing_commit_hash_pd": [
            "ad2656051697899e960694bb68ac104fcc5e92f1",
            "1c676147a2fb50e1513fa6f7a1bb5d61b75fb98f",
            "633da98ae69866efb195e00d9a3a22ace6bada66",
            "97b9a9cf04570fde8646d0606fab93344a72153a"
        ],
        "matched": [
            "1c676147a2fb50e1513fa6f7a1bb5d61b75fb98f"
        ]
    },
    {
        "repo_name": "TokTok/c-toxcore",
        "CVE_ID": "CVE-2021-44847",
        "Problem_Type": "CWE-682",
        "Description": "A stack-based buffer overflow in handle_request function in DHT.c in toxcore 0.1.9 through 0.1.11 and 0.2.0 through 0.2.12 (caused by an improper length calculation during the handling of received network packets) allows remote attackers to crash the process or potentially execute arbitrary code via a network packet.",
        "URL": "https://github.com/TokTok/c-toxcore/pull/1718",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0320e2eb8e2d680ecf07e3b8d4707e79e81cf63c",
        "inducing_commit_hash_pyszz": [
            "7684b5ae3eaabec8fac035752fff30c651109dfc"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "7684b5ae3eaabec8fac035752fff30c651109dfc"
        ]
    },
    {
        "repo_name": "tolgee/tolgee-platform",
        "CVE_ID": "CVE-2023-38510",
        "Problem_Type": "CWE-862",
        "Description": "Tolgee is an open-source localization platform. Starting in version 3.14.0 and prior to version 3.23.1, when a request is made using an API key, the backend fails to verify the permission scopes associated with the key, effectively bypassing permission checks entirely for some endpoints. It's important to note that this vulnerability only affects projects that have inadvertently exposed their API keys on the internet. Projects that have kept their API keys secure are not impacted. This issue is fixed in version 3.23.1.",
        "URL": "https://github.com/tolgee/tolgee-platform/pull/1818",
        "Tag": "['Patch']",
        "fix_commit_hash": "4776cba67e7bb8c1b0259376e3e5fa3bb46e45c7",
        "inducing_commit_hash_pyszz": [
            "88b7cb8aabc26c08bdd24058637629edd7a18a73"
        ],
        "inducing_commit_hash_pd": [
            "40d130ddc4de0996f6e06fc368976bd23592ca4f",
            "7321f7e64433f5b859fe102e8564210e7c3e15df",
            "85b0ab1025c261e9dde2809391069e937796e220",
            "452e3d0e3f70eabea3410ba8f1b2093067854960",
            "5c41937f28a660750dc418f488a6056bb4ddfc5d"
        ],
        "matched": [
            "88b7cb8aabc26c08bdd24058637629edd7a18a73"
        ]
    },
    {
        "repo_name": "tootsuite/mastodon",
        "CVE_ID": "CVE-2018-21018",
        "Problem_Type": "CWE-613",
        "Description": "Mastodon before 2.6.3 mishandles timeouts of incompletely established sessions.",
        "URL": "https://github.com/tootsuite/mastodon/pull/9329",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fd8145d2322d8b13b6aaa9cd2a61331ff660c9dd",
        "inducing_commit_hash_pyszz": [
            "384e953b75abdb15333bf3053cc3d27be88a0cef"
        ],
        "inducing_commit_hash_pd": [
            "f58dcbc9814b5ba2fd4f7d7af643aa25dcf40594",
            "36b57037961383466b7f5c20b39ee68cd9f202a0",
            "384e953b75abdb15333bf3053cc3d27be88a0cef",
            "40e5d2303ba1edc51beae66cc15263675980106a"
        ],
        "matched": [
            "384e953b75abdb15333bf3053cc3d27be88a0cef"
        ]
    },
    {
        "repo_name": "tootsuite/mastodon",
        "CVE_ID": "CVE-2018-21018",
        "Problem_Type": "CWE-613",
        "Description": "Mastodon before 2.6.3 mishandles timeouts of incompletely established sessions.",
        "URL": "https://github.com/tootsuite/mastodon/pull/9381",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c39d7e7b2b80a23f8d4e1410bb1c2d6033f30af0",
        "inducing_commit_hash_pyszz": [
            "fd8145d2322d8b13b6aaa9cd2a61331ff660c9dd"
        ],
        "inducing_commit_hash_pd": [
            "fd8145d2322d8b13b6aaa9cd2a61331ff660c9dd"
        ],
        "matched": [
            "fd8145d2322d8b13b6aaa9cd2a61331ff660c9dd"
        ]
    },
    {
        "repo_name": "toumorokoshi/transmute-core",
        "CVE_ID": "CVE-2023-47204",
        "Problem_Type": "CWE-502",
        "Description": "Unsafe YAML deserialization in yaml.Loader in transmute-core before 1.13.5 allows attackers to execute arbitrary Python code.",
        "URL": "https://github.com/toumorokoshi/transmute-core/pull/58",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b368618da1909c4e9e58c53a71319effb2a2cc0d",
        "inducing_commit_hash_pyszz": [
            "79714048a2b3074b9572ba4b92740669af359d41"
        ],
        "inducing_commit_hash_pd": [
            "ca056b368a3492daf6ed1a727791ed8c515f6dc3",
            "3a6888f042e35ce7f654502df38f9287502503f2",
            "79714048a2b3074b9572ba4b92740669af359d41",
            "ff118e01e42bc224cdf2d7523c3b287aae40d669",
            "e7297f9120baa52ba81cec692bb7c74fcb1aed72",
            "5535cd22eeddddf480197cf8b28bd75144a03755",
            "4218e98dd216fb1192e08beb441b79f8e2cfb054"
        ],
        "matched": [
            "79714048a2b3074b9572ba4b92740669af359d41"
        ]
    },
    {
        "repo_name": "tovyblox/tovy",
        "CVE_ID": "CVE-2022-31164",
        "Problem_Type": "CWE-287",
        "Description": "Tovy is a a staff management system for Roblox groups. A vulnerability in versions prior to 0.7.51 allows users to log in as other users, including privileged users such as the other of the instance. The problem has been patched in version 0.7.51.",
        "URL": "https://github.com/tovyblox/tovy/pull/63",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "traefik/traefik",
        "CVE_ID": "CVE-2021-27375",
        "Problem_Type": "CWE-1021",
        "Description": "Traefik before 2.4.5 allows the loading of IFRAME elements from other domains.",
        "URL": "https://github.com/traefik/traefik/pull/7904",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bae28c5f5717ea3a80423f107fefe6948c14b7cd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "424e2a9439f8f3b00d7f9f19ed1df3b6d3c8c570"
        ],
        "matched": [
            "424e2a9439f8f3b00d7f9f19ed1df3b6d3c8c570"
        ]
    },
    {
        "repo_name": "traefik/traefik",
        "CVE_ID": "CVE-2021-32813",
        "Problem_Type": "CWE-913",
        "Description": "Traefik is an HTTP reverse proxy and load balancer. Prior to version 2.4.13, there exists a potential header vulnerability in Traefik's handling of the Connection header. Active exploitation of this issue is unlikely, as it requires that a removed header would lead to a privilege escalation, however, the Traefik team has addressed this issue to prevent any potential abuse. If one has a chain of Traefik middlewares, and one of them sets a request header, then sending a request with a certain Connection header will cause it to be removed before the request is sent. In this case, the backend does not see the request header. A patch is available in version 2.4.13. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/traefik/traefik/pull/8319/commits/cbaf86a93014a969b8accf39301932c17d0d73f9",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b386964abcd3322e9e975a63c8c8e774b9edadcf",
        "inducing_commit_hash_pyszz": [
            "b5198e63c446efdb488abd2bea826a59f75b1d63"
        ],
        "inducing_commit_hash_pd": [
            "a09dfa3ce10f222ab6e10ac11386d330698ff6f8",
            "b5198e63c446efdb488abd2bea826a59f75b1d63"
        ],
        "matched": [
            "b5198e63c446efdb488abd2bea826a59f75b1d63"
        ]
    },
    {
        "repo_name": "traefik/traefik",
        "CVE_ID": "CVE-2022-23469",
        "Problem_Type": "CWE-532",
        "Description": "Traefik is an open source HTTP reverse proxy and load balancer. Versions prior to 2.9.6 are subject to a potential vulnerability in Traefik displaying the Authorization header in its debug logs. In certain cases, if the log level is set to DEBUG, credentials provided using the Authorization header are displayed in the debug logs. Attackers must have access to a users logging system in order for credentials to be stolen. This issue has been addressed in version 2.9.6. Users are advised to upgrade. Users unable to upgrade may set the log level to `INFO`, `WARN`, or `ERROR`.",
        "URL": "https://github.com/traefik/traefik/pull/9574",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "778188ed34e886b55d1d5c3c669fce4cc49795ef",
        "inducing_commit_hash_pyszz": [
            "b2c4221429658b08da0be6c44bb31dd034004efe"
        ],
        "inducing_commit_hash_pd": [
            "4ec90c5c0d634254b6179a06a7b0db820a2989ec",
            "b4ee7bdcbef4592d2396e06cad0ac17d8678680d",
            "45453b20fafc75249acc097589328dd9a8fac1cf",
            "cb05f36976b7a4ea151003b95f5f547bc008d797",
            "dc8d5ef744115ebf7908b230aca0965c8c8e5d0b",
            "a34e1c0747e9e1c5ffa51b4a3f5bb61404fe8bf9",
            "8168d2fdc15b0c935d28721cd1fe2674f96f6150",
            "71150bcaaf8d2361f6e5954744b327f0f5d065d8",
            "60ea9199e5b99ef9820ec237ea5a584cd3991322",
            "b2c4221429658b08da0be6c44bb31dd034004efe",
            "63a1186d3e1ac834a467fd56bad7ed151df5b963",
            "5a225b419667cfac38ba9daf9e20eb8073ec8d4f",
            "e2a9caf76080da2c3d3ec2f9b470a30ca2184186",
            "755822bf14ae6d7c181186e67acc47d4814a23dd",
            "51a02caea3de7a89af2d29c2b673071eced49f5a",
            "074b31b5e98810181e5b02ab6bad593b3438f58f",
            "c99266e961fdc15c14110125f7e2e3e8f970af96",
            "c2938ff1385514819d40fd03884999eaf58cd6f2",
            "58d668182408a36f7204d80ee66feba32276f8f6",
            "a09dfa3ce10f222ab6e10ac11386d330698ff6f8"
        ],
        "matched": [
            "b2c4221429658b08da0be6c44bb31dd034004efe"
        ]
    },
    {
        "repo_name": "traefik/traefik",
        "CVE_ID": "CVE-2022-23632",
        "Problem_Type": "CWE-295",
        "Description": "Traefik is an HTTP reverse proxy and load balancer. Prior to version 2.6.1, Traefik skips the router transport layer security (TLS) configuration when the host header is a fully qualified domain name (FQDN). For a request, the TLS configuration choice can be different than the router choice, which implies the use of a wrong TLS configuration. When sending a request using FQDN handled by a router configured with a dedicated TLS configuration, the TLS configuration falls back to the default configuration that might not correspond to the configured one. If the CNAME flattening is enabled, the selected TLS configuration is the SNI one and the routing uses the CNAME value, so this can skip the expected TLS configuration. Version 2.6.1 contains a patch for this issue. As a workaround, one may add the FDQN to the host rule. However, there is no workaround if the CNAME flattening is enabled.",
        "URL": "https://github.com/traefik/traefik/pull/8764",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0c83ee736ca4aa93bba2d4cce4c00fd247785915",
        "inducing_commit_hash_pyszz": [
            "f15d05b22ffb752c5d9feeaed81346896cb2f29a"
        ],
        "inducing_commit_hash_pd": [
            "0b7aaa3643cafa105c5a63ce7b41ffe91347d2c9",
            "2c7f6e4def0436a42a06118a455fcdf7b2e2fcb3",
            "c72769e2ea077332f982c4b1ef38c6b111e9998b",
            "f15d05b22ffb752c5d9feeaed81346896cb2f29a"
        ],
        "matched": [
            "f15d05b22ffb752c5d9feeaed81346896cb2f29a"
        ]
    },
    {
        "repo_name": "trailofbits/uthenticode",
        "CVE_ID": "CVE-2023-39969",
        "Problem_Type": "CWE-347",
        "Description": "uthenticode is a small cross-platform library for partially verifying Authenticode digital signatures. Version 1.0.9 of uthenticode hashed the entire file rather than hashing sections by virtual address, in violation of the Authenticode specification. As a result, an attacker could modify code within a binary without changing its Authenticode hash, making it appear valid from uthenticode's perspective. Versions of uthenticode prior to 1.0.9 are not vulnerable to this attack, nor are versions in the 2.x series. By design, uthenticode does not perform full-chain validation. However, the malleability of signature verification introduced in 1.0.9 was an unintended oversight. The 2.x series addresses the vulnerability. Versions prior to 1.0.9 are also not vulnerable, but users are encouraged to upgrade rather than downgrade. There are no workarounds to this vulnerability.",
        "URL": "https://github.com/trailofbits/uthenticode/pull/84",
        "Tag": "['Patch']",
        "fix_commit_hash": "8670b7bb9154d79c276483dcb7c9e9fd5e66455b",
        "inducing_commit_hash_pyszz": [
            "d16e9ec2b4d54c1333137ae34f011e9eb3e0b962"
        ],
        "inducing_commit_hash_pd": [
            "870b7a84121b70a68ff0b05919f5aba182298d13",
            "49b3bd517ae848763e53692e2d247202544dd583",
            "d16e9ec2b4d54c1333137ae34f011e9eb3e0b962",
            "e72f495e3942b5aa24c4cd14fd5b851cd8138daf",
            "fc9b17b26c506463035caad454f2f9401b04be31"
        ],
        "matched": [
            "d16e9ec2b4d54c1333137ae34f011e9eb3e0b962"
        ]
    },
    {
        "repo_name": "trailofbits/uthenticode",
        "CVE_ID": "CVE-2023-40012",
        "Problem_Type": "CWE-347",
        "Description": "uthenticode is a small cross-platform library for partially verifying Authenticode digital signatures. Versions of uthenticode prior to the 2.x series did not check Extended Key Usages in certificates, in violation of the Authenticode X.509 certificate profile. As a result, a malicious user could produce a \"signed\" PE file that uthenticode would verify and consider valid using an X.509 certificate that isn't entitled to produce code signatures (e.g., a SSL certificate). By design, uthenticode does not perform full-chain validation. However, the absence of EKU validation was an unintended oversight. The 2.0.0 release series includes EKU checks. There are no workarounds to this vulnerability.",
        "URL": "https://github.com/trailofbits/uthenticode/pull/78",
        "Tag": "['Patch']",
        "fix_commit_hash": "caeb1eb62412605f71bd96ce9bb9420644b6db53",
        "inducing_commit_hash_pyszz": [
            "aa41d3df02646347385afd97ccf9fa3148eeebeb"
        ],
        "inducing_commit_hash_pd": [
            "8145cd50b879dc927d240289037ce6fc98fadc2d",
            "aa41d3df02646347385afd97ccf9fa3148eeebeb"
        ],
        "matched": [
            "aa41d3df02646347385afd97ccf9fa3148eeebeb"
        ]
    },
    {
        "repo_name": "trentm/json",
        "CVE_ID": "CVE-2020-7712",
        "Problem_Type": "CWE-78",
        "Description": "This affects the package json before 10.0.0. It is possible to inject arbritary commands using the parseLookup function.",
        "URL": "https://github.com/trentm/json/pull/145",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc4798169f9e0f181f8aa61905b88479badcd483",
        "inducing_commit_hash_pyszz": [
            "a26e16a00ae4ab0f39f49a5ee3025ff48cf6eb32"
        ],
        "inducing_commit_hash_pd": [
            "24c8d4c3d76c900f5f495c29ad78b9d748ace7a9",
            "d0a877d8124a9e24ec70359f9b5dd5bb395bb5d1",
            "ddda2378f6b52a5e75005076b82f6576af31d017",
            "2451c95d671fe60e3d16757bb7b8a26235d9295f",
            "a26e16a00ae4ab0f39f49a5ee3025ff48cf6eb32",
            "a725522fa029505791c61f515e1d3e48fb49a58c",
            "ebac7e5f2b990bf19eb3a79c80e843b109c415ed",
            "8b56eddd4ff2262373f4ba38f7e21ae2cf5a00ce"
        ],
        "matched": [
            "a26e16a00ae4ab0f39f49a5ee3025ff48cf6eb32"
        ]
    },
    {
        "repo_name": "trusteddomainproject/OpenDMARC",
        "CVE_ID": "CVE-2021-34555",
        "Problem_Type": "CWE-476",
        "Description": "OpenDMARC 1.4.1 and 1.4.1.1 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a multi-value From header field.",
        "URL": "https://github.com/trusteddomainproject/OpenDMARC/pull/178",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tsingsee/EasyPlayerPro-Win",
        "CVE_ID": "CVE-2023-33693",
        "Problem_Type": "CWE-787",
        "Description": "A buffer overflow in EasyPlayerPro-Win v3.2.19.0106 to v3.6.19.0823 allows attackers to cause a Denial of Service (DoS) via a crafted XML file.",
        "URL": "https://github.com/tsingsee/EasyPlayerPro-Win/pull/24",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2016-10735",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap 3.x before 3.4.0 and 4.x-beta before 4.0.0-beta.2, XSS is possible in the data-target attribute, a different vulnerability than CVE-2018-14041.",
        "URL": "https://github.com/twbs/bootstrap/pull/23687",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "29f9237f735b90dbc89e003db0c62dec2db0b308",
        "inducing_commit_hash_pyszz": [
            "1956146787d686f5771ae51f7b96f3a3ad62ce09"
        ],
        "inducing_commit_hash_pd": [
            "149ecd21bf7c56df897088d09ca309eb43a7dd9d",
            "3e7ca3bbc8eaa60013d4ab9f2edd42f6dcd8dd4b",
            "7b0acf14d8a7c7c6089035a848cba540ed963f36",
            "ed3a65f08456571f5d9939d428379760d34741dc",
            "14651035deda4d02a1ca02c6088c34f770f897f6",
            "1956146787d686f5771ae51f7b96f3a3ad62ce09"
        ],
        "matched": [
            "1956146787d686f5771ae51f7b96f3a3ad62ce09"
        ]
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2018-14040",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap before 4.1.2, XSS is possible in the collapse data-parent attribute.",
        "URL": "https://github.com/twbs/bootstrap/pull/26630",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc61edfa8af7b5ec9d4888c59bf94377e499b78b",
        "inducing_commit_hash_pyszz": [
            "2d91494d96f8161f1bcce6589081880b72706154"
        ],
        "inducing_commit_hash_pd": [
            "c2616fb74e6bdc0cd46a5678a2c5cffcbe422106"
        ],
        "matched": [
            "2d91494d96f8161f1bcce6589081880b72706154"
        ]
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2018-14041",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap before 4.1.2, XSS is possible in the data-target property of scrollspy.",
        "URL": "https://github.com/twbs/bootstrap/pull/26630",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc61edfa8af7b5ec9d4888c59bf94377e499b78b",
        "inducing_commit_hash_pyszz": [
            "2d91494d96f8161f1bcce6589081880b72706154"
        ],
        "inducing_commit_hash_pd": [
            "c2616fb74e6bdc0cd46a5678a2c5cffcbe422106"
        ],
        "matched": [
            "2d91494d96f8161f1bcce6589081880b72706154"
        ]
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2018-14042",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip.",
        "URL": "https://github.com/twbs/bootstrap/pull/26630",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc61edfa8af7b5ec9d4888c59bf94377e499b78b",
        "inducing_commit_hash_pyszz": [
            "2d91494d96f8161f1bcce6589081880b72706154"
        ],
        "inducing_commit_hash_pd": [
            "c2616fb74e6bdc0cd46a5678a2c5cffcbe422106"
        ],
        "matched": [
            "2d91494d96f8161f1bcce6589081880b72706154"
        ]
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2018-20676",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap before 3.4.0, XSS is possible in the tooltip data-viewport attribute.",
        "URL": "https://github.com/twbs/bootstrap/pull/27047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2a5ba23ce8f041f3548317acc992ed8a736b609d",
        "inducing_commit_hash_pyszz": [
            "e949505b89ca146e3af0cf735e100c82703f1cda"
        ],
        "inducing_commit_hash_pd": [
            "e867ae7b603f3882832143ff315c9ab3fd3b8f13",
            "f47ad79538458c4fe787335a5873c00073c5c2c9",
            "ed3a65f08456571f5d9939d428379760d34741dc",
            "e949505b89ca146e3af0cf735e100c82703f1cda"
        ],
        "matched": [
            "e949505b89ca146e3af0cf735e100c82703f1cda"
        ]
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2018-20677",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap before 3.4.0, XSS is possible in the affix configuration target property.",
        "URL": "https://github.com/twbs/bootstrap/pull/27047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2a5ba23ce8f041f3548317acc992ed8a736b609d",
        "inducing_commit_hash_pyszz": [
            "e949505b89ca146e3af0cf735e100c82703f1cda"
        ],
        "inducing_commit_hash_pd": [
            "e867ae7b603f3882832143ff315c9ab3fd3b8f13",
            "f47ad79538458c4fe787335a5873c00073c5c2c9",
            "ed3a65f08456571f5d9939d428379760d34741dc",
            "e949505b89ca146e3af0cf735e100c82703f1cda"
        ],
        "matched": [
            "e949505b89ca146e3af0cf735e100c82703f1cda"
        ]
    },
    {
        "repo_name": "twbs/bootstrap",
        "CVE_ID": "CVE-2019-8331",
        "Problem_Type": "CWE-79",
        "Description": "In Bootstrap before 3.4.1 and 4.3.x before 4.3.1, XSS is possible in the tooltip or popover data-template attribute.",
        "URL": "https://github.com/twbs/bootstrap/pull/28236",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "10b97f6ed94168c749caa7b5f6a6e1504f4e0629",
        "inducing_commit_hash_pyszz": [
            "5570f1c16151923dec43e7132a4554e1014b657b"
        ],
        "inducing_commit_hash_pd": [
            "5570f1c16151923dec43e7132a4554e1014b657b"
        ],
        "matched": [
            "5570f1c16151923dec43e7132a4554e1014b657b"
        ]
    },
    {
        "repo_name": "u-root/u-root",
        "CVE_ID": "CVE-2020-7665",
        "Problem_Type": "CWE-22",
        "Description": "This affects all versions of package github.com/u-root/u-root/pkg/uzip. It is vulnerable to both leading and non-leading relative path traversal attacks in zip file extraction.",
        "URL": "https://github.com/u-root/u-root/pull/1817",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "u-root/u-root",
        "CVE_ID": "CVE-2020-7666",
        "Problem_Type": "CWE-22",
        "Description": "This affects all versions of package github.com/u-root/u-root/pkg/cpio. It is vulnerable to leading, non-leading relative path traversal attacks and symlink based (relative and absolute) path traversal attacks in cpio file extraction.",
        "URL": "https://github.com/u-root/u-root/pull/1817",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "u-root/u-root",
        "CVE_ID": "CVE-2020-7669",
        "Problem_Type": "CWE-22",
        "Description": "This affects all versions of package github.com/u-root/u-root/pkg/tarutil. It is vulnerable to both leading and non-leading relative path traversal attacks in tar file extraction.",
        "URL": "https://github.com/u-root/u-root/pull/1817",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "uclouvain/openjpeg",
        "CVE_ID": "CVE-2016-7163",
        "Problem_Type": "CWE-190",
        "Description": "Integer overflow in the opj_pi_create_decode function in pi.c in OpenJPEG allows remote attackers to execute arbitrary code via a crafted JP2 file, which triggers an out-of-bounds read or write.",
        "URL": "https://github.com/uclouvain/openjpeg/pull/809",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c16bc057ba3f125051c9966cf1f5b68a05681de4",
        "inducing_commit_hash_pyszz": [
            "2d39e5d7a59435e8082ed7620420507a68dd3800"
        ],
        "inducing_commit_hash_pd": [
            "2d52e409c27521f538ac22ea9bc1dca59c1d8e8e"
        ],
        "matched": [
            "2d39e5d7a59435e8082ed7620420507a68dd3800"
        ]
    },
    {
        "repo_name": "uclouvain/openjpeg",
        "CVE_ID": "CVE-2018-20847",
        "Problem_Type": "CWE-190",
        "Description": "An improper computation of p_tx0, p_tx1, p_ty0 and p_ty1 in the function opj_get_encoding_parameters in openjp2/pi.c in OpenJPEG through 2.3.0 can lead to an integer overflow.",
        "URL": "https://github.com/uclouvain/openjpeg/pull/1168/commits/c58df149900df862806d0e892859b41115875845",
        "Tag": "['Patch']",
        "fix_commit_hash": "c58df149900df862806d0e892859b41115875845",
        "inducing_commit_hash_pyszz": [
            "e4d077bc986cf8586994c7fa1e035f8c7e5ce82c"
        ],
        "inducing_commit_hash_pd": [
            "563bd8499e63db976ca8358216138647593354bc"
        ],
        "matched": [
            "e4d077bc986cf8586994c7fa1e035f8c7e5ce82c"
        ]
    },
    {
        "repo_name": "ultrajson/ultrajson",
        "CVE_ID": "CVE-2021-45958",
        "Problem_Type": "CWE-787",
        "Description": "UltraJSON (aka ujson) through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode). Exploitation can, for example, use a large amount of indentation.",
        "URL": "https://github.com/ultrajson/ultrajson/pull/504",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "unicode-org/icu",
        "CVE_ID": "CVE-2020-10531",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in International Components for Unicode (ICU) for C/C++ through 66.1. An integer overflow, leading to a heap-based buffer overflow, exists in the UnicodeString::doAppend() function in common/unistr.cpp.",
        "URL": "https://github.com/unicode-org/icu/pull/971",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7d08bc04a4296982fcef8b6b8a354a9e4e7afca",
        "inducing_commit_hash_pyszz": [
            "3d77fc18b8b1f1fbeb584790ebab1e5259e70b94"
        ],
        "inducing_commit_hash_pd": [
            "3d77fc18b8b1f1fbeb584790ebab1e5259e70b94"
        ],
        "matched": [
            "3d77fc18b8b1f1fbeb584790ebab1e5259e70b94"
        ]
    },
    {
        "repo_name": "unicode-org/icu",
        "CVE_ID": "CVE-2020-21913",
        "Problem_Type": "CWE-416",
        "Description": "International Components for Unicode (ICU-20850) v66.1 was discovered to contain a use after free bug in the pkg_createWithAssemblyCode function in the file tools/pkgdata/pkgdata.cpp.",
        "URL": "https://github.com/unicode-org/icu/pull/886",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "727505bddab0bfd527f1db6697cb4d4f7febe4a9",
        "inducing_commit_hash_pyszz": [
            "f3cfa0bb00b9d68ccfb8a5e85f0290d6fc2ea5e4"
        ],
        "inducing_commit_hash_pd": [
            "d40ee7f0cbbd044124a49efd0c0964a27083e017",
            "09813cbf3dab61e1bf79a92add7370e29c81b2ae",
            "07058ff285e6225f44de1aba936f09ec7bfcca46",
            "f3cfa0bb00b9d68ccfb8a5e85f0290d6fc2ea5e4"
        ],
        "matched": [
            "f3cfa0bb00b9d68ccfb8a5e85f0290d6fc2ea5e4"
        ]
    },
    {
        "repo_name": "unicorn-engine/unicorn",
        "CVE_ID": "CVE-2022-29694",
        "Problem_Type": "CWE-476",
        "Description": "Unicorn Engine v2.0.0-rc7 and below was discovered to contain a NULL pointer dereference via qemu_ram_free.",
        "URL": "https://github.com/unicorn-engine/unicorn/pull/1593/commits/6a879a082d4d67a5d13f1233ae0334cde0a7f844",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "unicorn-engine/unicorn",
        "CVE_ID": "CVE-2022-29694",
        "Problem_Type": "CWE-476",
        "Description": "Unicorn Engine v2.0.0-rc7 and below was discovered to contain a NULL pointer dereference via qemu_ram_free.",
        "URL": "https://github.com/unicorn-engine/unicorn/pull/1593/commits/31389e59457f304be3809f9679f91a42daa7ebaa",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Uniswap/universal-router",
        "CVE_ID": "CVE-2022-48216",
        "Problem_Type": "CWE-667",
        "Description": "Uniswap Universal Router before 1.1.0 mishandles reentrancy. This would have allowed theft of funds.",
        "URL": "https://github.com/Uniswap/universal-router/pull/189",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d82c6685ef566d9b280651c99f4b93a8454c08a8",
        "inducing_commit_hash_pyszz": [
            "96fef04f75d51bb4f5bb94ed72d41aa297176b3e"
        ],
        "inducing_commit_hash_pd": [
            "96fef04f75d51bb4f5bb94ed72d41aa297176b3e",
            "c5ef17a530bec8febd4541a689463d3a2ccda929",
            "8e677f10cdb78cd3b19a4039e3b26e9f150fa8ee",
            "930a9c35be908abed824b40a06b91fbc7870cf25",
            "391db146340f3bca523fd59842ec17de24253eec"
        ],
        "matched": [
            "96fef04f75d51bb4f5bb94ed72d41aa297176b3e"
        ]
    },
    {
        "repo_name": "Uniswap/web3-react",
        "CVE_ID": "CVE-2023-30543",
        "Problem_Type": "CWE-362",
        "Description": "@web3-react is a framework for building Ethereum Apps . In affected versions the `chainId` may be outdated if the user changes chains as part of the connection flow. This means that the value of `chainId` returned by `useWeb3React()` may be incorrect. In an application, this means that any data derived from `chainId` could be incorrect. For example, if a swapping application derives a wrapped token contract address from the `chainId` *and* a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This issue has been addressed in PR #749 and is available in updated npm artifacts. There are no known workarounds for this issue. Users are advised to upgrade.\n\n\n",
        "URL": "https://github.com/Uniswap/web3-react/pull/749",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "544279f13630d8a9568b701cb55b3ed97c8516e8",
        "inducing_commit_hash_pyszz": [
            "cf822e93b3d6f8dfeef8af0a41fc176cda429f33"
        ],
        "inducing_commit_hash_pd": [
            "8cd99f6a9ff1c68c44d540ca91dc6130aa82c8fb",
            "6ac731ff9dc448ce763516c30e60ba13e6f95c7a",
            "7136e97b4b4fc4db7acfa7362847d6d3861ef3b6",
            "aeb26ff03b810d6741e78c0876ac66215f0e38e6",
            "d6ba0e6f25129f0321c13eefd3df4d720e85e484",
            "c724c8fe2cc126c6a9b8e67212093623838b0f22",
            "1e4db0daa4cba8a378d6dce8d83deea97b1dbe97",
            "d707d193a4c1622c9c1cc8904c8eeae5a294cf01",
            "58a89124ce04d8fb7a14d6202a58ef88f41616ec",
            "ad7c1cd48143d652babc07e79e444b1865c7d659",
            "43e5c09b5be717b0d7a806947e0b5f9cacd38c5d",
            "5d7f29978055de2fc447b8daa4c2986d80e41efb",
            "0c80c795b86d264291b2f645b0437e480a3c2828",
            "fd38e6bc8c09a920ff63a296e2bf0ef25d7b51fd",
            "97c1fc2f38d6ffaeec8463e5a524dd48977010ec",
            "a221dc95f5f824c0f2bb730dffea4c4cdbfab587",
            "3d9c88fed5547b8133288c257060944d601a2f1f",
            "5721bb7e8e14bb7f16ba9aa9cda2e0dae798e31f",
            "8d9567e03d1f39534180151ca56829fc2e40daf8",
            "eea1fe2e4d79ee58df584001163396ca51476740",
            "cf822e93b3d6f8dfeef8af0a41fc176cda429f33"
        ],
        "matched": [
            "cf822e93b3d6f8dfeef8af0a41fc176cda429f33"
        ]
    },
    {
        "repo_name": "unoconv/unoconv",
        "CVE_ID": "CVE-2019-17400",
        "Problem_Type": "CWE-918",
        "Description": "The unoconv package before 0.9 mishandles untrusted pathnames, leading to SSRF and local file inclusion.",
        "URL": "https://github.com/unoconv/unoconv/pull/510",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "acfac594e643f9c44f1c3b8d6d8957190a4d76f2",
        "inducing_commit_hash_pyszz": [
            "6413cb8378c278fb18b70eabae157de277a602f6"
        ],
        "inducing_commit_hash_pd": [
            "788170020bf67ebbae993e0776608e378bc07de3",
            "8497b71cb2ef0e957f98d0d9cd5e77b07d01faea",
            "4a3e30cfdcefc74e7d7e3ebd9c2649379e7e3780",
            "e93b78044856eb9bd71125879471d639f3487ae2",
            "ad3c68d7dac8a08332de241a0ef010cd34124b26",
            "528804a1ef75b0e1c5b91291832e0168599fe877",
            "6413cb8378c278fb18b70eabae157de277a602f6"
        ],
        "matched": [
            "6413cb8378c278fb18b70eabae157de277a602f6"
        ]
    },
    {
        "repo_name": "unshiftio/url-parse",
        "CVE_ID": "CVE-2021-27515",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "url-parse before 1.5.0 mishandles certain uses of backslash such as http:\\/ and interprets the URI as a relative path.",
        "URL": "https://github.com/unshiftio/url-parse/pull/197",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d1e7e8822f26e8a49794b757123b51386325b2b0",
        "inducing_commit_hash_pyszz": [
            "3ecd256f127c3ada36a84d9b8dd3ebd14316274b"
        ],
        "inducing_commit_hash_pd": [
            "0891e7e823385b7f51e1efd23f168e275d4baf5b",
            "19b808a294556348b8c31dc93a54f38f6f6a72a4",
            "6a49ad2a5cb4130e85d4cab423bf1f186f09cb99",
            "4ee968f4c5f14fe085d6ae2bf6ab52d14a26f9ef",
            "ba3c9658324e82264825117e1c86e398189e537e",
            "53b1794e54d0711ceb52505e0f74145270570d5a",
            "0838acd80d1c44f27780ffeb8decd62fb9aba5f4",
            "e06eb7fd7a6d62d9728ae84c75535de99ab72929",
            "14dd952282b922fabf45b240289a28c95e687528",
            "1e2bd7130b99a5d81e2e4d69b0cbe441d6059193",
            "3ecd256f127c3ada36a84d9b8dd3ebd14316274b",
            "a8c93172419b30d90ad64a04f4e0bb9bb8e1094e"
        ],
        "matched": [
            "3ecd256f127c3ada36a84d9b8dd3ebd14316274b"
        ]
    },
    {
        "repo_name": "upx/upx",
        "CVE_ID": "CVE-2021-30501",
        "Problem_Type": "CWE-617",
        "Description": "An assertion abort was found in upx MemBuffer::alloc() in mem.cpp, in version UPX 4.0.0. The flow allows attackers to cause a denial of service (abort) via a crafted file.",
        "URL": "https://github.com/upx/upx/pull/487",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "USBGuard/usbguard",
        "CVE_ID": "CVE-2019-25058",
        "Problem_Type": "CWE-863",
        "Description": "An issue was discovered in USBGuard before 1.1.0. On systems with the usbguard-dbus daemon running, an unprivileged user could make USBGuard allow all USB devices to be connected in the future.",
        "URL": "https://github.com/USBGuard/usbguard/pull/531",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c8c1ae10a6330736bf2a2d7d8682674b1db47dc",
        "inducing_commit_hash_pyszz": [
            "3ca2424fd9d75340658831d4a0abeceb82edc969"
        ],
        "inducing_commit_hash_pd": [
            "3ca2424fd9d75340658831d4a0abeceb82edc969"
        ],
        "matched": [
            "3ca2424fd9d75340658831d4a0abeceb82edc969"
        ]
    },
    {
        "repo_name": "vaadin/flow-components",
        "CVE_ID": "CVE-2021-31405",
        "Problem_Type": "CWE-400",
        "Description": "Unsafe validation RegEx in EmailField component in com.vaadin:vaadin-text-field-flow versions 2.0.4 through 2.3.2 (Vaadin 14.0.6 through 14.4.3), and 3.0.0 through 4.0.2 (Vaadin 15.0.0 through 17.0.10) allows attackers to cause uncontrolled resource consumption by submitting malicious email addresses.",
        "URL": "https://github.com/vaadin/flow-components/pull/442",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0eb84df737b66ed8502ac4ab6431b38b3d2290c3",
        "inducing_commit_hash_pyszz": [
            "3bba210684e5d943abd622189690936f5f2b1df2"
        ],
        "inducing_commit_hash_pd": [
            "3bdd6ed1660acabfd2f694c89e019e9d82943fc2",
            "c20d6ad80c64fdd6b2c64df071ab2cc78f8805bd"
        ],
        "matched": [
            "3bba210684e5d943abd622189690936f5f2b1df2"
        ]
    },
    {
        "repo_name": "vaadin/flow-components",
        "CVE_ID": "CVE-2021-33605",
        "Problem_Type": "CWE-754",
        "Description": "Improper check in CheckboxGroup in com.vaadin:vaadin-checkbox-flow versions 1.2.0 prior to 2.0.0 (Vaadin 12.0.0 prior to 14.0.0), 2.0.0 prior to 3.0.0 (Vaadin 14.0.0 prior to 14.5.0), 3.0.0 through 4.0.1 (Vaadin 15.0.0 through 17.0.11), 14.5.0 through 14.6.7 (Vaadin 14.5.0 through 14.6.7), and 18.0.0 through 20.0.5 (Vaadin 18.0.0 through 20.0.5) allows attackers to modify the value of a disabled Checkbox inside enabled CheckboxGroup component via unspecified vectors.",
        "URL": "https://github.com/vaadin/flow-components/pull/1903",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eaf6e7afac5d9744e2a8b6797d3386858c95a4a0",
        "inducing_commit_hash_pyszz": [
            "6b4b7823566a080f71523e7034d958f5654880cb"
        ],
        "inducing_commit_hash_pd": [
            "6b4b7823566a080f71523e7034d958f5654880cb",
            "f3f9a5fea18c4b765edcd16699fc524cc916a50d"
        ],
        "matched": [
            "6b4b7823566a080f71523e7034d958f5654880cb"
        ]
    },
    {
        "repo_name": "vaadin/flow-components",
        "CVE_ID": "CVE-2022-29567",
        "Problem_Type": "CWE-200",
        "Description": "The default configuration of a TreeGrid component uses Object::toString as a key on the client-side and server communication in Vaadin 14.8.5 through 14.8.9, 22.0.6 through 22.0.14, 23.0.0.beta2 through 23.0.8 and 23.1.0.alpha1 through 23.1.0.alpha4, resulting in potential information disclosure of values that should not be available on the client-side.",
        "URL": "https://github.com/vaadin/flow-components/pull/3046",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8fe08611e304779df01ecd6306d478a9c0edced0",
        "inducing_commit_hash_pyszz": [
            "7b0891aab8f3399c91d9fd1fbab1f7ae25ea99ef"
        ],
        "inducing_commit_hash_pd": [
            "2840596f2a781cb0d898001b7dd8b3af821a0d7e",
            "7b0891aab8f3399c91d9fd1fbab1f7ae25ea99ef"
        ],
        "matched": [
            "7b0891aab8f3399c91d9fd1fbab1f7ae25ea99ef"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2018-25007",
        "Problem_Type": "CWE-754",
        "Description": "Missing check in UIDL request handler in com.vaadin:flow-server versions 1.0.0 through 1.0.5 (Vaadin 10.0.0 through 10.0.7, and 11.0.0 through 11.0.2) allows attacker to update element property values via crafted synchronization message.",
        "URL": "https://github.com/vaadin/flow/pull/4774",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d58da92fb10d94217b720ec17b8dd0858ef726e7",
        "inducing_commit_hash_pyszz": [
            "73704c21ed3f31cd26d9e1e1f7b66e3c89b7fe73"
        ],
        "inducing_commit_hash_pd": [
            "ba6814de39d1a4adf36df70f3ec6a7d19b1008b2",
            "5b66bb949225f84cd0afd8b824a03509eb44379d",
            "73704c21ed3f31cd26d9e1e1f7b66e3c89b7fe73",
            "f32349aefef1f23a807b591c7099e2794cb49903",
            "ad3b31d1b7a1ff89ac0a95ba41d2b02c69cff6e2",
            "a763dace4efea549e23a4391366f68527d09cd96",
            "c41a7fce87a1c27df922cb2f61e806e6afc26aae",
            "c968c9dca5335e327fceffc703bbe2da04e92038"
        ],
        "matched": [
            "73704c21ed3f31cd26d9e1e1f7b66e3c89b7fe73"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2020-36319",
        "Problem_Type": "CWE-668",
        "Description": "Insecure configuration of default ObjectMapper in com.vaadin:flow-server versions 3.0.0 through 3.0.5 (Vaadin 15.0.0 through 15.0.4) may expose sensitive data if the application also uses e.g. @RestController",
        "URL": "https://github.com/vaadin/flow/pull/8051",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e9e27c3a249d6b2d78dc7a7c16ea2b76f17fd51e",
        "inducing_commit_hash_pyszz": [
            "7222c96b1c5da51e56061cc5ae6d32f9a5876bc3"
        ],
        "inducing_commit_hash_pd": [
            "7222c96b1c5da51e56061cc5ae6d32f9a5876bc3"
        ],
        "matched": [
            "7222c96b1c5da51e56061cc5ae6d32f9a5876bc3"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2020-36319",
        "Problem_Type": "CWE-668",
        "Description": "Insecure configuration of default ObjectMapper in com.vaadin:flow-server versions 3.0.0 through 3.0.5 (Vaadin 15.0.0 through 15.0.4) may expose sensitive data if the application also uses e.g. @RestController",
        "URL": "https://github.com/vaadin/flow/pull/8016",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7222c96b1c5da51e56061cc5ae6d32f9a5876bc3",
        "inducing_commit_hash_pyszz": [
            "b0afe77d301ba087650453e119b61fdcd8aedbc4"
        ],
        "inducing_commit_hash_pd": [
            "d4299d6852a4236851e550d484373afda0e3b79f",
            "dc9b74e1834f7c63308667d028fb4c54ac80c2c2",
            "b0afe77d301ba087650453e119b61fdcd8aedbc4"
        ],
        "matched": [
            "b0afe77d301ba087650453e119b61fdcd8aedbc4"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2020-36321",
        "Problem_Type": "CWE-22",
        "Description": "Improper URL validation in development mode handler in com.vaadin:flow-server versions 2.0.0 through 2.4.1 (Vaadin 14.0.0 through 14.4.2), and 3.0 prior to 5.0 (Vaadin 15 prior to 18) allows attacker to request arbitrary files stored outside of intended frontend resources folder.",
        "URL": "https://github.com/vaadin/flow/pull/9392",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "19fe3864f9d1567c5ac7a211189986ac093e781f",
        "inducing_commit_hash_pyszz": [
            "90d4411e126928e75c75ec060e36622d174571bb"
        ],
        "inducing_commit_hash_pd": [
            "90d4411e126928e75c75ec060e36622d174571bb"
        ],
        "matched": [
            "90d4411e126928e75c75ec060e36622d174571bb"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31404",
        "Problem_Type": "CWE-203",
        "Description": "Non-constant-time comparison of CSRF tokens in UIDL request handler in com.vaadin:flow-server versions 1.0.0 through 1.0.13 (Vaadin 10.0.0 through 10.0.16), 1.1.0 prior to 2.0.0 (Vaadin 11 prior to 14), 2.0.0 through 2.4.6 (Vaadin 14.0.0 through 14.4.6), 3.0.0 prior to 5.0.0 (Vaadin 15 prior to 18), and 5.0.0 through 5.0.2 (Vaadin 18.0.0 through 18.0.5) allows attacker to guess a security token via timing attack.",
        "URL": "https://github.com/vaadin/flow/pull/9875",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "292b3a0b1d68b34d9b824e5afe62deb7b32e1ebb",
        "inducing_commit_hash_pyszz": [
            "6e8f181c8cb972ae98c042c517cc01203f5ed3b8"
        ],
        "inducing_commit_hash_pd": [
            "6e8f181c8cb972ae98c042c517cc01203f5ed3b8"
        ],
        "matched": [
            "6e8f181c8cb972ae98c042c517cc01203f5ed3b8"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31406",
        "Problem_Type": "CWE-203",
        "Description": "Non-constant-time comparison of CSRF tokens in endpoint request handler in com.vaadin:flow-server versions 3.0.0 through 5.0.3 (Vaadin 15.0.0 through 18.0.6), and com.vaadin:fusion-endpoint version 6.0.0 (Vaadin 19.0.0) allows attacker to guess a security token for Fusion endpoints via timing attack.",
        "URL": "https://github.com/vaadin/flow/pull/10157",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "11a6ad2ddf9b9bf91dd28515784d26c9ff5c6274",
        "inducing_commit_hash_pyszz": [
            "5a385294ad6d12f81da3244d9941c0373587d6fa"
        ],
        "inducing_commit_hash_pd": [
            "5a385294ad6d12f81da3244d9941c0373587d6fa"
        ],
        "matched": [
            "5a385294ad6d12f81da3244d9941c0373587d6fa"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31407",
        "Problem_Type": "CWE-668",
        "Description": "Vulnerability in OSGi integration in com.vaadin:flow-server versions 1.2.0 through 2.4.7 (Vaadin 12.0.0 through 14.4.9), and 6.0.0 through 6.0.1 (Vaadin 19.0.0) allows attacker to access application classes and resources on the server via crafted HTTP request.",
        "URL": "https://github.com/vaadin/flow/pull/10269",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "37e5a0ff0bb7365aa4485f2550fa6aa99f78974c",
        "inducing_commit_hash_pyszz": [
            "88ed9589665e3043625fdeff2e99b1d33e234c53"
        ],
        "inducing_commit_hash_pd": [
            "b70c575d671cc4d33327d483bace3ed8bf070d99",
            "2a4c6e6e0455fb9ad7db1a423944971cb28dc636",
            "8c37e416e2269b52dfebf2715f138ae06779a23b",
            "79138780248d8a4c3e0096d8f55a3188b0f0e739",
            "88ed9589665e3043625fdeff2e99b1d33e234c53",
            "fce03ee20947a1ca10e382b2d295dd697064c503",
            "0acf4b7c7716d10185bbb2118cad27d60bfdfea5"
        ],
        "matched": [
            "88ed9589665e3043625fdeff2e99b1d33e234c53"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31407",
        "Problem_Type": "CWE-668",
        "Description": "Vulnerability in OSGi integration in com.vaadin:flow-server versions 1.2.0 through 2.4.7 (Vaadin 12.0.0 through 14.4.9), and 6.0.0 through 6.0.1 (Vaadin 19.0.0) allows attacker to access application classes and resources on the server via crafted HTTP request.",
        "URL": "https://github.com/vaadin/flow/pull/10229",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "168a9f895a85c6239dae7a704ac61c55328b32d1",
        "inducing_commit_hash_pyszz": [
            "c581668c894e3527e5f727d64bdc97f690d03901"
        ],
        "inducing_commit_hash_pd": [
            "0acf4b7c7716d10185bbb2118cad27d60bfdfea5",
            "c0595e686c7902a19c6d9f5785991f6716060b8e",
            "187a652bb977535e935ea2ffe8f25c58598de25a",
            "47e9a17b337d0099c31defec9e7786d23fa0570f",
            "af386410d9af27b66813352c4994afdc0b6f2ee0",
            "5c481e25354e23b56fcaa158c14774dc57827b2b",
            "fe97bc649436ea2d75e82fbb4a47029eea958624",
            "90d4411e126928e75c75ec060e36622d174571bb",
            "5703853db8142ea2f6ecf928fa1b6c91ad42739f",
            "18ee55985eaafba645535560d0ee7954406e2aa3",
            "bbfa1e7e655e35f5c2d280248899eab3e92ac0e7",
            "c581668c894e3527e5f727d64bdc97f690d03901",
            "d69c44539dcf86ecce4bb5a399e137276bc3f1ba",
            "b89af1bd28f83daa86f7c149659af611cec65aed"
        ],
        "matched": [
            "c581668c894e3527e5f727d64bdc97f690d03901"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31408",
        "Problem_Type": "CWE-613",
        "Description": "Authentication.logout() helper in com.vaadin:flow-client versions 5.0.0 prior to 6.0.0 (Vaadin 18), and 6.0.0 through 6.0.4 (Vaadin 19.0.0 through 19.0.3) uses incorrect HTTP method, which, in combination with Spring Security CSRF protection, allows local attackers to access Fusion endpoints after the user attempted to log out.",
        "URL": "https://github.com/vaadin/flow/pull/10577",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6bd42f61b57573243d5223207a9bc6949bbe7a35",
        "inducing_commit_hash_pyszz": [
            "ff8dcacab55a6385150e236450c02a04e0ae038e"
        ],
        "inducing_commit_hash_pd": [
            "ff8dcacab55a6385150e236450c02a04e0ae038e",
            "0467a2f9c8647513ece59b219c6e06c5becf3221",
            "a8c709e434c7dfb2090e5094e28c425238f8be5b"
        ],
        "matched": [
            "ff8dcacab55a6385150e236450c02a04e0ae038e"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31411",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Insecure temporary directory usage in frontend build functionality of com.vaadin:flow-server versions 2.0.9 through 2.5.2 (Vaadin 14.0.3 through Vaadin 14.5.2), 3.0 prior to 6.0 (Vaadin 15 prior to 19), and 6.0.0 through 6.0.5 (Vaadin 19.0.0 through 19.0.4) allows local users to inject malicious code into frontend resources during application rebuilds.",
        "URL": "https://github.com/vaadin/flow/pull/10640",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dde115adfbcc9484e60a34d603251edf94fae529",
        "inducing_commit_hash_pyszz": [
            "c24193ab9a4e32ed2199fb2fdf81445ad7876a63"
        ],
        "inducing_commit_hash_pd": [
            "997de5cc91492dd5907dc6b64014d6dac38e3b51",
            "c24193ab9a4e32ed2199fb2fdf81445ad7876a63"
        ],
        "matched": [
            "c24193ab9a4e32ed2199fb2fdf81445ad7876a63"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-31412",
        "Problem_Type": "CWE-20",
        "Description": "Improper sanitization of path in default RouteNotFoundError view in com.vaadin:flow-server versions 1.0.0 through 1.0.14 (Vaadin 10.0.0 through 10.0.18), 1.1.0 prior to 2.0.0 (Vaadin 11 prior to 14), 2.0.0 through 2.6.1 (Vaadin 14.0.0 through 14.6.1), and 3.0.0 through 6.0.9 (Vaadin 15.0.0 through 19.0.8) allows network attacker to enumerate all available routes via crafted HTTP request when application is running in production mode and no custom handler for NotFoundException is provided.",
        "URL": "https://github.com/vaadin/flow/pull/11107",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "16a5f20a80a3c271270d522198779046fd27f201",
        "inducing_commit_hash_pyszz": [
            "cbff62c70c852185852a32d849db2040b5aebae5"
        ],
        "inducing_commit_hash_pd": [
            "cbff62c70c852185852a32d849db2040b5aebae5"
        ],
        "matched": [
            "cbff62c70c852185852a32d849db2040b5aebae5"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2021-33604",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "URL encoding error in development mode handler in com.vaadin:flow-server versions 2.0.0 through 2.6.1 (Vaadin 14.0.0 through 14.6.1), 3.0.0 through 6.0.9 (Vaadin 15.0.0 through 19.0.8) allows local user to execute arbitrary JavaScript code by opening crafted URL in browser.",
        "URL": "https://github.com/vaadin/flow/pull/11099",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f18ea9a4e4f9d2347d24e7e98fdefe84a3cfbed1",
        "inducing_commit_hash_pyszz": [
            "dedb8dd1e643e09bc977ffc0c0a6c4a3928b38ed"
        ],
        "inducing_commit_hash_pd": [
            "ff8dcacab55a6385150e236450c02a04e0ae038e",
            "8d5ed197eca27ce310dbeb1cef954120ea637f8b",
            "19fe3864f9d1567c5ac7a211189986ac093e781f"
        ],
        "matched": [
            "dedb8dd1e643e09bc977ffc0c0a6c4a3928b38ed"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2023-25499",
        "Problem_Type": "CWE-200",
        "Description": "When adding non-visible components to the UI in server side, content is sent to the browser in Vaadin 10.0.0 through 10.0.22, 11.0.0 through 14.10.0, 15.0.0 through 22.0.28, 23.0.0 through 23.3.12, 24.0.0 through 24.0.5 and 24.1.0.alpha1 to 24.1.0.beta1, resulting in potential information disclosure.\n\n",
        "URL": "https://github.com/vaadin/flow/pull/15885",
        "Tag": "['Patch']",
        "fix_commit_hash": "eab4f09bf64db9cdc8277464560af3c4c8e188b1",
        "inducing_commit_hash_pyszz": [
            "16b81987eec54f72aa21accc4b84d9600608eab3"
        ],
        "inducing_commit_hash_pd": [
            "16b81987eec54f72aa21accc4b84d9600608eab3",
            "a866a512fa8c1b352e7faa96f6e07a94fe9c9a97",
            "ea191f1570449823eaed485b4c00a178f4847dd1"
        ],
        "matched": [
            "16b81987eec54f72aa21accc4b84d9600608eab3"
        ]
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2023-25500",
        "Problem_Type": "CWE-200",
        "Description": "Possible information disclosure in Vaadin 10.0.0 to 10.0.23, 11.0.0 to 14.10.1, 15.0.0 to 22.0.28, 23.0.0 to 23.3.13, 24.0.0 to 24.0.6, 24.1.0.alpha1 to 24.1.0.rc2, resulting in potential information disclosure of class and method names in RPC responses by sending modified requests.",
        "URL": "https://github.com/vaadin/flow/pull/16935",
        "Tag": "['Patch']",
        "fix_commit_hash": "43241d420f2641da1b7f1d2630ca3f4fbdf679ac",
        "inducing_commit_hash_pyszz": [
            "850b08baa726487872961861af1124acffe2dc2a"
        ],
        "inducing_commit_hash_pd": [
            "e46e7949d9b547bc87af12bd1405e33c23255858"
        ],
        "matched": [
            "850b08baa726487872961861af1124acffe2dc2a"
        ]
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2020-36320",
        "Problem_Type": "CWE-400",
        "Description": "Unsafe validation RegEx in EmailValidator class in com.vaadin:vaadin-server versions 7.0.0 through 7.7.21 (Vaadin 7.0.0 through 7.7.21) allows attackers to cause uncontrolled resource consumption by submitting malicious email addresses.",
        "URL": "https://github.com/vaadin/framework/pull/12104",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "17f5c1b6693892e00a4c2379d621043ef077f24e",
        "inducing_commit_hash_pyszz": [
            "f7dcedfd372eb05d68feec7bc0dc7a3e0a59d721"
        ],
        "inducing_commit_hash_pd": [
            "c5c52684eb30d924cb75a632b526a0f879d5a33c",
            "f7dcedfd372eb05d68feec7bc0dc7a3e0a59d721"
        ],
        "matched": [
            "f7dcedfd372eb05d68feec7bc0dc7a3e0a59d721"
        ]
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2021-31403",
        "Problem_Type": "CWE-203",
        "Description": "Non-constant-time comparison of CSRF tokens in UIDL request handler in com.vaadin:vaadin-server versions 7.0.0 through 7.7.23 (Vaadin 7.0.0 through 7.7.23), and 8.0.0 through 8.12.2 (Vaadin 8.0.0 through 8.12.2) allows attacker to guess a security token via timing attack",
        "URL": "https://github.com/vaadin/framework/pull/12188",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7cb91b3b9995c92bfd2bfb694669f02d7fa44618",
        "inducing_commit_hash_pyszz": [
            "2c8aa65c72d424c60da57ddb39e09a8cc3b6269a"
        ],
        "inducing_commit_hash_pd": [
            "24d24b249d1ef44c3b1be460e8e390df90d2b2d9",
            "27adc89f9fecb182b1e7e95bbe4b2d68298dc57c"
        ],
        "matched": [
            "2c8aa65c72d424c60da57ddb39e09a8cc3b6269a"
        ]
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2021-31403",
        "Problem_Type": "CWE-203",
        "Description": "Non-constant-time comparison of CSRF tokens in UIDL request handler in com.vaadin:vaadin-server versions 7.0.0 through 7.7.23 (Vaadin 7.0.0 through 7.7.23), and 8.0.0 through 8.12.2 (Vaadin 8.0.0 through 8.12.2) allows attacker to guess a security token via timing attack",
        "URL": "https://github.com/vaadin/framework/pull/12190",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a26eb8d4c63816eae9579c661712e47fa6fa0e18",
        "inducing_commit_hash_pyszz": [
            "24d24b249d1ef44c3b1be460e8e390df90d2b2d9"
        ],
        "inducing_commit_hash_pd": [
            "24d24b249d1ef44c3b1be460e8e390df90d2b2d9"
        ],
        "matched": [
            "24d24b249d1ef44c3b1be460e8e390df90d2b2d9"
        ]
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2021-31409",
        "Problem_Type": "CWE-400",
        "Description": "Unsafe validation RegEx in EmailValidator component in com.vaadin:vaadin-compatibility-server versions 8.0.0 through 8.12.4 (Vaadin versions 8.0.0 through 8.12.4) allows attackers to cause uncontrolled resource consumption by submitting malicious email addresses.",
        "URL": "https://github.com/vaadin/framework/pull/12241",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "754ca011d79af3dd4fa9046ff0ade5367f5e6246",
        "inducing_commit_hash_pyszz": [
            "b773d40aba496300c2948b4f7bb579a7e2470503"
        ],
        "inducing_commit_hash_pd": [
            "6d54d78944f6c3278eed3bb5e7ee19687ee5714e",
            "f7dcedfd372eb05d68feec7bc0dc7a3e0a59d721",
            "b773d40aba496300c2948b4f7bb579a7e2470503"
        ],
        "matched": [
            "b773d40aba496300c2948b4f7bb579a7e2470503"
        ]
    },
    {
        "repo_name": "vaadin/vaadin-menu-bar",
        "CVE_ID": "CVE-2021-33611",
        "Problem_Type": "CWE-79",
        "Description": "Missing output sanitization in test sources in org.webjars.bowergithub.vaadin:vaadin-menu-bar versions 1.0.0 through 1.2.0 (Vaadin 14.0.0 through 14.4.4) allows remote attackers to execute malicious JavaScript in browser by opening crafted URL",
        "URL": "https://github.com/vaadin/vaadin-menu-bar/pull/126",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62334c8d30ba8b11809542deee81025c7e0c4f44",
        "inducing_commit_hash_pyszz": [
            "c5ffa070bbffe61e87170f5179184af1c3f7448a"
        ],
        "inducing_commit_hash_pd": [
            "ee03682882045f3d0102fe3e0be3777994b9a45b",
            "6f1cb55fbcb96c3097d6fe5053269501187b5912",
            "75713c613a31da47070c5f0712a5ed93763b1128",
            "c5ffa070bbffe61e87170f5179184af1c3f7448a",
            "7dab71fe3dd8791a0ed6113a40fb589bc33f7eac"
        ],
        "matched": [
            "c5ffa070bbffe61e87170f5179184af1c3f7448a"
        ]
    },
    {
        "repo_name": "Velocidex/velociraptor",
        "CVE_ID": "CVE-2021-3619",
        "Problem_Type": "CWE-79",
        "Description": "Rapid7 Velociraptor 0.5.9 and prior is vulnerable to a post-authentication persistent cross-site scripting (XSS) issue, where an authenticated user could abuse MIME filetype sniffing to embed executable code on a malicious upload. This issue was fixed in version 0.6.0. Note that login rights to Velociraptor is nearly always reserved for trusted and verified users with IT security backgrounds.",
        "URL": "https://github.com/Velocidex/velociraptor/pull/1118",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "03d83c60be8e92065b33d213671b0c587e198701",
        "inducing_commit_hash_pyszz": [
            "bfe58817ae499870c4571ad192d9b09aeede0ef7"
        ],
        "inducing_commit_hash_pd": [
            "a1000013fd75d4b93a0a9cf4ff10bf29ddaacf9e",
            "bfe58817ae499870c4571ad192d9b09aeede0ef7",
            "5cb1c84ab698fd9e562c40e4de49ec7776d4eb59",
            "004aa53003e79509e8556d389b11316bdd74b9d3",
            "54d878fd57a9250b44965429750a4d20e7850b3e",
            "8fba241e0719b6025631b92a6ee2e28679db2144"
        ],
        "matched": [
            "bfe58817ae499870c4571ad192d9b09aeede0ef7"
        ]
    },
    {
        "repo_name": "vercel/ms",
        "CVE_ID": "CVE-2017-20162",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The patch is named caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.",
        "URL": "https://github.com/vercel/ms/pull/89",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "caae2988ba2a37765d055c4eee63d383320ee662",
        "inducing_commit_hash_pyszz": [
            "8e333857f4c0723bc73c3035bff9cea23532c824"
        ],
        "inducing_commit_hash_pd": [
            "8e333857f4c0723bc73c3035bff9cea23532c824"
        ],
        "matched": [
            "8e333857f4c0723bc73c3035bff9cea23532c824"
        ]
    },
    {
        "repo_name": "vercel/next.js",
        "CVE_ID": "CVE-2022-21721",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Next.js is a React framework. Starting with version 12.0.0 and prior to version 12.0.9, vulnerable code could allow a bad actor to trigger a denial of service attack for anyone using i18n functionality. In order to be affected by this CVE, one must use next start or a custom server and the built-in i18n support. Deployments on Vercel, along with similar environments where invalid requests are filtered before reaching Next.js, are not affected. A patch has been released, `next@12.0.9`, that mitigates this issue. As a workaround, one may ensure `/${locale}/_next/` is blocked from reaching the Next.js instance until it becomes feasible to upgrade.",
        "URL": "https://github.com/vercel/next.js/pull/33503",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "69524c290d8c7205cbec9227815e06ab90f21b74",
        "inducing_commit_hash_pyszz": [
            "3e00a81edeb1da513567456813aa529d92d39d60"
        ],
        "inducing_commit_hash_pd": [
            "c004322d138e1949437efb0b80e0973f3a3775cf",
            "3d94ae0a7d3034c86f0a33904c8625f6ff92a9b8",
            "3e00a81edeb1da513567456813aa529d92d39d60"
        ],
        "matched": [
            "3e00a81edeb1da513567456813aa529d92d39d60"
        ]
    },
    {
        "repo_name": "vercel/next.js",
        "CVE_ID": "CVE-2022-23646",
        "Problem_Type": "CWE-451",
        "Description": "Next.js is a React framework. Starting with version 10.0.0 and prior to version 12.1.0, Next.js is vulnerable to User Interface (UI) Misrepresentation of Critical Information. In order to be affected, the `next.config.js` file must have an `images.domains` array assigned and the image host assigned in `images.domains` must allow user-provided SVG. If the `next.config.js` file has `images.loader` assigned to something other than default, the instance is not affected. Version 12.1.0 contains a patch for this issue. As a workaround, change `next.config.js` to use a different `loader configuration` other than the default.",
        "URL": "https://github.com/vercel/next.js/pull/34075",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "130f8645a2db18527142a7764eaa5e649183cc74",
        "inducing_commit_hash_pyszz": [
            "7cd9de34da3dcf182334ba03c0f3db405989a799"
        ],
        "inducing_commit_hash_pd": [
            "ebb6a303700df09b83ebe49f23b7641c9573377c",
            "9b295f5a26bc93f95f856e7f0de0828443473bc4",
            "bbdebd4f57bf2a03b6ca4e475b626877ecd6c879",
            "b11bd49239b42e6deb218e08a6603f8ad4a98ed6",
            "16b5bfa78ea0bb68e49f7527d0398ee9e6696ead",
            "377aa4b6509b5ef5a2ebc8af68dd920351c172fa",
            "cbc52d1b314114f29064949ed71ea5255b3b8b78",
            "0dff7def7ac95407f36c3fd4c8a33e6d61c0b1e2",
            "5b9ad8da909a7870280c39340c189392d6307994",
            "5c350668209c5b8ee9b78364019a761e2dc18cfe",
            "0d5baf2c70eec21b92b75a2c2c2ea1fd9c3aa8c7",
            "13893395dc6d97ecbbc4ed75f531fc9fc5902d2a",
            "d670198e7c8b2d8d40080f7dbd6f29df710f6a82",
            "fc75baeb3c42e83ebed3d08e05ef06fb50a2d17b",
            "63aeddbbe04211416ba99f658c3590e9b1b1424c",
            "cc1f3b8a38645726c6ec1d9c6c843f0a200adcf0",
            "31c3f3363963486da3f0c38ad1b9c5e48480b19b",
            "98211405a60d286a8769dc1b76723016153355a6",
            "7b77415f3c0c5651eb89e090d8a38b4f46198b67",
            "b610db830ef1ef2458c3c75ba1955b57b7291264",
            "2ed54cddfa213b4353696214994025792e27c64a",
            "5dbb8704cc6780e377e68574a4aa55352b873b6b",
            "1b733423d6d812a8bc9bd47ef87769c3599e7127",
            "114de064325d06d80287836fa6b453c62014356c",
            "cb8da5778ecedf638da477eb0ea91bcae8b74077",
            "c551a329d53ecb1f4543b71cae9672fb8f40ccc1",
            "9573426599860dd839b25eec2a27fec2c9d85f5a",
            "2373320fc859af3424a8ab7e211b8292e3aafa67",
            "d3741d5ec573447d17701b36a9b11f9621bb4156",
            "ce9c6b79f1037c2e2e1836c9be007a8cf2c7decb",
            "53123ad61f05b1a70051249d9d7768aba784d481",
            "b123942694ec729c7ebf97b329125385226160db",
            "ac8a0c48365568dded9d834b21671eaf5b141fc3",
            "a79eb4fd51798d06ef33d2a6b9094ae8b38cabb5",
            "33eac8acfa1ac752a3797eb6b385f026f4e9a6cb",
            "3ab5d600d3bf1c025da652affe04a06628d77790",
            "8151a7e0dc9a029a9c4261901d333f67d23f718f",
            "9fcfce3463095af63e93251ae12f5cac8344aa7f",
            "5d606ebae42469ebd2c3e2bc4f94266525c59315",
            "5562daf7a160e62fd4f78eca257ba957ad64074c",
            "1d347ba5dc4c863991d374cda29efef6f82db80a",
            "44b4dbcd419b592bea354161a309e0f74dfa67d1",
            "5572eb39880f88be7de815fe39faba739110c7d4",
            "e3e62aa78673f8819583f56eb43c5cc9b4b9dd78",
            "3e00a81edeb1da513567456813aa529d92d39d60",
            "7cd9de34da3dcf182334ba03c0f3db405989a799",
            "eabecf3d0af18f598e1246feb3ddcc4150212bf9",
            "241a916e03df4f032ec715ad518d01292652815c",
            "36b81f989c01bf8bbf823de8d2677d98b82390fe",
            "ccb62f8636f3f4a25d7ea58edd3d9747cd6c0f99",
            "99a4ea6e9a3a4a591d2a57c7b8f906d5ff30fd63",
            "530b14616f64071b7207fb7aa0184673eae74fd6",
            "2027d1fe7d7619ce8073e9b112c0e4abdc7d2d17",
            "ca65fd8f8784389876cd9419480ae6086b0ca502",
            "83de34239c8403be19b744d1fbec4b1003e9f80e",
            "e1184fb0607363f710f40de02130e95b6c58b563"
        ],
        "matched": [
            "7cd9de34da3dcf182334ba03c0f3db405989a799"
        ]
    },
    {
        "repo_name": "videolan/vlc-ios",
        "CVE_ID": "CVE-2018-19937",
        "Problem_Type": "CWE-287",
        "Description": "A local, authenticated attacker can bypass the passcode in the VideoLAN VLC media player app before 3.1.5 for iOS by opening a URL and turning the phone.",
        "URL": "https://github.com/videolan/vlc-ios/pull/178/commits/d84d7c0a94eb7fba202d2c5fc3739276d2d3986f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ViewComponent/view_component",
        "CVE_ID": "CVE-2024-21636",
        "Problem_Type": "CWE-79",
        "Description": "view_component is a framework for building reusable, testable, and encapsulated view components in Ruby on Rails. Versions prior to 3.9.0 and 2.83.0 have a cross-site scripting vulnerability that has the potential to impact anyone rendering a component directly from a controller with the view_component gem. Note that only components that define a `#call` method (i.e. instead of using a sidecar template) are affected. The return value of the `#call` method is not sanitized and can include user-defined content. In addition, the return value of the `#output_postamble` methodis not sanitized, which can also lead to cross-site scripting issues. Versions 3.9.0 and 2.83.0 have been released and fully mitigate both the `#call` and the `#output_postamble` vulnerabilities. As a workaround, sanitize the return value of `#call`.",
        "URL": "https://github.com/ViewComponent/view_component/pull/1950",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "0d26944a8d2730ea40e60eae23d70684483e5017",
        "inducing_commit_hash_pyszz": [
            "31fafe3ef350f5bfddddbe0c6cfc10a1b2738f5f"
        ],
        "inducing_commit_hash_pd": [
            "6dc77b3e19839bac0e6db2577e1c3f0932177a59",
            "c5ec804d41f7e7e0296963b32275b284f80c6f05",
            "56a6560160795b5941ff67edcb56ea0878ae17fa",
            "537cbdb9be8e8d1fbd99017ff74d1e9f4db980d9",
            "b11ba1f197e71cab1cc0758373a58c9b2e364755",
            "7a2c28452d3470497a30c8d6321b08ef601bbe87",
            "434d7ed9f486a2202b4fa0075e5831386a776f49",
            "31fafe3ef350f5bfddddbe0c6cfc10a1b2738f5f",
            "1aed70907b60cafdff3c98e35189247da859e343",
            "c507dbf24c1f2d9f2e92a2b0bf659506b7bba217",
            "2c6fd61298b0f14a694df483fffee024ec2795c8",
            "a0686ca47feea8a12693ae77b90fabd63b4e7872",
            "b752ddca91c38d5863a40e479d8b323f10da9951",
            "31d95701d4373a3a3f7f33cd314d0d158af5ec3d"
        ],
        "matched": [
            "31fafe3ef350f5bfddddbe0c6cfc10a1b2738f5f"
        ]
    },
    {
        "repo_name": "vim/vim",
        "CVE_ID": "CVE-2023-3896",
        "Problem_Type": "CWE-369",
        "Description": "Divide By Zero in vim/vim from\u00c2\u00a09.0.1367-1 to\u00c2\u00a09.0.1367-3\n",
        "URL": "https://github.com/vim/vim/pull/12540",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "8154e642aa476e1a5d3de66c34e8289845b2b797",
        "inducing_commit_hash_pyszz": [
            "361895d2a15b4b0bbbb4c009261eab5b3d69ebf1"
        ],
        "inducing_commit_hash_pd": [
            "361895d2a15b4b0bbbb4c009261eab5b3d69ebf1"
        ],
        "matched": [
            "361895d2a15b4b0bbbb4c009261eab5b3d69ebf1"
        ]
    },
    {
        "repo_name": "vim/vim",
        "CVE_ID": "CVE-2023-48706",
        "Problem_Type": "CWE-416",
        "Description": "Vim is a UNIX editor that, prior to version 9.0.2121, has a heap-use-after-free vulnerability. When executing a `:s` command for the very first time and using a sub-replace-special atom inside the substitution part, it is possible that the recursive `:s` call causes free-ing of memory which may later then be accessed by the initial `:s` command. The user must intentionally execute the payload and the whole process is a bit tricky to do since it seems to work only reliably for the very first :s command. It may also cause a crash of Vim. Version 9.0.2121 contains a fix for this issue.",
        "URL": "https://github.com/vim/vim/pull/13552",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "26c11c56888d01e298cd8044caf860f3c26f57bb",
        "inducing_commit_hash_pyszz": [
            "18d2709aa12ffa3f6ae1a13059990558c5f8e406"
        ],
        "inducing_commit_hash_pd": [
            "5313dcb75ac76501f23d21ac94efdbeeabc860bc",
            "217e1b8359447f5550dcb0d1ee43380a90c253c5",
            "18d2709aa12ffa3f6ae1a13059990558c5f8e406",
            "071d4279d6ab81b7187b48f3a0fc61e587b6db6c",
            "32acf1f1a72ebb9d8942b9c9d80023bf1bb668ea",
            "37f47958b8a2a44abc60614271d9537e7f14e51a"
        ],
        "matched": [
            "18d2709aa12ffa3f6ae1a13059990558c5f8e406"
        ]
    },
    {
        "repo_name": "vinitkumar/json2xml",
        "CVE_ID": "CVE-2022-25024",
        "Problem_Type": "CWE-754",
        "Description": "The json2xml package through 3.12.0 for Python allows an error in typecode decoding enabling a remote attack that can lead to an exception, causing a denial of service.",
        "URL": "https://github.com/vinitkumar/json2xml/pull/107/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "dc8f15f505d9884364f633469e4086df95ac40fb",
        "inducing_commit_hash_pyszz": [
            "a9cd75b61329801b47a8fba7473bce6c85a38b9b"
        ],
        "inducing_commit_hash_pd": [
            "a9cd75b61329801b47a8fba7473bce6c85a38b9b"
        ],
        "matched": [
            "a9cd75b61329801b47a8fba7473bce6c85a38b9b"
        ]
    },
    {
        "repo_name": "vinitkumar/json2xml",
        "CVE_ID": "CVE-2022-25024",
        "Problem_Type": "CWE-754",
        "Description": "The json2xml package through 3.12.0 for Python allows an error in typecode decoding enabling a remote attack that can lead to an exception, causing a denial of service.",
        "URL": "https://github.com/vinitkumar/json2xml/pull/107",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "dc8f15f505d9884364f633469e4086df95ac40fb",
        "inducing_commit_hash_pyszz": [
            "a9cd75b61329801b47a8fba7473bce6c85a38b9b"
        ],
        "inducing_commit_hash_pd": [
            "a9cd75b61329801b47a8fba7473bce6c85a38b9b"
        ],
        "matched": [
            "a9cd75b61329801b47a8fba7473bce6c85a38b9b"
        ]
    },
    {
        "repo_name": "visionmedia/debug",
        "CVE_ID": "CVE-2017-16137",
        "Problem_Type": "CWE-400",
        "Description": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
        "URL": "https://github.com/visionmedia/debug/pull/504",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c38a0166c266a679c8de012d4eaccec3f944e685",
        "inducing_commit_hash_pyszz": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ],
        "inducing_commit_hash_pd": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ],
        "matched": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ]
    },
    {
        "repo_name": "visjs/vis-timeline",
        "CVE_ID": "CVE-2020-28487",
        "Problem_Type": "CWE-79",
        "Description": "This affects the package vis-timeline before 7.4.4. An attacker with the ability to control the items of a Timeline element can inject additional script code into the generated application.",
        "URL": "https://github.com/visjs/vis-timeline/pull/840",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a7ca349c7b3b6080efd05776ac77bb27176d4d3f",
        "inducing_commit_hash_pyszz": [
            "8cb8d7591f207c87073b25483f217f060e0820d4"
        ],
        "inducing_commit_hash_pd": [
            "5c2866e8c53880a464474148aa610e2a5d44e716",
            "032f8e65154dc4cfee30e81f473fb0d4201faaa4",
            "ee060b6a24367dde70e75d910778a5ccd566ac3d",
            "b421b0eb77be4daeac8b8cf661f538bc17562cb0",
            "808c5a03139b8c119c21e114d8008034e5cbd5ae",
            "8cb8d7591f207c87073b25483f217f060e0820d4",
            "823d5db325271375c556db60ec0f4ca163078f83",
            "28bf8d045da8c6231e665725a27d771b5878c066",
            "8a5c965c90542915d9ef6a70fbee90b01bb3013e",
            "22f593618e91a07e4165d4c3568db8581cb44b77",
            "7c9bdbe46f830a80230a083ad69e93ee7cfc3c91",
            "918ac7ef1d30e511d4ec7da46c18748c3934c93c",
            "742c289a83ac3e229bea6947a89888ad63968140",
            "38c71921d910b556319867bfa1f09f824e6b6dfa",
            "7c805819f466ac5b5d6ba49cf7f422f0488544c3",
            "d535f69ab067fa55f06c2f2f8f95ef9019db5bb2",
            "f718d3442df9a2cb1f1b890d758c77e4e369f131",
            "16ab9b8ea008a1708e0746b85ebcde5799a06992",
            "b037a34fe12b1ae0bb92d769ebb7236e60f006b6",
            "1e0c16c6d6dedef69ce5cc29b6f600bc8f965d8e",
            "f90b5fa5a97c59ad47d21ae9479e53c8ef73cc03",
            "4053eb032e57b870e286929a3e10512eb02d872d"
        ],
        "matched": [
            "8cb8d7591f207c87073b25483f217f060e0820d4"
        ]
    },
    {
        "repo_name": "vitejs/vite",
        "CVE_ID": "CVE-2023-34092",
        "Problem_Type": "CWE-706",
        "Description": "Vite provides frontend tooling. Prior to versions 2.9.16, 3.2.7, 4.0.5, 4.1.5, 4.2.3, and 4.3.9, Vite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default `fs.deny` settings (`['.env', '.env.*', '*.{crt,pem}']`). Only users explicitly exposing the Vite dev server to the network (using `--host` or `server.host` config option) are affected, and only files in the immediate Vite project root folder could be exposed. This issue is fixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5, vite@3.2.7, and vite@2.9.16.",
        "URL": "https://github.com/vitejs/vite/pull/13348",
        "Tag": "['Patch']",
        "fix_commit_hash": "813ddd6155c3d54801e264ba832d8347f6f66b32",
        "inducing_commit_hash_pyszz": [
            "2f468bb33c9f55efa703363fefa0aa99dbf63929"
        ],
        "inducing_commit_hash_pd": [
            "2f468bb33c9f55efa703363fefa0aa99dbf63929",
            "28cffc94d2cc7dc4932121d8ef835f97f6b0c25e"
        ],
        "matched": [
            "2f468bb33c9f55efa703363fefa0aa99dbf63929"
        ]
    },
    {
        "repo_name": "vitessio/vitess",
        "CVE_ID": "CVE-2023-29195",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Vitess is a database clustering system for horizontal scaling of MySQL through generalized sharding. Prior to version 16.0.2, users can either intentionally or inadvertently create a shard containing `/` characters from VTAdmin such that from that point on, anyone who tries to create a new shard from VTAdmin will receive an error. Attempting to view the keyspace(s) will also no longer work. Creating a shard using `vtctldclient` does not have the same problem because the CLI validates the input correctly. Version 16.0.2, corresponding to version 0.16.2 of the `go` module, contains a patch for this issue. Some workarounds are available. Always use `vtctldclient` to create shards, instead of using VTAdmin; disable creating shards from VTAdmin using RBAC; and/or delete the topology record for the offending shard using the client for your topology server.",
        "URL": "https://github.com/vitessio/vitess/pull/12843",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "361b958d3a54ccc32500cada716417d83fc5446b",
        "inducing_commit_hash_pyszz": [
            "2d55c12b6268ca300870587e0890481d3769475f"
        ],
        "inducing_commit_hash_pd": [
            "c9b6d608f700d975105fb400557daa7aa9c30386"
        ],
        "matched": [
            "2d55c12b6268ca300870587e0890481d3769475f"
        ]
    },
    {
        "repo_name": "void-linux/void-packages",
        "CVE_ID": "CVE-2019-19882",
        "Problem_Type": "CWE-732",
        "Description": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
        "URL": "https://github.com/void-linux/void-packages/pull/17580",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e095c789e2c0326a1c11b5738835d34b8ba9ed00",
        "inducing_commit_hash_pyszz": [
            "316a6fc5616185788d4ffc21c28f5267f19259d6"
        ],
        "inducing_commit_hash_pd": [
            "316a6fc5616185788d4ffc21c28f5267f19259d6",
            "de410a8ae5f10cee848eb29d3d50b9f2b01ee6bf"
        ],
        "matched": [
            "316a6fc5616185788d4ffc21c28f5267f19259d6"
        ]
    },
    {
        "repo_name": "vran-dev/databasir",
        "CVE_ID": "CVE-2022-24861",
        "Problem_Type": "CWE-20",
        "Description": "Databasir is a team-oriented relational database model document management platform. Databasir 1.01 has remote code execution vulnerability. JDBC drivers are not validated prior to use and may be provided by users of the system. This can lead to code execution by any basic user who has access to the system. Users are advised to upgrade. There are no known workarounds to this issue.",
        "URL": "https://github.com/vran-dev/databasir/pull/103",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ca22a8fef7a31c0235b0b2951260a7819b89993b",
        "inducing_commit_hash_pyszz": [
            "0db5ad21535ef56db6f1a24c0ead42d511236386"
        ],
        "inducing_commit_hash_pd": [
            "0333ecc8aed5b683864c6d91cd21d59060e47517",
            "61e570819613cfbe0b3f214f290b73051cd68051",
            "c6f0581b7cd770ecc509da1223e318aa91b660c4",
            "2790c825790c4285d36c5e6d3e972e3d8a708c20",
            "0db5ad21535ef56db6f1a24c0ead42d511236386"
        ],
        "matched": [
            "0db5ad21535ef56db6f1a24c0ead42d511236386"
        ]
    },
    {
        "repo_name": "vyperlang/vyper",
        "CVE_ID": "CVE-2023-39363",
        "Problem_Type": "CWE-863",
        "Description": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine (EVM). In versions 0.2.15, 0.2.16 and 0.3.0, named re-entrancy locks are allocated incorrectly. Each function using a named re-entrancy lock gets a unique lock regardless of the key, allowing cross-function re-entrancy in contracts compiled with the susceptible versions. A specific set of conditions is required to result in misbehavior of affected contracts, specifically: a `.vy` contract compiled with `vyper` versions `0.2.15`, `0.2.16`, or `0.3.0`; a primary function that utilizes the `@nonreentrant` decorator with a specific `key` and does not strictly follow the check-effects-interaction pattern (i.e. contains an external call to an untrusted party before storage updates); and a secondary function that utilizes the same `key` and would be affected by the improper state caused by the primary function. Version 0.3.1 contains a fix for this issue.",
        "URL": "https://github.com/vyperlang/vyper/pull/2514",
        "Tag": "['Patch']",
        "fix_commit_hash": "25aa67e5f600c6bc14c10aa0371d8e65f102f2c4",
        "inducing_commit_hash_pyszz": [
            "b3c8c27619333a5be0974eaafdccb363923968f9"
        ],
        "inducing_commit_hash_pd": [
            "b3c8c27619333a5be0974eaafdccb363923968f9"
        ],
        "matched": [
            "b3c8c27619333a5be0974eaafdccb363923968f9"
        ]
    },
    {
        "repo_name": "vyperlang/vyper",
        "CVE_ID": "CVE-2023-39363",
        "Problem_Type": "CWE-863",
        "Description": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine (EVM). In versions 0.2.15, 0.2.16 and 0.3.0, named re-entrancy locks are allocated incorrectly. Each function using a named re-entrancy lock gets a unique lock regardless of the key, allowing cross-function re-entrancy in contracts compiled with the susceptible versions. A specific set of conditions is required to result in misbehavior of affected contracts, specifically: a `.vy` contract compiled with `vyper` versions `0.2.15`, `0.2.16`, or `0.3.0`; a primary function that utilizes the `@nonreentrant` decorator with a specific `key` and does not strictly follow the check-effects-interaction pattern (i.e. contains an external call to an untrusted party before storage updates); and a secondary function that utilizes the same `key` and would be affected by the improper state caused by the primary function. Version 0.3.1 contains a fix for this issue.",
        "URL": "https://github.com/vyperlang/vyper/pull/2439",
        "Tag": "['Patch']",
        "fix_commit_hash": "eae0eaf86eb462746e4867352126f6c1dd43302f",
        "inducing_commit_hash_pyszz": [
            "233c92ea991648da27ecc7c156cce2d1cb3ed467"
        ],
        "inducing_commit_hash_pd": [
            "a09cdddd8ba249d1ce68ac31ec4496e50b8a25c7",
            "233c92ea991648da27ecc7c156cce2d1cb3ed467",
            "b3c8c27619333a5be0974eaafdccb363923968f9"
        ],
        "matched": [
            "233c92ea991648da27ecc7c156cce2d1cb3ed467"
        ]
    },
    {
        "repo_name": "vyperlang/vyper",
        "CVE_ID": "CVE-2023-41052",
        "Problem_Type": "CWE-670",
        "Description": "Vyper is a Pythonic Smart Contract Language. In affected versions the order of evaluation of the arguments of the builtin functions `uint256_addmod`, `uint256_mulmod`, `ecadd` and `ecmul` does not follow source order. This behaviour is problematic when the evaluation of one of the arguments produces side effects that other arguments depend on. A patch is currently being developed on pull request #3583. When using builtins from the list above, users should make sure that the arguments of the expression do not produce side effects or, if one does, that no other argument is dependent on those side effects.",
        "URL": "https://github.com/vyperlang/vyper/pull/3583",
        "Tag": "['Patch']",
        "fix_commit_hash": "78fa8dd8f91ba0cb26277eeffb585c68c83e7daa",
        "inducing_commit_hash_pyszz": [
            "6ee74f5af58507029192732f828e13c431c273a3"
        ],
        "inducing_commit_hash_pd": [
            "d70e3341b56f366016d025fb46f3983f9c75829f",
            "bce9308847f383a18f71e55d3e925a62458681e8",
            "6ee74f5af58507029192732f828e13c431c273a3",
            "e4c08baf55540815fe8f23b9c8fc9c67206916d5",
            "ce6c5d73a6cdde05358199a449c0ef4f4c5ef92a",
            "3abe588e05be6f6cbfac283739d797ef6c485756",
            "2ab392d18209ab7e68dc2770ceb931225a0d1787",
            "ea4eaee845b27f8eb78cb8ec2bbbf75547f2c00f",
            "dfbca3eea5118ebb7873979c2e122634b7c70c53",
            "3d04c4fd5fdc6068fce6c06f9399e671739eedca"
        ],
        "matched": [
            "6ee74f5af58507029192732f828e13c431c273a3"
        ]
    },
    {
        "repo_name": "vyperlang/vyper",
        "CVE_ID": "CVE-2023-42441",
        "Problem_Type": "CWE-667",
        "Description": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine (EVM). Starting in version 0.2.9 and prior to version 0.3.10, locks of the type `@nonreentrant(\"\")` or `@nonreentrant('')` do not produce reentrancy checks at runtime. This issue is fixed in version 0.3.10. As a workaround, ensure the lock name is a non-empty string.",
        "URL": "https://github.com/vyperlang/vyper/pull/3605",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "0b740280c1e3c5528a20d47b29831948ddcc6d83",
        "inducing_commit_hash_pyszz": [
            "ed0a654aa2f1069874c2c6d21b8932737aee3f6f"
        ],
        "inducing_commit_hash_pd": [
            "7853c769c017da66edae0c84a3e6d33c2f998167",
            "ed0a654aa2f1069874c2c6d21b8932737aee3f6f",
            "b6ca0054b73e143c6d9c3ac3ce226e9392c00e9c",
            "58875bb5d830c83f512f4e786656d0d71c1c09e5",
            "fda08e79c32bf8a023b1e3e5b06d24e1f66a7bfd",
            "c9932b771ccd9f9283e7125005457595f852b78a",
            "046ea166d93b8351da7c5d74115893eea2f60d76",
            "74cf429a83f84ffb273ae9e5a170b43626c81258",
            "5c40497cdcd22b5716f5b27fcabedff2b5fe1056",
            "e8b5b3c2f53e6417f98e215225b544c4c50615e2",
            "bb0030bd7ee725fc8ad9f0dbcc269c8a7285650f",
            "017ef0eb499bc4f18c2bbf488a0fab0408894164",
            "716379febbc4df9fc80c8a70c33bb053a58feac9",
            "796a075ff37e22286ea70c78c2b0bbbb29403d3d"
        ],
        "matched": [
            "ed0a654aa2f1069874c2c6d21b8932737aee3f6f"
        ]
    },
    {
        "repo_name": "vyperlang/vyper",
        "CVE_ID": "CVE-2023-42460",
        "Problem_Type": "CWE-682",
        "Description": "Vyper is a Pythonic Smart Contract Language for the EVM. The `_abi_decode()` function does not validate input when it is nested in an expression. Uses of `_abi_decode()` can be constructed which allow for bounds checking to be bypassed resulting in incorrect results. This issue has not yet been fixed, but a fix is expected in release `0.3.10`. Users are advised to reference pull request #3626.",
        "URL": "https://github.com/vyperlang/vyper/pull/3626",
        "Tag": "['Patch']",
        "fix_commit_hash": "d438d927bed3b850fe4768a490f3acde5f51b475",
        "inducing_commit_hash_pyszz": [
            "b8dea0cec9b4a4a07b70f28aa164894b98d4ff80"
        ],
        "inducing_commit_hash_pd": [
            "f52b81164b7257ea429cf3c90ddfe894b9cb670f",
            "b8dea0cec9b4a4a07b70f28aa164894b98d4ff80"
        ],
        "matched": [
            "b8dea0cec9b4a4a07b70f28aa164894b98d4ff80"
        ]
    },
    {
        "repo_name": "wargio/naxsi",
        "CVE_ID": "CVE-2023-45132",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "NAXSI is an open-source maintenance web application firewall (WAF) for NGINX. An issue present starting in version 1.3 and prior to version 1.6 allows someone to bypass the WAF when a malicious `X-Forwarded-For` IP matches `IgnoreIP` `IgnoreCIDR` rules. This old code was arranged to allow older NGINX versions to also support `IgnoreIP` `IgnoreCIDR` when multiple reverse proxies were present. The issue is patched in version 1.6. As a workaround, do not set any `IgnoreIP` `IgnoreCIDR` for older versions.\n",
        "URL": "https://github.com/wargio/naxsi/pull/103",
        "Tag": "['Patch']",
        "fix_commit_hash": "1b712526ed3314dd6be7e8b0259eabda63c19537",
        "inducing_commit_hash_pyszz": [
            "9f8053f46636e434ab578e786ce69457d13b9f20"
        ],
        "inducing_commit_hash_pd": [
            "71240db7bb22b2bca7bee71e41ee32ffe6bbd201",
            "169a3582619f5914a2f669d414f19aa46cfd5e3d",
            "6ebadcc787297d6c7da78e8e63f62c8f55f45b47",
            "9223c0ef532b4240bd30c5de4ddbbe2f6da8cf46",
            "07a056ccd36bc3c5c40dc17991db226cb8cf6241",
            "9f8053f46636e434ab578e786ce69457d13b9f20",
            "99755ea72608cc4cc5c93052a5a204fab640bbf1",
            "29793dcb2d9bdfa02c9b8d6968063ce3daa0a77b",
            "7afa61b1b210c6f5bfe938c28b0b8f3e1389366b"
        ],
        "matched": [
            "9f8053f46636e434ab578e786ce69457d13b9f20"
        ]
    },
    {
        "repo_name": "wasm3/wasm3",
        "CVE_ID": "CVE-2022-28990",
        "Problem_Type": "CWE-787",
        "Description": "WASM3 v0.5.0 was discovered to contain a heap overflow via the component /wabt/bin/poc.wasm.",
        "URL": "https://github.com/wasm3/wasm3/pull/324",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8441c82c4a98f554b12971450220b580c3c2b6df",
        "inducing_commit_hash_pyszz": [
            "6d423a8fbad2f217e75e2e73ddecd5627890c77c"
        ],
        "inducing_commit_hash_pd": [
            "d23269c76baac8fc3ae0b4baa262f1a33edaaaf8",
            "18b8f6b1f156f3f49fff126b4958f1c917875aeb",
            "5febf3e77fc52f171535c34f477c6f3f55f73fbc",
            "23ab0983e98dc33e5b2a83bf2d4da946471fc1aa"
        ],
        "matched": [
            "6d423a8fbad2f217e75e2e73ddecd5627890c77c"
        ]
    },
    {
        "repo_name": "wazuh/wazuh-kibana-app",
        "CVE_ID": "CVE-2023-42455",
        "Problem_Type": "CWE-639",
        "Description": "Wazuh is a security detection, visibility, and compliance open source project. In versions 4.4.0 and 4.4.1, it is possible to get the Wazuh API administrator key used by the Dashboard using the browser development tools. This allows a logged user to the dashboard to become administrator of the API, even if their dashboard role is not. Version 4.4.2 contains a fix. There are no known workarounds.",
        "URL": "https://github.com/wazuh/wazuh-kibana-app/pull/5428",
        "Tag": "['Patch']",
        "fix_commit_hash": "6290e99887fb20f84e2dba21e4f1255d7ad4e69e",
        "inducing_commit_hash_pyszz": [
            "de0e46a71410a9538898903aff1f6dd614969e37"
        ],
        "inducing_commit_hash_pd": [
            "665ecc49d301c83941ec5fd57655ec326a3f6b57"
        ],
        "matched": [
            "de0e46a71410a9538898903aff1f6dd614969e37"
        ]
    },
    {
        "repo_name": "weaveworks/weave-gitops",
        "CVE_ID": "CVE-2022-23508",
        "Problem_Type": "CWE-552",
        "Description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise.  A vulnerability in GitOps run could allow a local user or process to alter a Kubernetes cluster's resources. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. Its endpoint had no security controls to block unauthorized access, therefore allowing local users (and processes) on the same machine to see and alter the bucket content. By leveraging this vulnerability, an attacker could pick a workload of their choosing and inject it into the S3 bucket, which resulted in the successful deployment in the target cluster, without the need to provide any credentials to either the S3 bucket nor the target Kubernetes cluster. There are no known workarounds for this issue, please upgrade. This vulnerability has been fixed by commits 75268c4 and 966823b. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Paulo Gomes, Senior Software Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n- Email us at [support@weave.works](mailto:support@weave.works)\n",
        "URL": "https://github.com/weaveworks/weave-gitops/pull/3114/commits/75268c4d2c8f7e4db22c63d76b451ba6545d117f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "75268c4d2c8f7e4db22c63d76b451ba6545d117f",
        "inducing_commit_hash_pyszz": [
            "ce2bbff0a3609c33396050ed544a5a21f8d0797f"
        ],
        "inducing_commit_hash_pd": [
            "2d49aae2f7d3936606f95e561b925d5541ce0fd5",
            "b358e9214201d64685263d7769b0023cfd65f659",
            "ce2bbff0a3609c33396050ed544a5a21f8d0797f",
            "966823bbda8c539a4661e2a4f8607c9307ba6225",
            "1aca57b2c6779ef61ea4e8107192326d53992072"
        ],
        "matched": [
            "ce2bbff0a3609c33396050ed544a5a21f8d0797f"
        ]
    },
    {
        "repo_name": "weaveworks/weave-gitops",
        "CVE_ID": "CVE-2022-23508",
        "Problem_Type": "CWE-552",
        "Description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise.  A vulnerability in GitOps run could allow a local user or process to alter a Kubernetes cluster's resources. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. Its endpoint had no security controls to block unauthorized access, therefore allowing local users (and processes) on the same machine to see and alter the bucket content. By leveraging this vulnerability, an attacker could pick a workload of their choosing and inject it into the S3 bucket, which resulted in the successful deployment in the target cluster, without the need to provide any credentials to either the S3 bucket nor the target Kubernetes cluster. There are no known workarounds for this issue, please upgrade. This vulnerability has been fixed by commits 75268c4 and 966823b. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Paulo Gomes, Senior Software Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [Weave GitOps repository](https://github.com/weaveworks/weave-gitops)\n- Email us at [support@weave.works](mailto:support@weave.works)\n",
        "URL": "https://github.com/weaveworks/weave-gitops/pull/3102/commits/966823bbda8c539a4661e2a4f8607c9307ba6225",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "966823bbda8c539a4661e2a4f8607c9307ba6225",
        "inducing_commit_hash_pyszz": [
            "babd91574b99b310b84aeec9f8f895bd18acb967"
        ],
        "inducing_commit_hash_pd": [
            "babd91574b99b310b84aeec9f8f895bd18acb967",
            "e5f0876a591cd9500f12476430a1ee973f8cca82"
        ],
        "matched": [
            "babd91574b99b310b84aeec9f8f895bd18acb967"
        ]
    },
    {
        "repo_name": "weaveworks/weave-gitops",
        "CVE_ID": "CVE-2022-23509",
        "Problem_Type": "CWE-319",
        "Description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n",
        "URL": "https://github.com/weaveworks/weave-gitops/pull/3098/commits/babd91574b99b310b84aeec9f8f895bd18acb967",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "babd91574b99b310b84aeec9f8f895bd18acb967",
        "inducing_commit_hash_pyszz": [
            "ef1bb1bd2cb15d653869d1c7a84ae2b76af429fc"
        ],
        "inducing_commit_hash_pd": [
            "ef1bb1bd2cb15d653869d1c7a84ae2b76af429fc",
            "e5f0876a591cd9500f12476430a1ee973f8cca82"
        ],
        "matched": [
            "ef1bb1bd2cb15d653869d1c7a84ae2b76af429fc"
        ]
    },
    {
        "repo_name": "weaveworks/weave-gitops",
        "CVE_ID": "CVE-2022-23509",
        "Problem_Type": "CWE-319",
        "Description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022.\n",
        "URL": "https://github.com/weaveworks/weave-gitops/pull/3106/commits/ce2bbff0a3609c33396050ed544a5a21f8d0797f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ce2bbff0a3609c33396050ed544a5a21f8d0797f",
        "inducing_commit_hash_pyszz": [
            "31298e2954de192b48a8e58ea0f0d3981cdde187"
        ],
        "inducing_commit_hash_pd": [
            "cd11e9b1a1bab4bf3333e3aa357abc9fa564df9e",
            "31298e2954de192b48a8e58ea0f0d3981cdde187",
            "a4da456ad81b7ffae0bd8f8c190befd446b800d3",
            "ef1bb1bd2cb15d653869d1c7a84ae2b76af429fc",
            "b358e9214201d64685263d7769b0023cfd65f659",
            "dadbc83e5f6d60fde519a930673bd561b0ecdf06",
            "9f17e8c91ceb45d737e5ed4eb78c170728a3bb66",
            "cc7cc9f960b6e76b20522c993788b466095cdf6b",
            "bf21ae44af3ea527424805df9736e013a6c9ebae"
        ],
        "matched": [
            "31298e2954de192b48a8e58ea0f0d3981cdde187"
        ]
    },
    {
        "repo_name": "WebAssembly/binaryen",
        "CVE_ID": "CVE-2019-15759",
        "Problem_Type": "CWE-476",
        "Description": "An issue was discovered in Binaryen 1.38.32. Two visitors in ir/ExpressionManipulator.cpp can lead to a NULL pointer dereference in wasm::LocalSet::finalize in wasm/wasm.cpp. A crafted input can cause segmentation faults, leading to denial-of-service, as demonstrated by wasm2js.",
        "URL": "https://github.com/WebAssembly/binaryen/pull/2289",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ab3a1f65fb9d2e4ec7e2640daca0b3953a030da6",
        "inducing_commit_hash_pyszz": [
            "7bc8f14d8699f56777a763f99ad8098fcf7c0583"
        ],
        "inducing_commit_hash_pd": [
            "7bc8f14d8699f56777a763f99ad8098fcf7c0583"
        ],
        "matched": [
            "7bc8f14d8699f56777a763f99ad8098fcf7c0583"
        ]
    },
    {
        "repo_name": "Webklex/php-imap",
        "CVE_ID": "CVE-2023-35169",
        "Problem_Type": "CWE-22",
        "Description": "PHP-IMAP is a wrapper for common IMAP communication without the need to have the php-imap module installed / enabled. Prior to version 5.3.0, an unsanitized attachment filename allows any unauthenticated user to leverage a directory traversal vulnerability, which results in a remote code execution vulnerability. Every application that stores attachments with `Attachment::save()` without providing a `$filename` or passing unsanitized user input is affected by this attack.\n\nAn attacker can send an email with a malicious attachment to the inbox, which gets crawled with `webklex/php-imap` or `webklex/laravel-imap`. Prerequisite for the vulnerability is that the script stores the attachments without providing a `$filename`, or providing an unsanitized `$filename`, in `src/Attachment::save(string $path, string $filename = null)`. In this case, where no `$filename` gets passed into the `Attachment::save()` method, the package would use a series of unsanitized and insecure input values from the mail as fallback. Even if a developer passes a `$filename` into the `Attachment::save()` method, e.g. by passing the name or filename of the mail attachment itself (from email headers), the input values never get sanitized by the package. There is also no restriction about the file extension (e.g. \".php\") or the contents of a file. This allows an attacker to upload malicious code of any type and content at any location where the underlying user has write permissions. The attacker can also overwrite existing files and inject malicious code into files that, e.g. get executed by the system via cron or requests.\n\nVersion 5.3.0 contains a patch for this issue.",
        "URL": "https://github.com/Webklex/php-imap/pull/414",
        "Tag": "['Patch']",
        "fix_commit_hash": "88aaafbd881f09c3ec174f7417d36a8dedbd1b37",
        "inducing_commit_hash_pyszz": [
            "db3b997ce5f718ccf460f6ca8975e8067f94d4c7"
        ],
        "inducing_commit_hash_pd": [
            "db3b997ce5f718ccf460f6ca8975e8067f94d4c7",
            "3ca7a9d2a0b780810d958fed288cbbd503118894",
            "5f800e1b1034392f512dba21d745204aa8f1a905",
            "0492379288374908bac9c74cebca2c19cb405f25",
            "630b401beb98ad191f7c9b0fc0b29adeb53ba99e",
            "c60ca36e70b491c4a01c714b8bec4c5be32ed2c3"
        ],
        "matched": [
            "db3b997ce5f718ccf460f6ca8975e8067f94d4c7"
        ]
    },
    {
        "repo_name": "WeblateOrg/weblate",
        "CVE_ID": "CVE-2022-23915",
        "Problem_Type": "CWE-88",
        "Description": "The package weblate from 0 and before 4.11.1 are vulnerable to Remote Code Execution (RCE) via argument injection when using git or mercurial repositories. Authenticated users, can change the behavior of the application in an unintended way, leading to command execution.",
        "URL": "https://github.com/WeblateOrg/weblate/pull/7338",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d83672a3e7415da1490334e2c9431e5da1966842",
        "inducing_commit_hash_pyszz": [
            "3c53ef3b5a02defddb331bbe177136c56c0e0484"
        ],
        "inducing_commit_hash_pd": [
            "f8632eb9df7fd42cd3c4be672f564488ecbed3fc",
            "d6a176caa3a11c7e57a8d19283e853cba560166f",
            "3c53ef3b5a02defddb331bbe177136c56c0e0484"
        ],
        "matched": [
            "3c53ef3b5a02defddb331bbe177136c56c0e0484"
        ]
    },
    {
        "repo_name": "WeblateOrg/weblate",
        "CVE_ID": "CVE-2022-23915",
        "Problem_Type": "CWE-88",
        "Description": "The package weblate from 0 and before 4.11.1 are vulnerable to Remote Code Execution (RCE) via argument injection when using git or mercurial repositories. Authenticated users, can change the behavior of the application in an unintended way, leading to command execution.",
        "URL": "https://github.com/WeblateOrg/weblate/pull/7337",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35d59f1f040541c358cece0a8d4a63183ca919b8",
        "inducing_commit_hash_pyszz": [
            "f9ddf3de0a8123d18aaf86ae3f6ea3450179c778"
        ],
        "inducing_commit_hash_pd": [
            "d6a176caa3a11c7e57a8d19283e853cba560166f"
        ],
        "matched": [
            "f9ddf3de0a8123d18aaf86ae3f6ea3450179c778"
        ]
    },
    {
        "repo_name": "wekan/wekan",
        "CVE_ID": "CVE-2021-3309",
        "Problem_Type": "CWE-295",
        "Description": "packages/wekan-ldap/server/ldap.js in Wekan before 4.87 can process connections even though they are not authorized by the Certification Authority trust store,",
        "URL": "https://github.com/wekan/wekan/pull/3483/commits/31f89121fecca5a761b05cc3a26d4f237e90b484",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31f89121fecca5a761b05cc3a26d4f237e90b484",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "73e265d8fd050ae3daa67472b4465a5c49d68910"
        ],
        "matched": [
            "73e265d8fd050ae3daa67472b4465a5c49d68910"
        ]
    },
    {
        "repo_name": "what3words/wordpress-autosuggest-plugin",
        "CVE_ID": "CVE-2021-4428",
        "Problem_Type": "CWE-200",
        "Description": "A vulnerability has been found in what3words Autosuggest Plugin up to 4.0.0 on WordPress and classified as problematic. Affected by this vulnerability is the function enqueue_scripts of the file w3w-autosuggest/public/class-w3w-autosuggest-public.php of the component Setting Handler. The manipulation leads to information disclosure. The attack can be launched remotely. Upgrading to version 4.0.1 is able to address this issue. The patch is named dd59cbac5f86057d6a73b87007c08b8bfa0c32ac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-234247.",
        "URL": "https://github.com/what3words/wordpress-autosuggest-plugin/pull/20",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "dd59cbac5f86057d6a73b87007c08b8bfa0c32ac",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "104506356bcd34932cc8c83935c7d9f71781c362"
        ],
        "matched": [
            "104506356bcd34932cc8c83935c7d9f71781c362"
        ]
    },
    {
        "repo_name": "wildfly-security/wildfly-openssl-natives",
        "CVE_ID": "CVE-2020-25644",
        "Problem_Type": "CWE-401",
        "Description": "A memory leak flaw was found in WildFly OpenSSL in versions prior to 1.1.3.Final, where it removes an HTTP session. It may allow the attacker to cause OOM leading to a denial of service. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/wildfly-security/wildfly-openssl-natives/pull/4/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wireapp/wire-ios",
        "CVE_ID": "CVE-2021-21301",
        "Problem_Type": "CWE-200",
        "Description": "Wire is an open-source collaboration platform. In Wire for iOS (iPhone and iPad) before version 3.75 there is a vulnerability where the video capture isn't stopped in a scenario where a user first has their camera enabled and then disables it. It's a privacy issue because video is streamed to the call when the user believes it is disabled. It impacts all users in video calls. This is fixed in version 3.75.",
        "URL": "https://github.com/wireapp/wire-ios/pull/4879",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wireapp/wire-server",
        "CVE_ID": "CVE-2023-22737",
        "Problem_Type": "CWE-280",
        "Description": "wire-server provides back end services for Wire, a team communication and collaboration platform. Prior to version 2022-12-09, every member of a Conversation can remove a Bot from a Conversation due to a missing permissions check. Only Conversation admins should be able to remove Bots. Regular Conversations are not allowed to do so. The issue is fixed in wire-server 2022-12-09 and is already deployed on all Wire managed services. On-premise instances of wire-server need to be updated to 2022-12-09/Chart 4.29.0, so that their backends are no longer affected. There are no known workarounds.",
        "URL": "https://github.com/wireapp/wire-server/pull/2870",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74f86a6b75737878c4fb0bd03a80f75438d47d85",
        "inducing_commit_hash_pyszz": [
            "c829a7d3e5224371097e70b51e33a99ff17ee045"
        ],
        "inducing_commit_hash_pd": [
            "c4c9ea298ad8db2dac8b931f6f7a3178c7f2e626",
            "d780bcc229a0405a7c5f5c0439e37c19ed96b03b",
            "488f8b5e1baf6b3625750ebc2b02d68b8ce301f8",
            "bc3cf4ae446688ee81de136107e2031b2a347322",
            "57c9190c299988015741e4172e9955f6b7116887"
        ],
        "matched": [
            "c829a7d3e5224371097e70b51e33a99ff17ee045"
        ]
    },
    {
        "repo_name": "woodpecker-ci/woodpecker",
        "CVE_ID": "CVE-2022-29947",
        "Problem_Type": "CWE-79",
        "Description": "Woodpecker before 0.15.1 allows XSS via build logs because web/src/components/repo/build/BuildLog.vue lacks escaping.",
        "URL": "https://github.com/woodpecker-ci/woodpecker/pull/879",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3064975afdbc29034e00b917a135593c51ee31fe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "58838f225c8425436b83b4aff98a33ad41218e61"
        ],
        "matched": [
            "58838f225c8425436b83b4aff98a33ad41218e61"
        ]
    },
    {
        "repo_name": "XAYRGA/XENFCoreSharp",
        "CVE_ID": "CVE-2019-15533",
        "Problem_Type": "CWE-89",
        "Description": "XENFCoreSharp before 2019-07-16 allows SQL injection in web/verify.php.",
        "URL": "https://github.com/XAYRGA/XENFCoreSharp/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xcat2/xcat-core",
        "CVE_ID": "CVE-2023-27486",
        "Problem_Type": "CWE-863",
        "Description": "xCAT is a toolkit for deployment and administration of computer clusters. In versions prior to 2.16.5 if zones are configured as a mechanism to secure clusters in XCAT, it is possible for a local root user from one node to obtain credentials to SSH to any node in any zone, except the management node of the default zone. XCAT zones are not enabled by default. Only users that use the optional zone feature are impacted. All versions of xCAT prior to xCAT 2.16.5 are vulnerable. This problem has been fixed in xCAT 2.16.5. Users making use of zones should upgrade to 2.16.5. Users unable to upgrade may mitigate the issue by disabling zones or patching the management node with the fix contained in commit `85149c37f49`.",
        "URL": "https://github.com/xcat2/xcat-core/pull/7247/commits/85149c37f49dbca7bd85f1f586960315604fc024",
        "Tag": "['Patch']",
        "fix_commit_hash": "85149c37f49dbca7bd85f1f586960315604fc024",
        "inducing_commit_hash_pyszz": [
            "cb25622331e7831ef0f543cd392d21eeae61c43e"
        ],
        "inducing_commit_hash_pd": [
            "971808efbdea43d97021c38ca82a758b971d3564",
            "cb25622331e7831ef0f543cd392d21eeae61c43e"
        ],
        "matched": [
            "cb25622331e7831ef0f543cd392d21eeae61c43e"
        ]
    },
    {
        "repo_name": "xsmo/Image-Uploader-and-Browser-for-CKEditor",
        "CVE_ID": "CVE-2019-19502",
        "Problem_Type": "CWE-94",
        "Description": "Code injection in pluginconfig.php in Image Uploader and Browser for CKEditor before 4.1.9 allows remote authenticated users to execute arbitrary PHP code.",
        "URL": "https://github.com/xsmo/Image-Uploader-and-Browser-for-CKEditor/pull/11/commits/5c7a6b0e10504f08e2f50655541b767e276ce749",
        "Tag": "['Patch']",
        "fix_commit_hash": "5c7a6b0e10504f08e2f50655541b767e276ce749",
        "inducing_commit_hash_pyszz": [
            "f6f93b77f3a15b3418d05eac17cd35aedec0fee0"
        ],
        "inducing_commit_hash_pd": [
            "f8e3c363c4532da69f7187883ebb8f7b0e245f18",
            "302eb3f1586ea813aac0b57772db6760206dedfc",
            "f6f93b77f3a15b3418d05eac17cd35aedec0fee0",
            "226a80620c930e132996345592a88bcd888e38f5",
            "6c146c3df9186d717a3c54ef7342d90b65bcbd31",
            "2f529473150f8bf11dfd565843525a0ec72b5968"
        ],
        "matched": [
            "f6f93b77f3a15b3418d05eac17cd35aedec0fee0"
        ]
    },
    {
        "repo_name": "xwiki/xwiki-commons",
        "CVE_ID": "CVE-2022-24897",
        "Problem_Type": "CWE-22",
        "Description": "APIs to evaluate content with Velocity is a package for APIs to evaluate content with Velocity. Starting with version 2.3 and prior to 12.6.7, 12.10.3, and 13.0, the velocity scripts are not properly sandboxed against using the Java File API to perform read or write operations on the filesystem. Writing an attacking script in Velocity requires the Script rights in XWiki so not all users can use it, and it also requires finding an XWiki API which returns a File. The problem has been patched in versions 12.6.7, 12.10.3, and 13.0. There is no easy workaround for fixing this vulnerability other than upgrading and being careful when giving Script rights.",
        "URL": "https://github.com/xwiki/xwiki-commons/pull/127",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "215951cfb0f808d0bf5b1097c9e7d1e503449ab8",
        "inducing_commit_hash_pyszz": [
            "955e3b20fb03344fc595517a53cd7e41719fb27c"
        ],
        "inducing_commit_hash_pd": [
            "955e3b20fb03344fc595517a53cd7e41719fb27c",
            "5ab4d33c4f4c5e665dcb540f90caedb37a5f4d6a",
            "cce21ddbba5f25f28cb4deb24cc8809fbfa9c7d4",
            "8e92b8e3c5af3d9675013d7e81d870851ca08841",
            "b1d1c05efecd1c16f6f6c0055efb06705716836f"
        ],
        "matched": [
            "955e3b20fb03344fc595517a53cd7e41719fb27c"
        ]
    },
    {
        "repo_name": "xwiki/xwiki-platform",
        "CVE_ID": "CVE-2022-31166",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "XWiki Platform Old Core is a core package for XWiki Platform, a generic wiki platform. Starting in versions 11.3.7, 11.0.3, and 12.0RC1, it is possible to exploit a bug in XWikiRights resolution of groups to obtain privilege escalation. More specifically, editing a right with the object editor leads to adding a supplementary empty value to groups which is then resolved as a reference to XWiki.WebHome page. Adding an XWikiGroup xobject to that page then transforms it to a group, any user put in that group would then obtain the privileges related to the edited right. Note that this security issue is normally mitigated by the fact that XWiki.WebHome (and XWiki space in general) should be protected by default for edit rights. The problem has been patched in XWiki 13.10.4 and 14.2RC1 to not consider anymore empty values in XWikiRights. It's possible to work around the problem by setting appropriate rights on XWiki.WebHome page to prevent users to edit it.",
        "URL": "https://github.com/xwiki/xwiki-platform/pull/1800",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2dc9f527fe5165adace2aa12eb6b291167777784",
        "inducing_commit_hash_pyszz": [
            "621b79de397b0adc8ddb0280e78f0c5e134969a5"
        ],
        "inducing_commit_hash_pd": [
            "7afd3bff01835baa22124ded643fe832241f8f24",
            "fd92841151ac9d81da39babdb82516dbb7e4add7",
            "3376225dd0aa012ddff9a4b92db224a5e43f886e",
            "67031325776920b54391ed8c1cee007a1f4dcb5b",
            "153d45be1f3c7f691e985a634dc1eef0acd96920",
            "badaf0e41a434a81dc93800e602119135caa84c3",
            "9ceb5bd281ca73aef8ffe81ba49657973e8b7a17",
            "90580c5c48a2397145deb8f1bcc31bb73bd5e4e5",
            "8aa40ac9fe29e100cfae20736df1af8204420ba5",
            "63976250cec970c83bb6480e2bb726b0c0ca58fa",
            "621b79de397b0adc8ddb0280e78f0c5e134969a5",
            "b59f8e2f99ae142c86cd5396661391d501d7fcbc",
            "e57459d929dc3d829a61003b07cea62045a61759",
            "47df9a98e74025d39634f750d3795c11b8c06973",
            "43f355e3b79a6d6043bd20dfb88a30f690724b63",
            "48c232495302937a0a29f3dfbfb1fa6e60ed9d39",
            "886a5526a6a7cdbeda84a06238fc61cb484e92f0",
            "df2e86d2a476a225dd525e23836c9edb011e73f7"
        ],
        "matched": [
            "621b79de397b0adc8ddb0280e78f0c5e134969a5"
        ]
    },
    {
        "repo_name": "yahoo/athenz",
        "CVE_ID": "CVE-2019-6035",
        "Problem_Type": "CWE-601",
        "Description": "Open redirect vulnerability in Athenz v1.8.24 and earlier allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a specially crafted page.",
        "URL": "https://github.com/yahoo/athenz/pull/700",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c4dc89b31fda501af45c20b33db620a077079744",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "a728b4676f73b9cb2ebd04d81e2e7b1d82841831",
            "bd698340e1d027660637e5dac704afd1c7e22c8e"
        ],
        "matched": [
            "a728b4676f73b9cb2ebd04d81e2e7b1d82841831"
        ]
    },
    {
        "repo_name": "yahoo/elide",
        "CVE_ID": "CVE-2020-5289",
        "Problem_Type": "CWE-552",
        "Description": "In Elide before 4.5.14, it is possible for an adversary to \"guess and check\" the value of a model field they do not have access to assuming they can read at least one other field in the model. The adversary can construct filter expressions for an inaccessible field to filter a collection. The presence or absence of models in the returned collection can be used to reconstruct the value of the inaccessible field. Resolved in Elide 4.5.14 and greater.",
        "URL": "https://github.com/yahoo/elide/pull/1236",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7239e47eca00226550300e5e67cdabbf12145ef0",
        "inducing_commit_hash_pyszz": [
            "bcacaf347315e066c72a6da0ba97754962876a65"
        ],
        "inducing_commit_hash_pd": [
            "82e177a786d49a11be628e61ff494f527828784a",
            "7b532b3afe91679b64df09723eacb33b1284548a",
            "3b33b33b7d24c23d31a051128838d24ed7321ec0",
            "260caef7132608a76b8155b5de43eddce3e92cc1",
            "71b0ce7dd6aadef4b5a949fae922445dade75dea",
            "15e3c251d38ba3bd286b5396af3502203c1f9b6e",
            "7ef7effa19ac7eb8b0e86ffa394eda32021280f8",
            "a81204d4371bdcb465c10cb8fdd49675e7d983a0",
            "bcacaf347315e066c72a6da0ba97754962876a65",
            "a9bb5a7942fdd6ee5892704934143cd98d32546b",
            "e38d778e2ac220dae239b816a49a14e41a70262b",
            "08c563374ed81b313aa9de28f1bf64cca9d422ea",
            "4493768f3057a7548e884459375558f6690f0293",
            "d9618dfd2a11d115ed54880f9880082444cbf525",
            "777287ef45e36020afafc4229dcee199c55263d7",
            "12cc76c915d87483ed58907f5e7aef0e559fb1ad",
            "982ff6543bdcacbdc2cbebf1f044403fbb112bc6",
            "a5f954aa583446d15b5dad6fc56822b0b5da73b9"
        ],
        "matched": [
            "bcacaf347315e066c72a6da0ba97754962876a65"
        ]
    },
    {
        "repo_name": "yahoo/elide",
        "CVE_ID": "CVE-2020-5289",
        "Problem_Type": "CWE-552",
        "Description": "In Elide before 4.5.14, it is possible for an adversary to \"guess and check\" the value of a model field they do not have access to assuming they can read at least one other field in the model. The adversary can construct filter expressions for an inaccessible field to filter a collection. The presence or absence of models in the returned collection can be used to reconstruct the value of the inaccessible field. Resolved in Elide 4.5.14 and greater.",
        "URL": "https://github.com/yahoo/elide/pull/1236/commits/a985f0f9c448aabe70bc904337096399de4576dc",
        "Tag": "['Patch']",
        "fix_commit_hash": "7239e47eca00226550300e5e67cdabbf12145ef0",
        "inducing_commit_hash_pyszz": [
            "bcacaf347315e066c72a6da0ba97754962876a65"
        ],
        "inducing_commit_hash_pd": [
            "82e177a786d49a11be628e61ff494f527828784a",
            "7b532b3afe91679b64df09723eacb33b1284548a",
            "3b33b33b7d24c23d31a051128838d24ed7321ec0",
            "260caef7132608a76b8155b5de43eddce3e92cc1",
            "71b0ce7dd6aadef4b5a949fae922445dade75dea",
            "15e3c251d38ba3bd286b5396af3502203c1f9b6e",
            "7ef7effa19ac7eb8b0e86ffa394eda32021280f8",
            "a81204d4371bdcb465c10cb8fdd49675e7d983a0",
            "bcacaf347315e066c72a6da0ba97754962876a65",
            "a9bb5a7942fdd6ee5892704934143cd98d32546b",
            "e38d778e2ac220dae239b816a49a14e41a70262b",
            "08c563374ed81b313aa9de28f1bf64cca9d422ea",
            "4493768f3057a7548e884459375558f6690f0293",
            "d9618dfd2a11d115ed54880f9880082444cbf525",
            "777287ef45e36020afafc4229dcee199c55263d7",
            "12cc76c915d87483ed58907f5e7aef0e559fb1ad",
            "982ff6543bdcacbdc2cbebf1f044403fbb112bc6",
            "a5f954aa583446d15b5dad6fc56822b0b5da73b9"
        ],
        "matched": [
            "bcacaf347315e066c72a6da0ba97754962876a65"
        ]
    },
    {
        "repo_name": "yahoo/elide",
        "CVE_ID": "CVE-2022-24827",
        "Problem_Type": "CWE-89",
        "Description": "Elide is a Java library that lets you stand up a GraphQL/JSON-API web service with minimal effort. When leveraging the following together: Elide Aggregation Data Store for Analytic Queries, Parameterized Columns (A column that requires a client provided parameter), and a parameterized column of type TEXT. There is the potential for a hacker to provide a carefully crafted query that would bypass server side authorization filters through SQL injection. A recent patch to Elide 6.1.2 allowed the '-' character to be included in parameterized TEXT columns. This character can be interpreted as SQL comments ('--') and allow the attacker to remove the WHERE clause from the generated query and bypass authorization filters. A fix is provided in Elide 6.1.4. The vulnerability only exists for parameterized columns of type TEXT and only for analytic queries (CRUD is not impacted). Workarounds include leveraging a different type of parameterized column (TIME, MONEY, etc) or not leveraging parameterized columns.",
        "URL": "https://github.com/yahoo/elide/pull/2581",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aec37097a746370ff66b4f61179b6e6934be4d32",
        "inducing_commit_hash_pyszz": [
            "588b69f120c8e914da4becc3f8b83b4d8b71d92e"
        ],
        "inducing_commit_hash_pd": [
            "588b69f120c8e914da4becc3f8b83b4d8b71d92e"
        ],
        "matched": [
            "588b69f120c8e914da4becc3f8b83b4d8b71d92e"
        ]
    },
    {
        "repo_name": "yaklang/yaklang",
        "CVE_ID": "CVE-2023-40023",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "yaklang is a programming language designed for cybersecurity. The Yak Engine has been found to contain a local file inclusion (LFI) vulnerability. This vulnerability allows attackers to include files from the server's local file system through the web application. When exploited, this can lead to the unintended exposure of sensitive data, potential remote code execution, or other security breaches. Users utilizing versions of the Yak Engine prior to 1.2.4-sp1 are impacted. This vulnerability has been patched in version 1.2.4-sp1. Users are advised to upgrade. users unable to upgrade may avoid exposing vulnerable versions to untrusted input and to closely monitor any unexpected server behavior until they can upgrade.",
        "URL": "https://github.com/yaklang/yaklang/pull/296",
        "Tag": "['Patch']",
        "fix_commit_hash": "f456b103c22b395e4cf6ff2478c8cf9a0f072310",
        "inducing_commit_hash_pyszz": [
            "67256b423b24b7e7086e6a2bcec20c4ead5122fa"
        ],
        "inducing_commit_hash_pd": [
            "67256b423b24b7e7086e6a2bcec20c4ead5122fa"
        ],
        "matched": [
            "67256b423b24b7e7086e6a2bcec20c4ead5122fa"
        ]
    },
    {
        "repo_name": "yaml/pyyaml",
        "CVE_ID": "CVE-2017-18342",
        "Problem_Type": "CWE-502",
        "Description": "In PyYAML before 5.1, the yaml.load() API could execute arbitrary code if used with untrusted data. The load() function has been deprecated in version 5.1 and the 'UnsafeLoader' has been introduced for backward compatibility with the function.",
        "URL": "https://github.com/yaml/pyyaml/pull/74",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bbcf95fa051fdba9bbf879332e2f7999b195cf95",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2c225b29fc6daeb343b65d0ca30ba1c7ad297c77",
            "235ab98c2c2f37a6bc9d0292d5032ecc7aa8a640"
        ],
        "matched": [
            "2c225b29fc6daeb343b65d0ca30ba1c7ad297c77"
        ]
    },
    {
        "repo_name": "yaml/pyyaml",
        "CVE_ID": "CVE-2020-1747",
        "Problem_Type": "CWE-20",
        "Description": "A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor.",
        "URL": "https://github.com/yaml/pyyaml/pull/386",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5080ba513377b6355a0502104846ee804656f1e0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2c225b29fc6daeb343b65d0ca30ba1c7ad297c77"
        ],
        "matched": [
            "2c225b29fc6daeb343b65d0ca30ba1c7ad297c77"
        ]
    },
    {
        "repo_name": "yargs/y18n",
        "CVE_ID": "CVE-2020-7774",
        "Problem_Type": "CWE-1321",
        "Description": "The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",
        "URL": "https://github.com/yargs/y18n/pull/108",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a9ac604abf756dec9687be3843e2c93bfe581f25",
        "inducing_commit_hash_pyszz": [
            "4d7ae94bcb42e84164e2180366474b1cd321ed94"
        ],
        "inducing_commit_hash_pd": [
            "4d7ae94bcb42e84164e2180366474b1cd321ed94"
        ],
        "matched": [
            "4d7ae94bcb42e84164e2180366474b1cd321ed94"
        ]
    },
    {
        "repo_name": "yiisoft/yii2",
        "CVE_ID": "CVE-2017-11516",
        "Problem_Type": "CWE-79",
        "Description": "An XSS vulnerability exists in framework/views/errorHandler/exception.php in Yii Framework 2.0.12 affecting the exception screen when debug mode is enabled, because $exception->errorInfo is mishandled.",
        "URL": "https://github.com/yiisoft/yii2/pull/14492/files/feb4067de8a58f391a66e395192b0d83a8109b95",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "acf29e000183e9cbf05705e2915190efbce15728",
        "inducing_commit_hash_pyszz": [
            "d6bd627ac3dbe7055be9354b93d9bf850b3d0a89"
        ],
        "inducing_commit_hash_pd": [
            "ba0ab403b52124c941dbeb46fbd9efdc12252a5d"
        ],
        "matched": [
            "d6bd627ac3dbe7055be9354b93d9bf850b3d0a89"
        ]
    },
    {
        "repo_name": "yiisoft/yii2",
        "CVE_ID": "CVE-2017-11516",
        "Problem_Type": "CWE-79",
        "Description": "An XSS vulnerability exists in framework/views/errorHandler/exception.php in Yii Framework 2.0.12 affecting the exception screen when debug mode is enabled, because $exception->errorInfo is mishandled.",
        "URL": "https://github.com/yiisoft/yii2/pull/14492",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "acf29e000183e9cbf05705e2915190efbce15728",
        "inducing_commit_hash_pyszz": [
            "d6bd627ac3dbe7055be9354b93d9bf850b3d0a89"
        ],
        "inducing_commit_hash_pd": [
            "ba0ab403b52124c941dbeb46fbd9efdc12252a5d"
        ],
        "matched": [
            "d6bd627ac3dbe7055be9354b93d9bf850b3d0a89"
        ]
    },
    {
        "repo_name": "Yomguithereal/baobab",
        "CVE_ID": "CVE-2021-4307",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability was found in Yomguithereal Baobab up to 2.6.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack can be launched remotely. Upgrading to version 2.6.1 is able to address this issue. The patch is named c56639532a923d9a1600fb863ec7551b188b5d19. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217627.",
        "URL": "https://github.com/Yomguithereal/baobab/pull/511",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c56639532a923d9a1600fb863ec7551b188b5d19",
        "inducing_commit_hash_pyszz": [
            "907817f12ae0fc84ba0c772c54b965c745b93b1b"
        ],
        "inducing_commit_hash_pd": [
            "907817f12ae0fc84ba0c772c54b965c745b93b1b"
        ],
        "matched": [
            "907817f12ae0fc84ba0c772c54b965c745b93b1b"
        ]
    },
    {
        "repo_name": "YOURLS/YOURLS",
        "CVE_ID": "CVE-2019-14537",
        "Problem_Type": "CWE-843",
        "Description": "YOURLS through 1.7.3 is affected by a type juggling vulnerability in the api component that can result in login bypass.",
        "URL": "https://github.com/YOURLS/YOURLS/pull/2542",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9e36c67b01b932a41f0834d7896c7ba8383e9f07",
        "inducing_commit_hash_pyszz": [
            "76c993789f264f5d886b517eec2765f870e0b1c6"
        ],
        "inducing_commit_hash_pd": [
            "445b32a0f5c9f3d8f583a2c3f1f793d5e1f0c960",
            "ffc00d9857593b3c3298a0fa79d33775a30af8e1",
            "76c993789f264f5d886b517eec2765f870e0b1c6"
        ],
        "matched": [
            "76c993789f264f5d886b517eec2765f870e0b1c6"
        ]
    },
    {
        "repo_name": "ytti/oxidized-web",
        "CVE_ID": "CVE-2019-25088",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in ytti Oxidized Web. It has been classified as problematic. Affected is an unknown function of the file lib/oxidized/web/views/conf_search.haml. The manipulation of the argument to_research leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 55ab9bdc68b03ebce9280b8746ef31d7fdedcc45. It is recommended to apply a patch to fix this issue. VDB-216870 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/ytti/oxidized-web/pull/195",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "55ab9bdc68b03ebce9280b8746ef31d7fdedcc45",
        "inducing_commit_hash_pyszz": [
            "bfbfd2d4b8abb6c30c551d8c006e5eaeaa5987f0"
        ],
        "inducing_commit_hash_pd": [
            "bfbfd2d4b8abb6c30c551d8c006e5eaeaa5987f0"
        ],
        "matched": [
            "bfbfd2d4b8abb6c30c551d8c006e5eaeaa5987f0"
        ]
    },
    {
        "repo_name": "zanllp/sd-webui-infinite-image-browsing",
        "CVE_ID": "CVE-2023-46315",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The zanllp sd-webui-infinite-image-browsing (aka Infinite Image Browsing) extension before 977815a for stable-diffusion-webui (aka Stable Diffusion web UI), if Gradio authentication is enabled without secret key configuration, allows remote attackers to read any local file via /file?path= in the URL, as demonstrated by reading /proc/self/environ to discover credentials.",
        "URL": "https://github.com/zanllp/sd-webui-infinite-image-browsing/pull/368/commits/977815a2b28ad953c10ef0114c365f698c4b8f19",
        "Tag": "['Patch']",
        "fix_commit_hash": "977815a2b28ad953c10ef0114c365f698c4b8f19",
        "inducing_commit_hash_pyszz": [
            "28ee176cbc864003b6680a42ca154527bdee5a9f"
        ],
        "inducing_commit_hash_pd": [
            "9abda84d39c0700105df7a9c528c30dcccc16c82",
            "28ee176cbc864003b6680a42ca154527bdee5a9f",
            "43cad8c71d19f515101e923d45629bf78830be73",
            "b2e5ebeea2154360cd551c0ff246ab037ea4aa07"
        ],
        "matched": [
            "28ee176cbc864003b6680a42ca154527bdee5a9f"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2017-14199",
        "Problem_Type": "CWE-119",
        "Description": "A buffer overflow has been found in the Zephyr Project's getaddrinfo() implementation in 1.9.0 and 1.10.0.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/6158",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ede25c12a31597a9ddd18fef30ec32a207a2bd13",
        "inducing_commit_hash_pyszz": [
            "d3c7152528ccf7e88749da9de2dcce367e31753f"
        ],
        "inducing_commit_hash_pd": [
            "d3c7152528ccf7e88749da9de2dcce367e31753f"
        ],
        "matched": [
            "d3c7152528ccf7e88749da9de2dcce367e31753f"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2017-14201",
        "Problem_Type": "CWE-416",
        "Description": "Use After Free vulnerability in the Zephyr shell allows a serial or telnet connected user to cause denial of service, and possibly remote code execution. This issue affects: Zephyr shell versions prior to 1.14.0 on all.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/13260",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd59e3f32a999221de35a47458db40bc44a29874",
        "inducing_commit_hash_pyszz": [
            "436e295dd983826d180cf311789d272ed517df80"
        ],
        "inducing_commit_hash_pd": [
            "436e295dd983826d180cf311789d272ed517df80",
            "aa11cef22778bd21d4db0cac976d68f024fbb835"
        ],
        "matched": [
            "436e295dd983826d180cf311789d272ed517df80"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2017-14202",
        "Problem_Type": "CWE-119",
        "Description": "Improper Restriction of Operations within the Bounds of a Memory Buffer vulnerability in the shell component of Zephyr allows a serial or telnet connected user to cause a crash, possibly with arbitrary code execution. This issue affects: Zephyr shell versions prior to 1.14.0 on all.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/13048",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1e968a197673ba9d3b55af31b29502f010d92155",
        "inducing_commit_hash_pyszz": [
            "82ca811661cf029d895f5ab274617f9632debf4c"
        ],
        "inducing_commit_hash_pd": [
            "82ca811661cf029d895f5ab274617f9632debf4c"
        ],
        "matched": [
            "82ca811661cf029d895f5ab274617f9632debf4c"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10022",
        "Problem_Type": "CWE-120",
        "Description": "A malformed JSON payload that is received from an UpdateHub server may trigger memory corruption in the Zephyr OS. This could result in a denial of service in the best case, or code execution in the worst case. See NCC-NCC-016 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24065",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4c5eabfa921a55193e890f89dcb74d2db4d8e22a",
        "inducing_commit_hash_pyszz": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "inducing_commit_hash_pd": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "matched": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10022",
        "Problem_Type": "CWE-120",
        "Description": "A malformed JSON payload that is received from an UpdateHub server may trigger memory corruption in the Zephyr OS. This could result in a denial of service in the best case, or code execution in the worst case. See NCC-NCC-016 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24154",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "894dcbbf1559e14d009ab62f585876c69ed94549",
        "inducing_commit_hash_pyszz": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "inducing_commit_hash_pd": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "matched": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10022",
        "Problem_Type": "CWE-120",
        "Description": "A malformed JSON payload that is received from an UpdateHub server may trigger memory corruption in the Zephyr OS. This could result in a denial of service in the best case, or code execution in the worst case. See NCC-NCC-016 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24066",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "341681f31291571f24b9f08d5b374f85d115903f",
        "inducing_commit_hash_pyszz": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "inducing_commit_hash_pd": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "matched": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10023",
        "Problem_Type": "CWE-120",
        "Description": "The shell subsystem contains a buffer overflow, whereby an adversary with physical access to the device is able to cause a memory corruption, resulting in denial of service or possibly code execution within the Zephyr kernel. See NCC-NCC-019 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23646",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "13fd2d343bfb8403b39569d1f5c44121a303a95d",
        "inducing_commit_hash_pyszz": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ],
        "inducing_commit_hash_pd": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ],
        "matched": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10023",
        "Problem_Type": "CWE-120",
        "Description": "The shell subsystem contains a buffer overflow, whereby an adversary with physical access to the device is able to cause a memory corruption, resulting in denial of service or possibly code execution within the Zephyr kernel. See NCC-NCC-019 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23304",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a2872c3a008dd73f9a0dd1834da7f5bb2a51d3dd",
        "inducing_commit_hash_pyszz": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ],
        "inducing_commit_hash_pd": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ],
        "matched": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10023",
        "Problem_Type": "CWE-120",
        "Description": "The shell subsystem contains a buffer overflow, whereby an adversary with physical access to the device is able to cause a memory corruption, resulting in denial of service or possibly code execution within the Zephyr kernel. See NCC-NCC-019 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23649",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9d3186c43a8ffbfd5e8b25955c10c61b15a50409",
        "inducing_commit_hash_pyszz": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ],
        "inducing_commit_hash_pd": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ],
        "matched": [
            "6aed72e487b5c3a8ccb5ecadab558567e16fee9c"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10024",
        "Problem_Type": "CWE-697",
        "Description": "The arm platform-specific code uses a signed integer comparison when validating system call numbers. An attacker who has obtained code execution within a user thread is able to elevate privileges to that of the kernel. See NCC-ZEP-001 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23535",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6da1361c71a1bf1d1b7108ec56b91163f4e259d8",
        "inducing_commit_hash_pyszz": [
            "1c047c9bef4da06b2a4b714b33b028511b27a114"
        ],
        "inducing_commit_hash_pd": [
            "1c047c9bef4da06b2a4b714b33b028511b27a114"
        ],
        "matched": [
            "1c047c9bef4da06b2a4b714b33b028511b27a114"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10027",
        "Problem_Type": "CWE-697",
        "Description": "An attacker who has obtained code execution within a user thread is able to elevate privileges to that of the kernel. See NCC-ZEP-001 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23500",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de09c936e927092fa0ae92bc2e668b3c95c5bafd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f81dee0b2b87fc91f5e5555ca194404922383b52"
        ],
        "matched": [
            "f81dee0b2b87fc91f5e5555ca194404922383b52"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10027",
        "Problem_Type": "CWE-697",
        "Description": "An attacker who has obtained code execution within a user thread is able to elevate privileges to that of the kernel. See NCC-ZEP-001 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23499",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8fa136d9a9b905a5d3984469101888f475446f85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f81dee0b2b87fc91f5e5555ca194404922383b52"
        ],
        "matched": [
            "f81dee0b2b87fc91f5e5555ca194404922383b52"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10027",
        "Problem_Type": "CWE-697",
        "Description": "An attacker who has obtained code execution within a user thread is able to elevate privileges to that of the kernel. See NCC-ZEP-001 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23328",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f0650b596c54691df35b92d027383396eef457d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f81dee0b2b87fc91f5e5555ca194404922383b52"
        ],
        "matched": [
            "f81dee0b2b87fc91f5e5555ca194404922383b52"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10058",
        "Problem_Type": "CWE-20",
        "Description": "Multiple syscalls in the Kscan subsystem perform insufficient argument validation, allowing code executing in userspace to potentially gain elevated privileges. See NCC-ZEP-006 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23748",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "41df1c9380e8db1bec1c48e2646b0df7038ec127",
        "inducing_commit_hash_pyszz": [
            "7ed83ded6d6d12b91ee2a16d9980d912eb6eb4e1"
        ],
        "inducing_commit_hash_pd": [
            "749d2d21bf8affd0a0ebd93acdcd3a72bac54f8a"
        ],
        "matched": [
            "7ed83ded6d6d12b91ee2a16d9980d912eb6eb4e1"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10059",
        "Problem_Type": "CWE-295",
        "Description": "The UpdateHub module disables DTLS peer checking, which allows for a man in the middle attack. This is mitigated by firmware images requiring valid signatures. However, there is no benefit to using DTLS without the peer checking. See NCC-ZEP-018 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24997",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9a3aa3c9c3bb3076c35610e15391697706877cdc",
        "inducing_commit_hash_pyszz": [
            "665d195f3ae0e156b32a86c6e5aedd8b3fd3d64d"
        ],
        "inducing_commit_hash_pd": [
            "665d195f3ae0e156b32a86c6e5aedd8b3fd3d64d"
        ],
        "matched": [
            "665d195f3ae0e156b32a86c6e5aedd8b3fd3d64d"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10059",
        "Problem_Type": "CWE-295",
        "Description": "The UpdateHub module disables DTLS peer checking, which allows for a man in the middle attack. This is mitigated by firmware images requiring valid signatures. However, there is no benefit to using DTLS without the peer checking. See NCC-ZEP-018 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24954",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "69e8a7b657c6160801a73f4dd40ec29432e2d348",
        "inducing_commit_hash_pyszz": [
            "665d195f3ae0e156b32a86c6e5aedd8b3fd3d64d"
        ],
        "inducing_commit_hash_pd": [
            "665d195f3ae0e156b32a86c6e5aedd8b3fd3d64d"
        ],
        "matched": [
            "665d195f3ae0e156b32a86c6e5aedd8b3fd3d64d"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10059",
        "Problem_Type": "CWE-295",
        "Description": "The UpdateHub module disables DTLS peer checking, which allows for a man in the middle attack. This is mitigated by firmware images requiring valid signatures. However, there is no benefit to using DTLS without the peer checking. See NCC-ZEP-018 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24999",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4635cd23bb8675bf3370340400e11adfcb6cdf76",
        "inducing_commit_hash_pyszz": [
            "c5d74eccdaa3e069e858c1cb87412697bc5d8e65"
        ],
        "inducing_commit_hash_pd": [
            "c5d74eccdaa3e069e858c1cb87412697bc5d8e65"
        ],
        "matched": [
            "c5d74eccdaa3e069e858c1cb87412697bc5d8e65"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10060",
        "Problem_Type": "CWE-824",
        "Description": "In updatehub_probe, right after JSON parsing is complete, objects\\[1] is accessed from the output structure in two different places. If the JSON contained less than two elements, this access would reference unitialized stack memory. This could result in a crash, denial of service, or possibly an information leak. Provided the fix in CVE-2020-10059 is applied, the attack requires compromise of the server. See NCC-ZEP-030 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/27865",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9974a2a76afe765c5c9652e58b76580a75f1dacd",
        "inducing_commit_hash_pyszz": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "inducing_commit_hash_pd": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ],
        "matched": [
            "297ac3765f6c8ab7ee3cf7524c7064b6c8e30fdf"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10060",
        "Problem_Type": "CWE-824",
        "Description": "In updatehub_probe, right after JSON parsing is complete, objects\\[1] is accessed from the output structure in two different places. If the JSON contained less than two elements, this access would reference unitialized stack memory. This could result in a crash, denial of service, or possibly an information leak. Provided the fix in CVE-2020-10059 is applied, the attack requires compromise of the server. See NCC-ZEP-030 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/27893",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10060",
        "Problem_Type": "CWE-824",
        "Description": "In updatehub_probe, right after JSON parsing is complete, objects\\[1] is accessed from the output structure in two different places. If the JSON contained less than two elements, this access would reference unitialized stack memory. This could result in a crash, denial of service, or possibly an information leak. Provided the fix in CVE-2020-10059 is applied, the attack requires compromise of the server. See NCC-ZEP-030 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/27891",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10061",
        "Problem_Type": "CWE-787",
        "Description": "Improper handling of the full-buffer case in the Zephyr Bluetooth implementation can result in memory corruption. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23547",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "37c46e3cf5ecd0812d215f960aa1414f65bc7867",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1475402d416800c4be265e2e8fde1786f7238ee3"
        ],
        "matched": [
            "1475402d416800c4be265e2e8fde1786f7238ee3"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10061",
        "Problem_Type": "CWE-787",
        "Description": "Improper handling of the full-buffer case in the Zephyr Bluetooth implementation can result in memory corruption. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23091",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "17e2618f2f75bc9358ae3f694a5fc62949f5702d",
        "inducing_commit_hash_pyszz": [
            "2b2eb9bb07c418f6853a8000da749b39a871f34b"
        ],
        "inducing_commit_hash_pd": [
            "48c48711e600aa1375d80218136790ca931b6b1c",
            "2b2eb9bb07c418f6853a8000da749b39a871f34b",
            "2f70a6bcca1e1491ef88bd81091fbfdc08d25d65"
        ],
        "matched": [
            "2b2eb9bb07c418f6853a8000da749b39a871f34b"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10061",
        "Problem_Type": "CWE-787",
        "Description": "Improper handling of the full-buffer case in the Zephyr Bluetooth implementation can result in memory corruption. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23516",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5474dbb5443be96a3f6a7736bbd72b3ae7622a8d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1475402d416800c4be265e2e8fde1786f7238ee3"
        ],
        "matched": [
            "1475402d416800c4be265e2e8fde1786f7238ee3"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10061",
        "Problem_Type": "CWE-787",
        "Description": "Improper handling of the full-buffer case in the Zephyr Bluetooth implementation can result in memory corruption. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23517",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a37dc5a68e31ce104a5566392b9c0885598c554",
        "inducing_commit_hash_pyszz": [
            "7a3e29af06e152b3e96da374aaa36fd5daa151ed"
        ],
        "inducing_commit_hash_pd": [
            "7a3e29af06e152b3e96da374aaa36fd5daa151ed",
            "48c48711e600aa1375d80218136790ca931b6b1c"
        ],
        "matched": [
            "7a3e29af06e152b3e96da374aaa36fd5daa151ed"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10063",
        "Problem_Type": "CWE-190",
        "Description": "A remote adversary with the ability to send arbitrary CoAP packets to be parsed by Zephyr is able to cause a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24435",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e6204a982ec793baa1fe154f47475d6db3f36fdf",
        "inducing_commit_hash_pyszz": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10063",
        "Problem_Type": "CWE-190",
        "Description": "A remote adversary with the ability to send arbitrary CoAP packets to be parsed by Zephyr is able to cause a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24535",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bdb1bc8977f9c28737e35a4b15495926f50e08a8",
        "inducing_commit_hash_pyszz": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10063",
        "Problem_Type": "CWE-190",
        "Description": "A remote adversary with the ability to send arbitrary CoAP packets to be parsed by Zephyr is able to cause a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24530",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3b80046e3417f355b12e585280159daf0acf7889",
        "inducing_commit_hash_pyszz": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10063",
        "Problem_Type": "CWE-190",
        "Description": "A remote adversary with the ability to send arbitrary CoAP packets to be parsed by Zephyr is able to cause a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24531",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "385f88242e56ed35228d9a08c7c62d4a5e71834a",
        "inducing_commit_hash_pyszz": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "42a91f4c070b1d1cf8df303aac833ef27b664e3f"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10068",
        "Problem_Type": "CWE-20",
        "Description": "In the Zephyr project Bluetooth subsystem, certain duplicate and back-to-back packets can cause incorrect behavior, resulting in a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23964",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eee10e9aff2e3eb9e9cf75293e3e533126f0792a",
        "inducing_commit_hash_pyszz": [
            "705515c0925851e4c0b81cfda06ac957df575c03"
        ],
        "inducing_commit_hash_pd": [
            "705515c0925851e4c0b81cfda06ac957df575c03"
        ],
        "matched": [
            "705515c0925851e4c0b81cfda06ac957df575c03"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10068",
        "Problem_Type": "CWE-20",
        "Description": "In the Zephyr project Bluetooth subsystem, certain duplicate and back-to-back packets can cause incorrect behavior, resulting in a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23091",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "17e2618f2f75bc9358ae3f694a5fc62949f5702d",
        "inducing_commit_hash_pyszz": [
            "2b2eb9bb07c418f6853a8000da749b39a871f34b"
        ],
        "inducing_commit_hash_pd": [
            "48c48711e600aa1375d80218136790ca931b6b1c",
            "2b2eb9bb07c418f6853a8000da749b39a871f34b",
            "2f70a6bcca1e1491ef88bd81091fbfdc08d25d65"
        ],
        "matched": [
            "2b2eb9bb07c418f6853a8000da749b39a871f34b"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10068",
        "Problem_Type": "CWE-20",
        "Description": "In the Zephyr project Bluetooth subsystem, certain duplicate and back-to-back packets can cause incorrect behavior, resulting in a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23707",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "45500f3dc979b4b827925693de08f90653b4b35d",
        "inducing_commit_hash_pyszz": [
            "705515c0925851e4c0b81cfda06ac957df575c03"
        ],
        "inducing_commit_hash_pd": [
            "705515c0925851e4c0b81cfda06ac957df575c03"
        ],
        "matched": [
            "705515c0925851e4c0b81cfda06ac957df575c03"
        ]
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10068",
        "Problem_Type": "CWE-20",
        "Description": "In the Zephyr project Bluetooth subsystem, certain duplicate and back-to-back packets can cause incorrect behavior, resulting in a denial of service. This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions, and version 1.14.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23708",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "79942b47cc69074e0b06c29f6e9d291e1298a848",
        "inducing_commit_hash_pyszz": [
            "4cd9ba7813f8cdac3c6fe8d3cdeaac279f9a6f64"
        ],
        "inducing_commit_hash_pd": [
            "a2a364bac43ecb8de78e8cf54a3fbc0562c102a2",
            "4cd9ba7813f8cdac3c6fe8d3cdeaac279f9a6f64"
        ],
        "matched": [
            "4cd9ba7813f8cdac3c6fe8d3cdeaac279f9a6f64"
        ]
    },
    {
        "repo_name": "zfsonlinux/zfs",
        "CVE_ID": "CVE-2015-3400",
        "Problem_Type": "CWE-200",
        "Description": "sharenfs 0.6.4, when built with commits bcdd594 and 7d08880 from the zfs repository, provides world readable access to the shared zfs file system, which might allow remote authenticated users to obtain sensitive information by reading shared files.",
        "URL": "https://github.com/zfsonlinux/zfs/pull/2790/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Zimbra/zm-mailbox",
        "CVE_ID": "CVE-2020-10194",
        "Problem_Type": "CWE-862",
        "Description": "cs/service/account/AutoCompleteGal.java in Zimbra zm-mailbox before 8.8.15.p8 allows authenticated users to request any GAL account. This differs from the intended behavior in which the domain of the authenticated user must match the domain of the galsync account in the request.",
        "URL": "https://github.com/Zimbra/zm-mailbox/pull/1020",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2870eafba61ab2bf3425323eccbd420b0ff73dcd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "57546f768286a6a267d8adb7c148435d0f20b0a2"
        ],
        "matched": [
            "57546f768286a6a267d8adb7c148435d0f20b0a2"
        ]
    },
    {
        "repo_name": "zmanda/amanda",
        "CVE_ID": "CVE-2022-37705",
        "Problem_Type": "CWE-88",
        "Description": "A privilege escalation flaw was found in Amanda 3.5.1 in which the backup user can acquire root privileges. The vulnerable component is the runtar SUID program, which is a wrapper to run /usr/bin/tar with specific arguments that are controllable by the attacker. This program mishandles the arguments passed to tar binary (it expects that the argument name and value are separated with a space; however, separating them with an equals sign is also supported),",
        "URL": "https://github.com/zmanda/amanda/pull/194",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zulip/zulip",
        "CVE_ID": "CVE-2023-33186",
        "Problem_Type": "CWE-79",
        "Description": "Zulip is an open-source team collaboration tool with unique topic-based threading that combines the best of email and chat to make remote work productive and delightful. The main development branch of Zulip Server from May 2, 2023 and later, including beta versions 7.0-beta1 and 7.0-beta2, is vulnerable to a cross-site scripting vulnerability in tooltips on the message feed. An attacker who can send messages could maliciously craft a topic for the message, such that a victim who hovers the tooltip for that topic in their message feed triggers execution of JavaScript code controlled by the attacker.",
        "URL": "https://github.com/zulip/zulip/pull/25370",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "3d3d30166dd634b4317dd5091d1ea20f7f48b0a0",
        "inducing_commit_hash_pyszz": [
            "15860c8b13cbb7eca11ce43de93a0e1a13c9d275"
        ],
        "inducing_commit_hash_pd": [
            "15860c8b13cbb7eca11ce43de93a0e1a13c9d275"
        ],
        "matched": [
            "15860c8b13cbb7eca11ce43de93a0e1a13c9d275"
        ]
    },
    {
        "repo_name": "10up/safe-svg",
        "CVE_ID": "CVE-2022-1091",
        "Problem_Type": "CWE-79",
        "Description": "The sanitisation step of the Safe SVG WordPress plugin before 1.9.10 can be bypassed by spoofing the content-type in the POST request to upload a file. Exploiting this vulnerability, an attacker will be able to perform the kinds of attacks that this plugin should prevent (mainly XSS, but depending on further use of uploaded SVG files potentially other XML attacks).",
        "URL": "https://github.com/10up/safe-svg/pull/28",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "00cb9a86d1bff2214714557d1901ec3896564e50",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "23andMe/Yamale",
        "CVE_ID": "CVE-2021-38305",
        "Problem_Type": "CWE-434",
        "Description": "23andMe Yamale before 3.0.8 allows remote attackers to execute arbitrary code via a crafted schema file. The schema parser uses eval as part of its processing, and tries to protect from malicious expressions by limiting the builtins that are passed to the eval. When processing the schema, each line is run through Python's eval function to make the validator available. A well-constructed string within the schema rules can execute system commands; thus, by exploiting the vulnerability, an attacker can run arbitrary code on the image that invokes Yamale.",
        "URL": "https://github.com/23andMe/Yamale/pull/165",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "60173004bc645ea1f27a7b871272a06695154516",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "3breadt/dd-plist",
        "CVE_ID": "CVE-2016-15026",
        "Problem_Type": "CWE-611",
        "Description": "A vulnerability was found in 3breadt dd-plist 1.17 and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to xml external entity reference. An attack has to be approached locally. Upgrading to version 1.18 is able to address this issue. The patch is identified as 8c954e8d9f6f6863729e50105a8abf3f87fff74c. It is recommended to upgrade the affected component. VDB-221486 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/3breadt/dd-plist/pull/26",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2120e77a988d28fba214714710a43521b4ac62b8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "3dcitydb/web-feature-service",
        "CVE_ID": "CVE-2022-4607",
        "Problem_Type": "CWE-611",
        "Description": "A vulnerability was found in 3D City Database OGC Web Feature Service up to 5.2.0. It has been rated as problematic. This issue affects some unknown processing. The manipulation leads to xml external entity reference. Upgrading to version 5.2.1 is able to address this issue. The name of the patch is 246f4e2a97ad81491c00a7ed72ce5e7c7f75050a. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216215.",
        "URL": "https://github.com/3dcitydb/web-feature-service/pull/12",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "246f4e2a97ad81491c00a7ed72ce5e7c7f75050a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "418sec/huntr",
        "CVE_ID": "CVE-2021-23338",
        "Problem_Type": "CWE-502",
        "Description": "This affects all versions of package qlib. The workflow function in cli part of qlib was using an unsafe YAML load function.",
        "URL": "https://github.com/418sec/huntr/pull/1329",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b6dcc67722856961e027819d2b0dee9ac6cd93d8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "abhilash1985/PredictApp",
        "CVE_ID": "CVE-2022-4890",
        "Problem_Type": "CWE-502",
        "Description": "A vulnerability, which was classified as critical, has been found in abhilash1985 PredictApp. This issue affects some unknown processing of the file config/initializers/new_framework_defaults_7_0.rb of the component Cookie Handler. The manipulation leads to deserialization. The attack may be initiated remotely. The patch is named b067372f3ee26fe1b657121f0f41883ff4461a06. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218387.",
        "URL": "https://github.com/abhilash1985/PredictApp/pull/73",
        "Tag": "['Patch']",
        "fix_commit_hash": "5e737c250b594ee0eaeaabd9f8b7a0882f05c41d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "abrt/abrt",
        "CVE_ID": "CVE-2015-1862",
        "Problem_Type": "CWE-362",
        "Description": "The crash reporting feature in Abrt allows local users to gain privileges by leveraging an execve by root after a chroot into a user-specified directory in a namedspaced environment.",
        "URL": "https://github.com/abrt/abrt/pull/810",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f0ef180ea30d8eac449957a07d9de5ac3bd95e57",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-45942",
        "Problem_Type": "CWE-787",
        "Description": "OpenEXR 3.1.x before 3.1.4 has a heap-based buffer overflow in Imf_3_1::LineCompositeTask::execute (called from IlmThread_3_1::NullThreadPoolProvider::addTask and IlmThread_3_1::ThreadPool::addGlobalTask). NOTE: db217f2 may be inapplicable.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/1209",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "11cad77da87c4fa2aab7d58dd5339e254db7937e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "acassen/keepalived",
        "CVE_ID": "CVE-2018-19115",
        "Problem_Type": "CWE-787",
        "Description": "keepalived before 2.0.7 has a heap-based buffer overflow when parsing HTTP status codes resulting in DoS or possibly unspecified other impact, because extract_status_code in lib/html.c has no validation of the status code and instead writes an unlimited amount of data to the heap.",
        "URL": "https://github.com/acassen/keepalived/pull/961",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "271d286703ad782196cdedac1352308dac1a410f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "accel-ppp/accel-ppp",
        "CVE_ID": "CVE-2022-24704",
        "Problem_Type": "CWE-120",
        "Description": "The rad_packet_recv function in opt/src/accel-pppd/radius/packet.c suffers from a buffer overflow vulnerability, whereby user input len is copied into a fixed buffer &attr->val.integer without any bound checks. If the client connects to the server and sends a large radius packet, a buffer overflow vulnerability will be triggered.",
        "URL": "https://github.com/accel-ppp/accel-ppp/pull/35",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b4ef9862c65bffd7c2e5798cb35948548ac724d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "accel-ppp/accel-ppp",
        "CVE_ID": "CVE-2022-24705",
        "Problem_Type": "CWE-120",
        "Description": "The rad_packet_recv function in radius/packet.c suffers from a memcpy buffer overflow, resulting in an overly-large recvfrom into a fixed buffer that causes a buffer overflow and overwrites arbitrary memory. If the server connects with a malicious client, crafted client requests can remotely trigger this vulnerability.",
        "URL": "https://github.com/accel-ppp/accel-ppp/pull/35",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b4ef9862c65bffd7c2e5798cb35948548ac724d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "acpica/acpica",
        "CVE_ID": "CVE-2017-13695",
        "Problem_Type": "CWE-200",
        "Description": "The acpi_ns_evaluate() function in drivers/acpi/acpica/nseval.c in the Linux kernel through 4.12.9 does not flush the operand cache and causes a kernel stack dump, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism (in the kernel through 4.9) via a crafted ACPI table.",
        "URL": "https://github.com/acpica/acpica/pull/296/commits/37f2c716f2c6ab14c3ba557a539c3ee3224931b5",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "37f2c716f2c6ab14c3ba557a539c3ee3224931b5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "actions/http-client",
        "CVE_ID": "CVE-2020-11021",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Actions Http-Client (NPM @actions/http-client) before version 1.0.8 can disclose Authorization headers to incorrect domain in certain redirect scenarios. The conditions in which this happens are if consumers of the http-client: 1. make an http request with an authorization header 2. that request leads to a redirect (302) and 3. the redirect url redirects to another domain or hostname Then the authorization header will get passed to the other domain. The problem is fixed in version 1.0.8.",
        "URL": "https://github.com/actions/http-client/pull/27",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "adamhathcock/sharpcompress",
        "CVE_ID": "CVE-2018-1002206",
        "Problem_Type": "CWE-22",
        "Description": "SharpCompress before 0.21.0 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
        "URL": "https://github.com/adamhathcock/sharpcompress/pull/374",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42b1205fb435de523e6ef8ac5b7bafbe712997f6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "adamhathcock/sharpcompress",
        "CVE_ID": "CVE-2021-39208",
        "Problem_Type": "CWE-22",
        "Description": "SharpCompress is a fully managed C# library to deal with many compression types and formats. Versions prior to 0.29.0 are vulnerable to partial path traversal. SharpCompress recreates a hierarchy of directories under destinationDirectory if ExtractFullPath is set to true in options. In order to prevent extraction outside the destination directory the destinationFileName path is verified to begin with fullDestinationDirectoryPath. However, prior to version 0.29.0, it is not enforced that fullDestinationDirectoryPath ends with slash. If the destinationDirectory is not slash terminated like `/home/user/dir` it is possible to create a file with a name thats begins as the destination directory one level up from the directory, i.e. `/home/user/dir.sh`. Because of the file name and destination directory constraints the arbitrary file creation impact is limited and depends on the use case. This issue is fixed in SharpCompress version 0.29.0.",
        "URL": "https://github.com/adamhathcock/sharpcompress/pull/614",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ea5c8dc06314c7a5068e7901c51a625224d2b288",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AdoptOpenJDK/IcedTea-Web",
        "CVE_ID": "CVE-2019-10181",
        "Problem_Type": "CWE-345",
        "Description": "It was found that in icedtea-web up to and including 1.7.2 and 1.8.2 executable code could be injected in a JAR file without compromising the signature verification. An attacker could use this flaw to inject code in a trusted JAR. The code would be executed inside the sandbox.",
        "URL": "https://github.com/AdoptOpenJDK/IcedTea-Web/pull/344",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1054d590fba29775f48b0805e3db99ae7efb35aa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AdoptOpenJDK/IcedTea-Web",
        "CVE_ID": "CVE-2019-10182",
        "Problem_Type": "CWE-22",
        "Description": "It was found that icedtea-web though 1.7.2 and 1.8.2 did not properly sanitize paths from <jar/> elements in JNLP files. An attacker could trick a victim into running a specially crafted application and use this flaw to upload arbitrary files to arbitrary locations in the context of the user.",
        "URL": "https://github.com/AdoptOpenJDK/IcedTea-Web/pull/344",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1054d590fba29775f48b0805e3db99ae7efb35aa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AdoptOpenJDK/IcedTea-Web",
        "CVE_ID": "CVE-2019-10185",
        "Problem_Type": "CWE-22",
        "Description": "It was found that icedtea-web up to and including 1.7.2 and 1.8.2 was vulnerable to a zip-slip attack during auto-extraction of a JAR file. An attacker could use this flaw to write files to arbitrary locations. This could also be used to replace the main running application and, possibly, break out of the sandbox.",
        "URL": "https://github.com/AdoptOpenJDK/IcedTea-Web/pull/344",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1054d590fba29775f48b0805e3db99ae7efb35aa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "aerouk/imageserve",
        "CVE_ID": "CVE-2017-20152",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability, which was classified as problematic, was found in aerouk imageserve. Affected is an unknown function of the file public/viewer.php of the component File Handler. The manipulation of the argument filelocation leads to path traversal. It is possible to launch the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The name of the patch is bd23c784f0e5cb12f66d15c100248449f87d72e2. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217056.",
        "URL": "https://github.com/aerouk/imageserve/pull/27",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "435aeed89265c6ff4461caf42af59dc5b9370c3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AFLplusplus/AFLplusplus",
        "CVE_ID": "CVE-2023-26266",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In AFL++ 4.05c, the CmpLog component uses the current working directory to resolve and execute unprefixed fuzzing targets, allowing code execution.",
        "URL": "https://github.com/AFLplusplus/AFLplusplus/pull/1643",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "bac8d25bc2779f06813065a1b5c54eeba8718e2b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "agentevolution/wp-listings",
        "CVE_ID": "CVE-2016-11013",
        "Problem_Type": "CWE-79",
        "Description": "The wp-listings plugin before 2.0.2 for WordPress has includes/views/single-listing.php XSS.",
        "URL": "https://github.com/agentevolution/wp-listings/pull/52",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3f7fe8506a0f2279536ee95a57b1fd0397dd14d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ahmyi/rivettracker",
        "CVE_ID": "CVE-2012-10002",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in ahmyi RivetTracker. It has been declared as problematic. Affected by this vulnerability is the function changeColor of the file css.php. The manipulation of the argument set_css leads to cross site scripting. The attack can be launched remotely. The patch is named 45a0f33876d58cb7e4a0f17da149e58fc893b858. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217267.",
        "URL": "https://github.com/ahmyi/rivettracker/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "65b1447a919ebecc2bec84146a05a6de490d8f03",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ahmyi/rivettracker",
        "CVE_ID": "CVE-2012-10003",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in ahmyi RivetTracker. This issue affects some unknown processing. The manipulation of the argument $_SERVER['PHP_SELF'] leads to cross site scripting. The attack may be initiated remotely. The patch is named f053c5cc2bc44269b0496b5f275e349928a92ef9. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217271.",
        "URL": "https://github.com/ahmyi/rivettracker/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "65b1447a919ebecc2bec84146a05a6de490d8f03",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Ahwxorg/LibreY",
        "CVE_ID": "CVE-2023-41054",
        "Problem_Type": "CWE-918",
        "Description": "LibreY is a fork of LibreX, a framework-less and javascript-free privacy respecting meta search engine. LibreY is subject to a Server-Side Request Forgery (SSRF) vulnerability in the `image_proxy.php` file of LibreY before commit 8f9b9803f231e2954e5b49987a532d28fe50a627. This vulnerability allows remote attackers to use the server as a proxy to send HTTP GET requests to arbitrary targets and retrieve information in the internal network or conduct Denial-of-Service (DoS) attacks via the `url` parameter. Remote attackers can use the server as a proxy to send HTTP GET requests and retrieve information in the internal network. Remote attackers can also request the server to download large files or chain requests among multiple instances to reduce the performance of the server or even deny access from legitimate users. This issue has been addressed in https://github.com/Ahwxorg/LibreY/pull/31. LibreY hosters are advised to use the latest commit. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/Ahwxorg/LibreY/pull/31",
        "Tag": "['Patch']",
        "fix_commit_hash": "8f9b9803f231e2954e5b49987a532d28fe50a627",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Ahwxorg/LibreY",
        "CVE_ID": "CVE-2023-41055",
        "Problem_Type": "CWE-918",
        "Description": "LibreY is a fork of LibreX, a framework-less and javascript-free privacy respecting meta search engine. LibreY is subject to a Server-Side Request Forgery (SSRF) vulnerability in the `engines/google/text.php` and `engines/duckduckgo/text.php` files in versions before commit be59098abd119cda70b15bf3faac596dfd39a744. This vulnerability allows remote attackers to request the server to send HTTP GET requests to arbitrary targets and conduct Denial-of-Service (DoS) attacks via the `wikipedia_language` cookie. Remote attackers can request the server to download large files to reduce the performance of the server or even deny access from legitimate users. This issue has been patched in https://github.com/Ahwxorg/LibreY/pull/9. LibreY hosters are advised to use the latest commit. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/Ahwxorg/LibreY/pull/9",
        "Tag": "['Patch']",
        "fix_commit_hash": "be59098abd119cda70b15bf3faac596dfd39a744",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "akheron/jansson",
        "CVE_ID": "CVE-2016-4425",
        "Problem_Type": "CWE-20",
        "Description": "Jansson 2.7 and earlier allows context-dependent attackers to cause a denial of service (deep recursion, stack consumption, and crash) via crafted JSON data.",
        "URL": "https://github.com/akheron/jansson/pull/284",
        "Tag": "['Patch']",
        "fix_commit_hash": "013c3892c3b7c39516507838ababb4e9167cc65c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "alanxz/rabbitmq-c",
        "CVE_ID": "CVE-2023-35789",
        "Problem_Type": "CWE-522",
        "Description": "An issue was discovered in the C AMQP client library (aka rabbitmq-c) through 0.13.0 for RabbitMQ. Credentials can only be entered on the command line (e.g., for amqp-publish or amqp-consume) and are thus visible to local attackers by listing a process and its arguments.",
        "URL": "https://github.com/alanxz/rabbitmq-c/pull/781",
        "Tag": "['Patch']",
        "fix_commit_hash": "463054383fbeef889b409a7f843df5365288e2a0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Alfresco/alfresco-android-app",
        "CVE_ID": "CVE-2019-15566",
        "Problem_Type": "CWE-89",
        "Description": "The Alfresco application before 1.8.7 for Android allows SQL injection in HistorySearchProvider.java.",
        "URL": "https://github.com/Alfresco/alfresco-android-app/pull/547",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b1fb6fceb286f1e888590a2954406eeb0583129",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "alibaba/nacos",
        "CVE_ID": "CVE-2021-29442",
        "Problem_Type": "CWE-306",
        "Description": "Nacos is a platform designed for dynamic service discovery and configuration and service management. In Nacos before version 1.4.1, the ConfigOpsController lets the user perform management operations like querying the database or even wiping it out. While the /data/remove endpoint is properly protected with the @Secured annotation, the /derby endpoint is not protected and can be openly accessed by unauthenticated users. These endpoints are only valid when using embedded storage (derby DB) so this issue should not affect those installations using external storage (e.g. mysql)",
        "URL": "https://github.com/alibaba/nacos/pull/4517",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1bc350b99a7d61c394f73fbf8844bda8fc49e0a7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "alphagov/tech-docs-gem",
        "CVE_ID": "CVE-2024-22048",
        "Problem_Type": "CWE-79",
        "Description": "govuk_tech_docs versions from 2.0.2 to before 3.3.1 are vulnerable to a cross-site scripting vulnerability. Malicious JavaScript may be executed in the user's browser if a malicious search result is displayed on the search page.\n\n",
        "URL": "https://github.com/alphagov/tech-docs-gem/pull/323",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "a51c7058cec46bf2a4e25a1da62b14ac3fd46b53",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "anchore/anchore-engine",
        "CVE_ID": "CVE-2020-11075",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In Anchore Engine version 0.7.0, a specially crafted container image manifest, fetched from a registry, can be used to trigger a shell escape flaw in the anchore engine analyzer service during an image analysis process. The image analysis operation can only be executed by an authenticated user via a valid API request to anchore engine, or if an already added image that anchore is monitoring has its manifest altered to exploit the same flaw. A successful attack can be used to execute commands that run in the analyzer environment, with the same permissions as the user that anchore engine is run as - including access to the credentials that Engine uses to access its own database which have read-write ability, as well as access to the running engien analyzer service environment. By default Anchore Engine is released and deployed as a container where the user is non-root, but if users run Engine directly or explicitly set the user to 'root' then that level of access may be gained in the execution environment where Engine runs. This issue is fixed in version 0.7.1.",
        "URL": "https://github.com/anchore/anchore-engine/pull/431",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e41786901f097fd32104447a45864073105d37db",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AndyRixon/LayerBB",
        "CVE_ID": "CVE-2019-16531",
        "Problem_Type": "CWE-352",
        "Description": "LayerBB before 1.1.4 has multiple CSRF issues, as demonstrated by changing the System Settings via admin/general.php.",
        "URL": "https://github.com/AndyRixon/LayerBB/pull/40",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a966d345486258f39d65db53f5acc5266fc49af5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible-collections/kubernetes",
        "CVE_ID": "CVE-2020-1753",
        "Problem_Type": "CWE-200",
        "Description": "A security flaw was found in Ansible Engine, all Ansible 2.7.x versions prior to 2.7.17, all Ansible 2.8.x versions prior to 2.8.11 and all Ansible 2.9.x versions prior to 2.9.7, when managing kubernetes using the k8s module. Sensitive parameters such as passwords and tokens are passed to kubectl from the command line, not using an environment variable or an input configuration file. This will disclose passwords and tokens from process list and no_log directive from debug module would not have any effect making these secrets being disclosed on stdout and log files.",
        "URL": "https://github.com/ansible-collections/kubernetes/pull/51",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "afc6d9d75351a3b39f644c3244c8e463396cd446",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible/ansible-runner",
        "CVE_ID": "CVE-2021-3701",
        "Problem_Type": "CWE-276",
        "Description": "A flaw was found in ansible-runner where the default temporary files configuration in ansible-2.0.0 are written to world R/W locations. This flaw allows an attacker to pre-create the directory, resulting in reading private information or forcing ansible-runner to write files as the legitimate user in a place they did not expect. The highest threat from this vulnerability is to confidentiality and integrity.",
        "URL": "https://github.com/ansible/ansible-runner/pull/742/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dcdb62daf668a31754fc6fbf73374e7d14d5f52c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible/ansible-runner",
        "CVE_ID": "CVE-2021-3702",
        "Problem_Type": "CWE-362",
        "Description": "A race condition flaw was found in ansible-runner, where an attacker could watch for rapid creation and deletion of a temporary directory, substitute their directory at that name, and then have access to ansible-runner's private_data_dir the next time ansible-runner made use of the private_data_dir. The highest Threat out of this flaw is to integrity and confidentiality.",
        "URL": "https://github.com/ansible/ansible-runner/pull/742/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dcdb62daf668a31754fc6fbf73374e7d14d5f52c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-14864",
        "Problem_Type": "CWE-532",
        "Description": "Ansible, versions 2.9.x before 2.9.1, 2.8.x before 2.8.7 and Ansible versions 2.7.x before 2.7.15, is not respecting the flag no_log set it to True when Sumologic and Splunk callback plugins are used send tasks results events to collectors. This would discloses and collects any sensitive data.",
        "URL": "https://github.com/ansible/ansible/pull/63527",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "c76e074e4c71c7621a1ca8159261c1959b5287af",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-14904",
        "Problem_Type": "CWE-20",
        "Description": "A flaw was found in the solaris_zone module from the Ansible Community modules. When setting the name for the zone on the Solaris host, the zone name is checked by listing the process with the 'ps' bare command on the remote machine. An attacker could take advantage of this flaw by crafting the name of the zone and executing arbitrary commands in the remote host. Ansible Engine 2.7.15, 2.8.7, and 2.9.2 as well as previous versions are affected.",
        "URL": "https://github.com/ansible/ansible/pull/65686",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d2ae7e3226cdc8e37aea83c202aeb0e7e5a1aec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ansible/awx",
        "CVE_ID": "CVE-2019-3869",
        "Problem_Type": "CWE-200",
        "Description": "When running Tower before 3.4.3 on OpenShift or Kubernetes, application credentials are exposed to playbook job runs via environment variables. A malicious user with the ability to write playbooks could use this to gain administrative privileges.",
        "URL": "https://github.com/ansible/awx/pull/3505",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2129f1208597d5c84478df48e0770e7b81b658ec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2020-14147",
        "Problem_Type": "CWE-787",
        "Description": "An integer overflow in the getnum function in lua_struct.c in Redis before 6.0.3 allows context-dependent attackers with permission to run Lua code in a Redis session to cause a denial of service (memory corruption and application crash) or possibly bypass intended sandbox restrictions via a large number, which triggers a stack-based buffer overflow. NOTE: this issue exists because of a CVE-2015-8080 regression.",
        "URL": "https://github.com/antirez/redis/pull/6875",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "256ec6c52f5bd41437ea703801f67426af370918",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "anuraghazra/github-readme-stats",
        "CVE_ID": "CVE-2020-23986",
        "Problem_Type": "CWE-79",
        "Description": "Github Read Me Stats commit 3c7220e4f7144f6cb068fd433c774f6db47ccb95 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the function renderError.",
        "URL": "https://github.com/anuraghazra/github-readme-stats/pull/255",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "34b5dcb181cc96a38ff62bc31643e667be0daea9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-41131",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Hive Provider, Apache Airflow allows an attacker to execute arbtrary commands in the task execution context, without write access to DAG files. This issue affects Hive Provider versions prior to 4.1.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case HIve Provider is installed (Hive Provider 4.1.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the HIve Provider version 4.1.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version that has lower version of the Hive Provider installed).",
        "URL": "https://github.com/apache/airflow/pull/27647",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "150dd927c3297daccab507bc5a5f2c3a32f24d5f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-45402",
        "Problem_Type": "CWE-601",
        "Description": "In Apache Airflow versions prior to 2.4.3, there was an open redirect in the webserver's `/login` endpoint.",
        "URL": "https://github.com/apache/airflow/pull/27576",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b33d22c2243c552f4d1372bbe6b75e5fb097f567",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-35005",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Apache Airflow, some potentially sensitive values were being shown to the user in certain situations.\n\nThis vulnerability is mitigated by the fact configuration is not shown in the UI by default (only if `[webserver] expose_config` is set to `non-sensitive-only`), and not all uncensored values are actually sentitive.\n\n\nThis issue affects Apache Airflow: from 2.5.0 before 2.6.2. Users are recommended to update to version 2.6.2 or later.\n\n\n",
        "URL": "https://github.com/apache/airflow/pull/31788",
        "Tag": "['Patch']",
        "fix_commit_hash": "8062756fa9e01eeeee1f2c6df74f376c0a526bd5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-35797",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Hive Provider.\nThis issue affects Apache Airflow Apache Hive Provider: before 6.1.1.\n\nBefore version 6.1.1 it was\u00c2\u00a0possible to bypass the security check to RCE via\nprincipal parameter. For this to be\u00c2\u00a0exploited it requires access to modifying the connection details.\n\nIt is recommended updating provider version to 6.1.1 in order to avoid this\u00c2\u00a0vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/31983",
        "Tag": "['Patch']",
        "fix_commit_hash": "6724eeb6210d5965937eaf9dae3e476eb30f8268",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-40195",
        "Problem_Type": "CWE-502",
        "Description": "Deserialization of Untrusted Data, Inclusion of Functionality from Untrusted Control Sphere vulnerability in Apache Software Foundation Apache Airflow Spark Provider.\n\nWhen the Apache Spark provider is installed on an Airflow deployment, an Airflow user that is authorized to configure Spark hooks can effectively run arbitrary code on the Airflow node by pointing it at a malicious Spark server. Prior to version 4.1.3, this was not called out in the documentation explicitly, so it is possible that administrators provided authorizations to configure Spark hooks without taking this into account. We recommend administrators to review their configurations to make sure the authorization to configure Spark hooks is only provided to fully trusted users.\n\nTo view the warning in the docs please visit\u00c2\u00a0 https://airflow.apache.org/docs/apache-airflow-providers-apache-spark/4.1.3/connections/spark.html \n\n",
        "URL": "https://github.com/apache/airflow/pull/33233",
        "Tag": "['Patch']",
        "fix_commit_hash": "6850b5c777fa515e110ad1daa85242209a8ec6c0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apolloconfig/apollo",
        "CVE_ID": "CVE-2023-25569",
        "Problem_Type": "CWE-352",
        "Description": "Apollo is a configuration management system. Prior to version 2.1.0, a low-privileged user can create a special web page. If an authenticated portal admin visits this page, the page can silently send a request to assign new roles for that user without any confirmation from the Portal admin. Cookie SameSite strategy was set to Lax in version 2.1.0. As a workaround, avoid visiting unknown source pages.\n",
        "URL": "https://github.com/apolloconfig/apollo/pull/4664",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "00d968a7229f809b0d8ed0532e8c01a6c2b7c750",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apostrophecms/sanitize-html",
        "CVE_ID": "CVE-2021-26539",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apostrophe Technologies sanitize-html before 2.3.1 does not properly handle internationalized domain name (IDN) which could allow an attacker to bypass hostname whitelist validation set by the \"allowedIframeHostnames\" option.",
        "URL": "https://github.com/apostrophecms/sanitize-html/pull/458",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bdf7836ef8f0e5b21f9a1aab0623ae8fcd09c1da",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apostrophecms/sanitize-html",
        "CVE_ID": "CVE-2021-26540",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apostrophe Technologies sanitize-html before 2.3.2 does not properly validate the hostnames set by the \"allowedIframeHostnames\" option when the \"allowIframeRelativeUrls\" is set to true, which allows attackers to bypass hostname whitelist for iframe element, related using an src value that starts with \"/\\\\example.com\".",
        "URL": "https://github.com/apostrophecms/sanitize-html/pull/460",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6012524e7824a2c8f6782b2bc5f93b1261723403",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apostrophecms/sanitize-html",
        "CVE_ID": "CVE-2022-25887",
        "Problem_Type": "CWE-1333",
        "Description": "The package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal.",
        "URL": "https://github.com/apostrophecms/sanitize-html/pull/557",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b4682c12fd30e12e82fa2d9b766de91d7d2cd23c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2023-27783",
        "Problem_Type": "CWE-617",
        "Description": "An issue found in TCPreplay tcprewrite v.4.4.3 allows a remote attacker to cause a denial of service via the tcpedit_dlt_cleanup function at plugins/dlt_plugins.c.",
        "URL": "https://github.com/appneta/tcpreplay/pull/781",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7aca59e4fc96fc1d0e43a3d64b2f9fc9a46b6ca8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2023-27786",
        "Problem_Type": "CWE-476",
        "Description": "An issue found in TCPprep v.4.4.3 allows a remote attacker to cause a denial of service via the macinstring function.",
        "URL": "https://github.com/appneta/tcpreplay/pull/783",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "342d29d9e42898b1e097a9f9a31fe0ad15d2f43b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2023-27789",
        "Problem_Type": "CWE-617",
        "Description": "An issue found in TCPprep v.4.4.3 allows a remote attacker to cause a denial of service via the cidr2cidr function at the cidr.c:178 endpoint.",
        "URL": "https://github.com/appneta/tcpreplay/pull/783",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "342d29d9e42898b1e097a9f9a31fe0ad15d2f43b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apptainer/apptainer",
        "CVE_ID": "CVE-2023-38496",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apptainer is an open source container platform. Version 1.2.0-rc.2 introduced an ineffective privilege drop when requesting container network setup, therefore subsequent functions are called with root privileges, the attack surface is rather limited for users but an attacker could possibly craft a starter config to delete any directory on the host filesystems. A security fix has been included in Apptainer 1.2.1. There is no known workaround outside of upgrading to Apptainer 1.2.1.",
        "URL": "https://github.com/apptainer/apptainer/pull/1523",
        "Tag": "['Patch']",
        "fix_commit_hash": "91bfd6993aa833c4f224c69664e29fe43af24ff8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apptainer/apptainer",
        "CVE_ID": "CVE-2023-38496",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apptainer is an open source container platform. Version 1.2.0-rc.2 introduced an ineffective privilege drop when requesting container network setup, therefore subsequent functions are called with root privileges, the attack surface is rather limited for users but an attacker could possibly craft a starter config to delete any directory on the host filesystems. A security fix has been included in Apptainer 1.2.1. There is no known workaround outside of upgrading to Apptainer 1.2.1.",
        "URL": "https://github.com/apptainer/apptainer/pull/1578",
        "Tag": "['Patch']",
        "fix_commit_hash": "6142efe142590d62acc96d0a3da6c613138e1e15",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "appwrite/appwrite",
        "CVE_ID": "CVE-2021-23682",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package litespeed.js before 0.3.12; the package appwrite/server-ce from 0.12.0 and before 0.12.2, before 0.11.1. When parsing the query string in the getJsonFromUrl function, the key that is set in the result object is not properly sanitized leading to a Prototype Pollution vulnerability.",
        "URL": "https://github.com/appwrite/appwrite/pull/2778",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dd980ec1b8034a50b8beac57b66478189f5d7e83",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "arachnys/cabot",
        "CVE_ID": "CVE-2020-7734",
        "Problem_Type": "CWE-79",
        "Description": "All versions of package cabot are vulnerable to Cross-site Scripting (XSS) via the Endpoint column.",
        "URL": "https://github.com/arachnys/cabot/pull/694",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eb0b3544f8c8ab2dee4643df191da346a941734f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "arendst/Tasmota",
        "CVE_ID": "CVE-2022-43294",
        "Problem_Type": "CWE-787",
        "Description": "Tasmota before commit 066878da4d4762a9b6cb169fdf353e804d735cfd was discovered to contain a stack overflow via the ClientPortPtr parameter at lib/libesp32/rtsp/CRtspSession.cpp.",
        "URL": "https://github.com/arendst/Tasmota/pull/16802",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d0ee5776e5fd055090e60b4e6bc90605c51c9312",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "aresch/rencode",
        "CVE_ID": "CVE-2021-40839",
        "Problem_Type": "CWE-835",
        "Description": "The rencode package through 1.0.6 for Python allows an infinite loop in typecode decoding (such as via ;\\x2f\\x7f), enabling a remote attack that consumes CPU and memory.",
        "URL": "https://github.com/aresch/rencode/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "572ff74586d9b1daab904c6f7f7009ce0143bb75",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2018-21034",
        "Problem_Type": "CWE-200",
        "Description": "In Argo versions prior to v1.5.0-rc1, it was possible for authenticated Argo users to submit API calls to retrieve secrets and other manifests which were stored within git.",
        "URL": "https://github.com/argoproj/argo-cd/pull/3088",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "916d4aed5775fead4ab75f47c1d352cd0e73b815",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2024-22424",
        "Problem_Type": "CWE-352",
        "Description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. The Argo CD API prior to versions 2.10-rc2, 2.9.4, 2.8.8, and 2.7.15 are vulnerable to a cross-server request forgery (CSRF) attack when the attacker has the ability to write HTML to a page on the same parent domain as Argo CD. A CSRF attack works by tricking an authenticated Argo CD user into loading a web page which contains code to call Argo CD API endpoints on the victim\u00c2\u2019s behalf. For example, an attacker could send an Argo CD user a link to a page which looks harmless but in the background calls an Argo CD API endpoint to create an application running malicious code. Argo CD uses the \u00c2\u201cLax\u00c2\u201d SameSite cookie policy to prevent CSRF attacks where the attacker controls an external domain. The malicious external website can attempt to call the Argo CD API, but the web browser will refuse to send the Argo CD auth token with the request. Many companies host Argo CD on an internal subdomain. If an attacker can place malicious code on, for example, https://test.internal.example.com/, they can still perform a CSRF attack. In this case, the \u00c2\u201cLax\u00c2\u201d SameSite cookie does not prevent the browser from sending the auth cookie, because the destination is a parent domain of the Argo CD API. Browsers generally block such attacks by applying CORS policies to sensitive requests with sensitive content types. Specifically, browsers will send a \u00c2\u201cpreflight request\u00c2\u201d for POSTs with content type \u00c2\u201capplication/json\u00c2\u201d asking the destination API \u00c2\u201care you allowed to accept requests from my domain?\u00c2\u201d If the destination API does not answer \u00c2\u201cyes,\u00c2\u201d the browser will block the request. Before the patched versions, Argo CD did not validate that requests contained the correct content type header. So an attacker could bypass the browser\u00c2\u2019s CORS check by setting the content type to something which is considered \u00c2\u201cnot sensitive\u00c2\u201d such as \u00c2\u201ctext/plain.\u00c2\u201d The browser wouldn\u00c2\u2019t send the preflight request, and Argo CD would happily accept the contents (which are actually still JSON) and perform the requested action (such as running malicious code). A patch for this vulnerability has been released in the following Argo CD versions: 2.10-rc2, 2.9.4, 2.8.8, and 2.7.15. The patch contains a breaking API change. The Argo CD API will no longer accept non-GET requests which do not specify application/json as their Content-Type. The accepted content types list is configurable, and it is possible (but discouraged) to disable the content type check completely. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/argoproj/argo-cd/pull/16860",
        "Tag": "['Patch']",
        "fix_commit_hash": "7ec9999b01b26e760ff8f96ce7fac20c02fab6c8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ArjunSharda/Searchor",
        "CVE_ID": "CVE-2023-43364",
        "Problem_Type": "CWE-74",
        "Description": "main.py in Searchor before 2.4.2 uses eval on CLI input, which may cause unexpected code execution.",
        "URL": "https://github.com/ArjunSharda/Searchor/pull/130",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "16016506f7bf92b0f21f51841d599126d6fcd15b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ARM-software/arm-trusted-firmware",
        "CVE_ID": "CVE-2018-19440",
        "Problem_Type": "CWE-200",
        "Description": "ARM Trusted Firmware-A allows information disclosure.",
        "URL": "https://github.com/ARM-software/arm-trusted-firmware/pull/1710",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c120613f7117a81716e0995dd18a3568e04f34ad",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ARMmbed/mbed-os",
        "CVE_ID": "CVE-2021-27433",
        "Problem_Type": "CWE-190",
        "Description": "ARM mbed-ualloc memory library version 1.3.0 is vulnerable to integer wrap-around in function mbed_krbs, which can lead to arbitrary memory allocation, resulting in unexpected behavior such as a crash or a remote code injection/execution.",
        "URL": "https://github.com/ARMmbed/mbed-os/pull/14408",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52eedfd86ec5147443dc4c9b0f0d75498a85c148",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ARMmbed/mbed-os",
        "CVE_ID": "CVE-2021-27435",
        "Problem_Type": "CWE-190",
        "Description": "ARM mbed product Version 6.3.0 is vulnerable to integer wrap-around in malloc_wrapper function, which can lead to arbitrary memory allocation, resulting in unexpected behavior such as a crash or a remote code injection/execution.",
        "URL": "https://github.com/ARMmbed/mbed-os/pull/14408",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52eedfd86ec5147443dc4c9b0f0d75498a85c148",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Arno0x/TwoFactorAuth",
        "CVE_ID": "CVE-2016-15030",
        "Problem_Type": "CWE-601",
        "Description": "A vulnerability classified as problematic has been found in Arno0x TwoFactorAuth. This affects an unknown part of the file login/login.php. The manipulation of the argument from leads to open redirect. It is possible to initiate the attack remotely. This product does not use versioning. This is why information about affected and unaffected releases are unavailable. The patch is named 8549ad3cf197095f783643e41333586d6a4d0e54. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-223803.",
        "URL": "https://github.com/Arno0x/TwoFactorAuth/pull/3",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "43535441857d8219606d101badca510691e4e8be",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "arrow-kt/ank",
        "CVE_ID": "CVE-2019-11404",
        "Problem_Type": "CWE-311",
        "Description": "arrow-kt Arrow before 0.9.0 resolved Gradle build artifacts (for compiling and building the published JARs) over HTTP instead of HTTPS. Any of these dependent artifacts could have been maliciously compromised by an MITM attack.",
        "URL": "https://github.com/arrow-kt/ank/pull/36",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d9184abfa8f07f14e277ec3800ff1adc20986dad",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "artesaos/seotools",
        "CVE_ID": "CVE-2020-36663",
        "Problem_Type": "CWE-601",
        "Description": "A vulnerability, which was classified as problematic, was found in Artes\u00c3\u00a3os SEOTools up to 0.17.1. This affects the function makeTag of the file OpenGraph.php. The manipulation of the argument value leads to open redirect. Upgrading to version 0.17.2 is able to address this issue. The patch is named ca27cd0edf917e0bc805227013859b8b5a1f01fb. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-222231.",
        "URL": "https://github.com/artesaos/seotools/pull/201",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "ca27cd0edf917e0bc805227013859b8b5a1f01fb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "artesaos/seotools",
        "CVE_ID": "CVE-2020-36664",
        "Problem_Type": "CWE-601",
        "Description": "A vulnerability has been found in Artes\u00c3\u00a3os SEOTools up to 0.17.1 and classified as problematic. This vulnerability affects the function setTitle of the file SEOMeta.php. The manipulation of the argument title leads to open redirect. Upgrading to version 0.17.2 is able to address this issue. The name of the patch is ca27cd0edf917e0bc805227013859b8b5a1f01fb. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-222232.",
        "URL": "https://github.com/artesaos/seotools/pull/201",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "ca27cd0edf917e0bc805227013859b8b5a1f01fb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "artesaos/seotools",
        "CVE_ID": "CVE-2020-36665",
        "Problem_Type": "CWE-601",
        "Description": "A vulnerability was found in Artes\u00c3\u00a3os SEOTools up to 0.17.1 and classified as critical. This issue affects the function eachValue of the file TwitterCards.php. The manipulation of the argument value leads to open redirect. Upgrading to version 0.17.2 is able to address this issue. The identifier of the patch is ca27cd0edf917e0bc805227013859b8b5a1f01fb. It is recommended to upgrade the affected component. The identifier VDB-222233 was assigned to this vulnerability.",
        "URL": "https://github.com/artesaos/seotools/pull/201",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "ca27cd0edf917e0bc805227013859b8b5a1f01fb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "asrashley/dash-live",
        "CVE_ID": "CVE-2022-4735",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in asrashley dash-live. This vulnerability affects the function ready of the file static/js/media.js of the component DOM Node Handler. The manipulation leads to cross site scripting. The attack can be initiated remotely. The name of the patch is 24d01757a5319cc14c4aa1d8b53d1ab24d48e451. It is recommended to apply a patch to fix this issue. VDB-216766 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/asrashley/dash-live/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f526338366c5a450732ee52c6b8b0a2196da5d2f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "atheme/atheme",
        "CVE_ID": "CVE-2017-6384",
        "Problem_Type": "CWE-772",
        "Description": "Memory leak in the login_user function in saslserv/main.c in saslserv/main.so in Atheme 7.2.7 allows a remote unauthenticated attacker to consume memory and cause a denial of service. This is fixed in 7.2.8.",
        "URL": "https://github.com/atheme/atheme/pull/539",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5150504791bde9f15d8e929c39b2b75e96ac5e11",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ATM-Consulting/dolibarr_module_quicksupplierprice",
        "CVE_ID": "CVE-2022-4933",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability, which was classified as critical, has been found in ATM Consulting dolibarr_module_quicksupplierprice up to 1.1.6. Affected by this issue is the function upatePrice of the file script/interface.php. The manipulation leads to sql injection. The attack may be launched remotely. Upgrading to version 1.1.7 is able to address this issue. The patch is identified as ccad1e4282b0e393a32fcc852e82ec0e0af5446f. It is recommended to upgrade the affected component. VDB-223382 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/ATM-Consulting/dolibarr_module_quicksupplierprice/pull/21",
        "Tag": "['Patch']",
        "fix_commit_hash": "7452b008fb7d4df971b0d3ea25fbdf11529a0861",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "atwellpub/resend-welcome-email",
        "CVE_ID": "CVE-2015-10078",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in atwellpub Resend Welcome Email Plugin 1.0.1 on WordPress. This issue affects the function send_welcome_email_url of the file resend-welcome-email.php. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.0.2 is able to address this issue. The identifier of the patch is b14c1f66d307783f0ae74f88088a85999107695c. It is recommended to upgrade the affected component. The identifier VDB-220637 was assigned to this vulnerability.",
        "URL": "https://github.com/atwellpub/resend-welcome-email/pull/1",
        "Tag": "['Patch']",
        "fix_commit_hash": "e8717ad0332e0578be492bdbff92174b84ff0c51",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "auth0/node-auth0",
        "CVE_ID": "CVE-2020-15125",
        "Problem_Type": "CWE-209",
        "Description": "In auth0 (npm package) versions before 2.27.1, a DenyList of specific keys that should be sanitized from the request object contained in the error object is used. The key for Authorization header is not sanitized and in certain cases the Authorization header value can be logged exposing a bearer token. You are affected by this vulnerability if you are using the auth0 npm package, and you are using a Machine to Machine application authorized to use Auth0's management API",
        "URL": "https://github.com/auth0/node-auth0/pull/507",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e23cd867a317c26b2aa39bd7fbacd59acb243195",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "AuthGuard/AuthGuard",
        "CVE_ID": "CVE-2021-45890",
        "Problem_Type": "CWE-287",
        "Description": "basic/BasicAuthProvider.java in AuthGuard before 0.9.0 allows authentication via an inactive identifier.",
        "URL": "https://github.com/AuthGuard/AuthGuard/pull/181",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1a837f209a216e60ab4957404b9e04fb53f5b303",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "authzed/spicedb",
        "CVE_ID": "CVE-2023-35930",
        "Problem_Type": "CWE-913",
        "Description": "SpiceDB is an open source, Google Zanzibar-inspired, database system for creating and managing security-critical application permissions. Any user making a negative authorization decision based on the results of a `LookupResources` request with 1.22.0 is affected. For example, using `LookupResources` to find a list of resources to allow access to be okay: some subjects that should have access to a resource may not. But if using `LookupResources` to find a list of banned resources instead, then some users that shouldn't have access may. Generally, `LookupResources` is not and should not be to gate access in this way - that's what the `Check` API is for. Additionally, version 1.22.0 has included a warning about this bug since its initial release. Users are advised to upgrade to version 1.22.2. Users unable to upgrade should avoid using `LookupResources` for negative authorization decisions.",
        "URL": "https://github.com/authzed/spicedb/pull/1397",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "666d083225a1f3274112be95a9c6e17cc003be34",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "autotrace/autotrace",
        "CVE_ID": "CVE-2019-19004",
        "Problem_Type": "CWE-190",
        "Description": "A biWidth*biBitCnt integer overflow in input-bmp.c in autotrace 0.31.1 allows attackers to provide an unexpected input value to malloc via a malformed bitmap image.",
        "URL": "https://github.com/autotrace/autotrace/pull/40",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d272675dec8304f918b3700634dce9355a7d7e42",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "autotrace/autotrace",
        "CVE_ID": "CVE-2019-19005",
        "Problem_Type": "CWE-415",
        "Description": "A bitmap double free in main.c in autotrace 0.31.1 allows attackers to cause an unspecified impact via a malformed bitmap image. This may occur after the use-after-free in CVE-2017-9182.",
        "URL": "https://github.com/autotrace/autotrace/pull/40",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d272675dec8304f918b3700634dce9355a7d7e42",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "axios/axios",
        "CVE_ID": "CVE-2019-10742",
        "Problem_Type": "CWE-755",
        "Description": "Axios up to and including 0.18.0 allows attackers to cause a denial of service (application crash) by continuing to accepting content after maxContentLength is exceeded.",
        "URL": "https://github.com/axios/axios/pull/1485",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0d4fca085b9b44e110f4c5a3dd7384c31abaf756",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Azure/azure-cli",
        "CVE_ID": "CVE-2022-39327",
        "Problem_Type": "CWE-78",
        "Description": "Azure CLI is the command-line interface for Microsoft Azure. In versions previous to 2.40.0, Azure CLI contains a vulnerability for potential code injection. Critical scenarios are where a hosting machine runs an Azure CLI command where parameter values have been provided by an external source. The vulnerability is only applicable when the Azure CLI command is run on a Windows machine and with any version of PowerShell and when the parameter value contains the `&` or `|` symbols. If any of these prerequisites are not met, this vulnerability is not applicable. Users should upgrade to version 2.40.0 or greater to receive a a mitigation for the vulnerability.",
        "URL": "https://github.com/Azure/azure-cli/pull/23514",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a55f924c39b80a71f46210ad83a43e7e9093d336",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Azure/ipam",
        "CVE_ID": "CVE-2024-21638",
        "Problem_Type": "CWE-287",
        "Description": "Azure IPAM (IP Address Management) is a lightweight solution developed on top of the Azure platform designed to help Azure customers manage their IP Address space easily and effectively. By design there is no write access to customers' Azure environments as the Service Principal used is only assigned the Reader role at the root Management Group level. Until recently, the solution lacked the validation of the passed in authentication token which may result in attacker impersonating any privileged user to access data stored within the IPAM instance and subsequently from Azure, causing an elevation of privilege. This vulnerability has been patched in version 3.0.0.\n",
        "URL": "https://github.com/Azure/ipam/pull/218",
        "Tag": "['Patch']",
        "fix_commit_hash": "64ef2d07edf16ffa50f29c7e0e25d32d974b367f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bareos/bareos",
        "CVE_ID": "CVE-2022-24755",
        "Problem_Type": "CWE-863",
        "Description": "Bareos is open source software for backup, archiving, and recovery of data for operating systems. When Bareos Director >= 18.2 >= 18.2 but prior to 21.1.0, 20.0.6, and 19.2.12 is built and configured for PAM authentication, it will skip authorization checks completely. Expired accounts and accounts with expired passwords can still login. This problem will affect users that have PAM enabled. Currently there is no authorization (e.g. check for expired or disabled accounts), but only plain authentication (i.e. check if username and password match). Bareos Director versions 21.1.0, 20.0.6 and 19.2.12 implement the authorization check that was previously missing. The only workaround is to make sure that authentication fails if the user is not authorized.",
        "URL": "https://github.com/bareos/bareos/pull/1121",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f1f0d26eb333d129d5f5bc083b3aa55033cbc27",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bareos/bareos",
        "CVE_ID": "CVE-2022-24755",
        "Problem_Type": "CWE-863",
        "Description": "Bareos is open source software for backup, archiving, and recovery of data for operating systems. When Bareos Director >= 18.2 >= 18.2 but prior to 21.1.0, 20.0.6, and 19.2.12 is built and configured for PAM authentication, it will skip authorization checks completely. Expired accounts and accounts with expired passwords can still login. This problem will affect users that have PAM enabled. Currently there is no authorization (e.g. check for expired or disabled accounts), but only plain authentication (i.e. check if username and password match). Bareos Director versions 21.1.0, 20.0.6 and 19.2.12 implement the authorization check that was previously missing. The only workaround is to make sure that authentication fails if the user is not authorized.",
        "URL": "https://github.com/bareos/bareos/pull/1119",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6c6f32a0418930e0d411e4a67939c5a1c04dd48f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bareos/bareos",
        "CVE_ID": "CVE-2022-24755",
        "Problem_Type": "CWE-863",
        "Description": "Bareos is open source software for backup, archiving, and recovery of data for operating systems. When Bareos Director >= 18.2 >= 18.2 but prior to 21.1.0, 20.0.6, and 19.2.12 is built and configured for PAM authentication, it will skip authorization checks completely. Expired accounts and accounts with expired passwords can still login. This problem will affect users that have PAM enabled. Currently there is no authorization (e.g. check for expired or disabled accounts), but only plain authentication (i.e. check if username and password match). Bareos Director versions 21.1.0, 20.0.6 and 19.2.12 implement the authorization check that was previously missing. The only workaround is to make sure that authentication fails if the user is not authorized.",
        "URL": "https://github.com/bareos/bareos/pull/1115",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4be8081d3f866eb2c4328e1a5cfd0bd5eb52e861",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bareos/bareos",
        "CVE_ID": "CVE-2022-24756",
        "Problem_Type": "CWE-401",
        "Description": "Bareos is open source software for backup, archiving, and recovery of data for operating systems. When Bareos Director >= 18.2 but prior to 21.1.0, 20.0.6, and 19.2.12 is built and configured for PAM authentication, a failed PAM authentication will leak a small amount of memory. An attacker that is able to use the PAM Console (i.e. by knowing the shared secret or via the WebUI) can flood the Director with failing login attempts which will eventually lead to an out-of-memory condition in which the Director will not work anymore. Bareos Director versions 21.1.0, 20.0.6 and 19.2.12 contain a Bugfix for this problem. Users who are unable to upgrade may disable PAM authentication as a workaround.",
        "URL": "https://github.com/bareos/bareos/pull/1121",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f1f0d26eb333d129d5f5bc083b3aa55033cbc27",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bareos/bareos",
        "CVE_ID": "CVE-2022-24756",
        "Problem_Type": "CWE-401",
        "Description": "Bareos is open source software for backup, archiving, and recovery of data for operating systems. When Bareos Director >= 18.2 but prior to 21.1.0, 20.0.6, and 19.2.12 is built and configured for PAM authentication, a failed PAM authentication will leak a small amount of memory. An attacker that is able to use the PAM Console (i.e. by knowing the shared secret or via the WebUI) can flood the Director with failing login attempts which will eventually lead to an out-of-memory condition in which the Director will not work anymore. Bareos Director versions 21.1.0, 20.0.6 and 19.2.12 contain a Bugfix for this problem. Users who are unable to upgrade may disable PAM authentication as a workaround.",
        "URL": "https://github.com/bareos/bareos/pull/1119",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6c6f32a0418930e0d411e4a67939c5a1c04dd48f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bareos/bareos",
        "CVE_ID": "CVE-2022-24756",
        "Problem_Type": "CWE-401",
        "Description": "Bareos is open source software for backup, archiving, and recovery of data for operating systems. When Bareos Director >= 18.2 but prior to 21.1.0, 20.0.6, and 19.2.12 is built and configured for PAM authentication, a failed PAM authentication will leak a small amount of memory. An attacker that is able to use the PAM Console (i.e. by knowing the shared secret or via the WebUI) can flood the Director with failing login attempts which will eventually lead to an out-of-memory condition in which the Director will not work anymore. Bareos Director versions 21.1.0, 20.0.6 and 19.2.12 contain a Bugfix for this problem. Users who are unable to upgrade may disable PAM authentication as a workaround.",
        "URL": "https://github.com/bareos/bareos/pull/1115",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4be8081d3f866eb2c4328e1a5cfd0bd5eb52e861",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "barronwaffles/dwc_network_server_emulator",
        "CVE_ID": "CVE-2020-36631",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in barronwaffles dwc_network_server_emulator. It has been declared as critical. This vulnerability affects the function update_profile of the file gamespy/gs_database.py. The manipulation of the argument firstname/lastname leads to sql injection. The attack can be initiated remotely. The name of the patch is f70eb21394f75019886fbc2fb536de36161ba422. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216772.",
        "URL": "https://github.com/barronwaffles/dwc_network_server_emulator/pull/538",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f70eb21394f75019886fbc2fb536de36161ba422",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "basecamp/easymon",
        "CVE_ID": "CVE-2018-1000855",
        "Problem_Type": "CWE-79",
        "Description": "easymon version 1.4 and earlier contains a Cross Site Scripting (XSS) vulnerability in Endpoint where monitoring is mounted that can result in Reflected XSS that affects Firefox. Can be used to steal cookies, depending on the cookie settings.. This attack appear to be exploitable via The victim must click on a crafted URL that contains the XSS payload. This vulnerability appears to have been fixed in 1.4.1 and later.",
        "URL": "https://github.com/basecamp/easymon/pull/25",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a5deaf7359fc177fcf3fca725618b53619a30b7e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bblfsh/bblfshd",
        "CVE_ID": "CVE-2021-32825",
        "Problem_Type": "CWE-59",
        "Description": "bblfshd is an open source self-hosted server for source code parsing. In bblfshd before commit 4265465b9b6fb5663c30ee43806126012066aad4 there is a \"zipslip\" vulnerability. The unsafe handling of symbolic links in an unpacking routine may enable attackers to read and/or write to arbitrary locations outside the designated target folder. This issue may lead to arbitrary file write (with same permissions as the program running the unpack operation) if the attacker can control the archive file. Additionally, if the attacker has read access to the unpacked files, he may be able to read arbitrary system files the parent process has permissions to read. For more details including a PoC see the referenced GHSL-2020-258.",
        "URL": "https://github.com/bblfsh/bblfshd/pull/341",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4265465b9b6fb5663c30ee43806126012066aad4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Bedework/bw-webdav",
        "CVE_ID": "CVE-2018-20000",
        "Problem_Type": "CWE-611",
        "Description": "Apereo Bedework bw-webdav before 4.0.3 allows XXE attacks, as demonstrated by an invite-reply document that reads a local file, related to webdav/servlet/common/MethodBase.java and webdav/servlet/common/PostRequestPars.java.",
        "URL": "https://github.com/Bedework/bw-webdav/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ccb87c2757bab531c53faf0637ee342a378caa7f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bedita/bedita",
        "CVE_ID": "CVE-2019-15570",
        "Problem_Type": "CWE-89",
        "Description": "BEdita through 4.0.0-RC2 allows SQL injection during a save operation for a relation with parameters.",
        "URL": "https://github.com/bedita/bedita/pull/1608",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0ddcd46d645c773e69369f3ed82c865a4d098454",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "BetterErrors/better_errors",
        "CVE_ID": "CVE-2021-39197",
        "Problem_Type": "CWE-352",
        "Description": "better_errors is an open source replacement for the standard Rails error page with more information rich error pages. It is also usable outside of Rails in any Rack app as Rack middleware. better_errors prior to 2.8.0 did not implement CSRF protection for its internal requests. It also did not enforce the correct \"Content-Type\" header for these requests, which allowed a cross-origin \"simple request\" to be made without CORS protection. These together left an application with better_errors enabled open to cross-origin attacks. As a developer tool, better_errors documentation strongly recommends addition only to the `development` bundle group, so this vulnerability should only affect development environments. Please ensure that your project limits better_errors to the `development` group (or the non-Rails equivalent). Starting with release 2.8.x, CSRF protection is enforced. It is recommended that you upgrade to the latest release, or minimally to \"~> 2.8.3\". There are no known workarounds to mitigate the risk of using older releases of better_errors.",
        "URL": "https://github.com/BetterErrors/better_errors/pull/474",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8e8e796bfbde4aa088741823c8a3fc6df2089bb0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2020-12113",
        "Problem_Type": "CWE-79",
        "Description": "BigBlueButton before 2.2.4 allows XSS via closed captions because dangerouslySetInnerHTML in React is used.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/9017",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "14b05708591705a2781373239db182e0fe4b0188",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29169",
        "Problem_Type": "CWE-1333",
        "Description": "BigBlueButton is an open source web conferencing system. Versions starting with 2.2 and prior to 2.3.19, 2.4.7, and 2.5.0-beta.2 are vulnerable to regular expression denial of service (ReDoS) attacks. By using specific a RegularExpression, an attacker can cause denial of service for the bbb-html5 service. The useragent library performs checking of device by parsing the input of User-Agent header and lets it go through lookupUserAgent() (alias of useragent.lookup() ). This function handles input by regexing and attackers can abuse that by providing some ReDos payload using `SmartWatch`. The maintainers removed `htmlclient/useragent` from versions 2.3.19, 2.4.7, and 2.5.0-beta.2. As a workaround, disable NginX forwarding the requests to the handler according to the directions in the GitHub Security Advisory.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/14896",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d43ea3f94c9814b9cdfca4581aa26008e15572c6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29169",
        "Problem_Type": "CWE-1333",
        "Description": "BigBlueButton is an open source web conferencing system. Versions starting with 2.2 and prior to 2.3.19, 2.4.7, and 2.5.0-beta.2 are vulnerable to regular expression denial of service (ReDoS) attacks. By using specific a RegularExpression, an attacker can cause denial of service for the bbb-html5 service. The useragent library performs checking of device by parsing the input of User-Agent header and lets it go through lookupUserAgent() (alias of useragent.lookup() ). This function handles input by regexing and attackers can abuse that by providing some ReDos payload using `SmartWatch`. The maintainers removed `htmlclient/useragent` from versions 2.3.19, 2.4.7, and 2.5.0-beta.2. As a workaround, disable NginX forwarding the requests to the handler according to the directions in the GitHub Security Advisory.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/14886",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f7b9b189c638c7ced67f3994f25f32935077aa76",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29232",
        "Problem_Type": "CWE-200",
        "Description": "BigBlueButton is an open source web conferencing system. Starting with version 2.2 and prior to versions 2.3.9 and 2.4-beta-1, an attacker can circumvent access controls to obtain the content of public chat messages from different meetings on the server. The attacker must be a participant in a meeting on the server. BigBlueButton versions 2.3.9 and 2.4-beta-1 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/12861",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6b61492e2604f3d9b16235421a0443512930add5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29233",
        "Problem_Type": "CWE-285",
        "Description": "BigBlueButton is an open source web conferencing system. In BigBlueButton starting with 2.2 but before 2.3.18 and 2.4-rc-1, an attacker can circumvent access controls to gain access to all breakout rooms of the meeting they are in. The permission checks rely on knowledge of internal ids rather than on verification of the role of the user. Versions 2.3.18 and 2.4-rc-1 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/14265",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1298550d795c8c664ff222ad5c5a9421fa8650d4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29233",
        "Problem_Type": "CWE-285",
        "Description": "BigBlueButton is an open source web conferencing system. In BigBlueButton starting with 2.2 but before 2.3.18 and 2.4-rc-1, an attacker can circumvent access controls to gain access to all breakout rooms of the meeting they are in. The permission checks rely on knowledge of internal ids rather than on verification of the role of the user. Versions 2.3.18 and 2.4-rc-1 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/13117",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1c5cc2a3c2ebdaea173e3e75131b7e90682c40e5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29234",
        "Problem_Type": "CWE-285",
        "Description": "BigBlueButton is an open source web conferencing system. Starting in version 2.2 and prior to versions 2.3.18 and 2.4.1, an attacker could send messages to a locked chat within a grace period of 5s any lock setting in the meeting was changed. The attacker needs to be a participant in the meeting. Versions 2.3.18 and 2.4.1 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/13850",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b41f895ab80e7be8a54a41990c95e4c343b773f3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29234",
        "Problem_Type": "CWE-285",
        "Description": "BigBlueButton is an open source web conferencing system. Starting in version 2.2 and prior to versions 2.3.18 and 2.4.1, an attacker could send messages to a locked chat within a grace period of 5s any lock setting in the meeting was changed. The attacker needs to be a participant in the meeting. Versions 2.3.18 and 2.4.1 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/14265",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1298550d795c8c664ff222ad5c5a9421fa8650d4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29235",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "BigBlueButton is an open source web conferencing system. Starting in version 2.2 and prior to versions 2.3.18 and 2.4-rc-6, an attacker who is able to obtain the meeting identifier for a meeting on a server can find information related to an external video being shared, like the current timestamp and play/pause. The problem has been patched in versions 2.3.18 and 2.4-rc-6 by modifying the stream to send the data only for users in the meeting. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/14265",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1298550d795c8c664ff222ad5c5a9421fa8650d4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29235",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "BigBlueButton is an open source web conferencing system. Starting in version 2.2 and prior to versions 2.3.18 and 2.4-rc-6, an attacker who is able to obtain the meeting identifier for a meeting on a server can find information related to an external video being shared, like the current timestamp and play/pause. The problem has been patched in versions 2.3.18 and 2.4-rc-6 by modifying the stream to send the data only for users in the meeting. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/13788",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5667ee01576b12e505a5f945eccf155cb255134b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29236",
        "Problem_Type": "CWE-285",
        "Description": "BigBlueButton is an open source web conferencing system. Starting in version 2.2 and prior to versions 2.3.18 and 2.4-rc-6, an attacker can circumvent access restrictions for drawing on the whiteboard. The permission check is inadvertently skipped on the server, due to a previously introduced grace period. The attacker must be a meeting participant. The problem has been patched in versions 2.3.18 and 2.4-rc-6. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/14265",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1298550d795c8c664ff222ad5c5a9421fa8650d4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-29236",
        "Problem_Type": "CWE-285",
        "Description": "BigBlueButton is an open source web conferencing system. Starting in version 2.2 and prior to versions 2.3.18 and 2.4-rc-6, an attacker can circumvent access restrictions for drawing on the whiteboard. The permission check is inadvertently skipped on the server, due to a previously introduced grace period. The attacker must be a meeting participant. The problem has been patched in versions 2.3.18 and 2.4-rc-6. There are currently no known workarounds.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/13803",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dce14adf50c2acd3a95bc5f2bc56b945304f0974",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-31064",
        "Problem_Type": "CWE-79",
        "Description": "BigBlueButton is an open source web conferencing system. Users in meetings with private chat enabled are vulnerable to a cross site scripting attack in affected versions. The attack occurs when the attacker (with xss in the name) starts a chat. in the victim's client the JavaScript will be executed. This issue has been addressed in version 2.4.8 and 2.5.0. There are no known workarounds for this issue.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/15067",
        "Tag": "['Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "4e96fc5bd4736fc72d61f7dd672c40996ef1bf48",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-31064",
        "Problem_Type": "CWE-79",
        "Description": "BigBlueButton is an open source web conferencing system. Users in meetings with private chat enabled are vulnerable to a cross site scripting attack in affected versions. The attack occurs when the attacker (with xss in the name) starts a chat. in the victim's client the JavaScript will be executed. This issue has been addressed in version 2.4.8 and 2.5.0. There are no known workarounds for this issue.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/15090",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7f3fa23add03fc6a900c370e568a0b36a9b9dab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-31065",
        "Problem_Type": "CWE-79",
        "Description": "BigBlueButton is an open source web conferencing system. In affected versions an attacker can embed malicious JS in their username and have it executed on the victim's client. When a user receives a private chat from the attacker (whose username contains malicious JavaScript), the script gets executed. Additionally when the victim receives a notification that the attacker has left the session. This issue has been patched in version 2.4.8 and 2.5.0. There are no known workarounds for this issue.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/15087",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "69bebe5875eda91e496f52947de244e66e21f21f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2022-31065",
        "Problem_Type": "CWE-79",
        "Description": "BigBlueButton is an open source web conferencing system. In affected versions an attacker can embed malicious JS in their username and have it executed on the victim's client. When a user receives a private chat from the attacker (whose username contains malicious JavaScript), the script gets executed. Additionally when the victim receives a notification that the attacker has left the session. This issue has been patched in version 2.4.8 and 2.5.0. There are no known workarounds for this issue.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/15090",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7f3fa23add03fc6a900c370e568a0b36a9b9dab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2023-33176",
        "Problem_Type": "CWE-918",
        "Description": "BigBlueButton is an open source virtual classroom designed to help teachers teach and learners learn. In affected versions are affected by a Server-Side Request Forgery (SSRF) vulnerability. In an `insertDocument` API request the user is able to supply a URL from which the presentation should be downloaded. This URL was being used without having been successfully validated first. An update to the `followRedirect` method in the `PresentationUrlDownloadService` has been made to validate all URLs to be used for presentation download. Two new properties `presentationDownloadSupportedProtocols` and `presentationDownloadBlockedHosts` have also been added to `bigbluebutton.properties` to allow administrators to define what protocols a URL must use and to explicitly define hosts that a presentation cannot be downloaded from. All URLs passed to `insertDocument` must conform to the requirements of the two previously mentioned properties. Additionally, these URLs must resolve to valid addresses, and these addresses must not be local or loopback addresses. There are no workarounds. Users are advised to upgrade to a patched version of BigBlueButton.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/18045",
        "Tag": "['Patch']",
        "fix_commit_hash": "b18aff32e65a47f1eb2c800e86dcfc7a8fb05e71",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bigpresh/Dancer-Plugin-SimpleCRUD",
        "CVE_ID": "CVE-2019-1010084",
        "Problem_Type": "CWE-863",
        "Description": "Dancer::Plugin::SimpleCRUD 1.14 and earlier is affected by: Incorrect Access Control. The impact is: Potential for unathorised access to data. The component is: Incorrect calls to _ensure_auth() wrapper result in authentication-checking not being applied to al routes.",
        "URL": "https://github.com/bigpresh/Dancer-Plugin-SimpleCRUD/pull/109",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "806dceb83ce15d1413615a6e76ded257afc5e632",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bitcoin/bitcoin",
        "CVE_ID": "CVE-2023-33297",
        "Problem_Type": "CWE-400",
        "Description": "Bitcoin Core before 24.1, when debug mode is not used, allows attackers to cause a denial of service (e.g., CPU consumption) because draining the inventory-to-send queue is inefficient, as exploited in the wild in May 2023.",
        "URL": "https://github.com/bitcoin/bitcoin/pull/27610",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "137a98c5a22e058ed7a7997a0a4dbd75301de51e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bitly/oauth2_proxy",
        "CVE_ID": "CVE-2017-1000069",
        "Problem_Type": "CWE-352",
        "Description": "CSRF in Bitly oauth2_proxy 2.1 during authentication flow",
        "URL": "https://github.com/bitly/oauth2_proxy/pull/360",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4464655276877f1951fddf238cdfeca3cbca83ef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bitly/oauth2_proxy",
        "CVE_ID": "CVE-2017-1000070",
        "Problem_Type": "CWE-601",
        "Description": "The Bitly oauth2_proxy in version 2.1 and earlier was affected by an open redirect vulnerability during the start and termination of the 2-legged OAuth flow. This issue was caused by improper input validation and a violation of RFC-6819",
        "URL": "https://github.com/bitly/oauth2_proxy/pull/359",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "86d083266b747825a05f639560141e542019cf26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bitovi/launchpad",
        "CVE_ID": "CVE-2021-23330",
        "Problem_Type": "CWE-78",
        "Description": "All versions of package launchpad are vulnerable to Command Injection via stop.",
        "URL": "https://github.com/bitovi/launchpad/pull/124",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e2f506b5089b1b29d22c80a77ff636b3b1f6e57c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "blockmason/credit-protocol",
        "CVE_ID": "CVE-2018-25098",
        "Problem_Type": "CWE-672",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in blockmason credit-protocol. It has been declared as problematic. Affected by this vulnerability is the function executeUcacTx of the file contracts/CreditProtocol.sol of the component UCAC Handler. The manipulation leads to denial of service. This product does not use versioning. This is why information about affected and unaffected releases are unavailable. The patch is named 082e01f18707ef995e80ebe97fcedb229a55efc5. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-252799. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/blockmason/credit-protocol/pull/33",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "d91ba95f0e7fd6940d0d91b3c874881859bc43f2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bmeck/node-cookiejar",
        "CVE_ID": "CVE-2022-25901",
        "Problem_Type": "CWE-1333",
        "Description": "Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the Cookie.parse function, which uses an insecure regular expression.\n\n",
        "URL": "https://github.com/bmeck/node-cookiejar/pull/39",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bd4b2095200b19c425658657d988a17f00a9c55c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bmuschko/gradle-vagrant-plugin",
        "CVE_ID": "CVE-2021-21361",
        "Problem_Type": "CWE-532",
        "Description": "The `com.bmuschko:gradle-vagrant-plugin` Gradle plugin contains an information disclosure vulnerability due to the logging of the system environment variables. When this Gradle plugin is executed in public CI/CD, this can lead to sensitive credentials being exposed to malicious actors. This is fixed in version 3.0.0.",
        "URL": "https://github.com/bmuschko/gradle-vagrant-plugin/pull/20",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d14d2bb9b855e09ab35ee361d13f81e43a3e9513",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bndr/pipreqs",
        "CVE_ID": "CVE-2023-31543",
        "Problem_Type": "CWE-427",
        "Description": "A dependency confusion in pipreqs v0.3.0 to v0.4.11 allows attackers to execute arbitrary code via uploading a crafted PyPI package to the chosen repository server.",
        "URL": "https://github.com/bndr/pipreqs/pull/364",
        "Tag": "['Exploit', 'Mitigation', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "717d4926bc6cd1d17aed88941ede18cfd9747fa9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/bolt",
        "CVE_ID": "CVE-2019-10874",
        "Problem_Type": "CWE-352",
        "Description": "Cross Site Request Forgery (CSRF) in the bolt/upload File Upload feature in Bolt CMS 3.6.6 allows remote attackers to execute arbitrary code by uploading a JavaScript file to include executable extensions in the file/edit/config/config.yml configuration file.",
        "URL": "https://github.com/bolt/bolt/pull/7768/commits/91187aef36363a870d60b0a3c1bf8507af34c9e4",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91187aef36363a870d60b0a3c1bf8507af34c9e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/bolt",
        "CVE_ID": "CVE-2019-15483",
        "Problem_Type": "CWE-79",
        "Description": "Bolt before 3.6.10 has XSS via a title that is mishandled in the system log.",
        "URL": "https://github.com/bolt/bolt/pull/7802",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "45780faa7ee5263a5a5ca4cfe102830ef244b06a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/bolt",
        "CVE_ID": "CVE-2019-15484",
        "Problem_Type": "CWE-79",
        "Description": "Bolt before 3.6.10 has XSS via an image's alt or title field.",
        "URL": "https://github.com/bolt/bolt/pull/7801",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "520c4578acfd0193b08cabd924598e6dd0edf98f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/bolt",
        "CVE_ID": "CVE-2019-15485",
        "Problem_Type": "CWE-79",
        "Description": "Bolt before 3.6.10 has XSS via createFolder or createFile in Controller/Async/FilesystemManager.php.",
        "URL": "https://github.com/bolt/bolt/pull/7800",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1ef623734b555fc5dbcd6d735cf2ecf8b2d22cd1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/bolt",
        "CVE_ID": "CVE-2020-4040",
        "Problem_Type": "CWE-352",
        "Description": "Bolt CMS before version 3.7.1 lacked CSRF protection in the preview generating endpoint. Previews are intended to be generated by the admins, developers, chief-editors, and editors, who are authorized to create content in the application. But due to lack of proper CSRF protection, unauthorized users could generate a preview. This has been fixed in Bolt 3.7.1",
        "URL": "https://github.com/bolt/bolt/pull/7853",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b42cbfcf3e3108c46a80581216ba03ef449e419f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/bolt",
        "CVE_ID": "CVE-2020-4041",
        "Problem_Type": "CWE-79",
        "Description": "In Bolt CMS before version 3.7.1, the filename of uploaded files was vulnerable to stored XSS. It is not possible to inject javascript code in the file name when creating/uploading the file. But, once created/uploaded, it can be renamed to inject the payload in it. Additionally, the measures to prevent renaming the file to disallowed filename extensions could be circumvented. This is fixed in Bolt 3.7.1.",
        "URL": "https://github.com/bolt/bolt/pull/7853",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b42cbfcf3e3108c46a80581216ba03ef449e419f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bolt/core",
        "CVE_ID": "CVE-2021-27367",
        "Problem_Type": "CWE-22",
        "Description": "Controller/Backend/FileEditController.php and Controller/Backend/FilemanagerController.php in Bolt before 4.1.13 allow Directory Traversal.",
        "URL": "https://github.com/bolt/core/pull/2371",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3249a212f2be53db14a3fed57155488c28933641",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bpmn-io/min-dash",
        "CVE_ID": "CVE-2021-23460",
        "Problem_Type": "CWE-1321",
        "Description": "The package min-dash before 3.8.1 are vulnerable to Prototype Pollution via the set method due to missing enforcement of key types.",
        "URL": "https://github.com/bpmn-io/min-dash/pull/21",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c6689e2aa29f4b66a4874a2f3003431e9db48d1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bpmn-io/min-dash",
        "CVE_ID": "CVE-2021-23460",
        "Problem_Type": "CWE-1321",
        "Description": "The package min-dash before 3.8.1 are vulnerable to Prototype Pollution via the set method due to missing enforcement of key types.",
        "URL": "https://github.com/bpmn-io/min-dash/pull/21/commits/5ab05cbc4fd8d5eafb7db540c491ed0906b9d320",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c6689e2aa29f4b66a4874a2f3003431e9db48d1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2021-21323",
        "Problem_Type": "CWE-200",
        "Description": "Brave is an open source web browser with a focus on privacy and security. In Brave versions 1.17.73-1.20.103, the CNAME adblocking feature added in Brave 1.17.73 accidentally initiated DNS requests that bypassed the Brave Tor proxy. Users with adblocking enabled would leak DNS requests from Tor windows to their DNS provider. (DNS requests that were not initiated by CNAME adblocking would go through Tor as expected.) This is fixed in Brave version 1.20.108",
        "URL": "https://github.com/brave/brave-core/pull/7769",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "12fe321eaad8acc1cbd1d70b4128f687777bcf15",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2021-45884",
        "Problem_Type": "CWE-200",
        "Description": "In Brave Desktop 1.17 through 1.33 before 1.33.106, when CNAME-based adblocking and a proxying extension with a SOCKS fallback are enabled, additional DNS requests are issued outside of the proxying extension using the system's DNS settings, resulting in information disclosure. NOTE: this issue exists because of an incomplete fix for CVE-2021-21323 and CVE-2021-22916.",
        "URL": "https://github.com/brave/brave-core/pull/10742",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0c2580eb783836e4b52c781dcca36b024f76a626",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2022-30334",
        "Problem_Type": "CWE-200",
        "Description": "Brave before 1.34, when a Private Window with Tor Connectivity is used, leaks .onion URLs in Referer and Origin headers. NOTE: although this was fixed by Brave, the Brave documentation still advises \"Note that Private Windows with Tor Connectivity in Brave are just regular private windows that use Tor as a proxy. Brave does NOT implement most of the privacy protections from Tor Browser.\"",
        "URL": "https://github.com/brave/brave-core/pull/10760",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "38b8fc1879bb66d946ae78aa16972eb903a4a925",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2022-47932",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Brave Browser before 1.43.34 allowed a remote attacker to cause a denial of service via a crafted HTML file that mentions an ipfs:// or ipns:// URL. This vulnerability is caused by an incomplete fix for CVE-2022-47933.",
        "URL": "https://github.com/brave/brave-core/pull/14211",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e73309665508c17e48a67e302d3ab02a38d3ef50",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2022-47933",
        "Problem_Type": "CWE-755",
        "Description": "Brave Browser before 1.42.51 allowed a remote attacker to cause a denial of service via a crafted HTML file that references the IPFS scheme. This vulnerability is caused by an uncaught exception in the function ipfs::OnBeforeURLRequest_IPFSRedirectWork() in ipfs_redirect_network_delegate_helper.cc.",
        "URL": "https://github.com/brave/brave-core/pull/13989",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7ef8cb2f232abdf59ec9c3c99a086a14b972bc56",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2022-47934",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Brave Browser before 1.43.88 allowed a remote attacker to cause a denial of service in private and guest windows via a crafted HTML file that mentions an ipfs:// or ipns:// URL. This is caused by an incomplete fix for CVE-2022-47932 and CVE-2022-47934.",
        "URL": "https://github.com/brave/brave-core/pull/14313",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50ca5d23cd817aa49e9a275509edeae2443e3c41",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2023-52263",
        "Problem_Type": "CWE-601",
        "Description": "Brave Browser before 1.59.40 does not properly restrict the schema for WebUI factory and redirect. This is related to browser/brave_content_browser_client.cc and browser/ui/webui/brave_web_ui_controller_factory.cc.",
        "URL": "https://github.com/brave/brave-core/pull/19820",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "ddf273963a14dbe7e72a51f65a4755604a3942cb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brave/muon",
        "CVE_ID": "CVE-2018-1000815",
        "Problem_Type": "CWE-20",
        "Description": "Brave Software Inc. Brave version version 0.22.810 to 0.24.0 contains a Other/Unknown vulnerability in function ContentSettingsObserver::AllowScript() in content_settings_observer.cc that can result in Websites can run inline JavaScript even if script is blocked, making attackers easier to track users. This attack appear to be exploitable via the victim must visit a specially crafted website. This vulnerability appears to have been fixed in 0.25.2.",
        "URL": "https://github.com/brave/muon/pull/651",
        "Tag": "['Patch']",
        "fix_commit_hash": "b67288ba0b3518c8682e723d102265c1edc42f69",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "brettwooldridge/NuProcess",
        "CVE_ID": "CVE-2022-39243",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "NuProcess is an external process execution implementation for Java. In all the versions of NuProcess where it forks processes by using the JVM's Java_java_lang_UNIXProcess_forkAndExec method (1.2.0+), attackers can use NUL characters in their strings to perform command line injection. Java's ProcessBuilder isn't vulnerable because of a check in ProcessBuilder.start. NuProcess is missing that check. This vulnerability can only be exploited to inject command line arguments on Linux. Version 2.0.5 contains a patch. As a workaround, users of the library can sanitize command strings to remove NUL characters prior to passing them to NuProcess for execution.",
        "URL": "https://github.com/brettwooldridge/NuProcess/pull/143",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "29bc09de561bf00ff9bf77123756363a9709f868",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0747",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site Scripting (XSS) - Stored in GitHub repository btcpayserver/btcpayserver prior to 1.7.6.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4567/commits/d4e464ad4ef0cbbf61751e70f77865de325dd6cf",
        "Tag": "['Patch']",
        "fix_commit_hash": "3d576cd06b7e1947017ee7a88c4617c10f3b86fe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "btcsuite/btcd",
        "CVE_ID": "CVE-2022-44797",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.",
        "URL": "https://github.com/btcsuite/btcd/pull/1896",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d0aa7473a6b593c807842888dc9fe781a5984a78",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "bytecodealliance/wasm-micro-runtime",
        "CVE_ID": "CVE-2023-48105",
        "Problem_Type": "CWE-787",
        "Description": "An heap overflow vulnerability was discovered in Bytecode alliance wasm-micro-runtime v.1.2.3 allows a remote attacker to cause a denial of service via the wasm_loader_prepare_bytecode function in core/iwasm/interpreter/wasm_loader.c.",
        "URL": "https://github.com/bytecodealliance/wasm-micro-runtime/pull/2734/commits/4785d91b16dd49c09a96835de2d9c7b077543fa4",
        "Tag": "['Patch']",
        "fix_commit_hash": "7f8292ffd12b0881ce7b9797a9075da09c849cae",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "candlepin/candlepin",
        "CVE_ID": "CVE-2021-4142",
        "Problem_Type": "CWE-639",
        "Description": "The Candlepin component of Red Hat Satellite was affected by an improper authentication flaw. Few factors could allow an attacker to use the SCA (simple content access) certificate for authentication with Candlepin.",
        "URL": "https://github.com/candlepin/candlepin/pull/3197",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fed4cd6305c55632733ca1fe75ce719cde2fe121",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "canonical/multipass",
        "CVE_ID": "CVE-2021-3626",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The Windows version of Multipass before 1.7.0 allowed any local process to connect to the localhost TCP control socket to perform mounts from the operating system to a guest, allowing for privilege escalation.",
        "URL": "https://github.com/canonical/multipass/pull/2150",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "010fa9b2d100ca5fe1136c336280a91143c05f47",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "caolan/async",
        "CVE_ID": "CVE-2021-43138",
        "Problem_Type": "CWE-1321",
        "Description": "In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.",
        "URL": "https://github.com/caolan/async/pull/1828",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f7f90342a6571ba1c197d747ebed30c368096d2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cbeust/testng",
        "CVE_ID": "CVE-2022-4065",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability was found in cbeust testng 7.5.0/7.6.0/7.6.1/7.7.0. It has been declared as critical. Affected by this vulnerability is the function testngXmlExistsInJar of the file testng-core/src/main/java/org/testng/JarFileUtils.java of the component XML File Parser. The manipulation leads to path traversal. The attack can be launched remotely. Upgrading to version 7.5.1 and 7.7.1 is able to address this issue. The patch is named 9150736cd2c123a6a3b60e6193630859f9f0422b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-214027.",
        "URL": "https://github.com/cbeust/testng/pull/2806",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9150736cd2c123a6a3b60e6193630859f9f0422b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "centic9/jgit-cookbook",
        "CVE_ID": "CVE-2022-4817",
        "Problem_Type": "CWE-668",
        "Description": "A vulnerability was found in centic9 jgit-cookbook. It has been declared as problematic. This vulnerability affects unknown code. The manipulation leads to insecure temporary file. The attack can be initiated remotely. The name of the patch is b8cb29b43dc704708d598c60ac1881db7cf8e9c3. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216988.",
        "URL": "https://github.com/centic9/jgit-cookbook/pull/86",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b8cb29b43dc704708d598c60ac1881db7cf8e9c3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ceph/ceph",
        "CVE_ID": "CVE-2016-7031",
        "Problem_Type": "CWE-200",
        "Description": "The RGW code in Ceph before 10.0.1, when authenticated-read ACL is applied to a bucket, allows remote attackers to list the bucket contents via a URL.",
        "URL": "https://github.com/ceph/ceph/pull/6057",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "97bf0bcf02917fd772fbef73bb68e155feb84c1b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ceph/ceph",
        "CVE_ID": "CVE-2021-3979",
        "Problem_Type": "CWE-287",
        "Description": "A key length flaw was found in Red Hat Ceph Storage. An attacker can exploit the fact that the key length is incorrectly passed in an encryption algorithm to create a non random key, which is weaker and can be exploited for loss of confidentiality and integrity on encrypted disks.",
        "URL": "https://github.com/ceph/ceph/pull/44765",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2bd3dd512ab42f6e5d5d0dd5f5428b783681802e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cesanta/mongoose",
        "CVE_ID": "CVE-2023-2905",
        "Problem_Type": "CWE-787",
        "Description": "Due to a failure in validating the length of a provided MQTT_CMD_PUBLISH\u00c2\u00a0parsed message with a variable length header, Cesanta Mongoose, an\u00c2\u00a0embeddable web server, version 7.10 is susceptible to a heap-based buffer overflow vulnerability in the default configuration. Version 7.9 and prior does not appear to be vulnerable. This issue is resolved in version 7.11.\n",
        "URL": "https://github.com/cesanta/mongoose/pull/2274",
        "Tag": "['Patch']",
        "fix_commit_hash": "d56e5bea626fd7d1baad52af0aa7cfc4f399382c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cesanta/mongoose",
        "CVE_ID": "CVE-2023-34188",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The HTTP server in Mongoose before 7.10 accepts requests containing negative Content-Length headers. By sending a single attack payload over TCP, an attacker can cause an infinite loop in which the server continuously reparses that payload, and does not respond to any other requests.",
        "URL": "https://github.com/cesanta/mongoose/pull/2197",
        "Tag": "['Patch']",
        "fix_commit_hash": "926959ab47e78302837bec864863d94dcb78a210",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CESNET/perun",
        "CVE_ID": "CVE-2020-5281",
        "Problem_Type": "CWE-732",
        "Description": "In Perun before version 3.9.1, VO or group manager can modify configuration of the LDAP extSource to retrieve all from Perun LDAP. Issue is fixed in version 3.9.1 by sanitisation of the input.",
        "URL": "https://github.com/CESNET/perun/pull/2635",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ac527bc3225a64208ee5cee59e5918ee360ca039",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CESNET/theme-cesnet",
        "CVE_ID": "CVE-2016-15014",
        "Problem_Type": "CWE-522",
        "Description": "A vulnerability has been found in CESNET theme-cesnet up to 1.x on ownCloud and classified as problematic. Affected by this vulnerability is an unknown functionality of the file cesnet/core/lostpassword/templates/resetpassword.php. The manipulation leads to insufficiently protected credentials. Attacking locally is a requirement. Upgrading to version 2.0.0 is able to address this issue. The identifier of the patch is 2b857f2233ce5083b4d5bc9bfc4152f933c3e4a6. It is recommended to upgrade the affected component. The identifier VDB-217633 was assigned to this vulnerability.",
        "URL": "https://github.com/CESNET/theme-cesnet/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "58350795f200daecc03252f4d1bd870dd19bce54",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ChainSafe/js-libp2p-noise",
        "CVE_ID": "CVE-2022-24759",
        "Problem_Type": "CWE-347",
        "Description": "`@chainsafe/libp2p-noise` contains TypeScript implementation of noise protocol, an encryption protocol used in libp2p. `@chainsafe/libp2p-noise` before 4.1.2 and 5.0.3 does not correctly validate signatures during the handshake process. This may allow a man-in-the-middle to pose as other peers and get those peers banned. Users should upgrade to version 4.1.2 or 5.0.3 to receive a patch. There are currently no known workarounds.",
        "URL": "https://github.com/ChainSafe/js-libp2p-noise/pull/130",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e447d2bbeafc9584f4538f016b1b97f75ce58337",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ChangeWeDer/BaiduWenkuSpider_flaskWeb",
        "CVE_ID": "CVE-2022-31504",
        "Problem_Type": "CWE-22",
        "Description": "The ChangeWeDer/BaiduWenkuSpider_flaskWeb repository before 2021-11-29 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.",
        "URL": "https://github.com/ChangeWeDer/BaiduWenkuSpider_flaskWeb/pull/3",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe9a39ef774d297fbcd2eae191eb17a08049ab16",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Chris92de/AdminServ",
        "CVE_ID": "CVE-2020-36637",
        "Problem_Type": "CWE-79",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Chris92de AdminServ. It has been declared as problematic. This vulnerability affects unknown code of the file resources/core/adminserv.php. The manipulation of the argument text leads to cross site scripting. The attack can be initiated remotely. The patch is identified as 3ed17dab3b4d6e8bf1c82ddfbf882314365e9cd7. It is recommended to apply a patch to fix this issue. VDB-217042 is the identifier assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/Chris92de/AdminServ/pull/7",
        "Tag": "['Patch']",
        "fix_commit_hash": "3ed17dab3b4d6e8bf1c82ddfbf882314365e9cd7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Chris92de/AdminServ",
        "CVE_ID": "CVE-2020-36638",
        "Problem_Type": "CWE-79",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Chris92de AdminServ. It has been rated as problematic. This issue affects some unknown processing of the file resources/core/adminserv.php. The manipulation of the argument error leads to cross site scripting. The attack may be initiated remotely. The patch is named 9a45087814295de6fb3a3fe38f96293665234da1. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217043. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/Chris92de/AdminServ/pull/6",
        "Tag": "['Patch']",
        "fix_commit_hash": "9a45087814295de6fb3a3fe38f96293665234da1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "chyh1990/yaml-rust",
        "CVE_ID": "CVE-2019-1010182",
        "Problem_Type": "CWE-674",
        "Description": "yaml-rust 0.4.0 and earlier is affected by: Uncontrolled Recursion. The impact is: Denial of service by impossible to catch abort. The component is: YamlLoader::load_from_str function. The attack vector is: Parsing of a malicious YAML document. The fixed version is: 0.4.1 and later.",
        "URL": "https://github.com/chyh1990/yaml-rust/pull/109",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7eb6b6afa9b1e3122f4a1ca06ec8390496eb3d57",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cisco/openh264",
        "CVE_ID": "CVE-2014-8001",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in decode.cpp in Cisco OpenH264 1.2.0 and earlier allows remote attackers to execute arbitrary code via an encoded media file.",
        "URL": "https://github.com/cisco/openh264/pull/1088/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "0ad30516c537bf6d4359e43bbe0185db6abcf809",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cisco/openh264",
        "CVE_ID": "CVE-2014-8002",
        "Problem_Type": "CWE-119",
        "Description": "Use-after-free vulnerability in decode_slice.cpp in Cisco OpenH264 1.2.0 and earlier allows remote attackers to execute arbitrary code via an encoded media file.",
        "URL": "https://github.com/cisco/openh264/pull/1096/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "6489e7b38ad852a20f87214571fac382150dee62",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "clara-genomics/ClaraGenomicsAnalysis",
        "CVE_ID": "CVE-2019-15788",
        "Problem_Type": "CWE-190",
        "Description": "Clara Genomics Analysis before 0.2.0 has an integer overflow for cudapoa memory management in allocate_block.cpp.",
        "URL": "https://github.com/clara-genomics/ClaraGenomicsAnalysis/pull/70",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "83e3a0c6e95de446eb51f578f89ad3fd025e263d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClickHouse/clickhouse-java",
        "CVE_ID": "CVE-2024-23689",
        "Problem_Type": "CWE-209",
        "Description": "Exposure of sensitive information in exceptions in ClichHouse's clickhouse-r2dbc, com.clickhouse:clickhouse-jdbc, and com.clickhouse:clickhouse-client versions less than 0.4.6 allows unauthorized users to gain access to client certificate passwords via client exception logs. This occurs when 'sslkey' is specified and an exception, such as a ClickHouseException or SQLException, is thrown during database operations; the certificate password is then included in the logged exception message.\n\n",
        "URL": "https://github.com/ClickHouse/clickhouse-java/pull/1334",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "23bd399378e0d968c5766460e86d68624c6d04a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClickHouse/ClickHouse",
        "CVE_ID": "CVE-2019-18657",
        "Problem_Type": "CWE-74",
        "Description": "ClickHouse before 19.13.5.44 allows HTTP header injection via the url table function.",
        "URL": "https://github.com/ClickHouse/ClickHouse/pull/7526/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0da5b93c169baa24e1314828883fb244116cf152",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClickHouse/ClickHouse",
        "CVE_ID": "CVE-2023-48298",
        "Problem_Type": "CWE-191",
        "Description": "ClickHouse\u00c2\u00ae is an open-source column-oriented database management system that allows generating analytical data reports in real-time. This vulnerability is an integer underflow resulting in crash due to stack buffer overflow in decompression of FPC codec. It can be triggered and exploited by an unauthenticated attacker. The vulnerability is very similar to CVE-2023-47118 with how the vulnerable function can be exploited.\n",
        "URL": "https://github.com/ClickHouse/ClickHouse/pull/56795",
        "Tag": "['Patch']",
        "fix_commit_hash": "9401b904173d7b4a3deb5fce173e87a33ecc64e8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClickHouse/ClickHouse",
        "CVE_ID": "CVE-2023-48704",
        "Problem_Type": "CWE-787",
        "Description": "ClickHouse is an open-source column-oriented database management system that allows generating analytical data reports in real-time. A heap buffer overflow issue was discovered in ClickHouse server. An attacker could send a specially crafted payload to the native interface exposed by default on port 9000/tcp, triggering a bug in the decompression logic of Gorilla codec that crashes the ClickHouse server process. This attack does not require authentication. This issue has been addressed in ClickHouse Cloud version 23.9.2.47551 and ClickHouse versions 23.10.5.20, 23.3.18.15, 23.8.8.20, and 23.9.6.20.",
        "URL": "https://github.com/ClickHouse/ClickHouse/pull/57107",
        "Tag": "['Patch']",
        "fix_commit_hash": "87fc2a13483321c480698c049cdab8b6f3cf957f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "clonos/control-pane",
        "CVE_ID": "CVE-2019-15571",
        "Problem_Type": "CWE-89",
        "Description": "The WEB control panel before 2019-04-30 for ClonOS allows SQL injection in clonos.php.",
        "URL": "https://github.com/clonos/control-pane/pull/20",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a2d506267cb6179865c263e5f7b76340de95a514",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cloud-hypervisor/cloud-hypervisor",
        "CVE_ID": "CVE-2023-30612",
        "Problem_Type": "CWE-416",
        "Description": "Cloud hypervisor is a Virtual Machine Monitor for Cloud workloads. This vulnerability allows users to close arbitrary open file descriptors in the Cloud Hypervisor process via sending malicious HTTP request through the HTTP API socket. As a result, the Cloud Hypervisor process can be easily crashed, causing Deny-of-Service (DoS). This can also be a potential Use-After-Free (UAF) vulnerability. Users require to have the write access to the API socket file to trigger this vulnerability.  Impacted versions of Cloud Hypervisor include upstream main branch, v31.0, and v30.0. The vulnerability was initially detected by our `http_api_fuzzer` via oss-fuzz. This issue has been addressed in versions 30.1 and 31.1. Users unable to upgrade may mitigate this issue by ensuring the write access to the API socket file is granted to trusted users only.",
        "URL": "https://github.com/cloud-hypervisor/cloud-hypervisor/pull/5350",
        "Tag": "['Patch']",
        "fix_commit_hash": "df2a7c1764fe91bd71c52460164e777bf369e6b7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cloud-hypervisor/cloud-hypervisor",
        "CVE_ID": "CVE-2023-30612",
        "Problem_Type": "CWE-416",
        "Description": "Cloud hypervisor is a Virtual Machine Monitor for Cloud workloads. This vulnerability allows users to close arbitrary open file descriptors in the Cloud Hypervisor process via sending malicious HTTP request through the HTTP API socket. As a result, the Cloud Hypervisor process can be easily crashed, causing Deny-of-Service (DoS). This can also be a potential Use-After-Free (UAF) vulnerability. Users require to have the write access to the API socket file to trigger this vulnerability.  Impacted versions of Cloud Hypervisor include upstream main branch, v31.0, and v30.0. The vulnerability was initially detected by our `http_api_fuzzer` via oss-fuzz. This issue has been addressed in versions 30.1 and 31.1. Users unable to upgrade may mitigate this issue by ensuring the write access to the API socket file is granted to trusted users only.",
        "URL": "https://github.com/cloud-hypervisor/cloud-hypervisor/pull/5373",
        "Tag": "['Patch']",
        "fix_commit_hash": "04d111ee153c80c214331cae4fc25c35e29ce991",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cloudflare/odoh-rs",
        "CVE_ID": "CVE-2023-3766",
        "Problem_Type": "CWE-120",
        "Description": "A vulnerability was discovered in the odoh-rs rust crate that stems from faulty logic during the parsing of encrypted queries. This issue specifically occurs when processing encrypted query data received from remote clients and enables an attacker\u00c2\u00a0with knowledge of this vulnerability to craft and send specially designed encrypted queries to targeted ODOH servers running with odoh-rs. Upon successful exploitation, the server will crash abruptly, disrupting its normal operation and rendering the service temporarily unavailable.\n\n",
        "URL": "https://github.com/cloudflare/odoh-rs/pull/28",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "c1bc4ed71dcc9842b7dc1ea26f278f105074bbaa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cloudwego/hertz",
        "CVE_ID": "CVE-2022-40082",
        "Problem_Type": "CWE-22",
        "Description": "Hertz v0.3.0 ws discovered to contain a path traversal vulnerability via the normalizePath function.",
        "URL": "https://github.com/cloudwego/hertz/pull/229",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dcb0b5a1861a1e2e4629a8607a3ca9c89009ac55",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClusterLabs/fence-agents",
        "CVE_ID": "CVE-2019-10153",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A flaw was discovered in fence-agents, prior to version 4.3.4, where using non-ASCII characters in a guest VM's comment or other fields would cause fence_rhevm to exit with an exception. In cluster environments, this could lead to preventing automated recovery or otherwise denying service to clusters of which that VM is a member.",
        "URL": "https://github.com/ClusterLabs/fence-agents/pull/255",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "68dee49024b799be9e9efedf6b29ab1d57471f1b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClusterLabs/fence-agents",
        "CVE_ID": "CVE-2019-10153",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A flaw was discovered in fence-agents, prior to version 4.3.4, where using non-ASCII characters in a guest VM's comment or other fields would cause fence_rhevm to exit with an exception. In cluster environments, this could lead to preventing automated recovery or otherwise denying service to clusters of which that VM is a member.",
        "URL": "https://github.com/ClusterLabs/fence-agents/pull/272",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e462fa591f488d9a8d789121538476ed9d6d3fea",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClusterLabs/pacemaker",
        "CVE_ID": "CVE-2018-16877",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A flaw was found in the way pacemaker's client-server authentication was implemented in versions up to and including 2.0.0. A local attacker could use this flaw, and combine it with other IPC weaknesses, to achieve local privilege escalation.",
        "URL": "https://github.com/ClusterLabs/pacemaker/pull/1749",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bab7de5fd26ac367f5d51d0f19c9734ab4ff6697",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClusterLabs/pacemaker",
        "CVE_ID": "CVE-2018-16878",
        "Problem_Type": "CWE-400",
        "Description": "A flaw was found in pacemaker up to and including version 2.0.1. An insufficient verification inflicted preference of uncontrolled processes can lead to DoS",
        "URL": "https://github.com/ClusterLabs/pacemaker/pull/1749",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bab7de5fd26ac367f5d51d0f19c9734ab4ff6697",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ClusterLabs/pacemaker",
        "CVE_ID": "CVE-2019-3885",
        "Problem_Type": "CWE-416",
        "Description": "A use-after-free flaw was found in pacemaker up to and including version 2.0.1 which could result in certain sensitive information to be leaked via the system logs.",
        "URL": "https://github.com/ClusterLabs/pacemaker/pull/1749",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bab7de5fd26ac367f5d51d0f19c9734ab4ff6697",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cocagne/pysrp",
        "CVE_ID": "CVE-2021-4286",
        "Problem_Type": "CWE-203",
        "Description": "A vulnerability, which was classified as problematic, has been found in cocagne pysrp up to 1.0.16. This issue affects the function calculate_x of the file srp/_ctsrp.py. The manipulation leads to information exposure through discrepancy. Upgrading to version 1.0.17 is able to address this issue. The name of the patch is dba52642f5e95d3da7af1780561213ee6053195f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216875.",
        "URL": "https://github.com/cocagne/pysrp/pull/43",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dba52642f5e95d3da7af1780561213ee6053195f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CocoaPods/cocoapods-downloader",
        "CVE_ID": "CVE-2022-21223",
        "Problem_Type": "CWE-88",
        "Description": "The package cocoapods-downloader before 1.6.2 are vulnerable to Command Injection via hg argument injection. When calling the download function (when using hg), the url (and/or revision, tag, branch) is passed to the hg clone command in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
        "URL": "https://github.com/CocoaPods/cocoapods-downloader/pull/127",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d2564c3aa470ffd0856e50d88a0bdf6328e0c0f7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CocoaPods/cocoapods-downloader",
        "CVE_ID": "CVE-2022-24440",
        "Problem_Type": "CWE-88",
        "Description": "The package cocoapods-downloader before 1.6.0, from 1.6.2 and before 1.6.3 are vulnerable to Command Injection via git argument injection. When calling the Pod::Downloader.preprocess_options function and using git, both the git and branch parameters are passed to the git ls-remote subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
        "URL": "https://github.com/CocoaPods/cocoapods-downloader/pull/128",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52a0d54464932a90ded5a59c71a016e8dec0ca84",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CocoaPods/cocoapods-downloader",
        "CVE_ID": "CVE-2022-24440",
        "Problem_Type": "CWE-88",
        "Description": "The package cocoapods-downloader before 1.6.0, from 1.6.2 and before 1.6.3 are vulnerable to Command Injection via git argument injection. When calling the Pod::Downloader.preprocess_options function and using git, both the git and branch parameters are passed to the git ls-remote subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
        "URL": "https://github.com/CocoaPods/cocoapods-downloader/pull/124",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b70bc39c75645aa6d4a01a3ca6de40477c84f4b5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Codeception/Codeception",
        "CVE_ID": "CVE-2021-23420",
        "Problem_Type": "CWE-502",
        "Description": "This affects the package codeception/codeception from 4.0.0 and before 4.1.22, before 3.1.3. The RunProcess class can be leveraged as a gadget to run arbitrary commands on a system that is deserializing user input without validation.",
        "URL": "https://github.com/Codeception/Codeception/pull/6241",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "codehaus-plexus/plexus-archiver",
        "CVE_ID": "CVE-2018-1002200",
        "Problem_Type": "CWE-22",
        "Description": "plexus-archiver before 3.6.0 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in an archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
        "URL": "https://github.com/codehaus-plexus/plexus-archiver/pull/87",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f8f4233508193b70df33759ae9dc6154d69c2ea8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "codeigniter4/CodeIgniter4",
        "CVE_ID": "CVE-2022-39284",
        "Problem_Type": "CWE-732",
        "Description": "CodeIgniter is a PHP full-stack web framework. In versions prior to 4.2.7 setting `$secure` or `$httponly` value to `true` in `Config\\Cookie` is not reflected in `set_cookie()` or `Response::setCookie()`. As a result cookie values are erroneously exposed to scripts. It should be noted that this vulnerability does not affect session cookies. Users are advised to upgrade to v4.2.7 or later. Users unable to upgrade are advised to manually construct their cookies either by setting the options in code or by constructing Cookie objects. Examples of each workaround are available in the linked GHSA.",
        "URL": "https://github.com/codeigniter4/CodeIgniter4/pull/6544",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5a0f1e38c515d0e7ab640f5cfb54c61f1d131275",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Codiad/Codiad",
        "CVE_ID": "CVE-2017-20178",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Codiad 2.8.0. It has been rated as problematic. Affected by this issue is the function saveJSON of the file components/install/process.php. The manipulation of the argument data leads to information disclosure. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. Upgrading to version 2.8.1 is able to address this issue. The patch is identified as 517119de673e62547ee472a730be0604f44342b5. It is recommended to upgrade the affected component. VDB-221498 is the identifier assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/Codiad/Codiad/pull/974",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "8ff257e508b06097af979d9250b94aa0757bc517",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cogdog/feed2js",
        "CVE_ID": "CVE-2014-5009",
        "Problem_Type": "CWE-77",
        "Description": "Snoopy allows remote attackers to execute arbitrary commands.  NOTE: this vulnerability exists due to an incomplete fix for CVE-2014-5008.",
        "URL": "https://github.com/cogdog/feed2js/pull/12",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e6c0cc1da5d40e7b83f781b8901b4b7c3b60d7c7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "colinbourassa/crasm",
        "CVE_ID": "CVE-2023-23108",
        "Problem_Type": "CWE-476",
        "Description": "In crasm 1.8-3, invalid input validation, specific files passed to the command line application, can lead to a NULL pointer dereference in the function Xasc.",
        "URL": "https://github.com/colinbourassa/crasm/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5471a9f991fa795a1e86568cf5b4433e6c169047",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "colinbourassa/crasm",
        "CVE_ID": "CVE-2023-23109",
        "Problem_Type": "CWE-369",
        "Description": "In crasm 1.8-3, invalid input validation, specific files passed to the command line application, can lead to a divide by zero fault in the function opdiv.",
        "URL": "https://github.com/colinbourassa/crasm/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5471a9f991fa795a1e86568cf5b4433e6c169047",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "collectiveidea/audited",
        "CVE_ID": "CVE-2024-22047",
        "Problem_Type": "CWE-362",
        "Description": "A race condition exists in Audited 4.0.0 to 5.3.3 that can result in an authenticated user to cause audit log entries to be attributed to another user.\n\n",
        "URL": "https://github.com/collectiveidea/audited/pull/669",
        "Tag": "['Patch']",
        "fix_commit_hash": "342734c9396d8f96d3165f1d8531c626139fa4c6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "collectiveidea/audited",
        "CVE_ID": "CVE-2024-22047",
        "Problem_Type": "CWE-362",
        "Description": "A race condition exists in Audited 4.0.0 to 5.3.3 that can result in an authenticated user to cause audit log entries to be attributed to another user.\n\n",
        "URL": "https://github.com/collectiveidea/audited/pull/671",
        "Tag": "['Patch']",
        "fix_commit_hash": "379aeed7c22a530da0effa2b6b790ad806c5b7a1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "comelz/quark",
        "CVE_ID": "CVE-2019-15520",
        "Problem_Type": "CWE-22",
        "Description": "comelz Quark before 2019-03-26 allows directory traversal to locations outside of the project directory.",
        "URL": "https://github.com/comelz/quark/pull/18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3311efee0074f8bf677aa76a5502086d462b3451",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cometbft/cometbft",
        "CVE_ID": "CVE-2023-34451",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. In `v0.37.0`, and `v0.37.1`, as well as in `v0.34.28`, and all previous releases of the CometBFT repo2, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction. Because the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list. This happens even if the duplicated transaction is later committed in a block. The only way to remove the transaction is by restarting the node.\n\nThe above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node. The problem is fixed in releases `v0.34.29` and `v0.37.2`. Some workarounds are available. Increasing the value of `cache_size` in `config.toml` makes it very difficult to effectively attack a full node. Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p.",
        "URL": "https://github.com/cometbft/cometbft/pull/890",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "a09f5d33ecd8846369b93cae9063291eb8abc3a0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "concrete5/concrete5",
        "CVE_ID": "CVE-2017-18195",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in tools/conversations/view_ajax.php in Concrete5 before 8.3.0. An unauthenticated user can enumerate comments from all blog posts by POSTing requests to /index.php/tools/required/conversations/view_ajax with incremental 'cnvID' integers.",
        "URL": "https://github.com/concrete5/concrete5/pull/6008/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fc234f94e178f17c796a7fd8a61af171e4bcd256",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "concrete5/concrete5",
        "CVE_ID": "CVE-2020-11476",
        "Problem_Type": "CWE-434",
        "Description": "Concrete5 before 8.5.3 allows Unrestricted Upload of File with Dangerous Type such as a .phar file.",
        "URL": "https://github.com/concrete5/concrete5/pull/8713",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d296f4ba4f6ad94b199c21c1b16f0d185adab343",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "concrete5/concrete5",
        "CVE_ID": "CVE-2020-14961",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Concrete5 before 8.5.3 does not constrain the sort direction to a valid asc or desc value.",
        "URL": "https://github.com/concrete5/concrete5/pull/8651",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9c3e000327801c84c0656c56b38a9915d036244b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "concretecms/concretecms",
        "CVE_ID": "CVE-2023-48649",
        "Problem_Type": "CWE-79",
        "Description": "Concrete CMS before 8.5.13 and 9.x before 9.2.2 allows stored XSS on the Admin page via an uploaded file name.",
        "URL": "https://github.com/concretecms/concretecms/pull/11695",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b011865523ef1af5676d48f5c506bbe4b15abe85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "concretecms/concretecms",
        "CVE_ID": "CVE-2023-48649",
        "Problem_Type": "CWE-79",
        "Description": "Concrete CMS before 8.5.13 and 9.x before 9.2.2 allows stored XSS on the Admin page via an uploaded file name.",
        "URL": "https://github.com/concretecms/concretecms/pull/11739",
        "Tag": "['Patch']",
        "fix_commit_hash": "e7ba2ba3e14d280d9c992bd744b1cdede176753a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Consensys/gnark-crypto",
        "CVE_ID": "CVE-2023-44273",
        "Problem_Type": "CWE-502",
        "Description": "Consensys gnark-crypto through 0.11.2 allows Signature Malleability. This occurs because deserialisation of EdDSA and ECDSA signatures does not ensure that the data is in a certain interval.",
        "URL": "https://github.com/Consensys/gnark-crypto/pull/449",
        "Tag": "['Patch']",
        "fix_commit_hash": "81ffe9cbd19c7fa6899c97a5ac7b3ec14b30ac06",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "containernetworking/plugins",
        "CVE_ID": "CVE-2019-9946",
        "Problem_Type": "CWE-670",
        "Description": "Cloud Native Computing Foundation (CNCF) CNI (Container Networking Interface) 0.7.4 has a network firewall misconfiguration which affects Kubernetes. The CNI 'portmap' plugin, used to setup HostPorts for CNI, inserts rules at the front of the iptables nat chains; which take precedence over the KUBE- SERVICES chain. Because of this, the HostPort/portmap rule could match incoming traffic even if there were better fitting, more specific service definition rules like NodePorts later in the chain. The issue is fixed in CNI 0.7.5 and Kubernetes 1.11.9, 1.12.7, 1.13.5, and 1.14.0.",
        "URL": "https://github.com/containernetworking/plugins/pull/269#issuecomment-477683272",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a62711a5da7a2dc2eb93eac47e103738ad923fd6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "containers/podman",
        "CVE_ID": "CVE-2021-20199",
        "Problem_Type": "CWE-346",
        "Description": "Rootless containers run with Podman, receive all traffic with a source IP address of 127.0.0.1 (including from remote hosts). This impacts containerized applications that trust localhost (127.0.01) connections by default and do not require authentication. This issue affects Podman 1.8.0 onwards.",
        "URL": "https://github.com/containers/podman/pull/9052",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f02aba659447ea9198851231d7f11a8bfdfe69ba",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "containers/podman",
        "CVE_ID": "CVE-2022-4122",
        "Problem_Type": "CWE-59",
        "Description": "A vulnerability was found in buildah. Incorrect following of symlinks while reading .containerignore and .dockerignore results in information disclosure.",
        "URL": "https://github.com/containers/podman/pull/16315",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c8eeab21cf0a4f670be0cd399dd06fd5d4e06dfe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2018-1000804",
        "Problem_Type": "CWE-119",
        "Description": "contiki-ng version 4 contains a Buffer Overflow vulnerability in AQL (Antelope Query Language) database engine that can result in Attacker can perform Remote Code Execution on device using Contiki-NG operating system. This attack appear to be exploitable via Attacker must be able to run malicious AQL code (e.g. via SQL-like Injection attack).",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/624",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ebdbf0675844918623e5a878b910fea38ee88de",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2019-8359",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in Contiki-NG through 4.3 and Contiki through 3.0. An out of bounds write is present in the data section during 6LoWPAN fragment re-assembly in the face of forged fragment offsets in os/net/ipv6/sicslowpan.c.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/972",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5884a12d7d71c5bce0d97b1a387aeb7928189b04",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2019-9183",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in Contiki-NG through 4.3 and Contiki through 3.0. A buffer overflow is present due to an integer underflow during 6LoWPAN fragment processing in the face of truncated fragments in os/net/ipv6/sicslowpan.c. This results in accesses of unmapped memory, crashing the application. An attacker can cause a denial-of-service via a crafted 6LoWPAN frame.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/972",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5884a12d7d71c5bce0d97b1a387aeb7928189b04",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2020-12140",
        "Problem_Type": "CWE-120",
        "Description": "A buffer overflow in os/net/mac/ble/ble-l2cap.c in the BLE stack in Contiki-NG 4.4 and earlier allows an attacker to execute arbitrary code via malicious L2CAP frames.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1662",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ea66afaa5777193494331d78d2570f954507ba92",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2020-12141",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read in the SNMP stack in Contiki-NG 4.4 and earlier allows an attacker to cause a denial of service and potentially disclose information via crafted SNMP packets to snmp_ber_decode_string_len_buffer in os/net/app-layer/snmp/snmp-ber.c.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1355",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35e5ac8aa760a424276ac4b1279a0f2649f47985",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-21257",
        "Problem_Type": "CWE-787",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for internet of things devices. The RPL-Classic and RPL-Lite implementations in the Contiki-NG operating system versions prior to 4.6 do not validate the address pointer in the RPL source routing header This makes it possible for an attacker to cause out-of-bounds writes with packets injected into the network stack. Specifically, the problem lies in the rpl_ext_header_srh_update function in the two rpl-ext-header.c modules for RPL-Classic and RPL-Lite respectively. The addr_ptr variable is calculated using an unvalidated CMPR field value from the source routing header. An out-of-bounds write can be triggered on line 151 in os/net/routing/rpl-lite/rpl-ext-header.c and line 261 in os/net/routing/rpl-classic/rpl-ext-header.c, which contain the following memcpy call with addr_ptr as destination. The problem has been patched in Contiki-NG 4.6. Users can apply a patch out-of-band as a workaround.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1431",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3f9a601e2de998a79cbe3320aaa5dfbbaec1678c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-21280",
        "Problem_Type": "CWE-787",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for internet of things devices. It is possible to cause an out-of-bounds write in versions of Contiki-NG prior to 4.6 when transmitting a 6LoWPAN packet with a chain of extension headers. Unfortunately, the written header is not checked to be within the available space, thereby making it possible to write outside the buffer. The problem has been patched in Contiki-NG 4.6. Users can apply the patch for this vulnerability out-of-band as a workaround.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1409",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "48a3799e2d2c52e91cb7153b163bb26dfd9a4b4f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-21281",
        "Problem_Type": "CWE-120",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for internet of things devices. A buffer overflow vulnerability exists in Contiki-NG versions prior to 4.6. After establishing a TCP socket using the tcp-socket library, it is possible for the remote end to send a packet with a data offset that is unvalidated. The problem has been patched in Contiki-NG 4.6. Users can apply the patch for this vulnerability out-of-band as a workaround.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1366",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "307385a27a413dd51aabea0a39792776be840059",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-21282",
        "Problem_Type": "CWE-120",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for internet of things devices. In versions prior to 4.5, buffer overflow can be triggered by an input packet when using either of Contiki-NG's two RPL implementations in source-routing mode. The problem has been patched in Contiki-NG 4.5. Users can apply the patch for this vulnerability out-of-band as a workaround.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1183",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ebd4cae4458b30f7897083182fda35f180809c57",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-21410",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. An out-of-bounds read can be triggered by 6LoWPAN packets sent to devices running Contiki-NG 4.6 and prior. The IPv6 header decompression function (<code>uncompress_hdr_iphc</code>) does not perform proper boundary checks when reading from the packet buffer. Hence, it is possible to construct a compressed 6LoWPAN packet that will read more bytes than what is available from the packet buffer. As of time of publication, there is not a release with a patch available. Users can apply the patch for this vulnerability out-of-band as a workaround.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1482",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa6e26f430f3beaa3ce6b8290d4b19f73343e11f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-32771",
        "Problem_Type": "CWE-120",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. In affected versions it is possible to cause a buffer overflow when copying an IPv6 address prefix in the RPL-Classic implementation in Contiki-NG. In order to trigger the vulnerability, the Contiki-NG system must have joined an RPL DODAG. After that, an attacker can send a DAO packet with a Target option that contains a prefix length larger than 128 bits. The problem was fixed after the release of Contiki-NG 4.7. Users unable to upgrade may apply the patch in Contiki-NG PR #1615.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1615/commits/587ae59956e00316fd44fd7072ac3a6a07b4b20f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "587ae59956e00316fd44fd7072ac3a6a07b4b20f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2021-32771",
        "Problem_Type": "CWE-120",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. In affected versions it is possible to cause a buffer overflow when copying an IPv6 address prefix in the RPL-Classic implementation in Contiki-NG. In order to trigger the vulnerability, the Contiki-NG system must have joined an RPL DODAG. After that, an attacker can send a DAO packet with a Target option that contains a prefix length larger than 128 bits. The problem was fixed after the release of Contiki-NG 4.7. Users unable to upgrade may apply the patch in Contiki-NG PR #1615.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1615",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ae1218f4c607ef22a43f457677c63e7e9c2b5a88",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-35926",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. Because of insufficient validation of IPv6 neighbor discovery options in Contiki-NG, attackers can send neighbor solicitation packets that trigger an out-of-bounds read. The problem exists in the module os/net/ipv6/uip-nd6.c, where memory read operations from the main packet buffer, <code>uip_buf</code>, are not checked if they go out of bounds. In particular, this problem can occur when attempting to read the 2-byte option header and the Source Link-Layer Address Option (SLLAO). This attack requires ipv6 be enabled for the network. The problem has been patched in the develop branch of Contiki-NG. The upcoming 4.8 release of Contiki-NG will include the patch.Users unable to upgrade may apply the patch in Contiki-NG PR #1654.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1654",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e58b5838e4691f18e5838347bbc20da6893d355c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-35927",
        "Problem_Type": "CWE-120",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. In the RPL-Classic routing protocol implementation in the Contiki-NG operating system, an incoming DODAG Information Option (DIO) control message can contain a prefix information option with a length parameter. The value of the length parameter is not validated, however, and it is possible to cause a buffer overflow when copying the prefix in the set_ip_from_prefix function. This vulnerability affects anyone running a Contiki-NG version prior to 4.7 that can receive RPL DIO messages from external parties. To obtain a patched version, users should upgrade to Contiki-NG 4.7 or later. There are no workarounds for this issue.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1589/commits/4fffab0e632c4d01910fa957d1fd9ef321eb87d2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4fffab0e632c4d01910fa957d1fd9ef321eb87d2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-36052",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. The 6LoWPAN implementation in Contiki-NG may cast a UDP header structure at a certain offset in a packet buffer. The code does not check whether the packet buffer is large enough to fit a full UDP header structure from the offset where the casting is made. Hence, it is possible to cause an out-of-bounds read beyond the packet buffer. The problem affects anyone running devices with Contiki-NG versions previous to 4.8, and which may receive 6LoWPAN packets from external parties. The problem has been patched in Contiki-NG version 4.8.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1648",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80a5479e9c880b38ec0f1bdb937d17c6fb4ccb25",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-36054",
        "Problem_Type": "CWE-787",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. The 6LoWPAN implementation in the Contiki-NG operating system (file os/net/ipv6/sicslowpan.c) contains an input function that processes incoming packets and copies them into a packet buffer. Because of a missing length check in the input function, it is possible to write outside the packet buffer's boundary. The vulnerability can be exploited by anyone who has the possibility to send 6LoWPAN packets to a Contiki-NG system. In particular, the vulnerability is exposed when sending either of two types of 6LoWPAN packets: an unfragmented packet or the first fragment of a fragmented packet. If the packet is sufficiently large, a subsequent memory copy will cause an out-of-bounds write with data supplied by the attacker.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1648",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80a5479e9c880b38ec0f1bdb937d17c6fb4ccb25",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-41873",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. Versions prior to 4.9 are vulnerable to an Out-of-bounds read. While processing the L2CAP protocol, the Bluetooth Low Energy stack of Contiki-NG needs to map an incoming channel ID to its metadata structure. While looking up the corresponding channel structure in get_channel_for_cid (in os/net/mac/ble/ble-l2cap.c), a bounds check is performed on the incoming channel ID, which is meant to ensure that the channel ID does not exceed the maximum number of supported channels.However, an integer truncation issue leads to only the lowest byte of the channel ID to be checked, which leads to an incomplete out-of-bounds check. A crafted channel ID leads to out-of-bounds memory to be read and written with attacker-controlled data. The vulnerability has been patched in the \"develop\" branch of Contiki-NG, and will be included in release 4.9. As a workaround, Users can apply the patch in Contiki-NG pull request 2081 on GitHub.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2081",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3216ebf59e698b6dc71d0ba3e8052d5d5e09d2bd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-41972",
        "Problem_Type": "CWE-476",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. Versions prior to 4.9 contain a NULL Pointer Dereference in BLE L2CAP module. The Contiki-NG operating system for IoT devices contains a Bluetooth Low Energy stack. An attacker can inject a packet in this stack, which causes the implementation to dereference a NULL pointer and triggers undefined behavior. More specifically, while processing the L2CAP protocol, the implementation maps an incoming channel ID to its metadata structure. In this structure, state information regarding credits is managed through calls to the function input_l2cap_credit in the module os/net/mac/ble/ble-l2cap.c. Unfortunately, the input_l2cap_credit function does not check that the metadata corresponding to the user-supplied channel ID actually exists, which can lead to the channel variable being set to NULL before a pointer dereferencing operation is performed. The vulnerability has been patched in the \"develop\" branch of Contiki-NG, and will be included in release 4.9. Users can apply the patch in Contiki-NG pull request #2253 as a workaround until the new package is released.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2253",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "77898af8488c063a84d6b8338b24fdd4812b9e66",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-23609",
        "Problem_Type": "CWE-787",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. Versions prior to and including 4.8 are vulnerable to an out-of-bounds write that can occur in the BLE-L2CAP module. The Bluetooth Low Energy - Logical Link Control and Adaptation Layer Protocol (BLE-L2CAP) module handles fragmentation of packets up the configured MTU size. When fragments are reassembled, they are stored in a packet buffer of a configurable size, but there is no check to verify that the packet buffer is large enough to hold the reassembled packet. In Contiki-NG's default configuration, it is possible that an out-of-bounds write of up to 1152 bytes occurs. The vulnerability has been patched in the \"develop\" branch of Contiki-NG, and will be included in release 4.9. The problem can be fixed by applying the patch in Contiki-NG pull request #2254 prior to the release of version 4.9.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2254",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "506f9def7cdff853fa24cf6d88e1f4e5619dc46c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-28116",
        "Problem_Type": "CWE-787",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for internet of things (IoT) devices. In versions 4.8 and prior, an out-of-bounds write can occur in the BLE L2CAP module of the Contiki-NG operating system.  The network stack of Contiki-NG uses a global buffer (packetbuf) for processing of packets, with the size of PACKETBUF_SIZE. In particular, when using the BLE L2CAP module with the default configuration, the PACKETBUF_SIZE value becomes larger then the actual size of the packetbuf.  When large packets are processed by the L2CAP module, a buffer overflow can therefore occur when copying the packet data to the packetbuf. The vulnerability has been patched in the \"develop\" branch of Contiki-NG, and will be included in release 4.9. The problem can be worked around by applying the patch manually.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2398",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "210c39de20cd2fe396e135850556be5c46e0c96d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-30546",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an operating system for Internet of Things devices. An off-by-one error can be triggered in the Antelope database management system in the Contiki-NG operating system in versions 4.8 and prior. The problem exists in the Contiki File System (CFS) backend for the storage of data (file os/storage/antelope/storage-cfs.c). In the functions `storage_get_index` and `storage_put_index`, a buffer for merging two strings is allocated with one byte less than the maximum size of the merged strings, causing subsequent function calls to the cfs_open function to read from memory beyond the buffer size. The vulnerability has been patched in the \"develop\" branch of Contiki-NG, and is expected to be included in the next release. As a workaround, the problem can be fixed by applying the patch in Contiki-NG pull request #2425.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2425",
        "Tag": "['Patch']",
        "fix_commit_hash": "6e21dd2955642818a31f5f32c7ae2f78c7f9dd0a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-34101",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an operating system for internet of things devices. In version 4.8 and prior, when processing ICMP DAO packets in the `dao_input_storing` function, the Contiki-NG OS does not verify that the packet buffer is big enough to contain the bytes it needs before accessing them. Up to 16 bytes can be read out of bounds in the `dao_input_storing` function. An attacker can truncate an ICMP packet so that it does not contain enough data, leading to an out-of-bounds read on these lines. The problem has been patched in the \"develop\" branch of Contiki-NG, and is expected to be included in release 4.9. As a workaround, one can apply the changes in Contiki-NG pull request #2435 to patch the system.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2435",
        "Tag": "['Patch']",
        "fix_commit_hash": "df3be4f37103ad2b0f140be7fe440ab567483c4c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-37281",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an operating system for internet-of-things devices. In versions 4.9 and prior, when processing the various IPv6 header fields during IPHC header decompression, Contiki-NG confirms the received packet buffer contains enough data as needed for that field. But no similar check is done before decompressing the IPv6 address. Therefore, up to 16 bytes can be read out of bounds on the line with the statement `memcpy(&ipaddr->u8[16 - postcount], iphc_ptr, postcount);`. The value of `postcount` depends on the address compression used in the received packet and can be controlled by the attacker. As a result, an attacker can inject a packet that causes an out-of-bound read. As of time of publication, a patched version is not available. As a workaround, one can apply the changes in Contiki-NG pull request #2509 to patch the system.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2509",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "28e5490d7c0c844279cf2ff72d792c672f586b58",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-37459",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an operating system for internet-of-things devices. In versions 4.9 and prior, when a packet is received, the Contiki-NG network stack attempts to start the periodic TCP timer if it is a TCP packet with the SYN flag set. But the implementation does not first verify that a full TCP header has been received. Specifically, the implementation attempts to access the flags field from the TCP buffer in the following conditional expression in the `check_for_tcp_syn` function. For this reason, an attacker can inject a truncated TCP packet, which will lead to an out-of-bound read from the packet buffer. As of time of publication, a patched version is not available. As a workaround, one can apply the changes in Contiki-NG pull request #2510 to patch the system.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2510",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "ed514cc8832203c974a947921be46cfffc802a55",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "coralproject/talk",
        "CVE_ID": "CVE-2021-35970",
        "Problem_Type": "CWE-697",
        "Description": "Talk 4 in Coral before 4.12.1 allows remote attackers to discover e-mail addresses and other sensitive information via GraphQL because permission checks use an incorrect data type.",
        "URL": "https://github.com/coralproject/talk/pull/3599",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f9bb5857dad411567daf92b3507b69bdddb4b7d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "coreruleset/coreruleset",
        "CVE_ID": "CVE-2020-22669",
        "Problem_Type": "CWE-89",
        "Description": "Modsecurity owasp-modsecurity-crs 3.2.0 (Paranoia level at PL1) has a SQL injection bypass vulnerability. Attackers can use the comment characters and variable assignments in the SQL syntax to bypass Modsecurity WAF protection and implement SQL injection attacks on Web applications.",
        "URL": "https://github.com/coreruleset/coreruleset/pull/1793",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "874d81c8d70b6ff81286fa4f409c744aa09f44b7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "COVESA/dlt-daemon",
        "CVE_ID": "CVE-2022-31291",
        "Problem_Type": "CWE-415",
        "Description": "An issue in dlt_config_file_parser.c of dlt-daemon v2.18.8 allows attackers to cause a double free via crafted TCP packets.",
        "URL": "https://github.com/COVESA/dlt-daemon/pull/376/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a3bd901d825c7206797e36ea98e10a218f5aad2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "COVESA/dlt-daemon",
        "CVE_ID": "CVE-2023-26257",
        "Problem_Type": "CWE-401",
        "Description": "An issue was discovered in the Connected Vehicle Systems Alliance (COVESA; formerly GENIVI) dlt-daemon through 2.18.8. Dynamic memory is not released after it is allocated in dlt-control-common.c.",
        "URL": "https://github.com/COVESA/dlt-daemon/pull/441/commits/b6149e203f919c899fefc702a17fbb78bdec3700",
        "Tag": "['Patch']",
        "fix_commit_hash": "b6149e203f919c899fefc702a17fbb78bdec3700",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cowtowncoder/java-merge-sort",
        "CVE_ID": "CVE-2022-24913",
        "Problem_Type": "CWE-668",
        "Description": "Versions of the package com.fasterxml.util:java-merge-sort before 1.1.0 are vulnerable to Insecure Temporary File in the StdTempFileProvider() function in StdTempFileProvider.java, which uses the permissive File.createTempFile() function, exposing temporary file contents.",
        "URL": "https://github.com/cowtowncoder/java-merge-sort/pull/21",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "341fc70125ca4f3065b9604de1ee5e06fb5c245f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "craftcms/cms",
        "CVE_ID": "CVE-2024-21622",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Craft is a content management system. This is a potential moderate impact, low complexity privilege escalation vulnerability in Craft starting in 3.x prior to 3.9.6 and 4.x prior to 4.4.16 with certain user permissions setups. This has been fixed in Craft 4.4.16 and Craft 3.9.6. Users should ensure they are running at least those versions.",
        "URL": "https://github.com/craftcms/cms/pull/13931",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "be81eb653d633833f2ab22510794abb6bb9c0843",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "craftcms/cms",
        "CVE_ID": "CVE-2024-21622",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Craft is a content management system. This is a potential moderate impact, low complexity privilege escalation vulnerability in Craft starting in 3.x prior to 3.9.6 and 4.x prior to 4.4.16 with certain user permissions setups. This has been fixed in Craft 4.4.16 and Craft 3.9.6. Users should ensure they are running at least those versions.",
        "URL": "https://github.com/craftcms/cms/pull/13932",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "76caf9af07d9964be0fd362772223be6a5f5b6aa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cri-o/cri-o",
        "CVE_ID": "CVE-2022-2995",
        "Problem_Type": "CWE-732",
        "Description": "Incorrect handling of the supplementary groups in the CRI-O container engine might lead to sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.",
        "URL": "https://github.com/cri-o/cri-o/pull/6159",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42b58538426711eeb8a57f841dc3e2d97881f49d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "crossbeam-rs/crossbeam",
        "CVE_ID": "CVE-2020-15254",
        "Problem_Type": "CWE-401",
        "Description": "Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.",
        "URL": "https://github.com/crossbeam-rs/crossbeam/pull/533",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "772b4f34eb574ab6ae058bd068545dc739196f6b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "crossbeam-rs/crossbeam",
        "CVE_ID": "CVE-2022-23639",
        "Problem_Type": "CWE-362",
        "Description": "crossbeam-utils provides atomics, synchronization primitives, scoped threads, and other utilities for concurrent programming in Rust. crossbeam-utils prior to version 0.8.7 incorrectly assumed that the alignment of `{i,u}64` was always the same as `Atomic{I,U}64`. However, the alignment of `{i,u}64` on a 32-bit target can be smaller than `Atomic{I,U}64`. This can cause unaligned memory accesses and data race. Crates using `fetch_*` methods with `AtomicCell<{i,u}64>` are affected by this issue. 32-bit targets without `Atomic{I,U}64` and 64-bit targets are not affected by this issue. This has been fixed in crossbeam-utils 0.8.7. There are currently no known workarounds.",
        "URL": "https://github.com/crossbeam-rs/crossbeam/pull/781",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "924436cc71b5d7245631a0cf4f02ff536630a1fd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CrowCpp/Crow",
        "CVE_ID": "CVE-2021-23514",
        "Problem_Type": "CWE-22",
        "Description": "This affects the package Crow before 0.3+4. It is possible to traverse directories to fetch arbitrary files from the server.",
        "URL": "https://github.com/CrowCpp/Crow/pull/317",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8cfdfca76ee6d5195c51a7e1d4d62eb40d3dc0e2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CrowCpp/Crow",
        "CVE_ID": "CVE-2021-23824",
        "Problem_Type": "CWE-79",
        "Description": "This affects the package Crow before 0.3+4. When using attributes without quotes in the template, an attacker can manipulate the input to introduce additional attributes, potentially executing code. This may lead to a Cross-site Scripting (XSS) vulnerability, assuming an attacker can influence the value entered into the template. If the template is used to render user-generated content, this vulnerability may escalate to a persistent XSS vulnerability.",
        "URL": "https://github.com/CrowCpp/Crow/pull/317",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8cfdfca76ee6d5195c51a7e1d4d62eb40d3dc0e2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CrowCpp/Crow",
        "CVE_ID": "CVE-2022-34970",
        "Problem_Type": "CWE-193",
        "Description": "Crow before 1.0+4 has a heap-based buffer overflow via the function qs_parse in query_string.h. On successful exploitation this vulnerability allows attackers to remotely execute arbitrary code in the context of the vulnerable service.",
        "URL": "https://github.com/CrowCpp/Crow/pull/486",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c6437aee697e5927ea098c0b4af0d37861ae58b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CrowCpp/Crow",
        "CVE_ID": "CVE-2022-38667",
        "Problem_Type": "CWE-416",
        "Description": "HTTP applications (servers) based on Crow through 1.0+4 may allow a Use-After-Free and code execution when HTTP pipelining is used. The HTTP parser supports HTTP pipelining, but the asynchronous Connection layer is unaware of HTTP pipelining. Specifically, the Connection layer is unaware that it has begun processing a later request before it has finished processing an earlier request.",
        "URL": "https://github.com/CrowCpp/Crow/pull/524",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62271141914f758a515a9c1447d0bae196ef8ddd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cthackers/adm-zip",
        "CVE_ID": "CVE-2018-1002204",
        "Problem_Type": "CWE-22",
        "Description": "adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
        "URL": "https://github.com/cthackers/adm-zip/pull/212",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62f64004fefb894c523a7143e8a88ebe6c84df25",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cure53/DOMPurify",
        "CVE_ID": "CVE-2019-25155",
        "Problem_Type": "CWE-601",
        "Description": "DOMPurify before 1.0.11 allows reverse tabnabbing in demos/hooks-target-blank-demo.html because links lack a 'rel=\"noopener noreferrer\"' attribute.",
        "URL": "https://github.com/cure53/DOMPurify/pull/337/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "7601c33a57e029cce51d910eda5179a3f1b51c83",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cve-search/cve-search",
        "CVE_ID": "CVE-2021-45470",
        "Problem_Type": "CWE-1333",
        "Description": "lib/DatabaseLayer.py in cve-search before 4.1.0 allows regular expression injection, which can lead to ReDoS (regular expression denial of service) or other impacts.",
        "URL": "https://github.com/cve-search/cve-search/pull/629",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c621f9f0693a728b93ff3b964f948a1d25917207",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "CWRUChielLab/CASAuth",
        "CVE_ID": "CVE-2020-35623",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in the CasAuth extension for MediaWiki through 1.35.1. Due to improper username validation, it allowed user impersonation with trivial manipulations of certain characters within a given username. An ordinary user may be able to login as a \"bureaucrat user\" who has a similar username, as demonstrated by usernames that differ only in (1) bidirectional override symbols or (2) blank space.",
        "URL": "https://github.com/CWRUChielLab/CASAuth/pull/11",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9db3ebb158358f7d8615b07819169353d658fa91",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Cyber-Domain-Ontology/CDO-Utility-Local-UUID",
        "CVE_ID": "CVE-2024-22194",
        "Problem_Type": "CWE-215",
        "Description": "cdo-local-uuid project provides a specialized UUID-generating function that can, on user request, cause a program to generate deterministic UUIDs. An information leakage vulnerability is present in `cdo-local-uuid` at version `0.4.0`, and in `case-utils` in unpatched versions (matching the pattern `0.x.0`) at and since `0.5.0`, before `0.15.0`. The vulnerability stems from a Python function, `cdo_local_uuid.local_uuid()`, and its original implementation `case_utils.local_uuid()`. ",
        "URL": "https://github.com/Cyber-Domain-Ontology/CDO-Utility-Local-UUID/pull/3",
        "Tag": "['Patch']",
        "fix_commit_hash": "9e78f7cb1075728d0aafc918514f32a1392cd235",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Cyber-Domain-Ontology/CDO-Utility-Local-UUID",
        "CVE_ID": "CVE-2024-22194",
        "Problem_Type": "CWE-215",
        "Description": "cdo-local-uuid project provides a specialized UUID-generating function that can, on user request, cause a program to generate deterministic UUIDs. An information leakage vulnerability is present in `cdo-local-uuid` at version `0.4.0`, and in `case-utils` in unpatched versions (matching the pattern `0.x.0`) at and since `0.5.0`, before `0.15.0`. The vulnerability stems from a Python function, `cdo_local_uuid.local_uuid()`, and its original implementation `case_utils.local_uuid()`. ",
        "URL": "https://github.com/Cyber-Domain-Ontology/CDO-Utility-Local-UUID/pull/4",
        "Tag": "['Patch']",
        "fix_commit_hash": "752d8d30bac2b160634948fcc30c4a12007f9a65",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DanBloomberg/leptonica",
        "CVE_ID": "CVE-2020-36277",
        "Problem_Type": "CWE-670",
        "Description": "Leptonica before 1.80.0 allows a denial of service (application crash) via an incorrect left shift in pixConvert2To8 in pixconv.c.",
        "URL": "https://github.com/DanBloomberg/leptonica/pull/499",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "076971f4de3f71cb6c255328833d7df2ac8acf04",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "danidomen/icommktconnector",
        "CVE_ID": "CVE-2019-15565",
        "Problem_Type": "CWE-89",
        "Description": "The ICOMMKT connector before 1.0.7 for PrestaShop allows SQL injection in icommktconnector.php.",
        "URL": "https://github.com/danidomen/icommktconnector/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "776971feda36547e9d70a7eb0995a14b102e70f9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dataease/dataease",
        "CVE_ID": "CVE-2022-39312",
        "Problem_Type": "CWE-502",
        "Description": "Dataease is an open source data visualization analysis tool. Dataease prior to 1.15.2 has a deserialization vulnerability. In Dataease, the Mysql data source in the data source function can customize the JDBC connection parameters and the Mysql server target to be connected. In `backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java`, the `MysqlConfiguration` class does not filter any parameters. If an attacker adds some parameters to a JDBC url and connects to a malicious mysql server, the attacker can trigger the mysql jdbc deserialization vulnerability. Through the deserialization vulnerability, the attacker can execute system commands and obtain server privileges. Version 1.15.2 contains a patch for this issue.",
        "URL": "https://github.com/dataease/dataease/pull/3328",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7e270d30690c2e478fd1d4dba872bb60e318f67a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dataease/dataease",
        "CVE_ID": "CVE-2023-32310",
        "Problem_Type": "CWE-639",
        "Description": "DataEase is an open source data visualization and analysis tool. The API interface for DataEase delete dashboard and delete system messages is vulnerable to insecure direct object references (IDOR). This could result in a user deleting another user's dashboard or messages or interfering with the interface for marking messages read. The vulnerability has been fixed in v1.18.7. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/dataease/dataease/pull/5342",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "25d85a3fc5001c52083743885c0a7fb7e4f232f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "datalust/seq-app-htmlemail",
        "CVE_ID": "CVE-2021-43270",
        "Problem_Type": "CWE-319",
        "Description": "Datalust Seq.App.EmailPlus (aka seq-app-htmlemail) 3.1.0-dev-00148, 3.1.0-dev-00170, and 3.1.0-dev-00176 can use cleartext SMTP on port 25 in some cases where encryption on port 465 was intended.",
        "URL": "https://github.com/datalust/seq-app-htmlemail/pull/93",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e4ffda16e22da972a75bb90d5f7851ae1775c937",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "davidmoreno/onion",
        "CVE_ID": "CVE-2022-4066",
        "Problem_Type": "CWE-404",
        "Description": "A vulnerability was found in davidmoreno onion. It has been rated as problematic. Affected by this issue is the function onion_response_flush of the file src/onion/response.c of the component Log Handler. The manipulation leads to allocation of resources. The name of the patch is de8ea938342b36c28024fd8393ebc27b8442a161. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-214028.",
        "URL": "https://github.com/davidmoreno/onion/pull/308",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de8ea938342b36c28024fd8393ebc27b8442a161",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "delcroip/dolibarr_project_timesheet",
        "CVE_ID": "CVE-2022-4766",
        "Problem_Type": "CWE-352",
        "Description": "A vulnerability was found in dolibarr_project_timesheet up to 4.5.5. It has been declared as problematic. This vulnerability affects unknown code of the component Form Handler. The manipulation leads to cross-site request forgery. The attack can be initiated remotely. Upgrading to version 4.5.6.a is able to address this issue. The name of the patch is 082282e9dab43963e6c8f03cfaddd7921de377f4. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216880.",
        "URL": "https://github.com/delcroip/dolibarr_project_timesheet/pull/200",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62204e4bf4d96379a98fe36095951d76ebf14af5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "denoland/deno",
        "CVE_ID": "CVE-2023-22499",
        "Problem_Type": "CWE-362",
        "Description": "Deno is a runtime for JavaScript and TypeScript that uses V8 and is built in Rust. Multi-threaded programs were able to spoof interactive permission prompt by rewriting the prompt to suggest that program is waiting on user confirmation to unrelated action. A malicious program could clear the terminal screen after permission prompt was shown and write a generic message. This situation impacts users who use Web Worker API and relied on interactive permission prompt. The reproduction is very timing sensitive and can\u00c2\u2019t be reliably reproduced on every try. This problem can not be exploited on systems that do not attach an interactive prompt (for example headless servers). The problem has been fixed in Deno v1.29.3; it is recommended all users update to this version. Users are advised to upgrade. Users unable to upgrade may run with --no-prompt flag to disable interactive permission prompts.",
        "URL": "https://github.com/denoland/deno/pull/17392",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1b17985c5a438858b4cbe4e1e57cf000aeea0772",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "denoland/deno",
        "CVE_ID": "CVE-2023-28445",
        "Problem_Type": "CWE-125",
        "Description": "Deno is a runtime for JavaScript and TypeScript that uses V8 and is built in Rust. Resizable ArrayBuffers passed to asynchronous functions that are shrunk during the asynchronous operation could result in an out-of-bound read/write. It is unlikely that this has been exploited in the wild, as the only version affected is Deno 1.32.0. Deno Deploy users are not affected. The problem has been resolved by disabling resizable ArrayBuffers temporarily in Deno 1.32.1. Deno 1.32.2 will re-enable resizable ArrayBuffers with a proper fix. As a workaround, run with `--v8-flags=--no-harmony-rab-gsab` to disable resizable ArrayBuffers.",
        "URL": "https://github.com/denoland/deno/pull/18395",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "09ddb35265f67a89383a8bd614224adb455d1e0c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dependabot/dependabot-core",
        "CVE_ID": "CVE-2020-26222",
        "Problem_Type": "CWE-74",
        "Description": "Dependabot is a set of packages for automated dependency management for Ruby, JavaScript, Python, PHP, Elixir, Rust, Java, .NET, Elm and Go. In Dependabot-Core from version 0.119.0.beta1 before version 0.125.1, there is a remote code execution vulnerability in dependabot-common and dependabot-go_modules when a source branch name contains malicious injectable bash code. For example, if Dependabot is configured to use the following source branch name: \"/$({curl,127.0.0.1})\", Dependabot will make a HTTP request to the following URL: 127.0.0.1 when cloning the source repository. The fix was applied to version 0.125.1. As a workaround, one can escape the branch name prior to passing it to the Dependabot::Source class.",
        "URL": "https://github.com/dependabot/dependabot-core/pull/2727",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e089116abbe284425b976f7920e502b8e83a61b5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "destinygg/chat",
        "CVE_ID": "CVE-2020-36625",
        "Problem_Type": "CWE-352",
        "Description": "A vulnerability was found in destiny.gg chat. It has been rated as problematic. This issue affects the function websocket.Upgrader of the file main.go. The manipulation leads to cross-site request forgery. The attack may be initiated remotely. The name of the patch is bebd256fc3063111fb4503ca25e005ebf6e73780. It is recommended to apply a patch to fix this issue. The identifier VDB-216521 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/destinygg/chat/pull/35",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bebd256fc3063111fb4503ca25e005ebf6e73780",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DFE-Digital/schools-experience",
        "CVE_ID": "CVE-2019-15487",
        "Problem_Type": "CWE-79",
        "Description": "DfE School Experience before v16333-GA has XSS via a teacher training URL.",
        "URL": "https://github.com/DFE-Digital/schools-experience/pull/769",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df177a53a064bf260642c7e92192155699df18c2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DFIRKuiper/Kuiper",
        "CVE_ID": "CVE-2023-6908",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability, which was classified as problematic, was found in DFIRKuiper Kuiper 2.3.4. This affects the function unzip_file of the file kuiper/app/controllers/case_management.py of the component TAR Archive Handler. The manipulation of the argument dst_path leads to path traversal. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 2.3.5 is able to address this issue. The identifier of the patch is 94fa135153002f651f5526c55a7240e083db8d73. It is recommended to upgrade the affected component. The identifier VDB-248277 was assigned to this vulnerability.",
        "URL": "https://github.com/DFIRKuiper/Kuiper/pull/106",
        "Tag": "['Patch']",
        "fix_commit_hash": "4602e0e8d8a85e009947566f82e3f50eede67f4c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "diffplug/goomph",
        "CVE_ID": "CVE-2022-26049",
        "Problem_Type": "CWE-22",
        "Description": "This affects the package com.diffplug.gradle:goomph before 3.37.2. It allows a malicious zip file to potentially break out of the expected destination directory, writing contents into arbitrary locations on the file system. Overwriting certain files/directories could allow an attacker to achieve remote code execution on a target system by exploiting this vulnerability. **Note:** This could have allowed a malicious zip file to extract itself into an arbitrary directory. The only file that Goomph extracts is the p2 bootstrapper and eclipse metadata files hosted at eclipse.org, which are not malicious, so the only way this vulnerability could have affected you is if you had set a custom bootstrap zip, and that zip was malicious.",
        "URL": "https://github.com/diffplug/goomph/pull/198",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "25f04f67ba62d9a14104bee13a0a0f2517afb8c8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dilab/resumable.php",
        "CVE_ID": "CVE-2023-52086",
        "Problem_Type": "CWE-434",
        "Description": "resumable.php (aka PHP backend for resumable.js) 0.1.4 before 3c6dbf5 allows arbitrary file upload anywhere in the filesystem via ../ in multipart/form-data content to upload.php. (File overwrite hasn't been possible with the code available in GitHub in recent years, however.)",
        "URL": "https://github.com/dilab/resumable.php/pull/39/commits/408f54dff10e48befa44d417933787232a64304b",
        "Tag": "['Patch']",
        "fix_commit_hash": "408f54dff10e48befa44d417933787232a64304b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dinever/golf",
        "CVE_ID": "CVE-2016-15005",
        "Problem_Type": "CWE-352",
        "Description": "CSRF tokens are generated using math/rand, which is not a cryptographically secure random number generator, allowing an attacker to predict values and bypass CSRF protections with relatively few requests.",
        "URL": "https://github.com/dinever/golf/pull/24",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3776f338be48b5bc5e8cf9faff7851fc52a3f1fe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-31060",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Discourse is an open-source discussion platform. Prior to version 2.8.4 in the `stable` branch and version `2.9.0.beta5` in the `beta` and `tests-passed` branches, banner topic data is exposed on login-required sites. This issue is patched in version 2.8.4 in the `stable` branch and version `2.9.0.beta5` in the `beta` and `tests-passed` branches of Discourse. As a workaround, one may disable banners.",
        "URL": "https://github.com/discourse/discourse/pull/17071",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ae6a9079436fb9b20fd051d25fb6d8027f0ec59a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DivanteLtd/storefront-api",
        "CVE_ID": "CVE-2020-11883",
        "Problem_Type": "CWE-209",
        "Description": "In Divante vue-storefront-api through 1.11.1 and storefront-api through 1.0-rc.1, as used in VueStorefront PWA, unexpected HTTP requests lead to an exception that discloses the error stack trace, with absolute file paths and Node.js module names.",
        "URL": "https://github.com/DivanteLtd/storefront-api/pull/59",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7c4ea8655dab421878f6c5990930604e11bb9b9e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DivanteLtd/vue-storefront-api",
        "CVE_ID": "CVE-2020-11883",
        "Problem_Type": "CWE-209",
        "Description": "In Divante vue-storefront-api through 1.11.1 and storefront-api through 1.0-rc.1, as used in VueStorefront PWA, unexpected HTTP requests lead to an exception that discloses the error stack trace, with absolute file paths and Node.js module names.",
        "URL": "https://github.com/DivanteLtd/vue-storefront-api/pull/431",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f089244ced7be9e02afc58b67ff587f3944ec5f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DMPRoadmap/roadmap",
        "CVE_ID": "CVE-2021-44896",
        "Problem_Type": "CWE-79",
        "Description": "DMP Roadmap before 3.0.4 allows XSS.",
        "URL": "https://github.com/DMPRoadmap/roadmap/pull/3030",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7a973552e284635c1167c06d371ededf344b7d58",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DMTF/libspdm",
        "CVE_ID": "CVE-2023-31127",
        "Problem_Type": "CWE-287",
        "Description": "libspdm is a sample implementation that follows the DMTF SPDM specifications. A vulnerability has been identified in SPDM session establishment in libspdm prior to version 2.3.1. If a device supports both DHE session and PSK session with mutual\nauthentication, the attacker may be able to establish the session with `KEY_EXCHANGE` and `PSK_FINISH` to bypass the mutual authentication. This is most likely to happen when the Requester begins a session using one method (DHE, for example) and then uses the other method's finish (PSK_FINISH in this example) to establish the session. The session hashes would be expected to fail in this case, but the condition was not detected.\n\nThis issue only impacts the SPDM responder, which supports `KEY_EX_CAP=1 and `PSK_CAP=10b` at same time with mutual authentication requirement. The SPDM requester is not impacted. The SPDM responder is not impacted if `KEY_EX_CAP=0` or `PSK_CAP=0` or `PSK_CAP=01b`. The SPDM responder is not impacted if mutual authentication is not required.\n\nlibspdm 1.0, 2.0, 2.1, 2.2, 2.3 are all impacted. Older branches are not maintained, but users of the 2.3 branch may receive a patch in version 2.3.2. The SPDM specification (DSP0274) does not contain this vulnerability.",
        "URL": "https://github.com/DMTF/libspdm/pull/2007",
        "Tag": "['Patch']",
        "fix_commit_hash": "3167bcaba6a4d8662e13741c0f06699def0ff635",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DMTF/libspdm",
        "CVE_ID": "CVE-2023-31127",
        "Problem_Type": "CWE-287",
        "Description": "libspdm is a sample implementation that follows the DMTF SPDM specifications. A vulnerability has been identified in SPDM session establishment in libspdm prior to version 2.3.1. If a device supports both DHE session and PSK session with mutual\nauthentication, the attacker may be able to establish the session with `KEY_EXCHANGE` and `PSK_FINISH` to bypass the mutual authentication. This is most likely to happen when the Requester begins a session using one method (DHE, for example) and then uses the other method's finish (PSK_FINISH in this example) to establish the session. The session hashes would be expected to fail in this case, but the condition was not detected.\n\nThis issue only impacts the SPDM responder, which supports `KEY_EX_CAP=1 and `PSK_CAP=10b` at same time with mutual authentication requirement. The SPDM requester is not impacted. The SPDM responder is not impacted if `KEY_EX_CAP=0` or `PSK_CAP=0` or `PSK_CAP=01b`. The SPDM responder is not impacted if mutual authentication is not required.\n\nlibspdm 1.0, 2.0, 2.1, 2.2, 2.3 are all impacted. Older branches are not maintained, but users of the 2.3 branch may receive a patch in version 2.3.2. The SPDM specification (DSP0274) does not contain this vulnerability.",
        "URL": "https://github.com/DMTF/libspdm/pull/2006",
        "Tag": "['Patch']",
        "fix_commit_hash": "4f86fb082324d5777b7dd98ff1ff683d423b000a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dns-stats/hedgehog",
        "CVE_ID": "CVE-2021-4276",
        "Problem_Type": "CWE-89",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in dns-stats hedgehog. It has been rated as problematic. Affected by this issue is the function DSCIOManager::dsc_import_input_from_source of the file src/DSCIOManager.cpp. The manipulation leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The name of the patch is 58922c345d3d1fe89bb2020111873a3e07ca93ac. It is recommended to apply a patch to fix this issue. VDB-216746 is the identifier assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer. NOTE: We do assume that the Data Manager server can only be accessed by authorised users. Because of this, we don\u00c2\u2019t believe this specific attack is possible without such a compromise of the Data Manager server.",
        "URL": "https://github.com/dns-stats/hedgehog/pull/190",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "58922c345d3d1fe89bb2020111873a3e07ca93ac",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "docker/engine",
        "CVE_ID": "CVE-2018-20699",
        "Problem_Type": "CWE-400",
        "Description": "Docker Engine before 18.09 allows attackers to cause a denial of service (dockerd memory consumption) via a large integer in a --cpuset-mems or --cpuset-cpus value, related to daemon/daemon_unix.go, pkg/parsers/parsers.go, and pkg/sysinfo/sysinfo.go.",
        "URL": "https://github.com/docker/engine/pull/70",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b8336f7cf091fd5c4742286bda1e34c45667d78",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dokuwiki/dokuwiki",
        "CVE_ID": "CVE-2023-34408",
        "Problem_Type": "CWE-79",
        "Description": "DokuWiki before 2023-04-04a allows XSS via RSS titles.",
        "URL": "https://github.com/dokuwiki/dokuwiki/pull/3967",
        "Tag": "['Patch']",
        "fix_commit_hash": "8f3b3b9e94039b86ccb57aab1031e2175b1e5aea",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "domharrington/node-gitlog",
        "CVE_ID": "CVE-2021-26541",
        "Problem_Type": "CWE-78",
        "Description": "The gitlog function in src/index.ts in gitlog before 4.0.4 has a command injection vulnerability.",
        "URL": "https://github.com/domharrington/node-gitlog/pull/65",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba1bdee27e99a61f3f23a55158b8fda2e42edcd4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dompdf/dompdf",
        "CVE_ID": "CVE-2022-41343",
        "Problem_Type": "CWE-552",
        "Description": "registerFont in FontMetrics.php in Dompdf before 2.0.1 allows remote file inclusion because a URI validation failure does not halt font registration, as demonstrated by a @font-face rule.",
        "URL": "https://github.com/dompdf/dompdf/pull/2995",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "66431c58017d5b1bdb9f6f772b9fbbc5e3d38dc2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "doorkeeper-gem/doorkeeper-openid_connect",
        "CVE_ID": "CVE-2019-9837",
        "Problem_Type": "CWE-601",
        "Description": "Doorkeeper::OpenidConnect (aka the OpenID Connect extension for Doorkeeper) 1.4.x and 1.5.x before 1.5.4 has an open redirect via the redirect_uri field in an OAuth authorization request (that results in an error response) with the 'openid' scope and a prompt=none value. This allows phishing attacks against the authorization flow.",
        "URL": "https://github.com/doorkeeper-gem/doorkeeper-openid_connect/pull/66",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0267515452c33e0432971b03f4252d391c00ef07",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "doorkeeper-gem/doorkeeper",
        "CVE_ID": "CVE-2023-34246",
        "Problem_Type": "CWE-287",
        "Description": "Doorkeeper is an OAuth 2 provider for Ruby on Rails / Grape. Prior to version 5.6.6, Doorkeeper automatically processes authorization requests without user consent for public clients that have been previous approved. Public clients are inherently vulnerable to impersonation, their identity cannot be assured. This issue is fixed in version 5.6.6.",
        "URL": "https://github.com/doorkeeper-gem/doorkeeper/pull/1646",
        "Tag": "['Patch']",
        "fix_commit_hash": "313af27391d974d314c1869828ca80dc1ae2678c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8902",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the categoriesServlet servlet in dotCMS before 3.3.1 allows remote not authenticated attackers to execute arbitrary SQL commands via the sort parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8902",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the categoriesServlet servlet in dotCMS before 3.3.1 allows remote not authenticated attackers to execute arbitrary SQL commands via the sort parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8903",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > Templates pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8903",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > Templates pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8904",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > Containers pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8904",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > Containers pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8905",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the JSONTags servlet in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the sort parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8905",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the JSONTags servlet in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the sort parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8906",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > Links pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8906",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > Links pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8907",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Content Types > Content Types\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8907",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Content Types > Content Types\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8908",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > HTML pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8460/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "06bce92760e1f55a539e2496858678e043714d3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotCMS/core",
        "CVE_ID": "CVE-2016-8908",
        "Problem_Type": "CWE-89",
        "Description": "SQL injection vulnerability in the \"Site Browser > HTML pages\" screen in dotCMS before 3.3.1 allows remote authenticated attackers to execute arbitrary SQL commands via the orderby parameter.",
        "URL": "https://github.com/dotCMS/core/pull/8468/",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f4603408a7972ce219c84e62e5bbb4911a879a85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dotse/zonemaster-gui",
        "CVE_ID": "CVE-2018-7652",
        "Problem_Type": "CWE-79",
        "Description": "lib/Zonemaster/GUI/Dancer/Export.pm in Zonemaster Web GUI before 1.0.11 has XSS.",
        "URL": "https://github.com/dotse/zonemaster-gui/pull/218",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4ec1a0183f0d8d88f4b5aff09572ecdc569151a3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DrAzraelTod/pyChao",
        "CVE_ID": "CVE-2013-10009",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in DrAzraelTod pyChao and classified as critical. Affected by this issue is the function klauen/lesen of the file mod_fun/__init__.py. The manipulation leads to sql injection. The patch is identified as 9d8adbc07c384ba51c2583ce0819c9abb77dc648. It is recommended to apply a patch to fix this issue. VDB-217634 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/DrAzraelTod/pyChao/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4069df61ef311c6923db10750b1030aa7c5e7318",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "drewnoakes/metadata-extractor-dotnet",
        "CVE_ID": "CVE-2019-14262",
        "Problem_Type": "CWE-400",
        "Description": "MetadataExtractor 2.1.0 allows stack consumption.",
        "URL": "https://github.com/drewnoakes/metadata-extractor-dotnet/pull/190",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c9a8a9ac4376725084bd7c3c11af50c74cf58d44",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DrPaulBrewer/cumulative-distribution-function",
        "CVE_ID": "CVE-2021-29486",
        "Problem_Type": "CWE-20",
        "Description": "cumulative-distribution-function is an open source npm library used which calculates statistical cumulative distribution function from data array of x values. In versions prior to 2.0.0 apps using this library on improper data may crash or go into an infinite-loop. In the case of a nodejs server-app using this library to act on invalid non-numeric data, the nodejs server may crash. This may affect other users of this server and/or require the server to be rebooted for proper operation. In the case of a browser app using this library to act on invalid non-numeric data, that browser may crash or lock up. A flaw enabling an infinite-loop was discovered in the code for evaluating the cumulative-distribution-function of input data. Although the documentation explains that numeric data is required, some users may confuse an array of strings like [\"1\",\"2\",\"3\",\"4\",\"5\"] for numeric data [1,2,3,4,5] when it is in fact string data. An infinite loop is possible when the cumulative-distribution-function is evaluated for a given point when the input data is string data rather than type `number`. This vulnerability enables an infinite-cpu-loop denial-of-service-attack on any app using npm:cumulative-distribution-function v1.0.3 or earlier if the attacker can supply malformed data to the library. The vulnerability could also manifest if a data source to be analyzed changes data type from Arrays of number (proper) to Arrays of string (invalid, but undetected by earlier version of the library). Users should upgrade to at least v2.0.0, or the latest version. Tests for several types of invalid data have been created, and version 2.0.0 has been tested to reject this invalid data by throwing a `TypeError()` instead of processing it. Developers using this library may wish to adjust their app's code slightly to better tolerate or handle this TypeError. Apps performing proper numeric data validation before sending data to this library should be mostly unaffected by this patch. The vulnerability can be mitigated in older versions by ensuring that only finite numeric data of type `Array[number]` or `number` is passed to `cumulative-distribution-function` and its `f(x)` function, respectively.",
        "URL": "https://github.com/DrPaulBrewer/cumulative-distribution-function/pull/8",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "339a6cdbf716eca7df9a731a909887f98f87246d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "DSpace/DSpace",
        "CVE_ID": "CVE-2022-31190",
        "Problem_Type": "CWE-863",
        "Description": "DSpace open source software is a repository application which provides durable access to digital resources. dspace-xmlui is a UI component for DSpace. In affected versions metadata on a withdrawn Item is exposed via the XMLUI \"mets.xml\" object, as long as you know the handle/URL of the withdrawn Item. This vulnerability only impacts the XMLUI. Users are advised to upgrade to version 6.4 or newer.",
        "URL": "https://github.com/DSpace/DSpace/pull/2451",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "574e25496a40173653ae7d0a49a19ed8e3458606",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dutchcoders/transfer.sh",
        "CVE_ID": "CVE-2022-40931",
        "Problem_Type": "CWE-79",
        "Description": "dutchcoders Transfer.sh 1.4.0 is vulnerable to Cross Site Scripting (XSS).",
        "URL": "https://github.com/dutchcoders/transfer.sh/pull/501",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31ad4e01e158497519f8680c187e1ceb8594c59d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "dweeves/magmi-git",
        "CVE_ID": "CVE-2017-7391",
        "Problem_Type": "CWE-79",
        "Description": "A Cross-Site Scripting (XSS) was discovered in 'Magmi 0.7.22'. The vulnerability exists due to insufficient filtration of user-supplied data (prefix) passed to the 'magmi-git-master/magmi/web/ajax_gettime.php' URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.",
        "URL": "https://github.com/dweeves/magmi-git/pull/525",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a9566b141b58bf40a9dd904a74e6efcc225a28a3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "easybuilders/easybuild-framework",
        "CVE_ID": "CVE-2020-5262",
        "Problem_Type": "CWE-922",
        "Description": "In EasyBuild before version 4.1.2, the GitHub Personal Access Token (PAT) used by EasyBuild for the GitHub integration features (like `--new-pr`, `--fro,-pr`, etc.) is shown in plain text in EasyBuild debug log files. This issue is fixed in EasyBuild v4.1.2, and in the `master`+ `develop` branches of the `easybuild-framework` repository.",
        "URL": "https://github.com/easybuilders/easybuild-framework/pull/3249",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bc1d45ba59b961950250734c94527cfbf27c6005",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eberhardt/moodle-block_sitenews",
        "CVE_ID": "CVE-2020-36633",
        "Problem_Type": "CWE-352",
        "Description": "A vulnerability was found in moodle-block_sitenews 1.0. It has been classified as problematic. This affects the function get_content of the file block_sitenews.php. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 1.1 is able to address this issue. The name of the patch is cd18d8b1afe464ae6626832496f4e070bac4c58f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216879.",
        "URL": "https://github.com/eberhardt/moodle-block_sitenews/pull/5",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "872adf18fe375af96b521e97521b151ef7d3d4fb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-ee4j/mojarra",
        "CVE_ID": "CVE-2019-17091",
        "Problem_Type": "CWE-79",
        "Description": "faces/context/PartialViewContextImpl.java in Eclipse Mojarra, as used in Mojarra for Eclipse EE4J before 2.3.10 and Mojarra JavaServer Faces before 2.2.20, allows Reflected XSS because a client window field is mishandled.",
        "URL": "https://github.com/eclipse-ee4j/mojarra/pull/4567",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f70f2bd024f00ecd5b3dcca45df73edda29dcee",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-openj9/openj9",
        "CVE_ID": "CVE-2021-41035",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In Eclipse Openj9 before version 0.29.0, the JVM does not throw IllegalAccessError for MethodHandles that invoke inaccessible interface methods.",
        "URL": "https://github.com/eclipse-openj9/openj9/pull/13740",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9f0b7b785af6b3d73a7e51a9d8e819d105ddf9d2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-openj9/openj9",
        "CVE_ID": "CVE-2021-41041",
        "Problem_Type": "CWE-252",
        "Description": "In Eclipse Openj9 before version 0.32.0, Java 8 & 11 fail to throw the exception captured during bytecode verification when verification is triggered by a MethodHandle invocation, allowing unverified methods to be invoked using MethodHandles.",
        "URL": "https://github.com/eclipse-openj9/openj9/pull/14935",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2fd77d98c2276375fa0bc99a421ebdc4824e5b40",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-openj9/openj9",
        "CVE_ID": "CVE-2022-3676",
        "Problem_Type": "CWE-843",
        "Description": "In Eclipse Openj9 before version 0.35.0, interface calls can be inlined without a runtime type check. Malicious bytecode could make use of this inlining to access or modify memory via an incompatible type.",
        "URL": "https://github.com/eclipse-openj9/openj9/pull/16122",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0d7572f0273f04fe5d3df502e2f367b51537c7da",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-openj9/openj9",
        "CVE_ID": "CVE-2023-2597",
        "Problem_Type": "CWE-125",
        "Description": "In Eclipse Openj9 before version 0.38.0, in the implementation of the shared cache (which is enabled by default in OpenJ9 builds) the size of a string is not properly checked against the size of the buffer.",
        "URL": "https://github.com/eclipse-openj9/openj9/pull/17259",
        "Tag": "['Patch']",
        "fix_commit_hash": "8490b806d28c1314e869f0cf08d6cc0f5adb4427",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse-openj9/openj9",
        "CVE_ID": "CVE-2023-5676",
        "Problem_Type": "CWE-362",
        "Description": "In Eclipse OpenJ9 before version 0.41.0, the JVM can be forced into an infinite busy hang on a spinlock or a segmentation fault if a shutdown signal (SIGTERM, SIGINT or SIGHUP) is received before the JVM has finished initializing.\n",
        "URL": "https://github.com/eclipse-openj9/openj9/pull/18085",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "47d4e20180f00a5cb93ba99a2fa7821b31a6259b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-26048",
        "Problem_Type": "CWE-400",
        "Description": "Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",
        "URL": "https://github.com/eclipse/jetty.project/pull/9345",
        "Tag": "['Patch']",
        "fix_commit_hash": "c3021592218da289563987e6f7fbe05f8704b285",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-26048",
        "Problem_Type": "CWE-400",
        "Description": "Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",
        "URL": "https://github.com/eclipse/jetty.project/pull/9344",
        "Tag": "['Patch']",
        "fix_commit_hash": "622befbd0d52f61c1acd41b4ef12458311494f1a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36478",
        "Problem_Type": "CWE-190",
        "Description": "Eclipse Jetty provides a web server and servlet container. In versions 11.0.0 through 11.0.15, 10.0.0 through 10.0.15, and 9.0.0 through 9.4.52, an integer overflow in `MetaDataBuilder.checkSize` allows for HTTP/2 HPACK header values to\nexceed their size limit. `MetaDataBuilder.java` determines if a header name or value exceeds the size limit, and throws an exception if the limit is exceeded. However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. `(_size+length)` will now be negative, and the check on line 296 will not be triggered. Furthermore, `MetaDataBuilder.checkSize` allows for user-entered HPACK header value sizes to be negative, potentially leading to a very large buffer allocation later on when the user-entered size is multiplied by 2. This means that if a user provides a negative length value (or, more precisely, a length value which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a very large positive number when multiplied by 2, then the user can cause a very large buffer to be allocated on the server. Users of HTTP/2 can be impacted by a remote denial of service attack. The issue has been fixed in versions 11.0.16, 10.0.16, and 9.4.53. There are no known workarounds.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9634",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a8c9eea75bffcb2b2557acefb75856707654a56f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-41900",
        "Problem_Type": "CWE-287",
        "Description": "Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9660",
        "Tag": "['Patch']",
        "fix_commit_hash": "5f48b4170f36b275e1576548b44bd5009feba669",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eclipse/omr",
        "CVE_ID": "CVE-2022-3676",
        "Problem_Type": "CWE-843",
        "Description": "In Eclipse Openj9 before version 0.35.0, interface calls can be inlined without a runtime type check. Malicious bytecode could make use of this inlining to access or modify memory via an incompatible type.",
        "URL": "https://github.com/eclipse/omr/pull/6773",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1e2c4c07cea1d56c9a61ebe96d09fd86a351c995",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ecomfe/zrender",
        "CVE_ID": "CVE-2021-39227",
        "Problem_Type": "CWE-1321",
        "Description": "ZRender is a lightweight graphic library providing 2d draw for Apache ECharts. In versions prior to 5.2.1, using `merge` and `clone` helper methods in the `src/core/util.ts` module results in prototype pollution. It affects the popular data visualization library Apache ECharts, which uses and exports these two methods directly. The GitHub Security Advisory page for this vulnerability contains a proof of concept. This issue is patched in ZRender version 5.2.1. One workaround is available: Check if there is `__proto__` in the object keys. Omit it before using it as an parameter in these affected methods. Or in `echarts.util.merge` and `setOption` if project is using ECharts.",
        "URL": "https://github.com/ecomfe/zrender/pull/826",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4485727e3005ac93b75615fe23d5346e5fd2231c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "edgexfoundry/device-sdk-go",
        "CVE_ID": "CVE-2022-31066",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "EdgeX Foundry is an open source project for building a common open framework for Internet of Things edge computing. Prior to version 2.1.1, the /api/v2/config endpoint exposes message bus credentials to local unauthenticated users. In security-enabled mode, message bus credentials are supposed to be kept in the EdgeX secret store and require authentication to access. This vulnerability bypasses the access controls on message bus credentials when running in security-enabled mode. (No credentials are required when running in security-disabled mode.) As a result, attackers could intercept data or inject fake data into the EdgeX message bus. Users should upgrade to EdgeXFoundry Kamakura release (2.2.0) or to the June 2022 EdgeXFoundry LTS Jakarta release (2.1.1) to receive a patch. More information about which go modules, docker containers, and snaps contain patches is available in the GitHub Security Advisory. There are currently no known workarounds for this issue.",
        "URL": "https://github.com/edgexfoundry/device-sdk-go/pull/1161",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a42dac25d44a6c2ff7b69fdd484e9bf4bbdbbd96",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "edx/RecommenderXBlock",
        "CVE_ID": "CVE-2018-20858",
        "Problem_Type": "CWE-79",
        "Description": "Recommender before 2018-07-18 allows XSS.",
        "URL": "https://github.com/edx/RecommenderXBlock/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c5e36fbf6f7577a517115df60bdb0cf7e2e17ed",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "eldy/AWStats",
        "CVE_ID": "CVE-2022-46391",
        "Problem_Type": "CWE-79",
        "Description": "AWStats 7.x through 7.8 allows XSS in the hostinfo plugin due to printing a response from Net::XWhois without proper checks.",
        "URL": "https://github.com/eldy/AWStats/pull/226",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5b9d688972ce0844ebb3659e3b246ffe3baae0f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "electron/electron",
        "CVE_ID": "CVE-2022-21718",
        "Problem_Type": "CWE-862",
        "Description": "Electron is a framework for writing cross-platform desktop applications using JavaScript, HTML and CSS. A vulnerability in versions prior to `17.0.0-alpha.6`, `16.0.6`, `15.3.5`, `14.2.4`, and `13.6.6` allows renderers to obtain access to a bluetooth device via the web bluetooth API if the app has not configured a custom `select-bluetooth-device` event handler. This has been patched and Electron versions `17.0.0-alpha.6`, `16.0.6`, `15.3.5`, `14.2.4`, and `13.6.6` contain the fix. Code from the GitHub Security Advisory can be added to the app to work around the issue.",
        "URL": "https://github.com/electron/electron/pull/32178",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a11f5cbb271091f5354550aa6c5da1164246c80f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "EliasOenal/multimon-ng",
        "CVE_ID": "CVE-2020-36619",
        "Problem_Type": "CWE-134",
        "Description": "A vulnerability was found in multimon-ng. It has been rated as critical. This issue affects the function add_ch of the file demod_flex.c. The manipulation of the argument ch leads to format string. Upgrading to version 1.2.0 is able to address this issue. The name of the patch is e5a51c508ef952e81a6da25b43034dd1ed023c07. It is recommended to upgrade the affected component. The identifier VDB-216269 was assigned to this vulnerability.",
        "URL": "https://github.com/EliasOenal/multimon-ng/pull/160",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8dabd05e9aa9365bf10c22ffac8e3cd2dbed353",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ElrondNetwork/elrond-go",
        "CVE_ID": "CVE-2022-46173",
        "Problem_Type": "CWE-669",
        "Description": "Elrond-GO is a go implementation for the Elrond Network protocol. Versions prior to 1.3.50 are subject to a processing issue where nodes are affected when trying to process a cross-shard relayed transaction with a smart contract deploy transaction data. The problem was a bad correlation between the transaction caches and the processing component. If the above-mentioned transaction was sent with more gas than required, the smart contract result (SCR transaction) that should have returned the leftover gas, would have been wrongly added to a cache that the processing unit did not consider. The node stopped notarizing metachain blocks. The fix was actually to extend the SCR transaction search in all other caches if it wasn't found in the correct (expected) sharded-cache. There are no known workarounds at this time. This issue has been patched in version 1.3.50.\n",
        "URL": "https://github.com/ElrondNetwork/elrond-go/pull/4718",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "39d7ddcb08bb34217dab6daef7cd9d287fb8cab3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "emarref/jwt",
        "CVE_ID": "CVE-2016-7037",
        "Problem_Type": "CWE-361",
        "Description": "The verify function in Encryption/Symmetric.php in Malcolm Fell jwt before 1.0.3 does not use a timing-safe function for hash comparison, which allows attackers to spoof signatures via a timing attack.",
        "URL": "https://github.com/emarref/jwt/pull/20",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "79f563750ff90dabd4fa677c4b4e5ec9ed52d9b4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "emqx/nanomq",
        "CVE_ID": "CVE-2023-33657",
        "Problem_Type": "CWE-416",
        "Description": "A use-after-free vulnerability exists in NanoMQ 0.17.2. The vulnerability can be triggered by calling the function nni_mqtt_msg_get_publish_property() in the file mqtt_msg.c. This vulnerability is caused by improper data tracing, and an attacker could exploit it to cause a denial of service attack.",
        "URL": "https://github.com/emqx/nanomq/pull/1187",
        "Tag": "['Patch']",
        "fix_commit_hash": "69224a88554e7187f6d303a23ed825a7875b8a7d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Ericsson/codechecker",
        "CVE_ID": "CVE-2021-44217",
        "Problem_Type": "CWE-79",
        "Description": "In Ericsson CodeChecker through 6.18.0, a Stored Cross-site scripting (XSS) vulnerability in the comments component of the reports viewer allows remote attackers to inject arbitrary web script or HTML via the POST JSON data of the /CodeCheckerService API.",
        "URL": "https://github.com/Ericsson/codechecker/pull/3549",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "72ee51158e6d81150320223b85410c179b9ee2b1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "etcd-io/etcd",
        "CVE_ID": "CVE-2022-34038",
        "Problem_Type": "CWE-787",
        "Description": "Etcd v3.5.4 allows remote attackers to cause a denial of service via function PageWriter.write in pagewriter.go. NOTE: the vendor's position is that this is not a vulnerability.",
        "URL": "https://github.com/etcd-io/etcd/pull/14452",
        "Tag": "['Patch']",
        "fix_commit_hash": "37220a97dcfb3e75a98b6c756778bc6fcaa03563",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "etcd-io/etcd",
        "CVE_ID": "CVE-2023-32082",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "etcd is a distributed key-value store for the data of a distributed system. Prior to versions 3.4.26 and 3.5.9, the LeaseTimeToLive API allows access to key names (not value) associated to a lease when `Keys` parameter is true, even a user doesn't have read permission to the keys. The impact is limited to a cluster which enables auth (RBAC). Versions 3.4.26 and 3.5.9 fix this issue. There are no known workarounds.",
        "URL": "https://github.com/etcd-io/etcd/pull/15656",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "49b59cc8e5c838bdc5e661de6388a0e348b3985c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ethereum-optimism/optimism",
        "CVE_ID": "CVE-2022-24916",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Optimism before @eth-optimism/l2geth@0.5.11 allows economic griefing because a balance is duplicated upon contract self-destruction.",
        "URL": "https://github.com/ethereum-optimism/optimism/pull/2146",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "98cb7ee6940c005d29771996454d2b3b4951350a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ethitter/WP-Print-Friendly",
        "CVE_ID": "CVE-2013-10007",
        "Problem_Type": "CWE-200",
        "Description": "A vulnerability classified as problematic has been found in ethitter WP-Print-Friendly up to 0.5.2. This affects an unknown part of the file wp-print-friendly.php. The manipulation leads to information disclosure. It is possible to initiate the attack remotely. Upgrading to version 0.5.3 is able to address this issue. The identifier of the patch is 437787292670c20b4abe20160ebbe8428187f2b4. It is recommended to upgrade the affected component. The identifier VDB-217269 was assigned to this vulnerability.",
        "URL": "https://github.com/ethitter/WP-Print-Friendly/pull/4",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "26d9563e65bc2db33aaaff7dcdba89e1ea51d486",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Ettercap/ettercap",
        "CVE_ID": "CVE-2014-9381",
        "Problem_Type": "CWE-189",
        "Description": "Integer signedness error in the dissector_cvs function in dissectors/ec_cvs.c in Ettercap 0.8.1 allows remote attackers to cause a denial of service (crash) via a crafted password, which triggers a large memory allocation.",
        "URL": "https://github.com/Ettercap/ettercap/pull/609",
        "Tag": "['Patch', 'Issue Tracking']",
        "fix_commit_hash": "71bd7bf0ec6c1d9b9b07974763d09c4385bb9629",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "EvanHerman/yikes-inc-easy-mailchimp-extender",
        "CVE_ID": "CVE-2021-4244",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in yikes-inc-easy-mailchimp-extender Plugin up to 6.8.5. This affects an unknown part of the file admin/partials/ajax/add_field_to_form.php. The manipulation of the argument field_name/merge_tag/field_type/list_id leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 6.8.6 is able to address this issue. The name of the patch is 3662c6593aa1bb4286781214891d26de2e947695. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215307.",
        "URL": "https://github.com/EvanHerman/yikes-inc-easy-mailchimp-extender/pull/889",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3662c6593aa1bb4286781214891d26de2e947695",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2018-19107",
        "Problem_Type": "CWE-125",
        "Description": "In Exiv2 0.26, Exiv2::IptcParser::decode in iptc.cpp (called from psdimage.cpp in the PSD image reader) may suffer from a denial of service (heap-based buffer over-read) caused by an integer overflow via a crafted PSD image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/518",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7c71f3ad0386cd7af3b73443c0615ada073f0d5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2018-19108",
        "Problem_Type": "CWE-835",
        "Description": "In Exiv2 0.26, Exiv2::PsdImage::readMetadata in psdimage.cpp in the PSD image reader may suffer from a denial of service (infinite loop) caused by an integer overflow via a crafted PSD image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/518",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7c71f3ad0386cd7af3b73443c0615ada073f0d5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13109",
        "Problem_Type": "CWE-190",
        "Description": "An integer overflow in Exiv2 through 0.27.1 allows an attacker to cause a denial of service (SIGSEGV) via a crafted PNG image file, because PngImage::readMetadata mishandles a chunkLength - iccOffset subtraction.",
        "URL": "https://github.com/Exiv2/exiv2/pull/795",
        "Tag": "['Patch']",
        "fix_commit_hash": "6fa2e31206127bd8bcac0269311f3775a8d6ea21",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13111",
        "Problem_Type": "CWE-190",
        "Description": "A WebPImage::decodeChunks integer overflow in Exiv2 through 0.27.1 allows an attacker to cause a denial of service (large heap allocation followed by a very long running loop) via a crafted WEBP image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/797",
        "Tag": "['Patch']",
        "fix_commit_hash": "6a44698abcf44cc858832643366e25cd16b573b2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-29457",
        "Problem_Type": "CWE-122",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A heap buffer overflow was found in Exiv2 versions v0.27.3 and earlier. The heap overflow is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to gain code execution, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when _writing_ the metadata, which is a less frequently used Exiv2 operation than _reading_ the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `insert`. The bug is fixed in version v0.27.4.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1534",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0230620e6ea5e2da0911318e07ce6e66d1ebdf22",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-29470",
        "Problem_Type": "CWE-125",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.3 and earlier. The out-of-bounds read is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service by crashing Exiv2, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as insert. The bug is fixed in version v0.27.4.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1581",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6ee71526eef5649a529ac6da3f2843e3b63e227",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-32617",
        "Problem_Type": "CWE-400",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An inefficient algorithm (quadratic complexity) was found in Exiv2 versions v0.27.3 and earlier. The inefficient algorithm is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.4. Note that this bug is only triggered when _writing_ the metadata, which is a less frequently used Exiv2 operation than _reading_ the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `rm`.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1657",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c53e4687b19b1951b6860bdc89962d420b1b624",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-32815",
        "Problem_Type": "CWE-617",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. The assertion failure is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when modifying the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `fi`. ### Patches The bug is fixed in version v0.27.5. ### References Regression test and bug fix: #1739 ### For more information Please see our [security policy](https://github.com/Exiv2/exiv2/security/policy) for information about Exiv2 security.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1739",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "17f0d759662aa88343b6084e8c97d67ef363a030",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-34334",
        "Problem_Type": "CWE-835",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1766",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c4861fe77c4a2611c03c7e5b70f41c0cf77f67ad",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37615",
        "Problem_Type": "CWE-476",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A null pointer dereference was found in Exiv2 versions v0.27.4 and earlier. The null pointer dereference is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1758",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "75a1832c57de18ef67c1e8b48f098393a7a843e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37616",
        "Problem_Type": "CWE-476",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A null pointer dereference was found in Exiv2 versions v0.27.4 and earlier. The null pointer dereference is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1758",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "75a1832c57de18ef67c1e8b48f098393a7a843e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37618",
        "Problem_Type": "CWE-125",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the image ICC profile, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p C`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1759",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0fcdde80997913dde284ea98f06f9305d06cb160",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37620",
        "Problem_Type": "CWE-125",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1769",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "21c9eb30c06fb7a29a4e0ec8fae23ccdc622e34f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37621",
        "Problem_Type": "CWE-835",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the image ICC profile, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p C`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1778",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1c919daba049c717485aa3d8c0dcf07ce30566e0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37622",
        "Problem_Type": "CWE-835",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when deleting the IPTC data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-d I rm`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1788",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e931c0a11b972e9e39468f4c945d708b6c59d139",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37623",
        "Problem_Type": "CWE-835",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when deleting the IPTC data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-d I rm`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1790",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de6b706cfdc6816fe291c45f8364ad856c17b63e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "facade/ignition",
        "CVE_ID": "CVE-2021-3129",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Ignition before 2.5.2, as used in Laravel and other products, allows unauthenticated remote attackers to execute arbitrary code because of insecure usage of file_get_contents() and file_put_contents(). This is exploitable on sites using debug mode with Laravel before 8.4.2.",
        "URL": "https://github.com/facade/ignition/pull/334",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "03a8aa13945fcce963cd12a05ba5a2ef26c335d5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "facebook/tac_plus",
        "CVE_ID": "CVE-2023-45239",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A lack of input validation exists in tac_plus prior to commit 4fdf178 which, when pre or post auth commands are enabled, allows an attacker who can control the username, rem-addr, or NAC address sent to tac_plus to inject shell commands and gain remote code execution on the tac_plus server.",
        "URL": "https://github.com/facebook/tac_plus/pull/41",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "4fdf17890ef777a91b4558ae39adf5ed830050a0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FasterXML/jackson-modules-java8",
        "CVE_ID": "CVE-2018-1000873",
        "Problem_Type": "CWE-20",
        "Description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",
        "URL": "https://github.com/FasterXML/jackson-modules-java8/pull/87",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f29e03e21eb6ca0c11cda34cf511d245711a70ec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "filecoin-project/lotus",
        "CVE_ID": "CVE-2021-21405",
        "Problem_Type": "CWE-347",
        "Description": "Lotus is an Implementation of the Filecoin protocol written in Go. BLS signature validation in lotus uses blst library method VerifyCompressed. This method accepts signatures in 2 forms: \"serialized\", and \"compressed\", meaning that BLS signatures can be provided as either of 2 unique byte arrays. Lotus block validation functions perform a uniqueness check on provided blocks. Two blocks are considered distinct if the CIDs of their blockheader do not match. The CID method for blockheader includes the BlockSig of the block. The result of these issues is that it would be possible to punish miners for valid blocks, as there are two different valid block CIDs available for each block, even though this must be unique. By switching from the go based `blst` bindings over to the bindings in `filecoin-ffi`, the code paths now ensure that all signatures are compressed by size and the way they are deserialized. This happened in https://github.com/filecoin-project/lotus/pull/5393.",
        "URL": "https://github.com/filecoin-project/lotus/pull/5393",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "260908015f41324db5a31d7ee5724df08af186dc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Finastra/ssr-pages",
        "CVE_ID": "CVE-2022-24717",
        "Problem_Type": "CWE-79",
        "Description": "ssr-pages is an HTML page builder for the purpose of server-side rendering (SSR). In versions prior to 0.1.5, a cross site scripting (XSS) issue can occur when providing untrusted input to the `redirect.link` property as an argument to the `build(MessagePageOptions)` function. While there is no known workaround at this time, there is a patch in version 0.1.5.",
        "URL": "https://github.com/Finastra/ssr-pages/pull/2/commits/133606ffaec2edd9918d9fba5771ed21da7876a5",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "133606ffaec2edd9918d9fba5771ed21da7876a5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Finastra/ssr-pages",
        "CVE_ID": "CVE-2022-24717",
        "Problem_Type": "CWE-79",
        "Description": "ssr-pages is an HTML page builder for the purpose of server-side rendering (SSR). In versions prior to 0.1.5, a cross site scripting (XSS) issue can occur when providing untrusted input to the `redirect.link` property as an argument to the `build(MessagePageOptions)` function. While there is no known workaround at this time, there is a patch in version 0.1.5.",
        "URL": "https://github.com/Finastra/ssr-pages/pull/2",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2a5fccbfc522b201dab3d5c104d5d7ef54d592b3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Finastra/ssr-pages",
        "CVE_ID": "CVE-2022-24718",
        "Problem_Type": "CWE-22",
        "Description": "ssr-pages is an HTML page builder for the purpose of server-side rendering (SSR). In versions prior to 0.1.4, a path traversal issue can occur when providing untrusted input to the `svg` property as an argument to the `build(MessagePageOptions)` function. While there is no known workaround at this time, there is a patch in version 0.1.4.",
        "URL": "https://github.com/Finastra/ssr-pages/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "28c9b105be3fddc50ccbcd408d395231b147f438",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "firecracker-microvm/firecracker",
        "CVE_ID": "CVE-2020-27174",
        "Problem_Type": "CWE-401",
        "Description": "In Amazon AWS Firecracker before 0.21.3, and 0.22.x before 0.22.1, the serial console buffer can grow its memory usage without limit when data is sent to the standard input. This can result in a memory leak on the microVM emulation thread, possibly occupying more memory than intended on the host.",
        "URL": "https://github.com/firecracker-microvm/firecracker/pull/2178",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "98426d92f1efe2f8bd13d5bdcf08cb6bf80a2364",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flamejs/flame.js",
        "CVE_ID": "CVE-2015-10089",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in flame.js. This affects an unknown part. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. This product does not use versioning. This is why information about affected and unaffected releases are unavailable. The patch is named e6c49b5f6179e31a534b7c3264e1d36aa99728ac. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-222291.",
        "URL": "https://github.com/flamejs/flame.js/pull/209",
        "Tag": "['Patch']",
        "fix_commit_hash": "bd90adb9344be07c2611c552a7fa989820f78d78",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flipperdevices/flipperzero-firmware",
        "CVE_ID": "CVE-2022-40363",
        "Problem_Type": "CWE-787",
        "Description": "A buffer overflow in the component nfc_device_load_mifare_ul_data of Flipper Devices Inc., Flipper Zero before v0.65.2 allows attackers to cause a Denial of Service (DoS) via a crafted NFC file.",
        "URL": "https://github.com/flipperdevices/flipperzero-firmware/pull/1697",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8d8481b17fdcd0b2f4303b2e88742a94e980c989",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flitbit/json-ptr",
        "CVE_ID": "CVE-2021-23509",
        "Problem_Type": "CWE-843",
        "Description": "This affects the package json-ptr before 3.0.0. A type confusion vulnerability can lead to a bypass of CVE-2020-7766 when the user-provided keys used in the pointer parameter are arrays.",
        "URL": "https://github.com/flitbit/json-ptr/pull/42",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18a4d586b679678f67a3f06bb6f593e45b1d9c37",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flitto/express-param",
        "CVE_ID": "CVE-2017-20160",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A vulnerability was found in flitto express-param up to 0.x. It has been classified as critical. This affects an unknown part of the file lib/fetchParams.js. The manipulation leads to improper handling of extra parameters. It is possible to initiate the attack remotely. Upgrading to version 1.0.0 is able to address this issue. The identifier of the patch is db94f7391ad0a16dcfcba8b9be1af385b25c42db. It is recommended to upgrade the affected component. The identifier VDB-217149 was assigned to this vulnerability.",
        "URL": "https://github.com/flitto/express-param/pull/19",
        "Tag": "['Patch']",
        "fix_commit_hash": "c5c995185a3e9fa6ff4bedd31b1e983ba2a3d3a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent-plugins-nursery/td-agent-builder",
        "CVE_ID": "CVE-2020-28169",
        "Problem_Type": "CWE-732",
        "Description": "The td-agent-builder plugin before 2020-12-18 for Fluentd allows attackers to gain privileges because the bin directory is writable by a user account, but a file in bin is executed as NT AUTHORITY\\SYSTEM.",
        "URL": "https://github.com/fluent-plugins-nursery/td-agent-builder/pull/247/commits/6f9cb6393392d62caa99907c0ebbcbab6b94a3f1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6f9cb6393392d62caa99907c0ebbcbab6b94a3f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent/fluent-bit",
        "CVE_ID": "CVE-2021-27186",
        "Problem_Type": "CWE-476",
        "Description": "Fluent Bit 1.6.10 has a NULL pointer dereference when an flb_malloc return value is not validated by flb_avro.c or http_server/api/v1/metrics.c.",
        "URL": "https://github.com/fluent/fluent-bit/pull/3045",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1f0918b2e195742f65c9592d9058884fd2dea203",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent/fluent-bit",
        "CVE_ID": "CVE-2021-27186",
        "Problem_Type": "CWE-476",
        "Description": "Fluent Bit 1.6.10 has a NULL pointer dereference when an flb_malloc return value is not validated by flb_avro.c or http_server/api/v1/metrics.c.",
        "URL": "https://github.com/fluent/fluent-bit/pull/3047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "617745113575b5ab8749ee28a89a352e2b8192f4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent/fluent-bit",
        "CVE_ID": "CVE-2021-36088",
        "Problem_Type": "CWE-415",
        "Description": "Fluent Bit (aka fluent-bit) 1.7.0 through 1.7,4 has a double free in flb_free (called from flb_parser_json_do and flb_parser_do).",
        "URL": "https://github.com/fluent/fluent-bit/pull/3453",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "22346a74c07ceb90296be872be2d53eb92252a54",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent/fluent-bit",
        "CVE_ID": "CVE-2021-46878",
        "Problem_Type": "CWE-843",
        "Description": "An issue was discovered in Treasure Data Fluent Bit 1.7.1, erroneous parsing in flb_pack_msgpack_to_json_format leads to type confusion bug that interprets whatever is on the stack as msgpack maps and arrays, leading to use-after-free. This can be used by an attacker to craft a specially craft file and trick the victim opening it using the affect software, triggering use-after-free and execute arbitrary code on the target system.",
        "URL": "https://github.com/fluent/fluent-bit/pull/3115",
        "Tag": "['Patch']",
        "fix_commit_hash": "172f393e20dad1a69e9a79c3d6f8d4c78f921b2f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent/fluentd",
        "CVE_ID": "CVE-2017-10906",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Escape sequence injection vulnerability in Fluentd versions 0.12.29 through 0.12.40 may allow an attacker to change the terminal UI or execute arbitrary commands on the device via unspecified vectors.",
        "URL": "https://github.com/fluent/fluentd/pull/1733",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3be7587426c6f5481cda4e8ee5cce53a336eaab3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "folio-org/raml-module-builder",
        "CVE_ID": "CVE-2019-15534",
        "Problem_Type": "CWE-89",
        "Description": "Raml-Module-Builder 26.4.0 allows SQL Injection in PostgresClient.update.",
        "URL": "https://github.com/folio-org/raml-module-builder/pull/501",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ad079b0d72becdfd4490d3bdc3b9ff683fd66662",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fontforge/fontforge",
        "CVE_ID": "CVE-2019-15785",
        "Problem_Type": "CWE-119",
        "Description": "FontForge 20190813 through 20190820 has a buffer overflow in PrefsUI_LoadPrefs in prefs.c.",
        "URL": "https://github.com/fontforge/fontforge/pull/3886",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "07f502f59995b0f64c10d21379096a2a47bd40f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "foodcoopshop/foodcoopshop",
        "CVE_ID": "CVE-2023-46725",
        "Problem_Type": "CWE-918",
        "Description": "FoodCoopShop is open source software for food coops and local shops. Versions starting with 3.2.0 prior to 3.6.1 are vulnerable to server-side request forgery. In the Network module, a manufacturer account can use the `/api/updateProducts.json` endpoint to make the server send a request to an arbitrary host. This means that the server can be used as a proxy into the internal network where the server is. Furthermore, the checks on a valid image are not adequate, leading to a time of check time of use issue. For example, by using a custom server that returns 200 on HEAD requests, then return a valid image on first GET request and then a 302 redirect to final target on second GET request, the server will copy whatever file is at the redirect destination, making this a full SSRF. Version 3.6.1 fixes this vulnerability.",
        "URL": "https://github.com/foodcoopshop/foodcoopshop/pull/972",
        "Tag": "['Patch']",
        "fix_commit_hash": "0d5bec5c4c22e1affe7fd321a30e3f3a4d99e808",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "forkcms/forkcms",
        "CVE_ID": "CVE-2020-13633",
        "Problem_Type": "CWE-79",
        "Description": "Fork before 5.8.3 allows XSS via navigation_title or title.",
        "URL": "https://github.com/forkcms/forkcms/pull/3093",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74d99a465441b372874a568908eaed4a4b88235c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "forkcms/forkcms",
        "CVE_ID": "CVE-2020-23263",
        "Problem_Type": "CWE-79",
        "Description": "Persistent Cross-site scripting vulnerability on Fork CMS version 5.8.2 allows remote attackers to inject arbitrary Javascript code via the \"navigation_title\" parameter and the \"title\" parameter in /private/en/pages/add.",
        "URL": "https://github.com/forkcms/forkcms/pull/3093",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74d99a465441b372874a568908eaed4a4b88235c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "forkcms/forkcms",
        "CVE_ID": "CVE-2020-23264",
        "Problem_Type": "CWE-352",
        "Description": "Cross-site request forgery (CSRF) in Fork-CMS before 5.8.2 allow remote attackers to hijack the authentication of logged administrators.",
        "URL": "https://github.com/forkcms/forkcms/pull/3123",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c58b9bccc0bff4e01c68c69d1fcf8322f31abc22",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "forkcms/forkcms",
        "CVE_ID": "CVE-2020-23960",
        "Problem_Type": "CWE-352",
        "Description": "Multiple cross-site request forgery (CSRF) vulnerabilities in the Admin Console in Fork before 5.8.3 allows remote attackers to perform unauthorized actions as administrator to (1) approve the mass of the user's comments, (2) restoring a deleted user, (3) installing or running modules, (4) resetting the analytics, (5) pinging the mailmotor api, (6) uploading things to the media library, (7) exporting locale.",
        "URL": "https://github.com/forkcms/forkcms/pull/3123",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c58b9bccc0bff4e01c68c69d1fcf8322f31abc22",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "forkcms/library",
        "CVE_ID": "CVE-2019-15521",
        "Problem_Type": "CWE-502",
        "Description": "Spoon Library through 2014-02-06, as used in Fork CMS before 1.4.1 and other products, allows PHP object injection via a cookie containing an object.",
        "URL": "https://github.com/forkcms/library/pull/69",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9a97858428e089fef62e2f251d95f17b6de8d3d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ForumHulp/searchresults",
        "CVE_ID": "CVE-2016-15013",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in ForumHulp searchresults. It has been rated as critical. Affected by this issue is the function list_keywords of the file event/listener.php. The manipulation of the argument word leads to sql injection. The name of the patch is dd8a312bb285ad9735a8e1da58e9e955837b7322. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217628.",
        "URL": "https://github.com/ForumHulp/searchresults/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "22c4676c4c060ad11e2bb90e574e9d9d7b233a17",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fossology/fossology",
        "CVE_ID": "CVE-2022-4875",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability has been found in fossology and classified as problematic. This vulnerability affects unknown code. The manipulation of the argument sql/VarValue leads to cross site scripting. The attack can be initiated remotely. The patch is identified as 8e0eba001662c7eb35f045b70dd458a4643b4553. It is recommended to apply a patch to fix this issue. VDB-217426 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/fossology/fossology/pull/2356",
        "Tag": "['Patch']",
        "fix_commit_hash": "8e0eba001662c7eb35f045b70dd458a4643b4553",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14965",
        "Problem_Type": "CWE-94",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. A server side template injection (SSTI) issue exists.",
        "URL": "https://github.com/frappe/frappe/pull/8047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3a8454fb95135a776397912a577359abbe28136",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14965",
        "Problem_Type": "CWE-94",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. A server side template injection (SSTI) issue exists.",
        "URL": "https://github.com/frappe/frappe/pull/8044",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a12dcef54d4c8831622a84a9c7dbac3fec0b992",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14965",
        "Problem_Type": "CWE-94",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. A server side template injection (SSTI) issue exists.",
        "URL": "https://github.com/frappe/frappe/pull/8045",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "63b2f1d403418768012343e64261303030b48849",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14966",
        "Problem_Type": "CWE-89",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. There exists an authenticated SQL injection.",
        "URL": "https://github.com/frappe/frappe/pull/8047",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3a8454fb95135a776397912a577359abbe28136",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14966",
        "Problem_Type": "CWE-89",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. There exists an authenticated SQL injection.",
        "URL": "https://github.com/frappe/frappe/pull/8044",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a12dcef54d4c8831622a84a9c7dbac3fec0b992",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14966",
        "Problem_Type": "CWE-89",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. There exists an authenticated SQL injection.",
        "URL": "https://github.com/frappe/frappe/pull/8045",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "63b2f1d403418768012343e64261303030b48849",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-14966",
        "Problem_Type": "CWE-89",
        "Description": "An issue was discovered in Frappe Framework 10 through 12 before 12.0.4. There exists an authenticated SQL injection.",
        "URL": "https://github.com/frappe/frappe/pull/8046",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01f0c76e0dafc6f3937859b03da24748cbdf7b45",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2019-15700",
        "Problem_Type": "CWE-79",
        "Description": "public/js/frappe/form/footer/timeline.js in Frappe Framework 12 through 12.0.8 does not escape HTML in the timeline and thus is affected by crafted \"changed value of\" text.",
        "URL": "https://github.com/frappe/frappe/pull/8262",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "421f070e78ee1186e7f2f4b2575d8be1d3e2d646",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2020-27508",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In two-factor authentication, the system also sending 2fa secret key in response, which enables an intruder to breach the 2fa security.",
        "URL": "https://github.com/frappe/frappe/pull/11262",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "25764312be957721f7faf2f8a4b31a5c45ea8698",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FredReinink/Wellness-app",
        "CVE_ID": "CVE-2019-15555",
        "Problem_Type": "CWE-89",
        "Description": "FredReinink Wellness-app before 2019-06-19 allows SQL injection, related to dietTrack.php, exerciseGenerator.php, fitnessTrack.php, and server.php.",
        "URL": "https://github.com/FredReinink/Wellness-app/pull/18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3793af909bc15084a04ea863e27f1f1ccebab448",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FredrikNoren/ungit",
        "CVE_ID": "CVE-2022-25766",
        "Problem_Type": "CWE-88",
        "Description": "The package ungit before 1.5.20 are vulnerable to Remote Code Execution (RCE) via argument injection. The issue occurs when calling the /api/fetch endpoint. User controlled values (remote and ref) are passed to the git fetch command. By injecting some git options it was possible to get arbitrary command execution.",
        "URL": "https://github.com/FredrikNoren/ungit/pull/1510",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0f16fa5106c953d88ade398887986f39101a7e3d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FreeCAD/FreeCAD",
        "CVE_ID": "CVE-2021-45845",
        "Problem_Type": "CWE-78",
        "Description": "The Path Sanity Check script of FreeCAD 0.19 is vulnerable to OS command injection, allowing an attacker to execute arbitrary commands via a crafted FCStd document.",
        "URL": "https://github.com/FreeCAD/FreeCAD/pull/5306",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "169eb655f30180b95e5923be2eb3bc4de6e02406",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "freerangerouting/frr",
        "CVE_ID": "CVE-2017-5495",
        "Problem_Type": "CWE-119",
        "Description": "All versions of Quagga, 0.93 through 1.1.0, are vulnerable to an unbounded memory allocation in the telnet 'vty' CLI, leading to a Denial-of-Service of Quagga daemons, or even the entire host. When Quagga daemons are configured with their telnet CLI enabled, anyone who can connect to the TCP ports can trigger this vulnerability, prior to authentication. Most distributions restrict the Quagga telnet interface to local access only by default. The Quagga telnet interface 'vty' input buffer grows automatically, without bound, so long as a newline is not entered. This allows an attacker to cause the Quagga daemon to allocate unbounded memory by sending very long strings without a newline. Eventually the daemon is terminated by the system, or the system itself runs out of memory. This is fixed in Quagga 1.1.1 and Free Range Routing (FRR) Protocol Suite 2017-01-10.",
        "URL": "https://github.com/freerangerouting/frr/pull/63",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "496e83a5d761220bfe9b31e66fe513ccf05e0a6a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2020-15103",
        "Problem_Type": "CWE-680",
        "Description": "In FreeRDP less than or equal to 2.1.2, an integer overflow exists due to missing input sanitation in rdpegfx channel. All FreeRDP clients are affected. The input rectangles from the server are not checked against local surface coordinates and blindly accepted. A malicious server can send data that will crash the client later on (invalid length arguments to a `memcpy`) This has been fixed in 2.2.0. As a workaround, stop using command line arguments /gfx, /gfx-h264 and /network:auto",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/6382",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d2ba84a6885f57674098fe8e76c5f99d880e580d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fribidi/fribidi",
        "CVE_ID": "CVE-2022-25310",
        "Problem_Type": "CWE-476",
        "Description": "A segmentation fault (SEGV) flaw was found in the Fribidi package and affects the fribidi_remove_bidi_marks() function of the lib/fribidi.c file. This flaw allows an attacker to pass a specially crafted file to Fribidi, leading to a crash and causing a denial of service.",
        "URL": "https://github.com/fribidi/fribidi/pull/186",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8bfacc75f06b1d8688cdd64a64846d814675f29",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FriendsOfTYPO3/mediace",
        "CVE_ID": "CVE-2020-15086",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In TYPO3 installations with the \"mediace\" extension from version 7.6.2 and before version 7.6.5, it has been discovered that an internal verification mechanism can be used to generate arbitrary checksums. The allows to inject arbitrary data having a valid cryptographic message authentication code and can lead to remote code execution. To successfully exploit this vulnerability, an attacker must have access to at least one `Extbase` plugin or module action in a TYPO3 installation. This is fixed in version 7.6.5 of the \"mediace\" extension for TYPO3.",
        "URL": "https://github.com/FriendsOfTYPO3/mediace/pull/31",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd705578691852a5a942ce8b676031985964182d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frohoff/ysoserial",
        "CVE_ID": "CVE-2017-20189",
        "Problem_Type": "CWE-502",
        "Description": "In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",
        "URL": "https://github.com/frohoff/ysoserial/pull/68/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "35bce8fe45ca3785a89975a021a9d0be4766105d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "frostming/rediswrapper",
        "CVE_ID": "CVE-2019-17206",
        "Problem_Type": "CWE-502",
        "Description": "Uncontrolled deserialization of a pickled object in models.py in Frost Ming rediswrapper (aka Redis Wrapper) before 0.3.0 allows attackers to execute arbitrary scripts.",
        "URL": "https://github.com/frostming/rediswrapper/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "748f60bafd857c24f65683426f665350e2c3f91b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2020-12831",
        "Problem_Type": "CWE-732",
        "Description": "An issue was discovered in FRRouting FRR (aka Free Range Routing) through 7.3.1. When using the split-config feature, the init script creates an empty config file with world-readable default permissions, leading to a possible information leak via tools/frr.in and tools/frrcommon.sh.in. NOTE: some parties consider this user error, not a vulnerability, because the permissions are under the control of the user before any sensitive information is present in the file",
        "URL": "https://github.com/FRRouting/frr/pull/6383",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7734484a378052a513c9e21165c13bf85f78ad48",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-38406",
        "Problem_Type": "CWE-755",
        "Description": "bgpd/bgp_flowspec.c in FRRouting (FRR) before 8.4.3 mishandles an nlri length of zero, aka a \"flowspec overflow.\"",
        "URL": "https://github.com/FRRouting/frr/pull/12884",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b1867d42927c6e28a257dbcc52e8e1ad27d415e9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-38407",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "bgpd/bgp_label.c in FRRouting (FRR) before 8.5 attempts to read beyond the end of the stream during labeled unicast parsing.",
        "URL": "https://github.com/FRRouting/frr/pull/12956",
        "Tag": "['Patch']",
        "fix_commit_hash": "9f31d576647d5a1650e3fb326a8be6bdbd4fbd45",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-38407",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "bgpd/bgp_label.c in FRRouting (FRR) before 8.5 attempts to read beyond the end of the stream during labeled unicast parsing.",
        "URL": "https://github.com/FRRouting/frr/pull/12951",
        "Tag": "['Patch']",
        "fix_commit_hash": "e618cc7b21608c493ec321caf2377771c6c4baba",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-41358",
        "Problem_Type": "CWE-476",
        "Description": "An issue was discovered in FRRouting FRR through 9.0. bgpd/bgp_packet.c processes NLRIs if the attribute length is zero.",
        "URL": "https://github.com/FRRouting/frr/pull/14260",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "42016422ce39bb1dd154531ee39f8b14ffed8fe7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-41359",
        "Problem_Type": "CWE-125",
        "Description": "An issue was discovered in FRRouting FRR through 9.0. There is an out-of-bounds read in bgp_attr_aigp_valid in bgpd/bgp_attr.c because there is no check for the availability of two bytes during AIGP validation.",
        "URL": "https://github.com/FRRouting/frr/pull/14232",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "673a11a54fc6948641fe56e41720d0f900c9353c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-41360",
        "Problem_Type": "CWE-125",
        "Description": "An issue was discovered in FRRouting FRR through 9.0. bgpd/bgp_packet.c can read the initial byte of the ORF header in an ahead-of-stream situation.",
        "URL": "https://github.com/FRRouting/frr/pull/14245",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "c2b0d6a08f5f3f323e60071387e52b0418540a6a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-41361",
        "Problem_Type": "CWE-120",
        "Description": "An issue was discovered in FRRouting FRR 9.0. bgpd/bgp_open.c does not check for an overly large length of the rcv software version.",
        "URL": "https://github.com/FRRouting/frr/pull/14241",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "ff4c767a312dae7583f9f56ceb4054f40aac0bad",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-41909",
        "Problem_Type": "CWE-476",
        "Description": "An issue was discovered in FRRouting FRR through 9.0. bgp_nlri_parse_flowspec in bgpd/bgp_flowspec.c processes malformed requests with no attributes, leading to a NULL pointer dereference.",
        "URL": "https://github.com/FRRouting/frr/pull/13222/commits/cfd04dcb3e689754a72507d086ba3b9709fc5ed8",
        "Tag": "['Patch']",
        "fix_commit_hash": "cfd04dcb3e689754a72507d086ba3b9709fc5ed8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "funzoneq/freshdns",
        "CVE_ID": "CVE-2018-1000846",
        "Problem_Type": "CWE-352",
        "Description": "FreshDNS version 1.0.3 and earlier contains a Cross ite Request Forgery (CSRF) vulnerability in All (authenticated) API calls in index.php / class.manager.php that can result in Editing domains and zones with victim's privileges. This attack appear to be exploitable via Victim must open a website containing attacker's javascript. This vulnerability appears to have been fixed in 1.0.5 and later.",
        "URL": "https://github.com/funzoneq/freshdns/pull/6/commits/bdeff81bd4baff9463d46b90fb1889e7ac7ec4ed",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bdeff81bd4baff9463d46b90fb1889e7ac7ec4ed",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "FurqanSoftware/node-whois",
        "CVE_ID": "CVE-2020-36618",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability classified as critical has been found in Furqan node-whois. Affected is an unknown function of the file index.coffee. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to launch the attack remotely. The name of the patch is 46ccc2aee8d063c7b6b4dee2c2834113b7286076. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216252.",
        "URL": "https://github.com/FurqanSoftware/node-whois/pull/105",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "46ccc2aee8d063c7b6b4dee2c2834113b7286076",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gagliardetto/binary",
        "CVE_ID": "CVE-2022-36078",
        "Problem_Type": "CWE-1284",
        "Description": "Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(&val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(&val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.",
        "URL": "https://github.com/gagliardetto/binary/pull/7",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b2638040b6d1921df7e9247b441a630ba80d517",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Gallopsled/pwntools",
        "CVE_ID": "CVE-2020-28468",
        "Problem_Type": "CWE-74",
        "Description": "This affects the package pwntools before 4.3.1. The shellcraft generator for affected versions of this module are vulnerable to Server-Side Template Injection (SSTI), which can lead to remote code execution.",
        "URL": "https://github.com/Gallopsled/pwntools/pull/1732",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2efb5a0a734def9556fe162a57244e6bf30c9514",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GENI-NSF/geni-portal",
        "CVE_ID": "CVE-2020-36653",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in GENI Portal. It has been rated as problematic. Affected by this issue is some unknown functionality of the file portal/www/portal/error-text.php. The manipulation of the argument error leads to cross site scripting. The attack may be launched remotely. The patch is identified as c2356cc41260551073bfaa3a94d1ab074f554938. It is recommended to apply a patch to fix this issue. VDB-218474 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/GENI-NSF/geni-portal/pull/1822",
        "Tag": "['Patch']",
        "fix_commit_hash": "c2356cc41260551073bfaa3a94d1ab074f554938",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GENI-NSF/geni-portal",
        "CVE_ID": "CVE-2020-36654",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in GENI Portal. This affects the function no_invocation_id_error of the file portal/www/portal/sliceresource.php. The manipulation of the argument invocation_id/invocation_user leads to cross site scripting. It is possible to initiate the attack remotely. The patch is named 39a96fb4b822bd3497442a96135de498d4a81337. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218475.",
        "URL": "https://github.com/GENI-NSF/geni-portal/pull/1824",
        "Tag": "['Patch']",
        "fix_commit_hash": "7be94e8564b7b6e5dfe88a0d67eaf6eead5ed62f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "geopython/pycsw",
        "CVE_ID": "CVE-2016-8640",
        "Problem_Type": "CWE-89",
        "Description": "A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5 and 1.8.6 that leads to read and extract of any data from any table in the pycsw database that the database user has access to. Also on PostgreSQL (at least) it is possible to perform updates/inserts/deletes and database modifications to any table the database user has access to.",
        "URL": "https://github.com/geopython/pycsw/pull/474/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2565ab332d3ccae328591ea9054d0387a90f2e86",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "geopython/pywps",
        "CVE_ID": "CVE-2021-39371",
        "Problem_Type": "CWE-611",
        "Description": "An XML external entity (XXE) injection in PyWPS before 4.4.5 allows an attacker to view files on the application server filesystem by assigning a path to the entity. OWSLib 0.24.1 may also be affected.",
        "URL": "https://github.com/geopython/pywps/pull/616",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d6b26a2e931df2feca0b7fb24f4d01610825aee",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Geta/NestedObjectAssign",
        "CVE_ID": "CVE-2021-23329",
        "Problem_Type": "CWE-1321",
        "Description": "The package nested-object-assign before 1.0.4 are vulnerable to Prototype Pollution via the default function, as demonstrated by running the PoC below.",
        "URL": "https://github.com/Geta/NestedObjectAssign/pull/11",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "676f6b76c7f8c4866eea0a983eba0b7537dd170b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "getkirby/kirby",
        "CVE_ID": "CVE-2021-41258",
        "Problem_Type": "CWE-79",
        "Description": "Kirby is an open source file structured CMS. In affected versions Kirby's blocks field stores structured data for each block. This data is then used in block snippets to convert the blocks to HTML for use in your templates. We recommend to escape HTML special characters to protect against cross-site scripting (XSS) attacks. The default snippet for the image block unfortunately did not use our escaping helper. This made it possible to include malicious HTML code in the source, alt and link fields of the image block, which would then be displayed on the site frontend and executed in the browsers of site visitors and logged in users who are browsing the site. Attackers must be in your group of authenticated Panel users in order to exploit this weakness. Users who do not make use of the blocks field are not affected. This issue has been patched in Kirby version 3.5.8 by escaping special HTML characters in the output from the default image block snippet. Please update to this or a later version to fix the vulnerability.",
        "URL": "https://github.com/getkirby/kirby/pull/3510",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91f9fc098112c4346b317db7555b92db01c5712c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2023-26125",
        "Problem_Type": "CWE-20",
        "Description": "Versions of the package github.com/gin-gonic/gin before 1.9.0 are vulnerable to Improper Input Validation by allowing an attacker to use a specially crafted request via the X-Forwarded-Prefix header, potentially leading to cache poisoning.\n\n**Note:** Although this issue does not pose a significant threat on its own it can serve as an input vector for other more impactful vulnerabilities. However, successful exploitation may depend on the server configuration and whether the header is used in the application logic.",
        "URL": "https://github.com/gin-gonic/gin/pull/3500",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "81ac7d55a09e34013225db0aeac6e70c1ae68928",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "git-big-picture/git-big-picture",
        "CVE_ID": "CVE-2021-3028",
        "Problem_Type": "CWE-20",
        "Description": "git-big-picture before 1.0.0 mishandles ' characters in a branch name, leading to code execution.",
        "URL": "https://github.com/git-big-picture/git-big-picture/pull/62",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e840dfb69ae6ec3a3f81c36af431857118a3c139",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "git-big-picture/git-big-picture",
        "CVE_ID": "CVE-2021-3028",
        "Problem_Type": "CWE-20",
        "Description": "git-big-picture before 1.0.0 mishandles ' characters in a branch name, leading to code execution.",
        "URL": "https://github.com/git-big-picture/git-big-picture/pull/27",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e840dfb69ae6ec3a3f81c36af431857118a3c139",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "git-for-windows/git",
        "CVE_ID": "CVE-2022-41953",
        "Problem_Type": "CWE-426",
        "Description": "Git GUI is a convenient graphical tool that comes with Git for Windows. Its target audience is users who are uncomfortable with using Git on the command-line. Git GUI has a function to clone repositories. Immediately after the local clone is available, Git GUI will automatically post-process it, among other things running a spell checker called `aspell.exe` if it was found. Git GUI is implemented as a Tcl/Tk script. Due to the unfortunate design of Tcl on Windows, the search path when looking for an executable _always includes the current directory_. Therefore, malicious repositories can ship with an `aspell.exe` in their top-level directory which is executed by Git GUI without giving the user a chance to inspect it first, i.e. running untrusted code. This issue has been addressed in version 2.39.1. Users are advised to upgrade. Users unable to upgrade should avoid using Git GUI for cloning. If that is not a viable option, at least avoid cloning from untrusted sources.",
        "URL": "https://github.com/git-for-windows/git/pull/4219",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7360767e8dfc1895a932324079f7d45d7791d39f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "git-lfs/git-lfs",
        "CVE_ID": "CVE-2017-17831",
        "Problem_Type": "CWE-20",
        "Description": "GitHub Git LFS before 2.1.1 allows remote attackers to execute arbitrary commands via an ssh URL with an initial dash character in the hostname, located on a \"url =\" line in a .lfsconfig file within a repository.",
        "URL": "https://github.com/git-lfs/git-lfs/pull/2242",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "319ae903ffba7533789054aac007e690b47feca7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "github/codeql",
        "CVE_ID": "CVE-2022-24864",
        "Problem_Type": "CWE-79",
        "Description": "Origin Protocol is a blockchain based project. The Origin Protocol project website allows for malicious users to inject malicious Javascript via a POST request to `/presale/join`. User-controlled data is passed with no sanitization to SendGrid and injected into an email that is delivered to the founders@originprotocol.com. If the email recipient is using an email program that is susceptible to XSS, then that email recipient will receive an email that may contain malicious XSS. Regardless if the email recipient\u00c2\u2019s mail program has vulnerabilities or not, the hacker can at the very least inject malicious HTML that modifies the body content of the email. There are currently no known workarounds.",
        "URL": "https://github.com/github/codeql/pull/7127",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "699761889df1c7abf50247de990e2d701c273907",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "github/vscode-codeql",
        "CVE_ID": "CVE-2019-16765",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "If an attacker can get a user to open a specially prepared directory tree as a workspace in Visual Studio Code with the CodeQL extension active, arbitrary code of the attacker's choosing may be executed on the user's behalf. This is fixed in version 1.0.1 of the extension. Users should upgrade to this version using Visual Studio Code Marketplace's upgrade mechanism. After upgrading, the codeQL.cli.executablePath setting can only be set in the per-user settings, and not in the per-workspace settings. More information about VS Code settings can be found here.",
        "URL": "https://github.com/github/vscode-codeql/pull/174",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "36fedac2ca2f2912a4de3ca2536e06c131513e63",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2021-35206",
        "Problem_Type": "CWE-601",
        "Description": "Gitpod before 0.6.0 allows unvalidated redirects.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/2879#issuecomment-865662372",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8ca431f86ae3a6f9a17afcfed51cdd065fcff1a5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2021-35206",
        "Problem_Type": "CWE-601",
        "Description": "Gitpod before 0.6.0 allows unvalidated redirects.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/4567/commits/f78b7d18e509e28e71b65bbd4dfd52c16ca57c18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5651cfcbc94b6361eec6438bd8e272e264d98587",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2021-35206",
        "Problem_Type": "CWE-601",
        "Description": "Gitpod before 0.6.0 allows unvalidated redirects.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/2879",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8ca431f86ae3a6f9a17afcfed51cdd065fcff1a5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gitpython-developers/GitPython",
        "CVE_ID": "CVE-2023-40267",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "GitPython before 3.1.32 does not block insecure non-multi options in clone and clone_from. NOTE: this issue exists because of an incomplete fix for CVE-2022-24439.",
        "URL": "https://github.com/gitpython-developers/GitPython/pull/1609",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "ca965ecc81853bca7675261729143f54e5bf4cdd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gitpython-developers/GitPython",
        "CVE_ID": "CVE-2024-22190",
        "Problem_Type": "CWE-426",
        "Description": "GitPython is a python library used to interact with Git repositories. There is an incomplete fix for CVE-2023-40590. On Windows, GitPython uses an untrusted search path if it uses a shell to run `git`, as well as when it runs `bash.exe` to interpret hooks. If either of those features are used on Windows, a malicious `git.exe` or `bash.exe` may be run from an untrusted repository. This issue has been patched in version 3.1.41.",
        "URL": "https://github.com/gitpython-developers/GitPython/pull/1792",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "ef3192cc414f2fd9978908454f6fd95243784c7f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "glidernet/ogn-live",
        "CVE_ID": "CVE-2015-10015",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability, which was classified as critical, has been found in glidernet ogn-live. This issue affects some unknown processing. The manipulation leads to sql injection. The patch is named bc0f19965f760587645583b7624d66a260946e01. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217487.",
        "URL": "https://github.com/glidernet/ogn-live/pull/11",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bc0f19965f760587645583b7624d66a260946e01",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GloBee-Official/woocommerce-payment-api-plugin",
        "CVE_ID": "CVE-2018-20782",
        "Problem_Type": "CWE-20",
        "Description": "The GloBee plugin before 1.1.2 for WooCommerce mishandles IPN messages.",
        "URL": "https://github.com/GloBee-Official/woocommerce-payment-api-plugin/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "27e80efbb1c7c247d3a08fbb3b0539db6627c04c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2020-28991",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gitea 0.9.99 through 1.12.x before 1.12.6 does not prevent a git protocol path that specifies a TCP port number and also contains newlines (with URL encoding) in ParseRemoteAddr in modules/auth/repo_form.go.",
        "URL": "https://github.com/go-gitea/gitea/pull/13525",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "480efbdb96e4092493ec1e3683b2ab688ac95096",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-27313",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An arbitrary file deletion vulnerability in Gitea v1.16.3 allows attackers to cause a Denial of Service (DoS) via deleting the configuration file.",
        "URL": "https://github.com/go-gitea/gitea/pull/19072",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "49db87a035a28cd8eaa4abdd5832f952ca6449d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "go-ldap/ldap",
        "CVE_ID": "CVE-2017-14623",
        "Problem_Type": "CWE-287",
        "Description": "In the ldap.v2 (aka go-ldap) package through 2.5.0 for Go, an attacker may be able to login with an empty password. This issue affects an application using this package if these conditions are met: (1) it relies only on the return error of the Bind function call to determine whether a user is authorized (i.e., a nil return value is interpreted as successful authorization) and (2) it is used with an LDAP server allowing unauthenticated bind.",
        "URL": "https://github.com/go-ldap/ldap/pull/126",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "95ede1266b237bf8e9aa5dce0b3250e51bfefe66",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "go-vela/server",
        "CVE_ID": "CVE-2021-21432",
        "Problem_Type": "CWE-862",
        "Description": "Vela is a Pipeline Automation (CI/CD) framework built on Linux container technology written in Golang. An authentication mechanism added in version 0.7.0 enables some malicious user to obtain secrets utilizing the injected credentials within the `~/.netrc` file. Refer to the referenced GitHub Security Advisory for complete details. This is fixed in version 0.7.5.",
        "URL": "https://github.com/go-vela/server/pull/337",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cb4352918b8ecace9fe969b90404d337b0744d46",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gobby/gobby",
        "CVE_ID": "CVE-2020-35450",
        "Problem_Type": "CWE-476",
        "Description": "Gobby 0.4.11 allows a NULL pointer dereference in the D-Bus handler for certain set_language calls.",
        "URL": "https://github.com/gobby/gobby/pull/184",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "295e697ac83c6638bc7c6f0498534b12278192c7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gocd/gocd",
        "CVE_ID": "CVE-2022-24832",
        "Problem_Type": "CWE-74",
        "Description": "GoCD is an open source a continuous delivery server. The bundled gocd-ldap-authentication-plugin included with the GoCD Server fails to correctly escape special characters when using the username to construct LDAP queries. While this does not directly allow arbitrary LDAP data exfiltration, it can allow an existing LDAP-authenticated GoCD user with malicious intent to construct and execute malicious queries, allowing them to deduce facts about other users or entries within the LDAP database (e.g alternate fields, usernames, hashed passwords etc) through brute force mechanisms. This only affects users who have a working LDAP authorization configuration enabled on their GoCD server, and only is exploitable by users authenticating using such an LDAP configuration. This issue has been fixed in GoCD 22.1.0, which is bundled with gocd-ldap-authentication-plugin v2.2.0-144.",
        "URL": "https://github.com/gocd/gocd/pull/10244",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "717819c9cf416d8e34cf29bd569b7b040d8bf4c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gocd/gocd",
        "CVE_ID": "CVE-2022-39310",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "GoCD is a continuous delivery server. GoCD helps you automate and streamline the build-test-release cycle for continuous delivery of your product. GoCD versions prior to 21.1.0 can allow one authenticated agent to impersonate another agent, and thus receive work packages for other agents due to broken access control and incorrect validation of agent tokens within the GoCD server. Since work packages can contain sensitive information such as credentials intended only for a given job running against a specific agent environment, this can cause accidental information disclosure. Exploitation requires knowledge of agent identifiers and ability to authenticate as an existing agent with the GoCD server. This issue is fixed in GoCD version 21.1.0. There are currently no known workarounds.",
        "URL": "https://github.com/gocd/gocd/pull/8877",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3da524e56bd301e8a5f066afff37b03c4dd3773e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "godotengine/godot",
        "CVE_ID": "CVE-2021-26825",
        "Problem_Type": "CWE-190",
        "Description": "An integer overflow issue exists in Godot Engine up to v3.2 that can be triggered when loading specially crafted.TGA image files. The vulnerability exists in ImageLoaderTGA::load_image() function at line: const size_t buffer_size = (tga_header.image_width * tga_header.image_height) * pixel_size; The bug leads to Dynamic stack buffer overflow. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.",
        "URL": "https://github.com/godotengine/godot/pull/45702",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f42f6ed01cdebe145bf23716f80ee1ece64bc5a5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "godotengine/godot",
        "CVE_ID": "CVE-2021-26825",
        "Problem_Type": "CWE-190",
        "Description": "An integer overflow issue exists in Godot Engine up to v3.2 that can be triggered when loading specially crafted.TGA image files. The vulnerability exists in ImageLoaderTGA::load_image() function at line: const size_t buffer_size = (tga_header.image_width * tga_header.image_height) * pixel_size; The bug leads to Dynamic stack buffer overflow. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.",
        "URL": "https://github.com/godotengine/godot/pull/45702/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f42f6ed01cdebe145bf23716f80ee1ece64bc5a5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "godotengine/godot",
        "CVE_ID": "CVE-2021-26826",
        "Problem_Type": "CWE-787",
        "Description": "A stack overflow issue exists in Godot Engine up to v3.2 and is caused by improper boundary checks when loading .TGA image files. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.",
        "URL": "https://github.com/godotengine/godot/pull/45701",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "59ae3ea44fb205a6ba1ae1336833c9fbb186b1df",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "googleapis/nodejs-firestore",
        "CVE_ID": "CVE-2023-6460",
        "Problem_Type": "CWE-532",
        "Description": "A potential logging of the firestore key via logging within nodejs-firestore exists - Developers who were logging objects through this._settings would be logging the firestore key as well potentially exposing it to anyone with logs read access. We recommend upgrading to version 6.1.0 to avoid this issue",
        "URL": "https://github.com/googleapis/nodejs-firestore/pull/1742",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "fa0ad66bc7e4a0c46f1ae5ca10b2a6f3a528ab6f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/fscrypt",
        "CVE_ID": "CVE-2022-25326",
        "Problem_Type": "CWE-400",
        "Description": "fscrypt through v0.3.2 creates a world-writable directory by default when setting up a filesystem, allowing unprivileged users to exhaust filesystem space. We recommend upgrading to fscrypt 0.3.3 or above and adjusting the permissions on existing fscrypt metadata directories where applicable.",
        "URL": "https://github.com/google/fscrypt/pull/346",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91aa3ebf42032ca783c41f9ec25d885875f66ddb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/fscrypt",
        "CVE_ID": "CVE-2022-25327",
        "Problem_Type": "CWE-276",
        "Description": "The PAM module for fscrypt doesn't adequately validate fscrypt metadata files, allowing users to create malicious metadata files that prevent other users from logging in. A local user can cause a denial of service by creating a fscrypt metadata file that prevents other users from logging into the system. We recommend upgrading to version 0.3.3 or above",
        "URL": "https://github.com/google/fscrypt/pull/346",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91aa3ebf42032ca783c41f9ec25d885875f66ddb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/fscrypt",
        "CVE_ID": "CVE-2022-25328",
        "Problem_Type": "CWE-78",
        "Description": "The bash_completion script for fscrypt allows injection of commands via crafted mountpoint paths, allowing privilege escalation under a specific set of circumstances. A local user who has control over mountpoint paths could potentially escalate their privileges if they create a malicious mountpoint path and if the system administrator happens to be using the fscrypt bash completion script to complete mountpoint paths. We recommend upgrading to version 0.3.3 or above",
        "URL": "https://github.com/google/fscrypt/pull/346",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91aa3ebf42032ca783c41f9ec25d885875f66ddb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/google-api-cpp-client",
        "CVE_ID": "CVE-2018-20840",
        "Problem_Type": "CWE-754",
        "Description": "An unhandled exception vulnerability exists during Google Sign-In with Google API C++ Client before 2019-04-10. It potentially causes an outage of third-party services that were not designed to recover from exceptions. On the client, ID token handling can cause an unhandled exception because of misinterpretation of an integer as a string, resulting in denial-of-service and then other users can no longer login/sign-in to the affected third-party service. Once this third-party service uses Google Sign-In with google-api-cpp-client, a malicious user can trigger this client/auth/oauth2_authorization.cc vulnerability by requesting the client to receive the ID token from a Google authentication server.",
        "URL": "https://github.com/google/google-api-cpp-client/pull/58",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3eeb584e55526909f3fc4ae94fcdbe971c349015",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/gson",
        "CVE_ID": "CVE-2022-25647",
        "Problem_Type": "CWE-502",
        "Description": "The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",
        "URL": "https://github.com/google/gson/pull/1991",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e6fae590cf2a758c47cd5a17f9bf3780ce62c986",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "google/gson",
        "CVE_ID": "CVE-2022-25647",
        "Problem_Type": "CWE-502",
        "Description": "The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",
        "URL": "https://github.com/google/gson/pull/1991/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e6fae590cf2a758c47cd5a17f9bf3780ce62c986",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gopistolet/gopistolet",
        "CVE_ID": "CVE-2015-10085",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A vulnerability was found in GoPistolet. It has been declared as problematic. This vulnerability affects unknown code of the component MTA. The manipulation leads to denial of service. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The patch is identified as b91aa4674d460993765884e8463c70e6d886bc90. It is recommended to apply a patch to fix this issue. VDB-221506 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/gopistolet/gopistolet/pull/27",
        "Tag": "['Patch']",
        "fix_commit_hash": "b91aa4674d460993765884e8463c70e6d886bc90",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gosa-project/gosa-core",
        "CVE_ID": "CVE-2019-14466",
        "Problem_Type": "CWE-502",
        "Description": "The GOsa_Filter_Settings cookie in GONICUS GOsa 2.7.5.2 is vulnerable to PHP objection injection, which allows a remote authenticated attacker to perform file deletions (in the context of the user account that runs the web server) via a crafted cookie value, because unserialize is used to restore filter settings from a cookie.",
        "URL": "https://github.com/gosa-project/gosa-core/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f211579037fc7e0e09f3535bc7d68e27a2a1b63",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gotenberg/gotenberg",
        "CVE_ID": "CVE-2020-14160",
        "Problem_Type": "CWE-918",
        "Description": "An SSRF vulnerability in Gotenberg through 6.2.1 exists in the remote URL to PDF conversion, which results in a remote attacker being able to read local files or fetch intranet resources.",
        "URL": "https://github.com/gotenberg/gotenberg/pull/319",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc1ad1668877dd8b1ef32624aae49094d58cd183",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gotenberg/gotenberg",
        "CVE_ID": "CVE-2020-14161",
        "Problem_Type": "CWE-79",
        "Description": "It is possible to inject HTML and/or JavaScript in the HTML to PDF conversion in Gotenberg through 6.2.1 via the /convert/html endpoint.",
        "URL": "https://github.com/gotenberg/gotenberg/pull/319",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc1ad1668877dd8b1ef32624aae49094d58cd183",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gotify/server",
        "CVE_ID": "CVE-2022-46181",
        "Problem_Type": "CWE-79",
        "Description": "Gotify server is a simple server for sending and receiving messages in real-time per WebSocket. Versions prior to 2.2.2 contain an XSS vulnerability that allows authenticated users to upload .html files. An attacker could execute client side scripts **if** another user opened a link. The attacker could potentially take over the account of the user that clicked the link. The Gotify UI won't natively expose such a malicious link, so an attacker has to get the user to open the malicious link in a context outside of Gotify. The vulnerability has been fixed in version 2.2.2. As a workaround, you can block access to non image files via a reverse proxy in the `./image` directory.",
        "URL": "https://github.com/gotify/server/pull/534",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "022603ddf92d43d23dd3f70ad263591e24defda5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradio-app/gradio",
        "CVE_ID": "CVE-2022-24770",
        "Problem_Type": "CWE-1236",
        "Description": "`gradio` is an open source framework for building interactive machine learning models and demos. Prior to version 2.8.11, `gradio` suffers from Improper Neutralization of Formula Elements in a CSV File. The `gradio` library has a flagging functionality which saves input/output data into a CSV file on the developer's computer. This can allow a user to save arbitrary text into the CSV file, such as commands. If a program like MS Excel opens such a file, then it automatically runs these commands, which could lead to arbitrary commands running on the user's computer. The problem has been patched as of `2.8.11`, which escapes the saved csv with single quotes. As a workaround, avoid opening csv files generated by `gradio` with Excel or similar spreadsheet programs.",
        "URL": "https://github.com/gradio-app/gradio/pull/817",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80fea89117358ee105973453fdc402398ae20239",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradle/gradle",
        "CVE_ID": "CVE-2019-11065",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gradle versions from 1.4 to 5.3.1 use an insecure HTTP URL to download dependencies when the built-in JavaScript or CoffeeScript Gradle plugins are used. Dependency artifacts could have been maliciously compromised by a MITM attack against the ajax.googleapis.com web site.",
        "URL": "https://github.com/gradle/gradle/pull/8927",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "0c3f23a1e915067e7d7e3c2000c12ea0e6cf8437",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradle/gradle",
        "CVE_ID": "CVE-2019-15052",
        "Problem_Type": "CWE-522",
        "Description": "The HTTP client in Gradle before 5.6 sends authentication credentials originally destined for the configured host. If that host returns a 30x redirect, Gradle also sends those credentials to all subsequent hosts that the request redirects to. This is similar to CVE-2018-1000007.",
        "URL": "https://github.com/gradle/gradle/pull/10176",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de6f4f158e410571e6b2647dd2282492ea949846",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradle/gradle",
        "CVE_ID": "CVE-2019-16370",
        "Problem_Type": "CWE-327",
        "Description": "The PGP signing plugin in Gradle before 6.0 relies on the SHA-1 algorithm, which might allow an attacker to replace an artifact with a different one that has the same SHA-1 message digest, a related issue to CVE-2005-4900.",
        "URL": "https://github.com/gradle/gradle/pull/10543",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "425b2b7a50cd84106a77cdf1ab665c89c6b14d2f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradle/gradle",
        "CVE_ID": "CVE-2021-29428",
        "Problem_Type": "CWE-378",
        "Description": "In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the \"sticky\" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the \"sticky\" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",
        "URL": "https://github.com/gradle/gradle/pull/15240",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0f43f2cea1c3eaf822020907520ee2d6a9fdbed",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gradle/gradle",
        "CVE_ID": "CVE-2021-29428",
        "Problem_Type": "CWE-378",
        "Description": "In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the \"sticky\" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the \"sticky\" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",
        "URL": "https://github.com/gradle/gradle/pull/15654",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e47983a8d620edffdbf0e4a7191011a9b1c9799f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grahamgilbert/Crypt-Server",
        "CVE_ID": "CVE-2022-29589",
        "Problem_Type": "CWE-79",
        "Description": "Crypt Server before 3.3.0 allows XSS in the index view. This is related to serial, computername, and username.",
        "URL": "https://github.com/grahamgilbert/Crypt-Server/pull/109",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b7ba6606f785577fb359d32d6972adaea76bcb7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "graphhopper/graphhopper",
        "CVE_ID": "CVE-2021-23408",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package com.graphhopper:graphhopper-web-bundle before 3.2, from 4.0-pre1 and before 4.0. The URL parser could be tricked into adding or modifying properties of Object.prototype using a constructor or __proto__ payload.",
        "URL": "https://github.com/graphhopper/graphhopper/pull/2370",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6e98cf8119314c9f28134c492b12eb878ef7754c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "graphql-java/graphql-java",
        "CVE_ID": "CVE-2023-28867",
        "Problem_Type": "CWE-770",
        "Description": "In GraphQL Java (aka graphql-java) before 20.1, an attacker can send a crafted GraphQL query that causes stack consumption. The fixed versions are 20.1, 19.4, 18.4, 17.5, and 0.0.0-2023-03-20T01-49-44-80e3135.",
        "URL": "https://github.com/graphql-java/graphql-java/pull/3112",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "80e313597d0d9b03f9d28f4de4dbfa118705360f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gravitl/netmaker",
        "CVE_ID": "CVE-2023-32077",
        "Problem_Type": "CWE-798",
        "Description": "Netmaker makes networks with WireGuard. Prior to versions 0.17.1 and 0.18.6, hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints. The issue is patched in 0.17.1 and fixed in 0.18.6.  If users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone who is using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
        "URL": "https://github.com/gravitl/netmaker/pull/2170",
        "Tag": "['Patch']",
        "fix_commit_hash": "9362c39a9a822f0e07361aa7c77af2610597e657",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gravitl/netmaker",
        "CVE_ID": "CVE-2023-32078",
        "Problem_Type": "CWE-639",
        "Description": "Netmaker makes networks with WireGuard. An Insecure Direct Object Reference (IDOR) vulnerability was found in versions prior to 0.17.1 and 0.18.6 in the user update function. By specifying another user's username, it was possible to update the other user's password. The issue is patched in 0.17.1 and fixed in 0.18.6. If Users are using 0.17.1, they should run `docker pull gravitl/netmaker:v0.17.1` and `docker-compose up -d`. This will switch them to the patched users. If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later. As a workaround, someone using version 0.17.1 can pull the latest docker image of the backend and restart the server.",
        "URL": "https://github.com/gravitl/netmaker/pull/2158",
        "Tag": "['Patch']",
        "fix_commit_hash": "b3be57c65bf0bbfab43b66853c8e3637a43e2839",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Graylog2/graylog2-server",
        "CVE_ID": "CVE-2018-11650",
        "Problem_Type": "CWE-79",
        "Description": "Graylog before v2.4.4 has an XSS security issue with unescaped text in notifications, related to toastr and util/UserNotification.js.",
        "URL": "https://github.com/Graylog2/graylog2-server/pull/4727",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "469c92377bec77c3ba10113895fd45f84ebabdfc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "greenbone/gsa",
        "CVE_ID": "CVE-2018-25016",
        "Problem_Type": "CWE-74",
        "Description": "Greenbone Security Assistant (GSA) before 7.0.3 and Greenbone OS (GOS) before 5.0.0 allow Host Header Injection.",
        "URL": "https://github.com/greenbone/gsa/pull/318",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fff55cae13946fb3ebfe14eba70245472e460baa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "greenbone/gsa",
        "CVE_ID": "CVE-2019-25047",
        "Problem_Type": "CWE-79",
        "Description": "Greenbone Security Assistant (GSA) before 8.0.2 and Greenbone OS (GOS) before 5.0.10 allow XSS during 404 URL handling in gsad.",
        "URL": "https://github.com/greenbone/gsa/pull/1603",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fcd690477ebf2a501873a8a48e8c325de15bbf8a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "GreycLab/CImg",
        "CVE_ID": "CVE-2022-1325",
        "Problem_Type": "CWE-770",
        "Description": "A flaw was found in Clmg, where with the help of a maliciously crafted pandore or bmp file with modified dx and dy header field values it is possible to trick the application into allocating huge buffer sizes like 64 Gigabyte upon reading the file from disk or from a virtual buffer.",
        "URL": "https://github.com/GreycLab/CImg/pull/348",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5801be3d268c93e724b1395019463d86e660e04b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grpc/grpc-node",
        "CVE_ID": "CVE-2020-7768",
        "Problem_Type": "CWE-1321",
        "Description": "The package grpc before 1.24.4; the package @grpc/grpc-js before 1.1.8 are vulnerable to Prototype Pollution via loadPackageDefinition.",
        "URL": "https://github.com/grpc/grpc-node/pull/1606",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "23b3795a4d54a16ac3dd40a7d3c65f3ba33943ef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grpc/grpc-node",
        "CVE_ID": "CVE-2020-7768",
        "Problem_Type": "CWE-1321",
        "Description": "The package grpc before 1.24.4; the package @grpc/grpc-js before 1.1.8 are vulnerable to Prototype Pollution via loadPackageDefinition.",
        "URL": "https://github.com/grpc/grpc-node/pull/1605",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "afe4c3e0825d0b0256a0f994c7087115d508c580",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2017-7860",
        "Problem_Type": "CWE-787",
        "Description": "Google gRPC before 2017-02-22 has an out-of-bounds write caused by a heap-based buffer overflow related to the parse_unix function in core/ext/client_channel/parse_address.c.",
        "URL": "https://github.com/grpc/grpc/pull/9833",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f13f4898612c136cff1f2d04a91c25b6d4b694a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2017-7861",
        "Problem_Type": "CWE-787",
        "Description": "Google gRPC before 2017-02-22 has an out-of-bounds write related to the gpr_free function in core/lib/support/alloc.c.",
        "URL": "https://github.com/grpc/grpc/pull/9833",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f13f4898612c136cff1f2d04a91c25b6d4b694a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2017-8359",
        "Problem_Type": "CWE-787",
        "Description": "Google gRPC before 2017-03-29 has an out-of-bounds write caused by a heap-based use-after-free related to the grpc_call_destroy function in core/lib/surface/call.c.",
        "URL": "https://github.com/grpc/grpc/pull/10353",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6544a2d5d9ecdb64214da1d228886a7d15bbf5c7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "grpc/grpc",
        "CVE_ID": "CVE-2017-9431",
        "Problem_Type": "CWE-787",
        "Description": "Google gRPC before 2017-04-05 has an out-of-bounds write caused by a heap-based buffer overflow related to core/lib/iomgr/error.c.",
        "URL": "https://github.com/grpc/grpc/pull/10492",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "55a61e43b9abe9c95a6e401239bdd02a48deb587",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Gunivers/Gipsy",
        "CVE_ID": "CVE-2023-30621",
        "Problem_Type": "CWE-78",
        "Description": "Gipsy is a multi-purpose discord bot which aim to be as modular and user-friendly as possible. In versions prior to 1.3 users can run command on the host machine with sudoer permission. The `!ping` command when provided with an IP or hostname used to run a bash `ping <IP>` without verification that the IP or hostname was legitimate. This command was executed with root permissions and may lead to arbitrary command injection on the host server. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/Gunivers/Gipsy/pull/24",
        "Tag": "['Patch']",
        "fix_commit_hash": "cace86fb092ddc8f835b70091542856ea98da43c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "h2database/h2database",
        "CVE_ID": "CVE-2021-23463",
        "Problem_Type": "CWE-611",
        "Description": "The package com.h2database:h2 from 1.4.198 and before 2.0.202 are vulnerable to XML External Entity (XXE) Injection via the org.h2.jdbc.JdbcSQLXML class object, when it receives parsed string data from org.h2.jdbc.JdbcResultSet.getSQLXML() method. If it executes the getSource() method when the parameter is DOMSource.class it will trigger the vulnerability.",
        "URL": "https://github.com/h2database/h2database/pull/3199",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7966835035614cddee23a8f01364c9cea46494eb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "h2o/h2o",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/h2o/h2o/pull/3291",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "28fe15117b909588bf14269a0e1c6ec4548579fe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "haakonnessjoen/MAC-Telnet",
        "CVE_ID": "CVE-2016-7115",
        "Problem_Type": "CWE-119",
        "Description": "Buffer overflow in the handle_packet function in mactelnet.c in the client in MAC-Telnet 0.4.3 and earlier allows remote TELNET servers to execute arbitrary code via a long string in an MT_CPTYPE_PASSSALT control packet.",
        "URL": "https://github.com/haakonnessjoen/MAC-Telnet/pull/20",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b69d11727d4f0f8cf719c79e3fb700f55ca03e9a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "haf/DotNetZip.Semverd",
        "CVE_ID": "CVE-2018-1002205",
        "Problem_Type": "CWE-22",
        "Description": "DotNetZip.Semvered before 1.11.0 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
        "URL": "https://github.com/haf/DotNetZip.Semverd/pull/121",
        "Tag": "['Patch']",
        "fix_commit_hash": "55d2c13c0cc64654e18fcdd0038fdb3d7458e366",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hapijs/inert",
        "CVE_ID": "CVE-2014-10068",
        "Problem_Type": "CWE-22",
        "Description": "The inert directory handler in inert node module before 1.1.1 always allows files in hidden directories to be served, even when `showHidden` is false.",
        "URL": "https://github.com/hapijs/inert/pull/15",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8f99f94da4cb08e8032eda984761c3f111e3e82",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "harrystech/dynosaur-rails",
        "CVE_ID": "CVE-2015-10083",
        "Problem_Type": "CWE-287",
        "Description": "A vulnerability has been found in harrystech Dynosaur-Rails and classified as critical. Affected by this vulnerability is the function basic_auth of the file app/controllers/application_controller.rb. The manipulation leads to improper authentication. This product does not use versioning. This is why information about affected and unaffected releases are unavailable. The patch is named 04b223813f0e336aab50bff140d0f5889c31dbec. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-221503.",
        "URL": "https://github.com/harrystech/dynosaur-rails/pull/11",
        "Tag": "['Patch']",
        "fix_commit_hash": "25c20fbdebdb7cb1f96a59bf2acac7d68b3a0d29",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "harvesthq/chosen",
        "CVE_ID": "CVE-2018-25050",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in Harvest Chosen up to 1.8.6. Affected by this issue is the function AbstractChosen of the file coffee/lib/abstract-chosen.coffee. The manipulation of the argument group_label leads to cross site scripting. The attack may be launched remotely. Upgrading to version 1.8.7 is able to address this issue. The name of the patch is 77fd031d541e77510268d1041ed37798fdd1017e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216956.",
        "URL": "https://github.com/harvesthq/chosen/pull/2997",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "77fd031d541e77510268d1041ed37798fdd1017e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hashicorp/go-getter",
        "CVE_ID": "CVE-2022-29810",
        "Problem_Type": "CWE-532",
        "Description": "The Hashicorp go-getter library before 1.5.11 does not redact an SSH key from a URL query parameter.",
        "URL": "https://github.com/hashicorp/go-getter/pull/348",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f5cbbb458c1482e08133d07ebd70a3810e6e4d92",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hashicorp/go-slug",
        "CVE_ID": "CVE-2020-29529",
        "Problem_Type": "CWE-22",
        "Description": "HashiCorp go-slug up to 0.4.3 did not fully protect against directory traversal while unpacking tar archives, and protections could be bypassed with specific constructions of multiple symlinks. Fixed in 0.5.0.",
        "URL": "https://github.com/hashicorp/go-slug/pull/12",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "28cafc59c8da6126a3ae94dfa84181df4073454f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hashicorp/vagrant",
        "CVE_ID": "CVE-2022-42717",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "An issue was discovered in Hashicorp Packer before 2.3.1. The recommended sudoers configuration for Vagrant on Linux is insecure. If the host has been configured according to this documentation, non-privileged users on the host can leverage a wildcard in the sudoers configuration to execute arbitrary commands as root.",
        "URL": "https://github.com/hashicorp/vagrant/pull/12910",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "716694e7b8d2780eebe756bd597fa18e33d2ec71",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "havok89/Hoosk",
        "CVE_ID": "CVE-2020-16610",
        "Problem_Type": "CWE-352",
        "Description": "Hoosk Codeigniter CMS before 1.7.2 is affected by a Cross Site Request Forgery (CSRF). When an attacker induces authenticated admin user to a malicious web page, any accounts can be deleted without admin user's intention.",
        "URL": "https://github.com/havok89/Hoosk/pull/56",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0282b55952861e1050935ae8ae352731f70b432c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "heartexlabs/label-studio",
        "CVE_ID": "CVE-2022-36551",
        "Problem_Type": "CWE-918",
        "Description": "A Server Side Request Forgery (SSRF) in the Data Import module in Heartex - Label Studio Community Edition versions 1.5.0 and earlier allows an authenticated user to access arbitrary files on the system. Furthermore, self-registration is enabled by default in these versions of Label Studio enabling a remote attacker to create a new account and then exploit the SSRF.",
        "URL": "https://github.com/heartexlabs/label-studio/pull/2840",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "501142cb815ac964b0c600c491885b67386870c2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hedgedoc/hedgedoc",
        "CVE_ID": "CVE-2021-39175",
        "Problem_Type": "CWE-79",
        "Description": "HedgeDoc is a platform to write and share markdown. In versions prior to 1.9.0, an unauthenticated attacker can inject arbitrary JavaScript into the speaker-notes of the slide-mode feature by embedding an iframe hosting the malicious code into the slides or by embedding the HedgeDoc instance into another page. The problem is patched in version 1.9.0. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/hedgedoc/hedgedoc/pull/1369",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d082ae827512103abe6d36cbc2f69c51acecd68",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hedgedoc/hedgedoc",
        "CVE_ID": "CVE-2021-39175",
        "Problem_Type": "CWE-79",
        "Description": "HedgeDoc is a platform to write and share markdown. In versions prior to 1.9.0, an unauthenticated attacker can inject arbitrary JavaScript into the speaker-notes of the slide-mode feature by embedding an iframe hosting the malicious code into the slides or by embedding the HedgeDoc instance into another page. The problem is patched in version 1.9.0. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/hedgedoc/hedgedoc/pull/1513",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fc1aec6cb4bf5d0078e50c006f5c7caea796384d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hedgedoc/hedgedoc",
        "CVE_ID": "CVE-2021-39175",
        "Problem_Type": "CWE-79",
        "Description": "HedgeDoc is a platform to write and share markdown. In versions prior to 1.9.0, an unauthenticated attacker can inject arbitrary JavaScript into the speaker-notes of the slide-mode feature by embedding an iframe hosting the malicious code into the slides or by embedding the HedgeDoc instance into another page. The problem is patched in version 1.9.0. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/hedgedoc/hedgedoc/pull/1375",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "960f5c1b22233b0829f8b313e5592ebd59cd2593",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hpcng/singularity",
        "CVE_ID": "CVE-2020-15229",
        "Problem_Type": "CWE-22",
        "Description": "Singularity (an open source container platform) from version 3.1.1 through 3.6.3 has a vulnerability. Due to insecure handling of path traversal and the lack of path sanitization within `unsquashfs`, it is possible to overwrite/create any files on the host filesystem during the extraction with a crafted squashfs filesystem. The extraction occurs automatically for unprivileged (either installation or with `allow setuid = no`) run of Singularity when a user attempt to run an image which is a local SIF image or a single file containing a squashfs filesystem and is coming from remote sources `library://` or `shub://`. Image build is also impacted in a more serious way as it can be used by a root user, allowing an attacker to overwrite/create files leading to a system compromise, so far bootstrap methods `library`, `shub` and `localimage` are triggering the squashfs extraction. This issue is addressed in Singularity 3.6.4. All users are advised to upgrade to 3.6.4 especially if they use Singularity mainly for building image as root user. There is no solid workaround except to temporary avoid to use unprivileged mode with single file images in favor of sandbox images instead. Regarding image build, temporary avoid to build from `library` and `shub` sources and as much as possible use `--fakeroot` or a VM for that.",
        "URL": "https://github.com/hpcng/singularity/pull/5611",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eba3dea260b117198fdb6faf41f2482ab2f8d53e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "HubSpot/jinjava",
        "CVE_ID": "CVE-2018-18893",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Jinjava before 2.4.6 does not block the getClass method, related to com/hubspot/jinjava/el/ext/JinjavaBeanELResolver.java.",
        "URL": "https://github.com/HubSpot/jinjava/pull/230",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c13927db0fb7bb3b567469f125be8000f8cbf601",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hughsk/flat",
        "CVE_ID": "CVE-2020-36632",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability, which was classified as critical, was found in hughsk flat up to 5.0.0. This affects the function unflatten of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to initiate the attack remotely. Upgrading to version 5.0.1 is able to address this issue. The name of the patch is 20ef0ef55dfa028caddaedbcb33efbdb04d18e13. It is recommended to upgrade the affected component. The identifier VDB-216777 was assigned to this vulnerability.",
        "URL": "https://github.com/hughsk/flat/pull/106",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "20ef0ef55dfa028caddaedbcb33efbdb04d18e13",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hunterhacker/jdom",
        "CVE_ID": "CVE-2021-33813",
        "Problem_Type": "CWE-611",
        "Description": "An XXE issue in SAXBuilder in JDOM through 2.0.6 allows attackers to cause a denial of service via a crafted HTTP request.",
        "URL": "https://github.com/hunterhacker/jdom/pull/188",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2a25ee409d09fb3eed75a4272ab8540c5261f960",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hydralabs/pyamf",
        "CVE_ID": "CVE-2015-8549",
        "Problem_Type": "CWE-611",
        "Description": "XML external entity (XXE) vulnerability in PyAMF before 0.8.0 allows remote attackers to cause a denial of service or read arbitrary files via a crafted Action Message Format (AMF) payload.",
        "URL": "https://github.com/hydralabs/pyamf/pull/58",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "71fbe9480904c98c484e36291af95f78954031c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hydrian/TTRSS-Auth-LDAP",
        "CVE_ID": "CVE-2015-10027",
        "Problem_Type": "CWE-74",
        "Description": "A vulnerability, which was classified as problematic, has been found in hydrian TTRSS-Auth-LDAP. Affected by this issue is some unknown functionality of the component Username Handler. The manipulation leads to ldap injection. Upgrading to version 2.0b1 is able to address this issue. The patch is identified as a7f7a5a82d9202a5c40d606a5c519ba61b224eb8. It is recommended to upgrade the affected component. VDB-217622 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/hydrian/TTRSS-Auth-LDAP/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a7f7a5a82d9202a5c40d606a5c519ba61b224eb8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hyperhq/hyperstart",
        "CVE_ID": "CVE-2018-9862",
        "Problem_Type": "CWE-838",
        "Description": "util.c in runV 1.0.0 for Docker mishandles a numeric username, which allows attackers to obtain root access by leveraging the presence of an initial numeric value on an /etc/passwd line, and then issuing a \"docker exec\" command with that value in the -u argument, a similar issue to CVE-2016-3697.",
        "URL": "https://github.com/hyperhq/hyperstart/pull/348",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7670d5e82291ebab819070db105d9d4dc26a4c6d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hyperium/hyper",
        "CVE_ID": "CVE-2022-31394",
        "Problem_Type": "CWE-770",
        "Description": "Hyperium Hyper before 0.14.19 does not allow for customization of the max_header_list_size method in the H2 third-party software, allowing attackers to perform HTTP2 attacks.",
        "URL": "https://github.com/hyperium/hyper/pull/2828",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a32658c1ae7f1261fa234a767df963be4fc63521",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hyperledger/fabric",
        "CVE_ID": "CVE-2021-43667",
        "Problem_Type": "CWE-476",
        "Description": "A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.1.0. This bug can be leveraged by constructing a message whose payload is nil and sending this message with the method 'forwardToLeader'. This bug has been admitted and fixed by the developers of Fabric. If leveraged, any leader node will crash.",
        "URL": "https://github.com/hyperledger/fabric/pull/2844",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fbf7b936f4347b9e0d398adb8e41a47d2b4a1497",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hyperledger/fabric",
        "CVE_ID": "CVE-2022-45196",
        "Problem_Type": "CWE-670",
        "Description": "Hyperledger Fabric 2.3 allows attackers to cause a denial of service (orderer crash) by repeatedly sending a crafted channel tx with the same Channel name. NOTE: the official Fabric with Raft prevents exploitation via a locking mechanism and a check for names that already exist.",
        "URL": "https://github.com/hyperledger/fabric/pull/2934",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa8d06b735f82b01ae123e46a0bc21ba831d1b0d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "i3thuan5/TuiTse-TsuSin",
        "CVE_ID": "CVE-2024-23341",
        "Problem_Type": "CWE-79",
        "Description": "TuiTse-TsuSin is a package for organizing the comparative corpus of Taiwanese Chinese characters and Roman characters, and extracting sentences of the Taiwanese Chinese characters and the Roman characters. Prior to version 1.3.2, when using `tuitse_html` without quoting the input, there is a html injection vulnerability. Version 1.3.2 contains a patch for the issue. As a workaround, sanitize Taigi input with HTML quotation.",
        "URL": "https://github.com/i3thuan5/TuiTse-TsuSin/pull/22",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9d21d99d7cfcd7c42aade251fab98ec102e730ea",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "igniterealtime/Openfire",
        "CVE_ID": "CVE-2019-15488",
        "Problem_Type": "CWE-79",
        "Description": "Ignite Realtime Openfire before 4.4.1 has reflected XSS via an LDAP setup test.",
        "URL": "https://github.com/igniterealtime/Openfire/pull/1441",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "04cbd2b801d1fd92238deb64820aeb623b77afcb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "igniterealtime/Openfire",
        "CVE_ID": "CVE-2019-18393",
        "Problem_Type": "CWE-22",
        "Description": "PluginServlet.java in Ignite Realtime Openfire through 4.4.2 does not ensure that retrieved files are located under the Openfire home directory, aka a directory traversal vulnerability.",
        "URL": "https://github.com/igniterealtime/Openfire/pull/1498",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cb900749d4e836b32cc6e2cc41cda17f252b977d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "igniterealtime/Openfire",
        "CVE_ID": "CVE-2019-18394",
        "Problem_Type": "CWE-918",
        "Description": "A Server Side Request Forgery (SSRF) vulnerability in FaviconServlet.java in Ignite Realtime Openfire through 4.4.2 allows attackers to send arbitrary HTTP GET requests.",
        "URL": "https://github.com/igniterealtime/Openfire/pull/1497",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e6a9db94f684056ced0d5e5a4291c89488fbeecc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ILIAS-eLearning/ILIAS",
        "CVE_ID": "CVE-2023-36485",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The workflow-engine of ILIAS before 7.23 and 8 before 8.3 allows remote authenticated users to run arbitrary system commands on the application server as the application user via a malicious BPMN2 workflow definition file.",
        "URL": "https://github.com/ILIAS-eLearning/ILIAS/pull/5987",
        "Tag": "['Patch']",
        "fix_commit_hash": "99d93d2f55e3239c760e170476e3f1281e471027",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ILIAS-eLearning/ILIAS",
        "CVE_ID": "CVE-2023-36485",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The workflow-engine of ILIAS before 7.23 and 8 before 8.3 allows remote authenticated users to run arbitrary system commands on the application server as the application user via a malicious BPMN2 workflow definition file.",
        "URL": "https://github.com/ILIAS-eLearning/ILIAS/pull/5988",
        "Tag": "['Patch']",
        "fix_commit_hash": "a1638be381a732c13257b3f6e27355495f03df42",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ILIAS-eLearning/ILIAS",
        "CVE_ID": "CVE-2023-36486",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The workflow-engine of ILIAS before 7.23 and 8 before 8.3 allows remote authenticated users to run arbitrary system commands on the application server as the application user by uploading a workflow definition file with a malicious filename.",
        "URL": "https://github.com/ILIAS-eLearning/ILIAS/pull/5987",
        "Tag": "['Patch']",
        "fix_commit_hash": "99d93d2f55e3239c760e170476e3f1281e471027",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ILIAS-eLearning/ILIAS",
        "CVE_ID": "CVE-2023-36486",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The workflow-engine of ILIAS before 7.23 and 8 before 8.3 allows remote authenticated users to run arbitrary system commands on the application server as the application user by uploading a workflow definition file with a malicious filename.",
        "URL": "https://github.com/ILIAS-eLearning/ILIAS/pull/5988",
        "Tag": "['Patch']",
        "fix_commit_hash": "a1638be381a732c13257b3f6e27355495f03df42",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "image-rs/image",
        "CVE_ID": "CVE-2019-16138",
        "Problem_Type": "CWE-416",
        "Description": "An issue was discovered in the image crate before 0.21.3 for Rust, affecting the HDR image format decoder. Vec::set_len is called on an uninitialized vector, leading to a use-after-free and arbitrary code execution.",
        "URL": "https://github.com/image-rs/image/pull/985",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "214e6467a1e32e690f08f0b34dea540625b6724c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Inist-CNRS/ezmaster",
        "CVE_ID": "CVE-2019-16767",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The admin sys mode is now conditional and dedicated for the special case. By default, since ezmaster@5.2.11 no instance (container) is launched with advanced capabilities (not launched as root)",
        "URL": "https://github.com/Inist-CNRS/ezmaster/pull/51",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d329624ccdcf02d1c7cb3799f0397300f27c9160",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "inunosinsi/soycms",
        "CVE_ID": "CVE-2020-15189",
        "Problem_Type": "CWE-434",
        "Description": "SOY CMS 3.0.2 and earlier is affected by Remote Code Execution (RCE) using Unrestricted File Upload. Cross-Site Scripting(XSS) vulnerability that was used in CVE-2020-15183 can be used to increase impact by redirecting the administrator to access a specially crafted page. This vulnerability is caused by insecure configuration in elFinder. This is fixed in version 3.0.2.328.",
        "URL": "https://github.com/inunosinsi/soycms/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "41ec431007b702e77fb1e73d28e2d147ef8c844e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "InvoicePlane/InvoicePlane",
        "CVE_ID": "CVE-2017-18217",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in InvoicePlane before 1.5.5. It was observed that the Email address and Web address parameters are vulnerable to Cross Site Scripting, related to application/modules/clients/views/view.php, application/modules/invoices/views/view.php, and application/modules/quotes/views/view.php.",
        "URL": "https://github.com/InvoicePlane/InvoicePlane/pull/551",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7b64642943cd37011b85f0f316c9b4fb1b787ae4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "InvoicePlane/InvoicePlane",
        "CVE_ID": "CVE-2017-18217",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in InvoicePlane before 1.5.5. It was observed that the Email address and Web address parameters are vulnerable to Cross Site Scripting, related to application/modules/clients/views/view.php, application/modules/invoices/views/view.php, and application/modules/quotes/views/view.php.",
        "URL": "https://github.com/InvoicePlane/InvoicePlane/pull/542",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ea36045a6b99e8d768f55f55610177b39418f5bf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "InvoicePlane/InvoicePlane",
        "CVE_ID": "CVE-2021-29023",
        "Problem_Type": "CWE-307",
        "Description": "InvoicePlane 1.5.11 doesn't have any rate-limiting for password reset and the reset token is generated using a weak mechanism that is predictable.",
        "URL": "https://github.com/InvoicePlane/InvoicePlane/pull/767",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4fe13c6edc76667221d3b6e3dc93b5a24d57d95",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "InvoicePlane/InvoicePlane",
        "CVE_ID": "CVE-2021-29024",
        "Problem_Type": "CWE-552",
        "Description": "In InvoicePlane 1.5.11 a misconfigured web server allows unauthenticated directory listing and file download. Allowing an attacker to directory traversal and download files suppose to be private without authentication.",
        "URL": "https://github.com/InvoicePlane/InvoicePlane/pull/754",
        "Tag": "['Patch']",
        "fix_commit_hash": "ebbf7e437a1d3b1bd357c22c90054a2a581ff4f7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ionic-team/cordova-plugin-ios-keychain",
        "CVE_ID": "CVE-2018-1000123",
        "Problem_Type": "CWE-532",
        "Description": "Ionic Team Cordova plugin iOS Keychain version before commit 18233ca25dfa92cca018b9c0935f43f78fd77fbf contains an Information Exposure Through Log Files (CWE-532) vulnerability in CDVKeychain.m that can result in login, password and other sensitive data leakage. This attack appear to be exploitable via Attacker must have access to victim's iOS logs. This vulnerability appears to have been fixed in after commit 18233ca25dfa92cca018b9c0935f43f78fd77fbf.",
        "URL": "https://github.com/ionic-team/cordova-plugin-ios-keychain/pull/29/commits/980230645c8ea3b531b85401de5e4bca0f860e42#diff-936020291e4c2115faff0171f20672a4",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18233ca25dfa92cca018b9c0935f43f78fd77fbf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "IonicaBizau/node-gry",
        "CVE_ID": "CVE-2020-36650",
        "Problem_Type": "CWE-77",
        "Description": "A vulnerability, which was classified as critical, was found in IonicaBizau node-gry up to 5.x. This affects an unknown part. The manipulation leads to command injection. Upgrading to version 6.0.0 is able to address this issue. The patch is named 5108446c1e23960d65e8b973f1d9486f9f9dbd6c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-218019.",
        "URL": "https://github.com/IonicaBizau/node-gry/pull/22",
        "Tag": "['Patch']",
        "fix_commit_hash": "e1f67dba2f9f54bf282e58f77499305957d309ef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ipfs/blog",
        "CVE_ID": "CVE-2020-12821",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gossipsub 1.0 does not properly resist invalid message spam, such as an eclipse attack or a sybil attack.",
        "URL": "https://github.com/ipfs/blog/pull/450",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe1e58d8a68d19f77fcde6ea4a05f0bb6738cec5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ipfs/go-ipfs",
        "CVE_ID": "CVE-2020-26283",
        "Problem_Type": "CWE-116",
        "Description": "go-ipfs is an open-source golang implementation of IPFS which is a global, versioned, peer-to-peer filesystem. In go-ipfs before version 0.8.0, control characters are not escaped from console output. This can result in hiding input from the user which could result in the user taking an unknown, malicious action. This is fixed in version 0.8.0.",
        "URL": "https://github.com/ipfs/go-ipfs/pull/7831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fb0a9acd2d8288bd1028c3219a420de62a09683a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ipti/br.tag",
        "CVE_ID": "CVE-2022-4444",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in ipti br.tag. It has been declared as problematic. Affected by this vulnerability is an unknown functionality. The manipulation leads to cross site scripting. The attack can be launched remotely. Upgrading to version 2.13.0 is able to address this issue. The name of the patch is 7e311be22d3a0a1b53e61cb987ba13d681d85f06. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215431.",
        "URL": "https://github.com/ipti/br.tag/pull/131",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91084ebf894746c3f7bab97cd721fdcc18bc67d8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "irssi/irssi",
        "CVE_ID": "CVE-2019-5882",
        "Problem_Type": "CWE-416",
        "Description": "Irssi 1.1.x before 1.1.2 has a use after free when hidden lines are expired from the scroll buffer.",
        "URL": "https://github.com/irssi/irssi/pull/948",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "011372ecdd966531c1fd6638a3c5b239c27112ed",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "isomorphic-git/isomorphic-git",
        "CVE_ID": "CVE-2021-30483",
        "Problem_Type": "CWE-22",
        "Description": "isomorphic-git before 1.8.2 allows Directory Traversal via a crafted repository.",
        "URL": "https://github.com/isomorphic-git/isomorphic-git/pull/1339",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1316820b5665346414f9bd1287d4701f9cf77727",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "it-novum/openITCOCKPIT",
        "CVE_ID": "CVE-2023-36663",
        "Problem_Type": "CWE-89",
        "Description": "it-novum openITCOCKPIT (aka open IT COCKPIT) 4.6.4 before 4.6.5 allows SQL Injection (by authenticated users) via the sort parameter of the API interface.",
        "URL": "https://github.com/it-novum/openITCOCKPIT/pull/1519/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "c3df5bc6313ba772e324fb96fd1b1c01b83a93bd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "J-onasJones/McWebserver",
        "CVE_ID": "CVE-2022-39221",
        "Problem_Type": "CWE-22",
        "Description": "McWebserver mod runs a simple HTTP server alongside the Minecraft server in seperate threads. Path traversal in McWebserver Minecraft Mod for Fabric and Quilt up to and including 0.1.2.1 and McWebserver Minecraft Mod for Forge up to and including 0.1.1 allows all files, accessible by the program, to be read by anyone via HTTP request. Version 0.2.0 with patches are released to both platforms (Fabric and Quilt, Forge). As a workaround, the McWebserver mod can be disabled by removing the file from the `mods` directory.",
        "URL": "https://github.com/J-onasJones/McWebserver/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4225c9f139beb822b3b4132112fdfd2518d216f9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jackaudio/jack2",
        "CVE_ID": "CVE-2019-13351",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "posix/JackSocket.cpp in libjack in JACK2 1.9.1 through 1.9.12 (as distributed with alsa-plugins 1.1.7 and later) has a \"double file descriptor close\" issue during a failed connection attempt when jackd2 is not running. Exploitation success depends on multithreaded timing of that double close, which can result in unintended information disclosure, crashes, or file corruption due to having the wrong file associated with the file descriptor.",
        "URL": "https://github.com/jackaudio/jack2/pull/480",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dad4b5702782eef3bd66e3c3f4fefaaae3571208",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jamesmartin/inline_svg",
        "CVE_ID": "CVE-2020-36644",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability has been found in jamesmartin Inline SVG up to 1.7.1 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file lib/inline_svg/action_view/helpers.rb of the component URL Parameter Handler. The manipulation of the argument filename leads to cross site scripting. The attack can be launched remotely. Upgrading to version 1.7.2 is able to address this issue. The identifier of the patch is f5363b351508486021f99e083c92068cf2943621. It is recommended to upgrade the affected component. The identifier VDB-217597 was assigned to this vulnerability.",
        "URL": "https://github.com/jamesmartin/inline_svg/pull/117",
        "Tag": "['Patch']",
        "fix_commit_hash": "7c303a0fe123b8b917fbe287f8c3471706c9937e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jameswlane/status-board",
        "CVE_ID": "CVE-2019-15478",
        "Problem_Type": "CWE-79",
        "Description": "Status Board 1.1.81 has reflected XSS via logic.ts.",
        "URL": "https://github.com/jameswlane/status-board/pull/949",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a02138ce8695b1fe0dbf4d9211fbedb1c3b77b0e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jameswlane/status-board",
        "CVE_ID": "CVE-2019-15479",
        "Problem_Type": "CWE-79",
        "Description": "Status Board 1.1.81 has reflected XSS via dashboard.ts.",
        "URL": "https://github.com/jameswlane/status-board/pull/948",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d9795aecbecae2a100ed78ac09f25535e08d631",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jan-rodriguez/PictureThisWebServer",
        "CVE_ID": "CVE-2015-10055",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in PictureThisWebServer and classified as critical. This issue affects the function router.post of the file routes/user.js. The manipulation of the argument username/password leads to sql injection. The patch is named 68b9dc346e88b494df00d88c7d058e96820e1479. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218399.",
        "URL": "https://github.com/jan-rodriguez/PictureThisWebServer/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7b18cf37849689f2fe49bcaf2d8422676d5a5449",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "janeczku/calibre-web",
        "CVE_ID": "CVE-2020-12627",
        "Problem_Type": "CWE-798",
        "Description": "Calibre-Web 0.6.6 allows authentication bypass because of the 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' hardcoded secret key.",
        "URL": "https://github.com/janeczku/calibre-web/pull/1337",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e3246fd751e2eb6227d5ec883ce39c29be1721ad",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "janl/node-jsonpointer",
        "CVE_ID": "CVE-2021-23807",
        "Problem_Type": "CWE-843",
        "Description": "This affects the package jsonpointer before 5.0.0. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.",
        "URL": "https://github.com/janl/node-jsonpointer/pull/51",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a0345f3550cd9c4d89f33b126390202b89510ad4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jaredhanson/passport-oauth2",
        "CVE_ID": "CVE-2021-41580",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The passport-oauth2 package before 1.6.1 for Node.js mishandles the error condition of failure to obtain an access token. This is exploitable in certain use cases where an OAuth identity provider uses an HTTP 200 status code for authentication-failure error reports, and an application grants authorization upon simply receiving the access token (i.e., does not try to use the token). NOTE: the passport-oauth2 vendor does not consider this a passport-oauth2 vulnerability",
        "URL": "https://github.com/jaredhanson/passport-oauth2/pull/144",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4f8f86cbed25414902405e16391857a2c8a5e4ea",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jaredhanson/passport",
        "CVE_ID": "CVE-2022-25896",
        "Problem_Type": "CWE-384",
        "Description": "This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.",
        "URL": "https://github.com/jaredhanson/passport/pull/900",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42630cbd1ffd44d146ff96f0a4be6f3c12f81d75",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Jason2605/AdminPanel",
        "CVE_ID": "CVE-2020-13433",
        "Problem_Type": "CWE-89",
        "Description": "Jason2605 AdminPanel 4.0 allows SQL Injection via the editPlayer.php hidden parameter.",
        "URL": "https://github.com/Jason2605/AdminPanel/pull/41",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e7fa96823c1c0c504afbaf125f93ecc56c7cd286",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "JefferyHus/es6-crawler-detect",
        "CVE_ID": "CVE-2020-28501",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "This affects the package es6-crawler-detect before 3.1.3. No limitation of user agent string length supplied to regex operators.",
        "URL": "https://github.com/JefferyHus/es6-crawler-detect/pull/27",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "33acc7d201ef42a053edba43c49de6a85a7cba4c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jekyll/jekyll",
        "CVE_ID": "CVE-2018-17567",
        "Problem_Type": "CWE-59",
        "Description": "Jekyll through 3.6.2, 3.7.x through 3.7.3, and 3.8.x through 3.8.3 allows attackers to access arbitrary files by specifying a symlink in the \"include\" key in the \"_config.yml\" file.",
        "URL": "https://github.com/jekyll/jekyll/pull/7224",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4108ddb05c404355f78c99b81aa44b58fbed87ef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jellyfin/jellyfin",
        "CVE_ID": "CVE-2022-35909",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In Jellyfin before 10.8, the /users endpoint has incorrect access control for admin functionality.",
        "URL": "https://github.com/jellyfin/jellyfin/pull/7569/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a7abdca47a1d749aac9cb5315fda6fbcab8c6e3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jellyfin/jellyfin",
        "CVE_ID": "CVE-2022-35910",
        "Problem_Type": "CWE-79",
        "Description": "In Jellyfin before 10.8, stored XSS allows theft of an admin access token.",
        "URL": "https://github.com/jellyfin/jellyfin/pull/7569/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a7abdca47a1d749aac9cb5315fda6fbcab8c6e3b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jellyfin/jellyfin",
        "CVE_ID": "CVE-2023-30626",
        "Problem_Type": "CWE-22",
        "Description": "Jellyfin is a free-software media system. Versions starting with 10.8.0 and prior to 10.8.10 and prior have a directory traversal vulnerability inside the `ClientLogController`, specifically `/ClientLog/Document`. When combined with a cross-site scripting vulnerability (CVE-2023-30627), this can result in file write and arbitrary code execution. Version 10.8.10 has a patch for this issue. There are no known workarounds.",
        "URL": "https://github.com/jellyfin/jellyfin/pull/5918",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "0ee43f897b4c06c23cb741e85908527a46687769",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "JeremyCrookshank/IP_History_Logs",
        "CVE_ID": "CVE-2019-6979",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in the User IP History Logs (aka IP_History_Logs) plugin 1.0.2 for MyBB. There is XSS via the admin/modules/tools/ip_history_logs.php useragent field.",
        "URL": "https://github.com/JeremyCrookshank/IP_History_Logs/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4d45b47eaf9bb93f224a7b589aa41bb8f41fe04f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jerryscript-project/jerryscript",
        "CVE_ID": "CVE-2021-41751",
        "Problem_Type": "CWE-120",
        "Description": "Buffer overflow vulnerability in file ecma-builtin-array-prototype.c:909 in function ecma_builtin_array_prototype_object_slice in Jerryscript before commit e1ce7dd7271288be8c0c8136eea9107df73a8ce2 on Oct 20, 2021.",
        "URL": "https://github.com/jerryscript-project/jerryscript/pull/4797",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4912e3b739f4d00e51a46d883b020d2208be28a2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jertel/elastalert2",
        "CVE_ID": "CVE-2022-38792",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The exotel (aka exotel-py) package in PyPI as of 0.1.6 includes a code execution backdoor inserted by a third party.",
        "URL": "https://github.com/jertel/elastalert2/pull/931",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f8fdc1d53fb5751365e016a4b0e6311dec17f1d3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jessfraz/pastebinit",
        "CVE_ID": "CVE-2018-25059",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability was found in pastebinit up to 0.2.2 and classified as problematic. Affected by this issue is the function pasteHandler of the file server.go. The manipulation of the argument r.URL.Path leads to path traversal. Upgrading to version 0.2.3 is able to address this issue. The name of the patch is 1af2facb6d95976c532b7f8f82747d454a092272. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217040.",
        "URL": "https://github.com/jessfraz/pastebinit/pull/3",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1af2facb6d95976c532b7f8f82747d454a092272",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jfm-so/piWallet",
        "CVE_ID": "CVE-2017-20168",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in jfm-so piWallet. It has been rated as critical. Affected by this issue is some unknown functionality of the file api.php. The manipulation of the argument key leads to sql injection. The patch is identified as b420f8c4cbe7f06a34d1b05e90ee5cdfe0aa83bb. It is recommended to apply a patch to fix this issue. VDB-218006 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/jfm-so/piWallet/pull/23",
        "Tag": "['Patch']",
        "fix_commit_hash": "d568c83e6300f51670796b259ee18fd71eaaf676",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jgarzik/univalue",
        "CVE_ID": "CVE-2019-18936",
        "Problem_Type": "CWE-674",
        "Description": "UniValue::read() in UniValue before 1.0.5 allow attackers to cause a denial of service (the class internal data reaches an inconsistent state) via input data that triggers an error.",
        "URL": "https://github.com/jgarzik/univalue/pull/58",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "097fb0fadc626a855b14c2075d8c13cdca583a3e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jhy/jsoup",
        "CVE_ID": "CVE-2015-6748",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site scripting (XSS) vulnerability in jsoup before 1.8.3.",
        "URL": "https://github.com/jhy/jsoup/pull/582",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4edb78991f8d0bf87dafde5e01ccd8922065c9b2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jitsi/jitsi-meet",
        "CVE_ID": "CVE-2021-33506",
        "Problem_Type": "CWE-276",
        "Description": "jitsi-meet-prosody in Jitsi Meet before 2.0.5963-1 does not ensure that restrict_room_creation is set by default. This can allow an attacker to circumvent conference moderation.",
        "URL": "https://github.com/jitsi/jitsi-meet/pull/9252/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "689bb3f22679edcb1c5bc0966012a822da1c18bc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jitsi/jitsi-meet",
        "CVE_ID": "CVE-2021-39215",
        "Problem_Type": "CWE-287",
        "Description": "Jitsi Meet is an open source video conferencing application. In versions prior to 2.0.5963, a Prosody module allows the use of symmetrical algorithms to validate JSON web tokens. This means that tokens generated by arbitrary sources can be used to gain authorization to protected rooms. This issue is fixed in Jitsi Meet 2.0.5963. There are no known workarounds aside from updating.",
        "URL": "https://github.com/jitsi/jitsi-meet/pull/9319",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "81c4e9a7fdc938523379e6a8c1fd9656f712c13c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jmespath/jmespath.rb",
        "CVE_ID": "CVE-2022-32511",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "jmespath.rb (aka JMESPath for Ruby) before 1.6.1 uses JSON.load in a situation where JSON.parse is preferable.",
        "URL": "https://github.com/jmespath/jmespath.rb/pull/55",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8841280053a9d9a0c90f36223f926c8b9e4ec49",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "johndatserakis/file-upload-with-preview",
        "CVE_ID": "CVE-2021-23439",
        "Problem_Type": "CWE-79",
        "Description": "This affects the package file-upload-with-preview before 4.2.0. A file containing malicious JavaScript code in the name can be uploaded (a user needs to be tricked into uploading such a file).",
        "URL": "https://github.com/johndatserakis/file-upload-with-preview/pull/40/files?file-filters%5B%5D=.js&hide-deleted-files=true%23diff-fe47b243de17419c0daa22cd785cd754baed60cf3679d3da1d6fe006f9f4a7f0R174",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "da5f2242981afa832c4337935b8a5eff3ea192c7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "johnpapa/generator-hottowel",
        "CVE_ID": "CVE-2016-15025",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, was found in generator-hottowel 0.0.11. Affected is an unknown function of the file app/templates/src/server/_app.js of the component 404 Error Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is c17092fd4103143a9ddab93c8983ace8bf174396. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-221484.",
        "URL": "https://github.com/johnpapa/generator-hottowel/pull/174",
        "Tag": "['Patch']",
        "fix_commit_hash": "72ec2e22ebe5334ad7532a78fc52da0a0a31fced",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jonschlinkert/kind-of",
        "CVE_ID": "CVE-2019-20149",
        "Problem_Type": "CWE-668",
        "Description": "ctorName in index.js in kind-of v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by 'constructor': {'name':'Symbol'}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
        "URL": "https://github.com/jonschlinkert/kind-of/pull/31",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1df992ce6d5a1292048e5fe9c52c5382f941ee0b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jonschlinkert/set-value",
        "CVE_ID": "CVE-2021-23440",
        "Problem_Type": "CWE-843",
        "Description": "This affects the package set-value before <2.0.1, >=3.0.0 <4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
        "URL": "https://github.com/jonschlinkert/set-value/pull/33",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b057b1b8cf986746b27a145629d593c6bb4ab7c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jooby-project/jooby",
        "CVE_ID": "CVE-2019-15477",
        "Problem_Type": "CWE-79",
        "Description": "Jooby before 1.6.4 has XSS via the default error handler.",
        "URL": "https://github.com/jooby-project/jooby/pull/1368",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "27b4af283de1a2c2a6b0530039b46eef75ddf655",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "JoomGallery/JoomGallery",
        "CVE_ID": "CVE-2018-25067",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability, which was classified as critical, was found in JoomGallery up to 3.3.3. This affects an unknown part of the file administrator/components/com_joomgallery/views/config/tmpl/default.php of the component Image Sort Handler. The manipulation leads to sql injection. Upgrading to version 3.3.4 is able to address this issue. The identifier of the patch is dc414ee954e849082260f8613e15a1c1e1d354a1. It is recommended to upgrade the affected component. The identifier VDB-217569 was assigned to this vulnerability.",
        "URL": "https://github.com/JoomGallery/JoomGallery/pull/122",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "dc414ee954e849082260f8613e15a1c1e1d354a1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jordansissel/ruby-arr-pm",
        "CVE_ID": "CVE-2022-39224",
        "Problem_Type": "CWE-78",
        "Description": "Arr-pm is an RPM reader/writer library written in Ruby. Versions prior to 0.0.12 are subject to OS command injection resulting in shell execution if the RPM contains a malicious \"payload compressor\" field. This vulnerability impacts the `extract` and `files` methods of the `RPM::File` class of this library. Version 0.0.12 patches these issues. A workaround for this issue is to ensure any RPMs being processed contain valid/known payload compressor values such as gzip, bzip2, xz, zstd, and lzma. The payload compressor field in an rpm can be checked by using the rpm command line tool.",
        "URL": "https://github.com/jordansissel/ruby-arr-pm/pull/15",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "efddd459916ece7acf2cc5e34fd49131e7e7d6e5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jordansissel/ruby-arr-pm",
        "CVE_ID": "CVE-2022-39224",
        "Problem_Type": "CWE-78",
        "Description": "Arr-pm is an RPM reader/writer library written in Ruby. Versions prior to 0.0.12 are subject to OS command injection resulting in shell execution if the RPM contains a malicious \"payload compressor\" field. This vulnerability impacts the `extract` and `files` methods of the `RPM::File` class of this library. Version 0.0.12 patches these issues. A workaround for this issue is to ensure any RPMs being processed contain valid/known payload compressor values such as gzip, bzip2, xz, zstd, and lzma. The payload compressor field in an rpm can be checked by using the rpm command line tool.",
        "URL": "https://github.com/jordansissel/ruby-arr-pm/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c608f8603ebf40e439c45185fd4f755a3a1e088b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "joseconti/WangGuard",
        "CVE_ID": "CVE-2017-20177",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in WangGuard Plugin 1.8.0 on WordPress. Affected by this issue is the function wangguard_users_info of the file wangguard-user-info.php of the component WGG User List Handler. The manipulation of the argument userIP leads to cross site scripting. The attack may be launched remotely. The patch is identified as 88414951e30773c8d2ec13b99642688284bf3189. It is recommended to apply a patch to fix this issue. VDB-220214 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/joseconti/WangGuard/pull/14",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "c1681eba6d7e8c17ff1393c6ee7edb043a01091f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jpadilla/pyjwt",
        "CVE_ID": "CVE-2017-11424",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key` does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion attacks against users using the PKCS1 PEM encoded public keys, which would allow an attacker to craft JWTs from scratch.",
        "URL": "https://github.com/jpadilla/pyjwt/pull/277",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eb3f58103831630f499e331de6e6938c84945a79",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jpuri/react-draft-wysiwyg",
        "CVE_ID": "CVE-2021-31712",
        "Problem_Type": "CWE-79",
        "Description": "react-draft-wysiwyg (aka React Draft Wysiwyg) before 1.14.6 allows a javascript: URi in a Link Target of the link decorator in decorators/Link/index.js when a draft is shared across users, leading to XSS.",
        "URL": "https://github.com/jpuri/react-draft-wysiwyg/pull/1104",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "541a76510e8d2629a8d13474d92edbe5431d6727",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jquery/jquery",
        "CVE_ID": "CVE-2015-9251",
        "Problem_Type": "CWE-79",
        "Description": "jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",
        "URL": "https://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b078a62013782c7424a4a61a240c23c4c0b42614",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jquery/jquery",
        "CVE_ID": "CVE-2015-9251",
        "Problem_Type": "CWE-79",
        "Description": "jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",
        "URL": "https://github.com/jquery/jquery/pull/2588",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b078a62013782c7424a4a61a240c23c4c0b42614",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jrspruitt/ubi_reader",
        "CVE_ID": "CVE-2022-4572",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability, which was classified as problematic, has been found in UBI Reader up to 0.8.0. Affected by this issue is the function ubireader_extract_files of the file ubireader/ubifs/output.py of the component UBIFS File Handler. The manipulation leads to path traversal. The attack may be launched remotely. Upgrading to version 0.8.5 is able to address this issue. The name of the patch is d5d68e6b1b9f7070c29df5f67fc060f579ae9139. It is recommended to upgrade the affected component. VDB-216146 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/jrspruitt/ubi_reader/pull/57",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5d68e6b1b9f7070c29df5f67fc060f579ae9139",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jrspruitt/ubi_reader",
        "CVE_ID": "CVE-2023-0591",
        "Problem_Type": "CWE-22",
        "Description": "\nubireader_extract_files is vulnerable to path traversal when run against specifically crafted UBIFS files, allowing the attacker to overwrite files outside of the extraction directory (provided the process has write access to that file or directory).\n\nThis is due to the fact that a node name (dent_node.name) is considered trusted and joined to the extraction directory path during processing, then the node content is written to that joined path. By crafting a malicious UBIFS file with node names holding path traversal payloads (e.g. ../../tmp/outside.txt), it's possible to force ubi_reader to write outside of the extraction directory.\n\n\n\nThis issue affects ubi-reader before 0.8.5.\n\n",
        "URL": "https://github.com/jrspruitt/ubi_reader/pull/57",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5d68e6b1b9f7070c29df5f67fc060f579ae9139",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "json-c/json-c",
        "CVE_ID": "CVE-2020-12762",
        "Problem_Type": "CWE-787",
        "Description": "json-c through 0.14 has an integer overflow and out-of-bounds write via a large JSON file, as demonstrated by printbuf_memappend.",
        "URL": "https://github.com/json-c/json-c/pull/592",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31243e4d1204ef78be34b0fcae73221eee6b83be",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "julianhille/MuhammaraJS",
        "CVE_ID": "CVE-2022-39381",
        "Problem_Type": "CWE-476",
        "Description": "Muhammara is a node module with c/cpp bindings to modify PDF with js for node or electron (based/replacement on/of galkhana/hummusjs). The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another. This issue has been patched in 2.6.0 for muhammara and not at all for hummus. As a workaround, do not process files from untrusted sources.",
        "URL": "https://github.com/julianhille/MuhammaraJS/pull/194",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e89da1025b91b423d06ed2383514f4fa16616894",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "julianhille/MuhammaraJS",
        "CVE_ID": "CVE-2022-41957",
        "Problem_Type": "CWE-690",
        "Description": "Muhammara is a node module with c/cpp bindings to modify PDF with JavaScript for node or electron. The package muhammara before 2.6.2 and from 3.0.0 and before 3.3.0, as well as all versions of muhammara's predecessor package hummus, are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed. The issue has been patched in muhammara version 3.4.0 and the fix has been backported to version 2.6.2. As a workaround, do not process files from untrusted sources. If using hummus, replace the package with muhammara.",
        "URL": "https://github.com/julianhille/MuhammaraJS/pull/235",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e990adca29dc50f2a2194b93f4d0c547a90f8fb6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "julianhille/MuhammaraJS",
        "CVE_ID": "CVE-2022-41957",
        "Problem_Type": "CWE-690",
        "Description": "Muhammara is a node module with c/cpp bindings to modify PDF with JavaScript for node or electron. The package muhammara before 2.6.2 and from 3.0.0 and before 3.3.0, as well as all versions of muhammara's predecessor package hummus, are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed. The issue has been patched in muhammara version 3.4.0 and the fix has been backported to version 2.6.2. As a workaround, do not process files from untrusted sources. If using hummus, replace the package with muhammara.",
        "URL": "https://github.com/julianhille/MuhammaraJS/pull/238",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ec9736d1aca597075d17b28493b9af72515d344b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jupyterhub/firstuseauthenticator",
        "CVE_ID": "CVE-2021-41194",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "FirstUseAuthenticator is a JupyterHub authenticator that helps new users set their password on their first login to JupyterHub. When JupyterHub is used with FirstUseAuthenticator, a vulnerability in versions prior to 1.0.0 allows unauthorized access to any user's account if `create_users=True` and the username is known or guessed. One may upgrade to version 1.0.0 or apply a patch manually to mitigate the vulnerability. For those who cannot upgrade, there is no complete workaround, but a partial mitigation exists. One can disable user creation with `c.FirstUseAuthenticator.create_users = False`, which will only allow login with fully normalized usernames for already existing users prior to jupyterhub-firstuserauthenticator 1.0.0. If any users have never logged in with their normalized username (i.e. lowercase), they will still be vulnerable until a patch or upgrade occurs.",
        "URL": "https://github.com/jupyterhub/firstuseauthenticator/pull/38.patch",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d36ac9707f0c341b4906545477689d4fa7715a6c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jupyterhub/firstuseauthenticator",
        "CVE_ID": "CVE-2021-41194",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "FirstUseAuthenticator is a JupyterHub authenticator that helps new users set their password on their first login to JupyterHub. When JupyterHub is used with FirstUseAuthenticator, a vulnerability in versions prior to 1.0.0 allows unauthorized access to any user's account if `create_users=True` and the username is known or guessed. One may upgrade to version 1.0.0 or apply a patch manually to mitigate the vulnerability. For those who cannot upgrade, there is no complete workaround, but a partial mitigation exists. One can disable user creation with `c.FirstUseAuthenticator.create_users = False`, which will only allow login with fully normalized usernames for already existing users prior to jupyterhub-firstuserauthenticator 1.0.0. If any users have never logged in with their normalized username (i.e. lowercase), they will still be vulnerable until a patch or upgrade occurs.",
        "URL": "https://github.com/jupyterhub/firstuseauthenticator/pull/38",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d36ac9707f0c341b4906545477689d4fa7715a6c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "jupyter/notebook",
        "CVE_ID": "CVE-2018-21030",
        "Problem_Type": "CWE-79",
        "Description": "Jupyter Notebook before 5.5.0 does not use a CSP header to treat served files as belonging to a separate origin. Thus, for example, an XSS payload can be placed in an SVG document.",
        "URL": "https://github.com/jupyter/notebook/pull/3341",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e321c80776542b8d6f3411af16f9e21e51e27687",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "justdan96/tsMuxer",
        "CVE_ID": "CVE-2021-35344",
        "Problem_Type": "CWE-787",
        "Description": "tsMuxer v2.6.16 was discovered to contain a heap-based buffer overflow via the function BitStreamReader::getCurVal in bitStream.h.",
        "URL": "https://github.com/justdan96/tsMuxer/pull/439/commits/3a889a37b5b74a45025aca13ebda394b8f706ef3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8028fb8449f6f1c702b7f70369c889e8633378a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "justdan96/tsMuxer",
        "CVE_ID": "CVE-2021-45860",
        "Problem_Type": "CWE-190",
        "Description": "An integer overflow in DTSStreamReader::findFrame() of tsMuxer git-2678966 allows attackers to cause a Denial of Service (DoS) via a crafted file.",
        "URL": "https://github.com/justdan96/tsMuxer/pull/511",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "435f15224c6b4d53b84a6f23b7ca745cc4cb8b96",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "justdan96/tsMuxer",
        "CVE_ID": "CVE-2021-45861",
        "Problem_Type": "CWE-617",
        "Description": "There is an Assertion `num <= INT_BIT' failed at BitStreamReader::skipBits in /bitStream.h:132 of tsMuxer git-c6a0277.",
        "URL": "https://github.com/justdan96/tsMuxer/pull/481",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8d7d35573aaf0d54f890e129605af57aecd5c574",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "justdan96/tsMuxer",
        "CVE_ID": "CVE-2021-45863",
        "Problem_Type": "CWE-787",
        "Description": "tsMuxer git-2678966 was discovered to contain a heap-based buffer overflow via the function HevcUnit::updateBits in hevc.cpp.",
        "URL": "https://github.com/justdan96/tsMuxer/pull/512",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2448c36f809bcb45625911fb8433f85ef878c718",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "justinas/nosurf",
        "CVE_ID": "CVE-2020-36564",
        "Problem_Type": "CWE-20",
        "Description": "Due to improper validation of caller input, validation is silently disabled if the provided expected token is malformed, causing any user supplied token to be considered valid.",
        "URL": "https://github.com/justinas/nosurf/pull/60",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4d86df7a4affa1fa50ab39fb09aac56c3ce9c314",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kakwa/ldapcherry",
        "CVE_ID": "CVE-2019-25095",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, was found in kakwa LdapCherry up to 0.x. Affected is an unknown function of the component URL Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 1.0.0 is able to address this issue. The patch is identified as 6f98076281e9452fdb1adcd1bcbb70a6f968ade9. It is recommended to upgrade the affected component. VDB-217434 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/kakwa/ldapcherry/pull/16",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "636400b75fbe4d7b29012cfd657b937fb249d903",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kata-containers/agent",
        "CVE_ID": "CVE-2020-2023",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kata Containers doesn't restrict containers from accessing the guest's root filesystem device. Malicious containers can exploit this to gain code execution on the guest and masquerade as the kata-agent. This issue affects Kata Containers 1.11 versions earlier than 1.11.1; Kata Containers 1.10 versions earlier than 1.10.5; and Kata Containers 1.9 and earlier versions.",
        "URL": "https://github.com/kata-containers/agent/pull/792",
        "Tag": "['Patch']",
        "fix_commit_hash": "33fa379ade4629750d9492c9c045e2500d698fbf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kata-containers/runtime",
        "CVE_ID": "CVE-2020-2023",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kata Containers doesn't restrict containers from accessing the guest's root filesystem device. Malicious containers can exploit this to gain code execution on the guest and masquerade as the kata-agent. This issue affects Kata Containers 1.11 versions earlier than 1.11.1; Kata Containers 1.10 versions earlier than 1.10.5; and Kata Containers 1.9 and earlier versions.",
        "URL": "https://github.com/kata-containers/runtime/pull/2487",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d54723a5c4af5c1488af16b59a055b54ca136050",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kata-containers/runtime",
        "CVE_ID": "CVE-2020-2023",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kata Containers doesn't restrict containers from accessing the guest's root filesystem device. Malicious containers can exploit this to gain code execution on the guest and masquerade as the kata-agent. This issue affects Kata Containers 1.11 versions earlier than 1.11.1; Kata Containers 1.10 versions earlier than 1.10.5; and Kata Containers 1.9 and earlier versions.",
        "URL": "https://github.com/kata-containers/runtime/pull/2477",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6bed2a724d3944f2226c9abd03c0b8718dab4be1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kata-containers/runtime",
        "CVE_ID": "CVE-2020-2024",
        "Problem_Type": "CWE-59",
        "Description": "An improper link resolution vulnerability affects Kata Containers versions prior to 1.11.0. Upon container teardown, a malicious guest can trick the kata-runtime into unmounting any mount point on the host and all mount points underneath it, potentiality resulting in a host DoS.",
        "URL": "https://github.com/kata-containers/runtime/pull/2475",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e66dce1bc7ff9c8632486e3636d08827508c1ca6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kata-containers/runtime",
        "CVE_ID": "CVE-2020-2025",
        "Problem_Type": "CWE-281",
        "Description": "Kata Containers before 1.11.0 on Cloud Hypervisor persists guest filesystem changes to the underlying image file on the host. A malicious guest can overwrite the image file to gain control of all subsequent guest VMs. Since Kata Containers uses the same VM image file with all VMMs, this issue may also affect QEMU and Firecracker based guests.",
        "URL": "https://github.com/kata-containers/runtime/pull/2487",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d54723a5c4af5c1488af16b59a055b54ca136050",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kbase/metrics",
        "CVE_ID": "CVE-2022-4860",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in KBase Metrics. It has been classified as critical. This affects the function upload_user_data of the file source/daily_cron_jobs/methods_upload_user_stats.py. The manipulation leads to sql injection. The patch is named 959dfb6b05991e30b0fa972a1ecdcaae8e1dae6d. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217059.",
        "URL": "https://github.com/kbase/metrics/pull/77",
        "Tag": "['Patch']",
        "fix_commit_hash": "0e93458e8796f47d0adbfbec78eed7cb4adbe841",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "KBNLresearch/digger",
        "CVE_ID": "CVE-2021-44556",
        "Problem_Type": "CWE-611",
        "Description": "National Library of the Netherlands digger < 6697d1269d981e35e11f240725b16401b5ce3db5 is affected by a XML External Entity (XXE) vulnerability. Since XML parsing resolves external entities, a malicious XML stream could leak internal files and/or cause a DoS.",
        "URL": "https://github.com/KBNLresearch/digger/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e88008d81898eb6a85935f8acef53b82899b9fb5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "KBNLresearch/multiNER",
        "CVE_ID": "CVE-2021-44557",
        "Problem_Type": "CWE-611",
        "Description": "National Library of the Netherlands multiNER <= c0440948057afc6e3d6b4903a7c05e666b94a3bc is affected by an XML External Entity (XXE) vulnerability in multiNER/ner.py. Since XML parsing resolves external entities, a malicious XML stream could leak internal files and/or cause a DoS.",
        "URL": "https://github.com/KBNLresearch/multiNER/pull/3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7dd92e261e863d13c7488f34d6b7cf0fae610234",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "keepkey/keepkey-firmware",
        "CVE_ID": "CVE-2023-27892",
        "Problem_Type": "CWE-125",
        "Description": "Insufficient length checks in the ShapeShift KeepKey hardware wallet firmware before 7.7.0 allow a global buffer overflow via crafted messages. Flaws in cf_confirmExecTx() in ethereum_contracts.c can be used to reveal arbitrary microcontroller memory on the device screen or crash the device. With physical access to a PIN-unlocked device, attackers can extract the BIP39 mnemonic secret from the hardware wallet.",
        "URL": "https://github.com/keepkey/keepkey-firmware/pull/337",
        "Tag": "['Patch']",
        "fix_commit_hash": "2d9f039b017455131dd905e016dfb44ac5b5a83d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kelektiv/node.bcrypt.js",
        "CVE_ID": "CVE-2020-7689",
        "Problem_Type": "CWE-190",
        "Description": "Data is truncated wrong when its length is greater than 255 bytes.",
        "URL": "https://github.com/kelektiv/node.bcrypt.js/pull/806",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d9e54b4bc154b8fe51c90d154fff18d3e3234979",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kelektiv/node.bcrypt.js",
        "CVE_ID": "CVE-2020-7689",
        "Problem_Type": "CWE-190",
        "Description": "Data is truncated wrong when its length is greater than 255 bytes.",
        "URL": "https://github.com/kelektiv/node.bcrypt.js/pull/807",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5916a468f32e8d56518c0f222cf5581f37aea825",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "keycloak/keycloak-documentation",
        "CVE_ID": "CVE-2017-12161",
        "Problem_Type": "CWE-640",
        "Description": "It was found that keycloak before 3.4.2 final would permit misuse of a client-side /etc/hosts entry to spoof a URL in a password reset request. An attacker could use this flaw to craft a malicious password reset request and gain a valid reset token, leading to information disclosure or further attacks.",
        "URL": "https://github.com/keycloak/keycloak-documentation/pull/268/commits/a2b58aadee42af2c375b72e86dffc2cf23cc3770",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "887bcb6caa3feb7e260817527a0f440e8e9aa5c7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "keycloak/keycloak",
        "CVE_ID": "CVE-2021-3632",
        "Problem_Type": "CWE-287",
        "Description": "A flaw was found in Keycloak. This vulnerability allows anyone to register a new security device or key when there is not a device already registered for any user by using the WebAuthn password-less login flow.",
        "URL": "https://github.com/keycloak/keycloak/pull/8203",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "65480cb5a11630909c086f79d396004499fbd1e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2022-39382",
        "Problem_Type": "CWE-74",
        "Description": "Keystone is a headless CMS for Node.js \u00c2\u2014 built with GraphQL and React.`@keystone-6/core@3.0.0 || 3.0.1` users that use `NODE_ENV` to trigger security-sensitive functionality in their production builds are vulnerable to `NODE_ENV` being inlined to `\"development\"` for user code, irrespective of what your environment variables. If you do not use `NODE_ENV` in your user code to trigger security-sensitive functionality, you are not impacted by this vulnerability. Any dependencies that use `NODE_ENV` to trigger particular behaviors (optimizations, security or otherwise) should still respect your environment's configured `NODE_ENV` variable. The application's dependencies, as found in `node_modules` (including `@keystone-6/core`), are typically not compiled as part of this process, and thus should be unaffected. We have tested this assumption by verifying that `NODE_ENV=production yarn keystone start` still uses secure cookies when using `statelessSessions`. This vulnerability has been fixed in @keystone-6/core@3.0.2, regression tests have been added for this vulnerability in #8063.",
        "URL": "https://github.com/keystonejs/keystone/pull/8063",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d07f20ab3f22ba3a5c34f309018014bcae6340a7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "keystonejs/keystone",
        "CVE_ID": "CVE-2022-39382",
        "Problem_Type": "CWE-74",
        "Description": "Keystone is a headless CMS for Node.js \u00c2\u2014 built with GraphQL and React.`@keystone-6/core@3.0.0 || 3.0.1` users that use `NODE_ENV` to trigger security-sensitive functionality in their production builds are vulnerable to `NODE_ENV` being inlined to `\"development\"` for user code, irrespective of what your environment variables. If you do not use `NODE_ENV` in your user code to trigger security-sensitive functionality, you are not impacted by this vulnerability. Any dependencies that use `NODE_ENV` to trigger particular behaviors (optimizations, security or otherwise) should still respect your environment's configured `NODE_ENV` variable. The application's dependencies, as found in `node_modules` (including `@keystone-6/core`), are typically not compiled as part of this process, and thus should be unaffected. We have tested this assumption by verifying that `NODE_ENV=production yarn keystone start` still uses secure cookies when using `statelessSessions`. This vulnerability has been fixed in @keystone-6/core@3.0.2, regression tests have been added for this vulnerability in #8063.",
        "URL": "https://github.com/keystonejs/keystone/pull/8031/",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4ec75f388db8157f757307b828354caabd3bb669",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kiwix/libkiwix",
        "CVE_ID": "CVE-2022-27920",
        "Problem_Type": "CWE-79",
        "Description": "libkiwix 10.0.0 and 10.0.1 allows XSS in the built-in webserver functionality via the search suggestions URL parameter. This is fixed in 10.1.0.",
        "URL": "https://github.com/kiwix/libkiwix/pull/721",
        "Tag": "['Issue Tracking', 'Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "f893777dc03f73e1f89fc3e92667a1587de6759a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "KnpLabs/snappy",
        "CVE_ID": "CVE-2023-28115",
        "Problem_Type": "CWE-502",
        "Description": "Snappy is a PHP library allowing thumbnail, snapshot or PDF generation from a url or a html page. Prior to version 1.4.2, Snappy is vulnerable to PHAR deserialization due to a lack of checking on the protocol before passing it into the `file_exists()` function. If an attacker can upload files of any type to the server he can pass in the phar:// protocol to unserialize the uploaded file and instantiate arbitrary PHP objects. This can lead to remote code execution especially when snappy is used with frameworks with documented POP chains like Laravel/Symfony vulnerable developer code. If a user can control the output file from the `generateFromHtml()` function, it will invoke deserialization. This vulnerability is capable of remote code execution if Snappy is used with frameworks or developer code with vulnerable POP chains. It has been fixed in version 1.4.2.",
        "URL": "https://github.com/KnpLabs/snappy/pull/469",
        "Tag": "['Patch']",
        "fix_commit_hash": "b66f79334421c26d9c244427963fa2d92980b5d3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kogmbh/WebODF",
        "CVE_ID": "CVE-2014-9716",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site scripting (XSS) vulnerability in WebODF before 0.5.4 allows remote attackers to inject arbitrary web script or HTML via a file name.",
        "URL": "https://github.com/kogmbh/WebODF/pull/851",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "60a1269c33a65e40d34902f4f875cbec56d58ab3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kogmbh/WebODF",
        "CVE_ID": "CVE-2015-3012",
        "Problem_Type": "CWE-79",
        "Description": "Multiple cross-site scripting (XSS) vulnerabilities in WebODF before 0.5.5, as used in ownCloud, allow remote attackers to inject arbitrary web script or HTML via a (1) style or (2) font name or (3) javascript or (4) data URI.",
        "URL": "https://github.com/kogmbh/WebODF/pull/850/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "d35829a90bf1a3b362cbd3dc537864595ada58b8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kogmbh/WebODF",
        "CVE_ID": "CVE-2015-3012",
        "Problem_Type": "CWE-79",
        "Description": "Multiple cross-site scripting (XSS) vulnerabilities in WebODF before 0.5.5, as used in ownCloud, allow remote attackers to inject arbitrary web script or HTML via a (1) style or (2) font name or (3) javascript or (4) data URI.",
        "URL": "https://github.com/kogmbh/WebODF/pull/849",
        "Tag": "['Patch']",
        "fix_commit_hash": "4b06c2874707a96bf2c850744b4cfcb7eee82d45",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Kong/lua-multipart",
        "CVE_ID": "CVE-2020-36661",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability was found in Kong lua-multipart 0.5.8-1. It has been declared as problematic. This vulnerability affects the function is_header of the file src/multipart.lua. The manipulation leads to inefficient regular expression complexity. Upgrading to version 0.5.9-1 is able to address this issue. The patch is identified as d632e5df43a2928fd537784a99a79dec288bf01b. It is recommended to upgrade the affected component. VDB-220642 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/Kong/lua-multipart/pull/34",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "d632e5df43a2928fd537784a99a79dec288bf01b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "korzio/djv",
        "CVE_ID": "CVE-2020-28464",
        "Problem_Type": "CWE-94",
        "Description": "This affects the package djv before 2.1.4. By controlling the schema file, an attacker can run arbitrary JavaScript code on the victim machine.",
        "URL": "https://github.com/korzio/djv/pull/98/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c2a5adef47a5b6cda3fb5c57b4e73311b89ed852",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Kozea/Radicale",
        "CVE_ID": "CVE-2015-8747",
        "Problem_Type": "CWE-20",
        "Description": "The multifilesystem storage backend in Radicale before 1.1 allows remote attackers to read or write to arbitrary files via a crafted component name.",
        "URL": "https://github.com/Kozea/Radicale/pull/343",
        "Tag": "['Patch']",
        "fix_commit_hash": "18c88642fb19ee1480690e51fff9605ecc6fdab5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Kozea/Radicale",
        "CVE_ID": "CVE-2015-8748",
        "Problem_Type": "CWE-264",
        "Description": "Radicale before 1.1 allows remote authenticated users to bypass owner_write and owner_only limitations via regex metacharacters in the user name, as demonstrated by \".*\".",
        "URL": "https://github.com/Kozea/Radicale/pull/341",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "1109973a925970353dfd13c6df8de0e4e446d983",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Kozea/Radicale",
        "CVE_ID": "CVE-2016-1505",
        "Problem_Type": "CWE-21",
        "Description": "The filesystem storage backend in Radicale before 1.1 on Windows allows remote attackers to read or write to arbitrary files via a crafted path, as demonstrated by /c:/file/ignore.",
        "URL": "https://github.com/Kozea/Radicale/pull/343",
        "Tag": "['Patch']",
        "fix_commit_hash": "18c88642fb19ee1480690e51fff9605ecc6fdab5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kphrx/pleroma",
        "CVE_ID": "CVE-2023-5588",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability was found in kphrx pleroma. It has been classified as problematic. This affects the function Pleroma.Emoji.Pack of the file lib/pleroma/emoji/pack.ex. The manipulation of the argument name leads to path traversal. The complexity of an attack is rather high. The exploitability is told to be difficult. This product does not use versioning. This is why information about affected and unaffected releases are unavailable. The patch is named 2c795094535537a8607cc0d3b7f076a609636f40. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-242187.",
        "URL": "https://github.com/kphrx/pleroma/pull/197",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6c5796782ba003d8a05788990b91ce4c60da436a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "krb5/krb5",
        "CVE_ID": "CVE-2017-7562",
        "Problem_Type": "CWE-287",
        "Description": "An authentication bypass flaw was found in the way krb5's certauth interface before 1.16.1 handled the validation of client certificates. A remote attacker able to communicate with the KDC could potentially use this flaw to impersonate arbitrary principals under rare and erroneous circumstances.",
        "URL": "https://github.com/krb5/krb5/pull/694",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c5d50888aab554239fd51306e79c5213833c898",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubeedge/kubeedge",
        "CVE_ID": "CVE-2022-31073",
        "Problem_Type": "CWE-400",
        "Description": "KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service. Malicious apps accidentally pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the `ServiceBus` module in the config file `edgecore.yaml`.",
        "URL": "https://github.com/kubeedge/kubeedge/pull/4042",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ecca82fd5d0b0891dbd562f4d4349443d958b9df",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubeedge/kubeedge",
        "CVE_ID": "CVE-2022-31073",
        "Problem_Type": "CWE-400",
        "Description": "KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service. Malicious apps accidentally pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the `ServiceBus` module in the config file `edgecore.yaml`.",
        "URL": "https://github.com/kubeedge/kubeedge/pull/4039",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "27a6957ee7685884a7d9b3d87c13f61625cb3bc9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubeedge/kubeedge",
        "CVE_ID": "CVE-2022-31073",
        "Problem_Type": "CWE-400",
        "Description": "KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service. Malicious apps accidentally pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the `ServiceBus` module in the config file `edgecore.yaml`.",
        "URL": "https://github.com/kubeedge/kubeedge/pull/4038",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ccb68fae799d210d9f304df9cba210c492432a7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubeedge/kubeedge",
        "CVE_ID": "CVE-2022-31077",
        "Problem_Type": "CWE-476",
        "Description": "KubeEdge is built upon Kubernetes and extends native containerized application orchestration and device management to hosts at the Edge. In affected versions a malicious message response from KubeEdge can crash the CSI Driver controller server by triggering a nil-pointer dereference panic. As a consequence, the CSI Driver controller will be in denial of service. This bug has been fixed in Kubeedge 1.11.0, 1.10.1, and 1.9.3. Users should update to these versions to resolve the issue. At the time of writing, no workaround exists.",
        "URL": "https://github.com/kubeedge/kubeedge/pull/3899",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ea23549e21ea13b99383521def5fb02f683ef509",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubernetes-incubator/cri-o",
        "CVE_ID": "CVE-2018-1000400",
        "Problem_Type": "CWE-269",
        "Description": "Kubernetes CRI-O version prior to 1.9 contains a Privilege Context Switching Error (CWE-270) vulnerability in the handling of ambient capabilities that can result in containers running with elevated privileges, allowing users abilities they should not have. This attack appears to be exploitable via container execution. This vulnerability appears to have been fixed in 1.9.",
        "URL": "https://github.com/kubernetes-incubator/cri-o/pull/1558/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e058805ce25222234aab246e9f3b341e5f98f860",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubernetes/ingress-nginx",
        "CVE_ID": "CVE-2018-1002104",
        "Problem_Type": "CWE-20",
        "Description": "Versions < 1.5 of the Kubernetes ingress default backend, which handles invalid ingress traffic, exposed prometheus metrics publicly.",
        "URL": "https://github.com/kubernetes/ingress-nginx/pull/3125",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50bb7897cfe279f7454399705ec75cd22e045799",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubernetes/kubernetes",
        "CVE_ID": "CVE-2019-1002101",
        "Problem_Type": "CWE-59",
        "Description": "The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes creates a tar inside the container, copies it over the network, and kubectl unpacks it on the user\u00c2\u2019s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user\u00c2\u2019s machine when kubectl cp is called, limited only by the system permissions of the local user. The untar function can both create and follow symbolic links. The issue is resolved in kubectl v1.11.9, v1.12.7, v1.13.5, and v1.14.0.",
        "URL": "https://github.com/kubernetes/kubernetes/pull/75037",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "47063891dd782835170f500a83f37cc98c3c1013",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubernetes/kubernetes",
        "CVE_ID": "CVE-2019-11246",
        "Problem_Type": "CWE-22",
        "Description": "The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes runs tar inside the container to create a tar archive, copies it over the network, and kubectl unpacks it on the user\u00c2\u2019s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user\u00c2\u2019s machine when kubectl cp is called, limited only by the system permissions of the local user. Kubernetes affected versions include versions prior to 1.12.9, versions prior to 1.13.6, versions prior to 1.14.2, and versions 1.1, 1.2, 1.4, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11.",
        "URL": "https://github.com/kubernetes/kubernetes/pull/76788",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b95fca093d29a0c63558138e1bfa3b434168e994",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubernetes/kubernetes",
        "CVE_ID": "CVE-2019-11252",
        "Problem_Type": "CWE-209",
        "Description": "The Kubernetes kube-controller-manager in versions v1.0-v1.17 is vulnerable to a credential leakage via error messages in mount failure logs and events for AzureFile and CephFS volumes.",
        "URL": "https://github.com/kubernetes/kubernetes/pull/88684",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd23e78c3dc1a4161abb11523a8614b56b9c0928",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kubernetes/kubernetes",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/kubernetes/kubernetes/pull/121120",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "cb713c15e99d59cb5b2f9015d1d978fee8142965",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kyverno/kyverno",
        "CVE_ID": "CVE-2023-42813",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerable component in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch attestations. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.",
        "URL": "https://github.com/kyverno/kyverno/pull/8428",
        "Tag": "['Patch']",
        "fix_commit_hash": "fec2992e3f9fcd6b9c62267522c09b182e7df73b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kyverno/kyverno",
        "CVE_ID": "CVE-2023-42814",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerable component in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch attestations. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.\n",
        "URL": "https://github.com/kyverno/kyverno/pull/8428",
        "Tag": "['Patch']",
        "fix_commit_hash": "fec2992e3f9fcd6b9c62267522c09b182e7df73b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kyverno/kyverno",
        "CVE_ID": "CVE-2023-42815",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerability was in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch signatures. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.",
        "URL": "https://github.com/kyverno/kyverno/pull/8428",
        "Tag": "['Patch']",
        "fix_commit_hash": "fec2992e3f9fcd6b9c62267522c09b182e7df73b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "kyverno/kyverno",
        "CVE_ID": "CVE-2023-42816",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Kyverno is a policy engine designed for Kubernetes. A security vulnerability was found in Kyverno where an attacker could cause denial of service of Kyverno. The vulnerability was in Kyvernos Notary verifier. An attacker would need control over the registry from which Kyverno would fetch signatures. With such a position, the attacker could return a malicious response to Kyverno, when Kyverno would send a request to the registry. The malicious response would cause denial of service of Kyverno, such that other users' admission requests would be blocked from being processed. This is a vulnerability in a new component released in v1.11.0. The only users affected by this are those that have been building Kyverno from source at the main branch which is not encouraged. Users consuming official Kyverno releases are not affected. There are no known cases of this vulnerability being exploited in the wild.",
        "URL": "https://github.com/kyverno/kyverno/pull/8428",
        "Tag": "['Patch']",
        "fix_commit_hash": "fec2992e3f9fcd6b9c62267522c09b182e7df73b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "labstack/echo",
        "CVE_ID": "CVE-2020-36565",
        "Problem_Type": "CWE-22",
        "Description": "Due to improper sanitization of user input on Windows, the static file handler allows for directory traversal, allowing an attacker to read files outside of the target directory that the server has permission to read.",
        "URL": "https://github.com/labstack/echo/pull/1718",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4422e3b66b9fd498ed1ae1d0242d660d0ed3faaa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "laminas/laminas-http",
        "CVE_ID": "CVE-2021-3007",
        "Problem_Type": "CWE-502",
        "Description": "Laminas Project laminas-http before 2.14.2, and Zend Framework 3.0.0, has a deserialization vulnerability that can lead to remote code execution if the content is controllable, related to the __destruct method of the Zend\\Http\\Response\\Stream class in Stream.php. NOTE: Zend Framework is no longer supported by the maintainer. NOTE: the laminas-http vendor considers this a \"vulnerability in the PHP language itself\" but has added certain type checking as a way to prevent exploitation in (unrecommended) use cases where attacker-supplied data can be deserialized",
        "URL": "https://github.com/laminas/laminas-http/pull/48",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "019f31fe1c5449823e08ce98b0afd6835f5ffa32",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lane711/sonicjs",
        "CVE_ID": "CVE-2023-33690",
        "Problem_Type": "CWE-22",
        "Description": "SonicJS up to v0.7.0 allows attackers to execute an authenticated path traversal when an attacker injects special characters into the filename of a backup CMS.",
        "URL": "https://github.com/lane711/sonicjs/pull/183",
        "Tag": "['Patch']",
        "fix_commit_hash": "bc565264ca83a57bc6ee0f1578daf3f8733e02fb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Laracommerce/laracom",
        "CVE_ID": "CVE-2019-15489",
        "Problem_Type": "CWE-79",
        "Description": "laracom (aka Laravel FREE E-Commerce Software) 1.4.11 has search?q= XSS.",
        "URL": "https://github.com/Laracommerce/laracom/pull/211",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "36ff6a5c4a7878c719304e9d9a5f1fc74a5af474",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "laravel/laravel",
        "CVE_ID": "CVE-2021-36804",
        "Problem_Type": "CWE-640",
        "Description": "Akaunting version 2.1.12 and earlier suffers from a password reset spoofing vulnerability, wherein an attacker can proxy password reset requests through a running Akaunting instance, if that attacker knows the target's e-mail address. This issue was fixed in version 2.1.13 of the product. Please note that this issue is ultimately caused by the defaults provided by the Laravel framework, specifically how proxy headers are handled with respect to multi-tenant implementations. In other words, while this is not technically a vulnerability in Laravel, this default configuration is very likely to lead to practically identical identical vulnerabilities in Laravel projects that implement multi-tenant applications.",
        "URL": "https://github.com/laravel/laravel/pull/5477",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6f772ba5490de48d8a79747b39540afe61eed24",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "layer5io/meshery",
        "CVE_ID": "CVE-2021-31856",
        "Problem_Type": "CWE-89",
        "Description": "A SQL Injection vulnerability in the REST API in Layer5 Meshery 0.5.2 allows an attacker to execute arbitrary SQL commands via the /experimental/patternfiles endpoint (order parameter in GetMesheryPatterns in models/meshery_pattern_persister.go).",
        "URL": "https://github.com/layer5io/meshery/pull/2745",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7b17bea250972bdce47b1c5f2ebd3adc0fcf33dc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Leantime/leantime",
        "CVE_ID": "CVE-2020-5292",
        "Problem_Type": "CWE-89",
        "Description": "Leantime before versions 2.0.15 and 2.1-beta3 has a SQL Injection vulnerability. The impact is high. Malicious users/attackers can execute arbitrary SQL queries negatively affecting the confidentiality, integrity, and availability of the site. Attackers can exfiltrate data like the users' and administrators' password hashes, modify data, or drop tables. The unescaped parameter is \"searchUsers\" when sending a POST request to \"/tickets/showKanban\" with a valid session. In the code, the parameter is named \"users\" in class.tickets.php. This issue is fixed in versions 2.0.15 and 2.1.0 beta 3.",
        "URL": "https://github.com/Leantime/leantime/pull/181",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "af0807f0b2c4c3c914b93f1c5d940e6b875f231f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "LEMS/jLEMS",
        "CVE_ID": "CVE-2022-4583",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability was found in jLEMS. It has been declared as critical. Affected by this vulnerability is the function unpackJar of the file src/main/java/org/lemsml/jlems/io/util/JUtil.java. The manipulation leads to path traversal. The attack can be launched remotely. The name of the patch is 8c224637d7d561076364a9e3c2c375daeaf463dc. It is recommended to apply a patch to fix this issue. The identifier VDB-216169 was assigned to this vulnerability.",
        "URL": "https://github.com/LEMS/jLEMS/pull/103",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e78551b6f4065d7d17237765eaca86b135b1ab2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lepture/mistune",
        "CVE_ID": "CVE-2017-15612",
        "Problem_Type": "CWE-79",
        "Description": "mistune.py in Mistune 0.7.4 allows XSS via an unexpected newline (such as in java\\nscript:) or a crafted email address, related to the escape and autolink functions.",
        "URL": "https://github.com/lepture/mistune/pull/140",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ab8f7de8bc78c2a88f9e01522b8a3a0aa8cd9416",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lesterchan/wp-ban",
        "CVE_ID": "CVE-2021-4252",
        "Problem_Type": "CWE-707",
        "Description": "A vulnerability, which was classified as problematic, has been found in WP-Ban. This issue affects the function toggle_checkbox of the file ban-options.php. The manipulation of the argument $_SERVER[\"HTTP_USER_AGENT\"] leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 13e0b1e922f3aaa3f8fcb1dd6d50200dd693fd76. It is recommended to apply a patch to fix this issue. The identifier VDB-216209 was assigned to this vulnerability.",
        "URL": "https://github.com/lesterchan/wp-ban/pull/11",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "13e0b1e922f3aaa3f8fcb1dd6d50200dd693fd76",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lfs-book/make-ca",
        "CVE_ID": "CVE-2022-21672",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "make-ca is a utility to deliver and manage a complete PKI configuration for workstations and servers. Starting with version 0.9 and prior to version 1.10, make-ca misinterprets Mozilla certdata.txt and treats explicitly untrusted certificates like trusted ones, causing those explicitly untrusted certificates trusted by the system. The explicitly untrusted certificates were used by some CAs already hacked. Hostile attackers may perform a MIM attack exploiting them. Everyone using the affected versions of make-ca should upgrade to make-ca-1.10, and run `make-ca -f -g` as the `root` user to regenerate the trusted store immediately. As a workaround, users may delete the untrusted certificates from /etc/pki/tls and /etc/ssl/certs manually (or by a script), but this is not recommended because the manual changes will be overwritten next time running make-ca to update the trusted anchor.",
        "URL": "https://github.com/lfs-book/make-ca/pull/20",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "23daa436c80a62c8a32d4f8069081dd99e31405e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2018-1000877",
        "Problem_Type": "CWE-415",
        "Description": "libarchive version commit 416694915449219d505531b1096384f3237dd6cc onwards (release v3.1.0 onwards) contains a CWE-415: Double Free vulnerability in RAR decoder - libarchive/archive_read_support_format_rar.c, parse_codes(), realloc(rar->lzss.window, new_size) with new_size = 0 that can result in Crash/DoS. This attack appear to be exploitable via the victim must open a specially crafted RAR archive.",
        "URL": "https://github.com/libarchive/libarchive/pull/1105/commits/021efa522ad729ff0f5806c4ce53e4a6cc1daa31",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "021efa522ad729ff0f5806c4ce53e4a6cc1daa31",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2018-1000878",
        "Problem_Type": "CWE-416",
        "Description": "libarchive version commit 416694915449219d505531b1096384f3237dd6cc onwards (release v3.1.0 onwards) contains a CWE-416: Use After Free vulnerability in RAR decoder - libarchive/archive_read_support_format_rar.c that can result in Crash/DoS - it is unknown if RCE is possible. This attack appear to be exploitable via the victim must open a specially crafted RAR archive.",
        "URL": "https://github.com/libarchive/libarchive/pull/1105/commits/bfcfe6f04ed20db2504db8a254d1f40a1d84eb28",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bfcfe6f04ed20db2504db8a254d1f40a1d84eb28",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2018-1000879",
        "Problem_Type": "CWE-476",
        "Description": "libarchive version commit 379867ecb330b3a952fb7bfa7bffb7bbd5547205 onwards (release v3.3.0 onwards) contains a CWE-476: NULL Pointer Dereference vulnerability in ACL parser - libarchive/archive_acl.c, archive_acl_from_text_l() that can result in Crash/DoS. This attack appear to be exploitable via the victim must open a specially crafted archive file.",
        "URL": "https://github.com/libarchive/libarchive/pull/1105/commits/15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "15bf44fd2c1ad0e3fd87048b3fcc90c4dcff1175",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2018-1000880",
        "Problem_Type": "CWE-119",
        "Description": "libarchive version commit 9693801580c0cf7c70e862d305270a16b52826a7 onwards (release v3.2.0 onwards) contains a CWE-20: Improper Input Validation vulnerability in WARC parser - libarchive/archive_read_support_format_warc.c, _warc_read() that can result in DoS - quasi-infinite run time and disk usage from tiny file. This attack appear to be exploitable via the victim must open a specially crafted WARC file.",
        "URL": "https://github.com/libarchive/libarchive/pull/1105/commits/9c84b7426660c09c18cc349f6d70b5f8168b5680",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9c84b7426660c09c18cc349f6d70b5f8168b5680",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2019-1000019",
        "Problem_Type": "CWE-125",
        "Description": "libarchive version commit bf9aec176c6748f0ee7a678c5f9f9555b9a757c1 onwards (release v3.0.2 onwards) contains a CWE-125: Out-of-bounds Read vulnerability in 7zip decompression, archive_read_support_format_7zip.c, header_bytes() that can result in a crash (denial of service). This attack appears to be exploitable via the victim opening a specially crafted 7zip file.",
        "URL": "https://github.com/libarchive/libarchive/pull/1120/commits/65a23f5dbee4497064e9bb467f81138a62b0dae1",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "65a23f5dbee4497064e9bb467f81138a62b0dae1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libarchive/libarchive",
        "CVE_ID": "CVE-2020-9308",
        "Problem_Type": "CWE-787",
        "Description": "archive_read_support_format_rar5.c in libarchive before 3.4.2 attempts to unpack a RAR5 file with an invalid or corrupted header (such as a header size of zero), leading to a SIGSEGV or possibly unspecified other impact.",
        "URL": "https://github.com/libarchive/libarchive/pull/1326",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c780fa9bbe25b4b0e7d59b68fe6972544d3475c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libass/libass",
        "CVE_ID": "CVE-2016-7972",
        "Problem_Type": "CWE-399",
        "Description": "The check_allocations function in libass/ass_shaper.c in libass before 0.13.4 allows remote attackers to cause a denial of service (memory allocation failure) via unspecified vectors.",
        "URL": "https://github.com/libass/libass/pull/240/commits/aa54e0b59200a994d50a346b5d7ac818ebcf2d4b",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa54e0b59200a994d50a346b5d7ac818ebcf2d4b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2019-15903",
        "Problem_Type": "CWE-125",
        "Description": "In libexpat before 2.2.8, crafted XML input could fool the parser into changing from DTD parsing to document parsing too early; a consecutive call to XML_GetCurrentLineNumber (or XML_GetCurrentColumnNumber) then resulted in a heap-based buffer over-read.",
        "URL": "https://github.com/libexpat/libexpat/pull/318",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6da1f19625592bfb928253620cac568d9a9b9c65",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2021-45960",
        "Problem_Type": "CWE-682",
        "Description": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
        "URL": "https://github.com/libexpat/libexpat/pull/534",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9dc50735f737eaf6890ad3fd4903db62b03a9ac4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2021-46143",
        "Problem_Type": "CWE-190",
        "Description": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
        "URL": "https://github.com/libexpat/libexpat/pull/538",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "82c11af9d3dafc1b086a15efecd6ec07b6e13613",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-22822",
        "Problem_Type": "CWE-190",
        "Description": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "URL": "https://github.com/libexpat/libexpat/pull/539",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "919a2bec5e12e6285031308e6da86f250b21d166",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-22824",
        "Problem_Type": "CWE-190",
        "Description": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "URL": "https://github.com/libexpat/libexpat/pull/539",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "919a2bec5e12e6285031308e6da86f250b21d166",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-23852",
        "Problem_Type": "CWE-190",
        "Description": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
        "URL": "https://github.com/libexpat/libexpat/pull/550",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "178d26f50af21ec23d6e43814b9b602590b5865c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-23990",
        "Problem_Type": "CWE-190",
        "Description": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
        "URL": "https://github.com/libexpat/libexpat/pull/551",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5c168279c5ad4668e5e48fe13374fe7a7de4b573",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-25235",
        "Problem_Type": "CWE-116",
        "Description": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
        "URL": "https://github.com/libexpat/libexpat/pull/562",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "306b72134f157bbfd1637b20a22cabf4acfa136a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-25236",
        "Problem_Type": "CWE-668",
        "Description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
        "URL": "https://github.com/libexpat/libexpat/pull/561",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cc97e875ef84da4bcf55156c83599116f7523b4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-40674",
        "Problem_Type": "CWE-416",
        "Description": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
        "URL": "https://github.com/libexpat/libexpat/pull/629",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dde178b976934e16526a3277d31d9fa3fab7a6c1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-40674",
        "Problem_Type": "CWE-416",
        "Description": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
        "URL": "https://github.com/libexpat/libexpat/pull/640",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a976e32abd257728a51dc55cf3d4ebee5b853459",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libexpat/libexpat",
        "CVE_ID": "CVE-2022-43680",
        "Problem_Type": "CWE-416",
        "Description": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
        "URL": "https://github.com/libexpat/libexpat/pull/650",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "56967f83d68d5fc750f9e66a9a76756c94c7c173",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libgd/libgd",
        "CVE_ID": "CVE-2016-6905",
        "Problem_Type": "CWE-125",
        "Description": "The read_image_tga function in gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.3 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA image.",
        "URL": "https://github.com/libgd/libgd/pull/251",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "5ddd5a7eab0c107d3a5b5e9cc142bd163e8bac38",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libjxl/libjxl",
        "CVE_ID": "CVE-2021-36692",
        "Problem_Type": "CWE-369",
        "Description": "libjxl v0.3.7 is affected by a Divide By Zero in issue in lib/extras/codec_apng.cc jxl::DecodeImageAPNG(). When encoding a malicous APNG file using cjxl, an attacker can trigger a denial of service.",
        "URL": "https://github.com/libjxl/libjxl/pull/313",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7dfa400ded53919d986c5d3d23446a09e0cf481b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "liblouis/liblouis",
        "CVE_ID": "CVE-2023-26767",
        "Problem_Type": "CWE-120",
        "Description": "Buffer Overflow vulnerability found in Liblouis v.3.24.0 allows a remote attacker to cause a denial of service via the lou_logFile function at logginc.c endpoint.",
        "URL": "https://github.com/liblouis/liblouis/pull/1297",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "517f6f1f35fc5c57ac2f045caa168191bdeaadde",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "liblouis/liblouis",
        "CVE_ID": "CVE-2023-26768",
        "Problem_Type": "CWE-120",
        "Description": "Buffer Overflow vulnerability found in Liblouis v.3.24.0 allows a remote attacker to cause a denial of service via the compileTranslationTable.c and lou_setDataPath functions.",
        "URL": "https://github.com/liblouis/liblouis/pull/1302",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "21a2ee76d5de1ab3ce789ef18106343c8e65a175",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "liblouis/liblouis",
        "CVE_ID": "CVE-2023-26769",
        "Problem_Type": "CWE-120",
        "Description": "Buffer Overflow vulnerability found in Liblouis Lou_Trace v.3.24.0 allows a remote attacker to cause a denial of service via the resolveSubtable function at compileTranslationTabel.c.",
        "URL": "https://github.com/liblouis/liblouis/pull/1300",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b2e2995d1600e1d3b2131d4a2c5a57927d795608",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libp2p/go-libp2p",
        "CVE_ID": "CVE-2023-39533",
        "Problem_Type": "CWE-770",
        "Description": "go-libp2p is the Go implementation of the libp2p Networking Stack. Prior to versions 0.27.8, 0.28.2, and 0.29.1 malicious peer can use large RSA keys to run a resource exhaustion attack & force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step. To prevent this attack, go-libp2p versions 0.27.8, 0.28.2, and 0.29.1 restrict RSA keys to <= 8192 bits. To protect one's application, it is necessary to update to these patch releases and to use the updated Go compiler in 1.20.7 or 1.19.12. There are no known workarounds for this issue.",
        "URL": "https://github.com/libp2p/go-libp2p/pull/2454",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "9e01af883f0b559551cbae417d5d6f883f45f39c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "librenms/librenms",
        "CVE_ID": "CVE-2020-35700",
        "Problem_Type": "CWE-89",
        "Description": "A second-order SQL injection issue in Widgets/TopDevicesController.php (aka the Top Devices dashboard widget) of LibreNMS before 21.1.0 allows remote authenticated attackers to execute arbitrary SQL commands via the sort_order parameter against the /ajax/form/widget-settings endpoint.",
        "URL": "https://github.com/librenms/librenms/pull/12422",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53bc78c9d93679babeb67d8b1a14a9578ccb6572",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "LibrIT/passhport",
        "CVE_ID": "CVE-2021-3027",
        "Problem_Type": "CWE-74",
        "Description": "app/views_mod/user/user.py in LibrIT PaSSHport through 2.5 is affected by LDAP Injection. There is an information leak through the crafting of special queries, escaping the provided search filter because user input gets no sanitization.",
        "URL": "https://github.com/LibrIT/passhport/pull/562",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b81c1672a1b654eeabbb3f4672d5d1bfd456e912",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libsdl-org/SDL",
        "CVE_ID": "CVE-2022-4743",
        "Problem_Type": "CWE-401",
        "Description": "A potential memory leak issue was discovered in SDL2 in GLES_CreateTexture() function in SDL_render_gles.c. The vulnerability allows an attacker to cause a denial of service attack. The vulnerability affects SDL2 v2.0.4 and above. SDL-1.x are not affected.",
        "URL": "https://github.com/libsdl-org/SDL/pull/6269",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "00b67f55727bc0944c3266e2b875440da132ce4b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libsndfile/libsndfile",
        "CVE_ID": "CVE-2021-4156",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read flaw was found in libsndfile's FLAC codec functionality. An attacker who is able to submit a specially crafted file (via tricking a user to open or otherwise) to an application linked with libsndfile and using the FLAC codec, could trigger an out-of-bounds read that would most likely cause a crash but could potentially leak memory information that could be used in further exploitation of other flaws.",
        "URL": "https://github.com/libsndfile/libsndfile/pull/732/commits/4c30646abf7834e406f7e2429c70bc254e18beab",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ced91d7b971be6173b604154c39279ce90ad87cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libtom/libtomcrypt",
        "CVE_ID": "CVE-2019-17362",
        "Problem_Type": "CWE-125",
        "Description": "In LibTomCrypt through 1.18.2, the der_decode_utf8_string function (in der_decode_utf8_string.c) does not properly detect certain invalid UTF-8 sequences. This allows context-dependent attackers to cause a denial of service (out-of-bounds read and crash) or read information from other memory locations via carefully crafted DER-encoded data.",
        "URL": "https://github.com/libtom/libtomcrypt/pull/508",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "64d1153e5a515740ab56f39c46baf4cf6991a9d3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libtom/libtommath",
        "CVE_ID": "CVE-2023-36328",
        "Problem_Type": "CWE-190",
        "Description": "Integer Overflow vulnerability in mp_grow in libtom libtommath before commit beba892bc0d4e4ded4d667ab1d2a94f4d75109a9, allows attackers to execute arbitrary code and cause a denial of service (DoS).",
        "URL": "https://github.com/libtom/libtommath/pull/546",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7bbc1f8e4fe6dce75055957645117180768efb15",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libvips/libvips",
        "CVE_ID": "CVE-2023-40032",
        "Problem_Type": "CWE-476",
        "Description": "libvips is a demand-driven, horizontally threaded image processing library. A specially crafted SVG input can cause libvips versions 8.14.3 or earlier to segfault when attempting to parse a malformed UTF-8 character. Users should upgrade to libvips version 8.14.4 (or later) when processing untrusted input.\n",
        "URL": "https://github.com/libvips/libvips/pull/3604",
        "Tag": "['Patch']",
        "fix_commit_hash": "e091d65835966ef56d53a4105a7362cafdb1582b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lidofinance/gate-seals",
        "CVE_ID": "CVE-2023-30629",
        "Problem_Type": "CWE-670",
        "Description": "Vyper is a Pythonic Smart Contract Language for the ethereum virtual machine. In versions 0.3.1 through 0.3.7, the Vyper compiler generates the wrong bytecode. Any contract that uses the `raw_call` with `revert_on_failure=False` and `max_outsize=0` receives the wrong response from `raw_call`. Depending on the memory garbage, the result can be either `True` or `False`. A patch is available and, as of time of publication, anticipated to be part of Vyper 0.3.8. As a workaround, one may always put  `max_outsize>0`.",
        "URL": "https://github.com/lidofinance/gate-seals/pull/5/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "399666cc96eae5b9e314ae13fe2d0badd8eb5edc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lightningnetwork/lnd",
        "CVE_ID": "CVE-2022-39389",
        "Problem_Type": "CWE-20",
        "Description": "Lightning Network Daemon (lnd) is an implementation of a lightning bitcoin overlay network node. All lnd nodes before version `v0.15.4` are vulnerable to a block parsing bug that can cause a node to enter a degraded state once encountered. In this degraded state, nodes can continue to make payments and forward HTLCs, and close out channels. Opening channels is prohibited, and also on chain transaction events will be undetected. This can cause loss of funds if a CSV expiry is researched during a breach attempt or a CLTV delta expires forgetting the funds in the HTLC. A patch is available in `lnd` version 0.15.4. Users are advised to upgrade. Users unable to upgrade may use the `lncli updatechanpolicy` RPC call to increase their CLTV value to a very high amount or increase their fee policies. This will prevent nodes from routing through your node, meaning that no pending HTLCs can be present.",
        "URL": "https://github.com/lightningnetwork/lnd/pull/7098",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "96fe51e2e5c2ee0c97909499e0e96a3d3755757e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "liimaorg/liima",
        "CVE_ID": "CVE-2023-26092",
        "Problem_Type": "CWE-917",
        "Description": "Liima before 1.17.28 allows server-side template injection.",
        "URL": "https://github.com/liimaorg/liima/pull/678",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "57da9a4a207d349366cbde766941a202a0d3849e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "liimaorg/liima",
        "CVE_ID": "CVE-2023-26093",
        "Problem_Type": "CWE-89",
        "Description": "Liima before 1.17.28 allows Hibernate query language (HQL) injection, related to colToSort in the deployment filter.",
        "URL": "https://github.com/liimaorg/liima/pull/663",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "852c91b9e848910028a40e143998d209514c03a2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "linkedin/dustjs",
        "CVE_ID": "CVE-2021-4264",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability was found in LinkedIn dustjs up to 2.x and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is ddb6523832465d38c9d80189e9de60519ac307c3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216464.",
        "URL": "https://github.com/linkedin/dustjs/pull/805",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "db6d8b91880ce73a065935c4d04b93abd6968b7f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "litespeed-js/litespeed.js",
        "CVE_ID": "CVE-2021-23682",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package litespeed.js before 0.3.12; the package appwrite/server-ce from 0.12.0 and before 0.12.2, before 0.11.1. When parsing the query string in the getJsonFromUrl function, the key that is set in the result object is not properly sanitized leading to a Prototype Pollution vulnerability.",
        "URL": "https://github.com/litespeed-js/litespeed.js/pull/18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0ed0fba82bf5d38cd304af3fa1120ff3b1df24ce",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "loadedcommerce/loaded7",
        "CVE_ID": "CVE-2014-5140",
        "Problem_Type": "CWE-89",
        "Description": "The bindReplace function in the query factory in includes/classes/database.php in Loaded Commerce 7 does not properly handle : (colon) characters, which allows remote authenticated users to conduct SQL injection attacks via the First name and Last name fields in the address book.",
        "URL": "https://github.com/loadedcommerce/loaded7/pull/520",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "633948668100c83e517edb9afd1171167949db66",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "louislam/uptime-kuma",
        "CVE_ID": "CVE-2023-36821",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Uptime Kuma, a self-hosted monitoring tool, allows an authenticated attacker to install a maliciously crafted plugin in versions prior to 1.22.1, which may lead to remote code execution. Uptime Kuma allows authenticated users to install plugins from an official list of plugins. This feature is currently disabled in the web interface, but the corresponding API endpoints are still available after login. After downloading a plugin, it's installed by calling `npm install` in the installation directory of the plugin. Because the plugin is not validated against the official list of plugins or installed with `npm install --ignore-scripts`, a maliciously crafted plugin taking advantage of npm scripts can gain remote code execution. Version 1.22.1 contains a patch for this issue.",
        "URL": "https://github.com/louislam/uptime-kuma/pull/3346",
        "Tag": "['Patch']",
        "fix_commit_hash": "a0736e04b2838aae198c2110db244eab6f87757b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "louislam/uptime-kuma",
        "CVE_ID": "CVE-2023-36822",
        "Problem_Type": "CWE-22",
        "Description": "Uptime Kuma, a self-hosted monitoring tool, has a path traversal vulnerability in versions prior to 1.22.1. Uptime Kuma allows authenticated users to install plugins from an official list of plugins. This feature is currently disabled in the web interface, but the corresponding API endpoints are still available after login. Before a plugin is downloaded, the plugin installation directory is checked for existence. If it exists, it's removed before the plugin installation. Because the plugin is not validated against the official list of plugins or sanitized, the check for existence and the removal of the plugin installation directory are prone to path traversal. This vulnerability allows an authenticated attacker to delete files from the server Uptime Kuma is running on. Depending on which files are deleted, Uptime Kuma or the whole system may become unavailable due to data loss.\n",
        "URL": "https://github.com/louislam/uptime-kuma/pull/3346",
        "Tag": "['Patch']",
        "fix_commit_hash": "a0736e04b2838aae198c2110db244eab6f87757b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lxml/lxml",
        "CVE_ID": "CVE-2021-28957",
        "Problem_Type": "CWE-79",
        "Description": "An XSS vulnerability was discovered in python-lxml's clean module versions before 4.6.3. When disabling the safe_attrs_only and forms arguments, the Cleaner class does not remove the formaction attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in lxml 4.6.3.",
        "URL": "https://github.com/lxml/lxml/pull/316/commits/10ec1b4e9f93713513a3264ed6158af22492f270",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2d01a1ba8984e0483ce6619b972832377f208a0d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lz4/lz4",
        "CVE_ID": "CVE-2019-17543",
        "Problem_Type": "CWE-787",
        "Description": "LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize), affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states \"only a few specific / uncommon usages of the API are at risk.\"",
        "URL": "https://github.com/lz4/lz4/pull/756",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "19b099986aeccc12bb46ad207fe8de5b36bdb7bc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "lz4/lz4",
        "CVE_ID": "CVE-2019-17543",
        "Problem_Type": "CWE-787",
        "Description": "LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize), affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states \"only a few specific / uncommon usages of the API are at risk.\"",
        "URL": "https://github.com/lz4/lz4/pull/760",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7a516411d495ac2f86c7569cc77bdbcb62be0838",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mailcow/mailcow-dockerized",
        "CVE_ID": "CVE-2022-39258",
        "Problem_Type": "CWE-601",
        "Description": "mailcow is a mailserver suite. A vulnerability innversions prior to 2022-09 allows an attacker to craft a custom Swagger API template to spoof Authorize links. This could redirect a victim to an attacker controller place to steal Swagger authorization credentials or create a phishing page to steal other information. The issue has been fixed with the 2022-09 mailcow Mootember Update. As a workaround, one may delete the Swapper API Documentation from their e-mail server.",
        "URL": "https://github.com/mailcow/mailcow-dockerized/pull/4766",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5470b51cc7e755bb749fa4492d85276c5233866a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Mailtrain-org/mailtrain",
        "CVE_ID": "CVE-2020-24617",
        "Problem_Type": "CWE-89",
        "Description": "Mailtrain through 1.24.1 allows SQL Injection in statsClickedSubscribersByColumn in lib/models/campaigns.js via /campaigns/clicked/ajax because variable column names are not properly escaped.",
        "URL": "https://github.com/Mailtrain-org/mailtrain/pull/909",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dea056848a276669af87c7988862476e21b89711",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "maistra/istio-operator",
        "CVE_ID": "CVE-2020-14306",
        "Problem_Type": "CWE-862",
        "Description": "An incorrect access control flaw was found in the operator, openshift-service-mesh/istio-rhel8-operator all versions through 1.1.3. This flaw allows an attacker with a basic level of access to the cluster to deploy a custom gateway/pod to any namespace, potentially gaining access to privileged service account tokens. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
        "URL": "https://github.com/maistra/istio-operator/pull/462",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5db8548ec53e550f9f7f82c8b80728ba8f05f86c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "manuelstofer/json-pointer",
        "CVE_ID": "CVE-2020-7709",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package json-pointer before 0.6.1. Multiple reference of object using slash is supported.",
        "URL": "https://github.com/manuelstofer/json-pointer/pull/34/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1dbd1ed6bef76f359dcf44d5b0e849d4881540b2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "manuelstofer/json-pointer",
        "CVE_ID": "CVE-2022-4742",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability, which was classified as critical, has been found in json-pointer up to 0.6.1. Affected by this issue is the function set of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. Upgrading to version 0.6.2 is able to address this issue. The patch is identified as 859c9984b6c407fc2d5a0a7e47c7274daa681941. It is recommended to upgrade the affected component. VDB-216794 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/manuelstofer/json-pointer/pull/36",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "859c9984b6c407fc2d5a0a7e47c7274daa681941",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ManyDesigns/Portofino",
        "CVE_ID": "CVE-2022-3952",
        "Problem_Type": "CWE-668",
        "Description": "A vulnerability has been found in ManyDesigns Portofino 5.3.2 and classified as problematic. Affected by this vulnerability is the function createTempDir of the file WarFileLauncher.java. The manipulation leads to creation of temporary file in directory with insecure permissions. Upgrading to version 5.3.3 is able to address this issue. The name of the patch is 94653cb357806c9cf24d8d294e6afea33f8f0775. It is recommended to upgrade the affected component. The identifier VDB-213457 was assigned to this vulnerability.",
        "URL": "https://github.com/ManyDesigns/Portofino/pull/580",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d016076b989526db9329f167b375e13aa15976fe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mapfish/mapfish-print",
        "CVE_ID": "CVE-2020-15232",
        "Problem_Type": "CWE-611",
        "Description": "In mapfish-print before version 3.24, a user can do to an XML External Entity (XXE) attack with the provided SDL style.",
        "URL": "https://github.com/mapfish/mapfish-print/pull/1397/commits/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "MariaDB/server",
        "CVE_ID": "CVE-2022-31623",
        "Problem_Type": "CWE-667",
        "Description": "MariaDB Server before 10.7 is vulnerable to Denial of Service. In extra/mariabackup/ds_compress.cc, when an error occurs (i.e., going to the err label) while executing the method create_worker_threads, the held lock thd->ctrl_mutex is not released correctly, which allows local users to trigger a denial of service due to the deadlock. Note: The vendor argues this is just an improper locking bug and not a vulnerability with adverse effects.",
        "URL": "https://github.com/MariaDB/server/pull/1938",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7c30bc38a588b22b01f11130cfe99e7f36accf94",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "marmelab/react-admin",
        "CVE_ID": "CVE-2023-25572",
        "Problem_Type": "CWE-79",
        "Description": "react-admin is a frontend framework for building browser applications on top of REST/GraphQL APIs. react-admin prior to versions 3.19.12 and 4.7.6, along with ra-ui-materialui prior to 3.19.12 and 4.7.6, are vulnerable to cross-site scripting. All React applications built with react-admin and using the `<RichTextField>` are affected. `<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible cross-site scripting (XSS) attack. Versions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`. Users who already sanitize HTML data server-side do not need to upgrade. As a workaround, users may replace the `<RichTextField>` by a custom field doing sanitization by hand.\n",
        "URL": "https://github.com/marmelab/react-admin/pull/8645",
        "Tag": "['Patch']",
        "fix_commit_hash": "a4619a8691c2bea48359a656afb820eb0f6dc3d7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "marmelab/react-admin",
        "CVE_ID": "CVE-2023-25572",
        "Problem_Type": "CWE-79",
        "Description": "react-admin is a frontend framework for building browser applications on top of REST/GraphQL APIs. react-admin prior to versions 3.19.12 and 4.7.6, along with ra-ui-materialui prior to 3.19.12 and 4.7.6, are vulnerable to cross-site scripting. All React applications built with react-admin and using the `<RichTextField>` are affected. `<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible cross-site scripting (XSS) attack. Versions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`. Users who already sanitize HTML data server-side do not need to upgrade. As a workaround, users may replace the `<RichTextField>` by a custom field doing sanitization by hand.\n",
        "URL": "https://github.com/marmelab/react-admin/pull/8644",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "c1891afc5453cfb53b1802da794009835b678d5b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Masterminds/vcs",
        "CVE_ID": "CVE-2022-21235",
        "Problem_Type": "CWE-88",
        "Description": "The package github.com/masterminds/vcs before 1.13.3 are vulnerable to Command Injection via argument injection. When hg is executed, argument strings are passed to hg in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
        "URL": "https://github.com/Masterminds/vcs/pull/105",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a6170db40d8f08c61e6d5901635cff51b284abe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "MatMoul/g810-led",
        "CVE_ID": "CVE-2022-46338",
        "Problem_Type": "CWE-732",
        "Description": "g810-led 0.4.2, a LED configuration tool for Logitech Gx10 keyboards, contained a udev rule to make supported device nodes world-readable and writable, allowing any process on the system to read traffic from keyboards, including sensitive data.",
        "URL": "https://github.com/MatMoul/g810-led/pull/297",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cb3e552119b005abd2ac726dec445f1be9b80b92",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/matrix-react-sdk",
        "CVE_ID": "CVE-2021-21320",
        "Problem_Type": "CWE-345",
        "Description": "matrix-react-sdk is an npm package which is a Matrix SDK for React Javascript. In matrix-react-sdk before version 3.15.0, the user content sandbox can be abused to trick users into opening unexpected documents. The content is opened with a `blob` origin that cannot access Matrix user data, so messages and secrets are not at risk. This has been fixed in version 3.15.0.",
        "URL": "https://github.com/matrix-org/matrix-react-sdk/pull/5657",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b386f0c73b95ecbb6ea7f8f79c6ff5171a8dedd1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/matrix-react-sdk",
        "CVE_ID": "CVE-2021-32622",
        "Problem_Type": "CWE-434",
        "Description": "Matrix-React-SDK is a react-based SDK for inserting a Matrix chat/voip client into a web page. Before version 3.21.0, when uploading a file, the local file preview can lead to execution of scripts embedded in the uploaded file. This can only occur after several user interactions to open the preview in a separate tab. This only impacts the local user while in the process of uploading. It cannot be exploited remotely or by other users. This vulnerability is patched in version 3.21.0.",
        "URL": "https://github.com/matrix-org/matrix-react-sdk/pull/5981",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "45acf70b00cb0c51740455d09164b1c3c033b5f3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/matrix-spec-proposals",
        "CVE_ID": "CVE-2022-39246",
        "Problem_Type": "CWE-287",
        "Description": "matrix-android-sdk2 is the Matrix SDK for Android. Prior to version 1.5.1, an attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others. This attack is possible due to the key forwarding strategy implemented in the matrix-android-sdk2 that is too permissive. Starting with version 1.5.1, the default policy for accepting key forwards has been made more strict in the matrix-android-sdk2. The matrix-android-sdk2 will now only accept forwarded keys in response to previously issued requests and only from own, verified devices. The SDK now sets a `trusted` flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with `trusted = false` are decorated appropriately (for example, by showing a warning for such messages). As a workaroubnd, current users of the SDK can disable key forwarding in their forks using `CryptoService#enableKeyGossiping(enable: Boolean)`.",
        "URL": "https://github.com/matrix-org/matrix-spec-proposals/pull/3061",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5c19d4fdea9058533242e99b72b1776fd4a523cb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/matrix-spec-proposals",
        "CVE_ID": "CVE-2022-39249",
        "Problem_Type": "CWE-287",
        "Description": "Matrix Javascript SDK is the Matrix Client-Server SDK for JavaScript. Prior to version 19.7.0, an attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others. This attack is possible due to the matrix-js-sdk implementing a too permissive key forwarding strategy on the receiving end. Starting with version 19.7.0, the default policy for accepting key forwards has been made more strict in the matrix-js-sdk. matrix-js-sdk will now only accept forwarded keys in response to previously issued requests and only from own, verified devices. The SDK now sets a `trusted` flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with `trusted = false` are decorated appropriately, for example, by showing a warning for such messages. This attack requires coordination between a malicious homeserver and an attacker, and those who trust your homeservers do not need a workaround.",
        "URL": "https://github.com/matrix-org/matrix-spec-proposals/pull/3061",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5c19d4fdea9058533242e99b72b1776fd4a523cb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/matrix-spec-proposals",
        "CVE_ID": "CVE-2023-29529",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "matrix-js-sdk is the Matrix Client-Server SDK for JavaScript and TypeScript. An attacker present in a room where an MSC3401 group call is taking place can eavesdrop on the video and audio of participants using matrix-js-sdk, without their knowledge. To affected matrix-js-sdk users, the attacker will not appear to be participating in the call. This attack is possible because matrix-js-sdk's group call implementation accepts incoming direct calls from other users, even if they have not yet declared intent to participate in the group call, as a means of resolving a race condition in call setup. Affected versions do not restrict access to the user's outbound media in this case. Legacy 1:1 calls are unaffected. This is fixed in matrix-js-sdk 24.1.0. As a workaround, users may hold group calls in private rooms where only the exact users who are expected to participate in the call are present.",
        "URL": "https://github.com/matrix-org/matrix-spec-proposals/pull/3401",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "87822fa1053c4ebb61b2b51d5d49a46c6bbad353",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/synapse",
        "CVE_ID": "CVE-2018-12291",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The on_get_missing_events function in handlers/federation.py in Matrix Synapse before 0.31.1 has a security bug in the get_missing_events federation API where event visibility rules were not applied correctly.",
        "URL": "https://github.com/matrix-org/synapse/pull/3371",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ad9edd1d968f19dd4d7c65102fe552076ca9bc5a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/synapse",
        "CVE_ID": "CVE-2022-39374",
        "Problem_Type": "CWE-400",
        "Description": "Synapse is an open-source Matrix homeserver written and maintained by the Matrix.org Foundation. If Synapse and a malicious homeserver are both joined to the same room, the malicious homeserver can trick Synapse into accepting previously rejected events into its view of the current state of that room. This can be exploited in a way that causes all further messages and state changes sent in that room from the vulnerable homeserver to be rejected. This issue has been patched in version 1.68.0\n\n",
        "URL": "https://github.com/matrix-org/synapse/pull/13723",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b73cbb82157d9666e8d667733afebc0d09ed858c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/synapse",
        "CVE_ID": "CVE-2022-41952",
        "Problem_Type": "CWE-772",
        "Description": "Synapse before 1.52.0 with URL preview functionality enabled will attempt to generate URL previews for media stream URLs without properly limiting connection time. Connections will only be terminated after `max_spider_size` (default: 10M) bytes have been downloaded, which can in some cases lead to long-lived connections towards the streaming media server (for instance, Icecast). This can cause excessive traffic and connections toward such servers if their stream URL is, for example, posted to a large room with many Synapse instances with URL preview enabled. Version 1.52.0 implements a timeout mechanism which will terminate URL preview connections after 30 seconds. Since generating URL previews for media streams is not supported and always fails, 1.53.0 additionally implements an allow list for content types for which Synapse will even attempt to generate a URL preview. Upgrade to 1.53.0 to fully resolve the issue. As a workaround, turn off URL preview functionality by setting `url_preview_enabled: false` in the Synapse configuration file.",
        "URL": "https://github.com/matrix-org/synapse/pull/11936",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "337f38cac38bc57bc6a3cc8b319e3079c60c4549",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Matroska-Org/libebml",
        "CVE_ID": "CVE-2023-52339",
        "Problem_Type": "CWE-190",
        "Description": "In libebml before 1.4.5, an integer overflow in MemIOCallback.cpp can occur when reading or writing. It may result in buffer overflows.",
        "URL": "https://github.com/Matroska-Org/libebml/pull/148",
        "Tag": "['Patch']",
        "fix_commit_hash": "2d5c11cc64a771c02882455f867805340ad76815",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matthiaskramm/swftools",
        "CVE_ID": "CVE-2017-7698",
        "Problem_Type": "CWE-416",
        "Description": "A Use After Free in the pdf2swf part of swftools 0.9.2 and earlier allows remote attackers to execute arbitrary code via a malformed PDF document, possibly a consequence of an error in Gfx.cc in Xpdf 3.02.",
        "URL": "https://github.com/matthiaskramm/swftools/pull/19",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c7747f4b10739bd365c3e79d153b99fbfac9a4ac",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mauriciosoares/ss15-this-is-sparta",
        "CVE_ID": "CVE-2015-10028",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability has been found in ss15-this-is-sparta and classified as problematic. This vulnerability affects unknown code of the file js/roomElement.js of the component Main Page. The manipulation leads to cross site scripting. The attack can be initiated remotely. The name of the patch is ba2f71ad3a46e5949ee0c510b544fa4ea973baaa. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217624.",
        "URL": "https://github.com/mauriciosoares/ss15-this-is-sparta/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c7df8337fa80850e4b41e89e2dec9cca9477427b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "maxmind/libmaxminddb",
        "CVE_ID": "CVE-2020-28241",
        "Problem_Type": "CWE-125",
        "Description": "libmaxminddb before 1.4.3 has a heap-based buffer over-read in dump_entry_data_list in maxminddb.c.",
        "URL": "https://github.com/maxmind/libmaxminddb/pull/237",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5dda63adc643c6c76f3d8c265ea4edccdbb1a880",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "MediaArea/MediaInfoLib",
        "CVE_ID": "CVE-2019-11372",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read in MediaInfoLib::File__Tags_Helper::Synched_Test in Tag/File__Tags.cpp in MediaInfoLib in MediaArea MediaInfo 18.12 leads to a crash.",
        "URL": "https://github.com/MediaArea/MediaInfoLib/pull/1111",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5ddd15004c2cf9efce77c772402cc591c652ff77",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "MediaArea/MediaInfoLib",
        "CVE_ID": "CVE-2019-11373",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read in File__Analyze::Get_L8 in File__Analyze_Buffer.cpp in MediaInfoLib in MediaArea MediaInfo 18.12 leads to a crash.",
        "URL": "https://github.com/MediaArea/MediaInfoLib/pull/1111",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5ddd15004c2cf9efce77c772402cc591c652ff77",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "MediaArea/ZenLib",
        "CVE_ID": "CVE-2020-36646",
        "Problem_Type": "CWE-476",
        "Description": "A vulnerability classified as problematic has been found in MediaArea ZenLib up to 0.4.38. This affects the function Ztring::Date_From_Seconds_1970_Local of the file Source/ZenLib/Ztring.cpp. The manipulation of the argument Value leads to unchecked return value to null pointer dereference. Upgrading to version 0.4.39 is able to address this issue. The identifier of the patch is 6475fcccd37c9cf17e0cfe263b5fe0e2e47a8408. It is recommended to upgrade the affected component. The identifier VDB-217629 was assigned to this vulnerability.",
        "URL": "https://github.com/MediaArea/ZenLib/pull/119",
        "Tag": "['Patch']",
        "fix_commit_hash": "f8148e21935bfd52f98627d26c1811235352a014",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mermaid-js/mermaid",
        "CVE_ID": "CVE-2021-35513",
        "Problem_Type": "CWE-79",
        "Description": "Mermaid before 8.11.0 allows XSS when the antiscript feature is used.",
        "URL": "https://github.com/mermaid-js/mermaid/pull/2123",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "890512ccbb3b9174825a2fcf31282c305898501f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "metal3-io/baremetal-operator",
        "CVE_ID": "CVE-2023-30841",
        "Problem_Type": "CWE-319",
        "Description": "Baremetal Operator (BMO) is a bare metal host provisioning integration for Kubernetes. Prior to version 0.3.0, ironic and ironic-inspector deployed within Baremetal Operator using the included `deploy.sh` store their `.htpasswd` files as ConfigMaps instead of Secrets. This causes the plain-text username and hashed password to be readable by anyone having a cluster-wide read-access to the management cluster, or access to the management cluster's Etcd storage. This issue is patched in baremetal-operator PR#1241, and is included in BMO release 0.3.0 onwards. As a workaround, users may modify the kustomizations and redeploy the BMO, or recreate the required ConfigMaps as Secrets per instructions in baremetal-operator PR#1241.",
        "URL": "https://github.com/metal3-io/baremetal-operator/pull/1241",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "ae34635a1e038ff42333bb3c952f5b9bfe301b83",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mgallegos/laravel-jqgrid",
        "CVE_ID": "CVE-2021-4262",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability classified as critical was found in laravel-jqgrid. Affected by this vulnerability is the function getRows of the file src/Mgallegos/LaravelJqgrid/Repositories/EloquentRepositoryAbstract.php. The manipulation leads to sql injection. The name of the patch is fbc2d94f43d0dc772767a5bdb2681133036f935e. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216271.",
        "URL": "https://github.com/mgallegos/laravel-jqgrid/pull/72",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fbc2d94f43d0dc772767a5bdb2681133036f935e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mholt/caddy",
        "CVE_ID": "CVE-2018-19148",
        "Problem_Type": "CWE-200",
        "Description": "Caddy through 0.11.0 sends incorrect certificates for certain invalid requests, making it easier for attackers to enumerate hostnames. Specifically, when unable to match a Host header with a vhost in its configuration, it serves the X.509 certificate for a randomly selected vhost in its configuration. Repeated requests (with a nonexistent hostname in the Host header) permit full enumeration of all certificates on the server. This generally permits an attacker to easily and accurately discover the existence of and relationships among hostnames that weren't meant to be public, though this information could likely have been discovered via other methods with additional effort.",
        "URL": "https://github.com/mholt/caddy/pull/2015",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "986d4ffe3de32dcb81d334d603a2f0f1d460eb2f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Microsoft/ChakraCore",
        "CVE_ID": "CVE-2017-0223",
        "Problem_Type": "CWE-119",
        "Description": "A remote code execution vulnerability exists in Microsoft Chakra Core in the way JavaScript engines render when handling objects in memory. aka \"Scripting Engine Memory Corruption Vulnerability\". This vulnerability is unique from CVE-2017-0252.",
        "URL": "https://github.com/Microsoft/ChakraCore/pull/2959",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3aeb3048200c581ff2c7a578714146669e4cd8e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Microsoft/ChakraCore",
        "CVE_ID": "CVE-2017-0252",
        "Problem_Type": "CWE-119",
        "Description": "A remote code execution vulnerability exists in Microsoft Chakra Core in the way JavaScript engines render when handling objects in memory. aka \"Scripting Engine Memory Corruption Vulnerability\". This vulnerability is unique from CVE-2017-0223.",
        "URL": "https://github.com/Microsoft/ChakraCore/pull/2959",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3aeb3048200c581ff2c7a578714146669e4cd8e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mikeizbicki/gitlearn",
        "CVE_ID": "CVE-2015-10040",
        "Problem_Type": "CWE-116",
        "Description": "A vulnerability was found in gitlearn. It has been declared as problematic. This vulnerability affects the function getGrade/getOutOf of the file scripts/config.sh of the component Escape Sequence Handler. The manipulation leads to injection. The attack can be initiated remotely. The patch is identified as 3faa5deaa509012069afe75cd03c21bda5050a64. It is recommended to apply a patch to fix this issue. VDB-218302 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/mikeizbicki/gitlearn/pull/31",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "27a3236b6e0966842ef6c52fcabe79f79fc2b0ac",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/buildkit",
        "CVE_ID": "CVE-2024-23650",
        "Problem_Type": "CWE-754",
        "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. A malicious BuildKit client or frontend could craft a request that could lead to BuildKit daemon crashing with a panic. The issue has been fixed in v0.12.5. As a workaround, avoid using BuildKit frontends from untrusted sources.\n",
        "URL": "https://github.com/moby/buildkit/pull/4601",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "1981eb123dc979fc71d097adeb5bbb84110aa9f4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/buildkit",
        "CVE_ID": "CVE-2024-23651",
        "Problem_Type": "CWE-362",
        "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. Two malicious build steps running in parallel sharing the same cache mounts with subpaths could cause a race condition that can lead to files from the host system being accessible to the build container. The issue has been fixed in v0.12.5. Workarounds include, avoiding using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing cache mounts with --mount=type=cache,source=... options.\n",
        "URL": "https://github.com/moby/buildkit/pull/4604",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3436b4d07523bd97e039195e8e31b2bc70e5d72c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/buildkit",
        "CVE_ID": "CVE-2024-23652",
        "Problem_Type": "CWE-22",
        "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. A malicious BuildKit frontend or Dockerfile using RUN --mount could trick the feature that removes empty files created for the mountpoints into removing a file outside the container, from the host system. The issue has been fixed in v0.12.5. Workarounds include avoiding using BuildKit frontends from an untrusted source or building an untrusted Dockerfile containing RUN --mount feature.",
        "URL": "https://github.com/moby/buildkit/pull/4603",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "79fa2a153da2dd1ae51f58ce3ede8d52bb3b41d5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/buildkit",
        "CVE_ID": "CVE-2024-23653",
        "Problem_Type": "CWE-863",
        "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. In addition to running containers as build steps, BuildKit also provides APIs for running interactive containers based on built images. It was possible to use these APIs to ask BuildKit to run a container with elevated privileges. Normally, running such containers is only allowed if special `security.insecure` entitlement is enabled both by buildkitd configuration and allowed by the user initializing the build request. The issue has been fixed in v0.12.5 . Avoid using BuildKit frontends from untrusted sources. \n",
        "URL": "https://github.com/moby/buildkit/pull/4602",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "c37d3c3b318850ac99417415723d9af09eca1544",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/hyperkit",
        "CVE_ID": "CVE-2021-32843",
        "Problem_Type": "CWE-476",
        "Description": "HyperKit is a toolkit for embedding hypervisor capabilities in an application. In versions 0.20210107 and prior of HyperKit, `virtio.c` has is a call to `vc_cfgread` that does not check for null which when called makes the host crash. This issue may lead to a guest crashing the host causing a denial of service. This issue is fixed in commit df0e46c7dbfd81a957d85e449ba41b52f6f7beb4.",
        "URL": "https://github.com/moby/hyperkit/pull/313",
        "Tag": "['Patch']",
        "fix_commit_hash": "acbc2d10593dfa86f490e799a7ee865db6da899f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/hyperkit",
        "CVE_ID": "CVE-2021-32844",
        "Problem_Type": "CWE-476",
        "Description": "HyperKit is a toolkit for embedding hypervisor capabilities in an application. In versions 0.20210107 and prior of HyperKit, ` vi_pci_write` has is a call to `vc_cfgwrite` that does not check for null which when called makes the host crash. This issue may lead to a guest crashing the host causing a denial of service. This issue is fixed in commit 451558fe8aaa8b24e02e34106e3bb9fe41d7ad13.",
        "URL": "https://github.com/moby/hyperkit/pull/313",
        "Tag": "['Patch']",
        "fix_commit_hash": "acbc2d10593dfa86f490e799a7ee865db6da899f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/hyperkit",
        "CVE_ID": "CVE-2021-32845",
        "Problem_Type": "CWE-252",
        "Description": "HyperKit is a toolkit for embedding hypervisor capabilities in an application. In versions 0.20210107 and prior of HyperKit, the implementation of `qnotify` at `pci_vtrnd_notify` fails to check the return value of `vq_getchain`. This leads to `struct iovec iov;` being uninitialized and used to read memory in `len = (int) read(sc->vrsc_fd, iov.iov_base, iov.iov_len);` when an attacker is able to make `vq_getchain` fail. This issue may lead to a guest crashing the host causing a denial of service and, under certain circumstance, memory corruption. This issue is fixed in commit 41272a980197917df8e58ff90642d14dec8fe948.",
        "URL": "https://github.com/moby/hyperkit/pull/313",
        "Tag": "['Patch']",
        "fix_commit_hash": "acbc2d10593dfa86f490e799a7ee865db6da899f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/hyperkit",
        "CVE_ID": "CVE-2021-32846",
        "Problem_Type": "CWE-754",
        "Description": "HyperKit is a toolkit for embedding hypervisor capabilities in an application. In versions 0.20210107, function `pci_vtsock_proc_tx` in `virtio-sock` can lead to to uninitialized memory use. In this situation, there is a check for the return value to be less or equal to `VTSOCK_MAXSEGS`, but that check is not sufficient because the function can return `-1` if it finds an error it cannot recover from. Moreover, the negative return value will be used by `iovec_pull` in a while condition that can further lead to more corruption because the function is not designed to handle a negative `iov_len`. This issue may lead to a guest crashing the host causing a denial of service and, under certain circumstance, memory corruption. This issue is fixed in commit af5eba2360a7351c08dfd9767d9be863a50ebaba.",
        "URL": "https://github.com/moby/hyperkit/pull/313",
        "Tag": "['Patch']",
        "fix_commit_hash": "acbc2d10593dfa86f490e799a7ee865db6da899f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2017-16539",
        "Problem_Type": "CWE-200",
        "Description": "The DefaultLinuxSpec function in oci/defaults.go in Docker Moby through 17.03.2-ce does not block /proc/scsi pathnames, which allows attackers to trigger data loss (when certain older Linux kernels are used) by leveraging Docker container access to write a \"scsi remove-single-device\" line to /proc/scsi/scsi, aka SCSI MICDROP.",
        "URL": "https://github.com/moby/moby/pull/35399/commits/a21ecdf3c8a343a7c94e4c4d01b178c87ca7aaa1",
        "Tag": "['Issue Tracking', 'Third Party Advisory', 'Patch']",
        "fix_commit_hash": "a21ecdf3c8a343a7c94e4c4d01b178c87ca7aaa1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2017-16539",
        "Problem_Type": "CWE-200",
        "Description": "The DefaultLinuxSpec function in oci/defaults.go in Docker Moby through 17.03.2-ce does not block /proc/scsi pathnames, which allows attackers to trigger data loss (when certain older Linux kernels are used) by leveraging Docker container access to write a \"scsi remove-single-device\" line to /proc/scsi/scsi, aka SCSI MICDROP.",
        "URL": "https://github.com/moby/moby/pull/35399",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8cefcf6af6c6bfa1d60a2d9deb80a01ce008690",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2018-12608",
        "Problem_Type": "CWE-295",
        "Description": "An issue was discovered in Docker Moby before 17.06.0. The Docker engine validated a client TLS certificate using both the configured client CA root certificate and all system roots on non-Windows systems. This allowed a client with any domain validated certificate signed by a system-trusted root CA (as opposed to one signed by the configured CA root certificate) to authenticate.",
        "URL": "https://github.com/moby/moby/pull/33182",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "190c6e8cf8b893874a33d83f78307f1bed0bfbcd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2018-20699",
        "Problem_Type": "CWE-400",
        "Description": "Docker Engine before 18.09 allows attackers to cause a denial of service (dockerd memory consumption) via a large integer in a --cpuset-mems or --cpuset-cpus value, related to daemon/daemon_unix.go, pkg/parsers/parsers.go, and pkg/sysinfo/sysinfo.go.",
        "URL": "https://github.com/moby/moby/pull/37967",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cc338c1005020e69a11788623f06924dc1d4428",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moby/moby",
        "CVE_ID": "CVE-2019-13139",
        "Problem_Type": "CWE-78",
        "Description": "In Docker before 18.09.4, an attacker who is capable of supplying or manipulating the build path for the \"docker build\" command would be able to gain command execution. An issue exists in the way \"docker build\" processes remote git URLs, and results in command injection into the underlying \"git clone\" command, leading to code execution in the context of the user executing the \"docker build\" command. This occurs because git ref can be misinterpreted as a flag.",
        "URL": "https://github.com/moby/moby/pull/38944",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "be7ac8be2ae072032a4005e8f232be3fc57e4127",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moderntribe/panel-builder",
        "CVE_ID": "CVE-2020-36626",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as critical has been found in Modern Tribe Panel Builder Plugin. Affected is the function add_post_content_filtered_to_search_sql of the file ModularContent/SearchFilter.php. The manipulation leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 4528d4f855dbbf24e9fc12a162fda84ce3bedc2f. It is recommended to apply a patch to fix this issue. VDB-216738 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/moderntribe/panel-builder/pull/173",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4528d4f855dbbf24e9fc12a162fda84ce3bedc2f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "modxcms/revolution",
        "CVE_ID": "CVE-2018-10382",
        "Problem_Type": "CWE-79",
        "Description": "MODX Revolution 2.6.3 has XSS.",
        "URL": "https://github.com/modxcms/revolution/pull/13887/commits/3241473d8213e9551cef4ed0e8ac4645cfbd10c4",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3241473d8213e9551cef4ed0e8ac4645cfbd10c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mooltipass/moolticute",
        "CVE_ID": "CVE-2019-18635",
        "Problem_Type": "CWE-476",
        "Description": "An issue was discovered in Mooltipass Moolticute through v0.42.1 and v0.42.x-testing through v0.42.5-testing. There is a NULL pointer dereference in MPDevice_win.cpp.",
        "URL": "https://github.com/mooltipass/moolticute/pull/483",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b31478f8729f6c923f95b0b017d51b7d664dce96",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "moonlight-stream/moonlight-ios",
        "CVE_ID": "CVE-2020-11024",
        "Problem_Type": "CWE-200",
        "Description": "In Moonlight iOS/tvOS before 4.0.1, the pairing process is vulnerable to a man-in-the-middle attack. The bug has been fixed in Moonlight v4.0.1 for iOS and tvOS.",
        "URL": "https://github.com/moonlight-stream/moonlight-ios/pull/405",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b0149b2fe9125a77ee11fe133382673694b6e8cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mozilla-mobile/mozilla-vpn-client",
        "CVE_ID": "CVE-2021-29978",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Multiple low security issues were discovered and fixed in a security audit of Mozilla VPN 2.x branch as part of a 3rd party security audit. This vulnerability affects Mozilla VPN < 2.3.",
        "URL": "https://github.com/mozilla-mobile/mozilla-vpn-client/pull/816",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f835964634a6a91613c251ceaaa5797a9bace9df",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mozilla/hawk",
        "CVE_ID": "CVE-2022-29167",
        "Problem_Type": "CWE-1333",
        "Description": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
        "URL": "https://github.com/mozilla/hawk/pull/286",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d10d72ca82db967f6c5fcf866ff78e3ca25ce1ab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mozilla/PollBot",
        "CVE_ID": "CVE-2021-21354",
        "Problem_Type": "CWE-601",
        "Description": "Pollbot is open source software which \"frees its human masters from the toilsome task of polling for the state of things during the Firefox release process.\" In Pollbot before version 1.4.4 there is an open redirection vulnerability in the path of \"https://pollbot.services.mozilla.com/\". An attacker can redirect anyone to malicious sites. To Reproduce type in this URL: \"https://pollbot.services.mozilla.com//evil.com/\". Affected versions will redirect to that website when you inject a payload like \"//evil.com/\". This is fixed in version 1.4.4.",
        "URL": "https://github.com/mozilla/PollBot/pull/333",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90a9e9a80eb402a65f560eb0e2412b3efdebf87d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mrbobbybryant/Jobs-Plugin",
        "CVE_ID": "CVE-2014-125035",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in Jobs-Plugin. Affected by this vulnerability is an unknown functionality. The manipulation leads to cross site scripting. The attack can be launched remotely. The identifier of the patch is b8a56718b1d42834c6ec51d9c489c5dc20471d7b. It is recommended to apply a patch to fix this issue. The identifier VDB-217189 was assigned to this vulnerability.",
        "URL": "https://github.com/mrbobbybryant/Jobs-Plugin/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "beb98790e4b1db68f482c8190f6e52b0be9b9ffa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "msyk/FMDataAPI",
        "CVE_ID": "CVE-2021-4431",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in msyk FMDataAPI up to 22. Affected is an unknown function of the file FMDataAPI_Sample.php. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 23 is able to address this issue. The patch is identified as 3bd1709a8f7b1720529bf5dfc9855ad609f436cf. It is recommended to upgrade the affected component. VDB-244494 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/msyk/FMDataAPI/pull/54",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "bdbec9656c6bf64a2907fd91ecd02037f6c63007",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "msys2/MINGW-packages",
        "CVE_ID": "CVE-2023-25815",
        "Problem_Type": "CWE-22",
        "Description": "In Git for Windows, the Windows port of Git, no localized messages are shipped with the installer. As a consequence, Git is expected not to localize messages at all, and skips the gettext initialization. However, due to a change in MINGW-packages, the `gettext()` function's implicit initialization no longer uses the runtime prefix but uses the hard-coded path `C:\\mingw64\\share\\locale` to look for localized messages. And since any authenticated user has the permission to create folders in `C:\\` (and since `C:\\mingw64` does not typically exist), it is possible for low-privilege users to place fake messages in that location where `git.exe` will pick them up in version 2.40.1.\n\nThis vulnerability is relatively hard to exploit and requires social engineering. For example, a legitimate message at the end of a clone could be maliciously modified to ask the user to direct their web browser to a malicious website, and the user might think that the message comes from Git and is legitimate. It does require local write access by the attacker, though, which makes this attack vector less likely. Version 2.40.1 contains a patch for this issue. Some workarounds are available. Do not work on a Windows machine with shared accounts, or alternatively create a `C:\\mingw64` folder and leave it empty. Users who have administrative rights may remove the permission to create folders in `C:\\`.",
        "URL": "https://github.com/msys2/MINGW-packages/pull/10461",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a545a0862ee04e4499ed274350c5cab0d0102683",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mullvad/mullvadvpn-app",
        "CVE_ID": "CVE-2023-50446",
        "Problem_Type": "CWE-732",
        "Description": "An issue was discovered in Mullvad VPN Windows app before 2023.6-beta1. Insufficient permissions on a directory allow any local unprivileged user to escalate privileges to SYSTEM.",
        "URL": "https://github.com/mullvad/mullvadvpn-app/pull/5398",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "e67621953939078ac297375fd584e432e848764c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mumble-voip/mumble",
        "CVE_ID": "CVE-2018-20743",
        "Problem_Type": "CWE-20",
        "Description": "murmur in Mumble through 1.2.19 before 2018-08-31 mishandles multiple concurrent requests that are persisted in the database, which allows remote attackers to cause a denial of service (daemon hang or crash) via a message flood.",
        "URL": "https://github.com/mumble-voip/mumble/pull/3512",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f7221c14efa14c4c73b64782673d309e97f87e61",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mumble-voip/mumble",
        "CVE_ID": "CVE-2018-20743",
        "Problem_Type": "CWE-20",
        "Description": "murmur in Mumble through 1.2.19 before 2018-08-31 mishandles multiple concurrent requests that are persisted in the database, which allows remote attackers to cause a denial of service (daemon hang or crash) via a message flood.",
        "URL": "https://github.com/mumble-voip/mumble/pull/3510",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "44b9004d2c208b42c6f8ffa99938361e31f5a071",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mumble-voip/mumble",
        "CVE_ID": "CVE-2020-13962",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Qt 5.12.2 through 5.14.2, as used in unofficial builds of Mumble 1.3.0 and other products, mishandles OpenSSL's error queue, which can cause a denial of service to QSslSocket users. Because errors leak in unrelated TLS sessions, an unrelated session may be disconnected when any handshake fails. (Mumble 1.3.1 is not affected, regardless of the Qt version.)",
        "URL": "https://github.com/mumble-voip/mumble/pull/4032",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8cdcc28f8f9fc32fed7d48df352eb010398eea62",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mumble-voip/mumble",
        "CVE_ID": "CVE-2021-27229",
        "Problem_Type": "CWE-59",
        "Description": "Mumble before 1.3.4 allows remote code execution if a victim navigates to a crafted URL on a server list and clicks on the Open Webpage text.",
        "URL": "https://github.com/mumble-voip/mumble/pull/4733",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "817d2c1a03cdeb0d951b0460c5c03c504fdeed40",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mybatis/mybatis-3",
        "CVE_ID": "CVE-2020-26945",
        "Problem_Type": "CWE-502",
        "Description": "MyBatis before 3.5.6 mishandles deserialization of object streams.",
        "URL": "https://github.com/mybatis/mybatis-3/pull/2079",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d89b30095f4687ae96119d70ef4622128efdd73f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mybbgroup/MyBB_Thank-you-like-plugin",
        "CVE_ID": "CVE-2018-14888",
        "Problem_Type": "CWE-79",
        "Description": "inc/plugins/thankyoulike.php in the Eldenroot Thank You/Like plugin before 3.1.0 for MyBB allows XSS via a post or thread subject.",
        "URL": "https://github.com/mybbgroup/MyBB_Thank-you-like-plugin/pull/199",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "da8d54d0748d72ad97793560b9e95b895ebacd15",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nabby27/CMS",
        "CVE_ID": "CVE-2018-20568",
        "Problem_Type": "CWE-89",
        "Description": "Administrator/index.php in Ivan Cordoba Generic Content Management System (CMS) through 2018-04-28 allows SQL injection for authentication bypass.",
        "URL": "https://github.com/nabby27/CMS/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bdc57ab56433446692ad003844f69152be0302f8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nabby27/CMS",
        "CVE_ID": "CVE-2018-20589",
        "Problem_Type": "CWE-79",
        "Description": "Ivan Cordoba Generic Content Management System (CMS) through 2018-04-28 has XSS via the Administrator/add_pictures.php article ID.",
        "URL": "https://github.com/nabby27/CMS/pull/3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e530aae4ae5feae8bff332a5733c791e8cc80c90",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nabby27/CMS",
        "CVE_ID": "CVE-2018-20590",
        "Problem_Type": "CWE-79",
        "Description": "Ivan Cordoba Generic Content Management System (CMS) through 2018-04-28 has XSS via the Administrator/users.php user ID.",
        "URL": "https://github.com/nabby27/CMS/pull/3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e530aae4ae5feae8bff332a5733c791e8cc80c90",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "NagiosEnterprises/ncpa",
        "CVE_ID": "CVE-2021-4285",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in Nagios NCPA. This vulnerability affects unknown code of the file agent/listener/templates/tail.html. The manipulation of the argument name leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 2.4.0 is able to address this issue. The name of the patch is 5abbcd7aa26e0fc815e6b2b0ffe1c15ef3e8fab5. It is recommended to upgrade the affected component. VDB-216874 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/NagiosEnterprises/ncpa/pull/834",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e1b26c67f80053887b939262e868f568fcb21d96",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nahsra/antisamy",
        "CVE_ID": "CVE-2021-35043",
        "Problem_Type": "CWE-79",
        "Description": "OWASP AntiSamy before 1.6.4 allows XSS via HTML attributes when using the HTML output serializer (XHTML is not affected). This was demonstrated by a javascript: URL with &#00058 as the replacement for the : character.",
        "URL": "https://github.com/nahsra/antisamy/pull/87",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a1c2f8a9e46872565229a9fe5f84b3b3bffbc6c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nasa/PyBlock",
        "CVE_ID": "CVE-2018-1000046",
        "Problem_Type": "CWE-502",
        "Description": "NASA Pyblock version v1.0 - v1.3 contains a CWE-502 vulnerability in Radar data parsing library that can result in remote code execution. This attack appear to be exploitable via Victim opening a specially crafted radar data file. This vulnerability appears to have been fixed in v1.4.",
        "URL": "https://github.com/nasa/PyBlock/pull/5",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f53094b3c2ab81daa642424fe3d636960a9ed93e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nasa/SingleDop",
        "CVE_ID": "CVE-2018-1000045",
        "Problem_Type": "CWE-502",
        "Description": "NASA Singledop version v1.0 contains a CWE-502 vulnerability in NASA Singledop library (Weather data) that can result in remote code execution. This attack appear to be exploitable via Victim opening a specially crafted radar data file. This vulnerability appears to have been fixed in v1.1.",
        "URL": "https://github.com/nasa/SingleDop/pull/19",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "752a98b1f62c1ae1d6b1b30f1da6120c050cf644",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "NationalSecurityAgency/ghidra",
        "CVE_ID": "CVE-2023-22671",
        "Problem_Type": "CWE-77",
        "Description": "Ghidra/RuntimeScripts/Linux/support/launch.sh in NSA Ghidra through 10.2.2 passes user-provided input into eval, leading to command injection when calling analyzeHeadless with untrusted input.",
        "URL": "https://github.com/NationalSecurityAgency/ghidra/pull/4872",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ffbcbefbfea1f78b63519962020994a2ad3d5848",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nats-io/nats-server",
        "CVE_ID": "CVE-2019-13126",
        "Problem_Type": "CWE-190",
        "Description": "An integer overflow in NATS Server before 2.0.2 allows a remote attacker to crash the server by sending a crafted request. If authentication is enabled, then the remote attacker must have first authenticated.",
        "URL": "https://github.com/nats-io/nats-server/pull/1053",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a171864ae7dfe122da40eb5fadd9838a4425a011",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nats-io/nats-server",
        "CVE_ID": "CVE-2020-28466",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects all versions of package github.com/nats-io/nats-server/server. Untrusted accounts are able to crash the server using configs that represent a service export/import cycles. Disclaimer from the maintainers: Running a NATS service which is exposed to untrusted users presents a heightened risk. Any remote execution flaw or equivalent seriousness, or denial-of-service by unauthenticated users, will lead to prompt releases by the NATS maintainers. Fixes for denial of service issues with no threat of remote execution, when limited to account holders, are likely to just be committed to the main development branch with no special attention. Those who are running such services are encouraged to build regularly from git.",
        "URL": "https://github.com/nats-io/nats-server/pull/1731",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18108be37450c7e2469a1e82540ec9458fea36ec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "neo4j/apoc",
        "CVE_ID": "CVE-2023-23926",
        "Problem_Type": "CWE-611",
        "Description": "APOC (Awesome Procedures on Cypher) is an add-on library for Neo4j. An XML External Entity (XXE) vulnerability found in the apoc.import.graphml procedure of APOC core plugin prior to version 5.5.0 and 4.4.0.14 (4.4 branch) in Neo4j graph database. XML External Entity (XXE) injection occurs when the XML parser allows external entities to be resolved. The XML parser used by the apoc.import.graphml procedure was not configured in a secure way and therefore allowed this. External entities can be used to read local files, send HTTP requests, and perform denial-of-service attacks on the application. Abusing the XXE vulnerability enabled assessors to read local files remotely. Although with the level of privileges assessors had this was limited to one-line files. With the ability to write to the database, any file could have been read. Additionally, assessors noted, with local testing, the server could be crashed by passing in improperly formatted XML. The minimum version containing a patch for this vulnerability is 5.5.0. Those who cannot upgrade the library can control the allowlist of the procedures that can be used in your system.",
        "URL": "https://github.com/neo4j/apoc/pull/310",
        "Tag": "['Patch']",
        "fix_commit_hash": "f175f1f1f663d29fc151c297b56d154255eb7016",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "neovim/neovim",
        "CVE_ID": "CVE-2019-12735",
        "Problem_Type": "CWE-78",
        "Description": "getchar.c in Vim before 8.1.1365 and Neovim before 0.3.6 allows remote attackers to execute arbitrary OS commands via the :source! command in a modeline, as demonstrated by execute in Vim, and assert_fails or nvim_input in Neovim.",
        "URL": "https://github.com/neovim/neovim/pull/10082",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4553fc5e6cb6c8c43f57c173d01b31a61e51d13f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nestjs/nest",
        "CVE_ID": "CVE-2023-26108",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Versions of the package @nestjs/core before 9.0.5 are vulnerable to Information Exposure via the StreamableFile pipe. Exploiting this vulnerability is possible when the client cancels a request while it is streaming a StreamableFile, the stream wrapped by the StreamableFile will be kept open.",
        "URL": "https://github.com/nestjs/nest/pull/9819",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "429dfa13820403903619cfa9812b517d90df1d3a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "NethServer/nethserver-phonehome",
        "CVE_ID": "CVE-2021-4313",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in NethServer phonenehome. It has been rated as critical. This issue affects the function get_info/get_country_coor of the file server/index.php. The manipulation leads to sql injection. The identifier of the patch is 759c30b0ddd7d493836bbdf695cf71624b377391. It is recommended to apply a patch to fix this issue. The identifier VDB-218393 was assigned to this vulnerability.",
        "URL": "https://github.com/NethServer/nethserver-phonehome/pull/10",
        "Tag": "['Patch']",
        "fix_commit_hash": "aaf6185f42fc4cb00b0d76750c961f41282bffe0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "netplex/json-smart-v1",
        "CVE_ID": "CVE-2021-31684",
        "Problem_Type": "CWE-787",
        "Description": "A vulnerability was discovered in the indexOf function of JSONParserByteArray in JSON Smart versions 1.3 and 2.4 which causes a denial of service (DOS) via a crafted web request.",
        "URL": "https://github.com/netplex/json-smart-v1/pull/11",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "38768e321ebe7caea808585c0fb67ad344a2ebc6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "netplex/json-smart-v2",
        "CVE_ID": "CVE-2021-31684",
        "Problem_Type": "CWE-787",
        "Description": "A vulnerability was discovered in the indexOf function of JSONParserByteArray in JSON Smart versions 1.3 and 2.4 which causes a denial of service (DOS) via a crafted web request.",
        "URL": "https://github.com/netplex/json-smart-v2/pull/68",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "21dad441f96863d41ad53a28c48478b9ef2ce1a7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Newcomer1989/TSN-Ranksystem",
        "CVE_ID": "CVE-2018-25073",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability has been found in Newcomer1989 TSN-Ranksystem up to 1.2.6 and classified as problematic. This vulnerability affects the function getlog of the file webinterface/bot.php. The manipulation leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.2.7 is able to address this issue. The patch is identified as b3a3cd8efe2cd3bd3c5b3b7abf2fe80dbee51b77. It is recommended to upgrade the affected component. VDB-218002 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/Newcomer1989/TSN-Ranksystem/pull/467",
        "Tag": "['Patch']",
        "fix_commit_hash": "b3a3cd8efe2cd3bd3c5b3b7abf2fe80dbee51b77",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "newspaperclub/pdf_info",
        "CVE_ID": "CVE-2022-36231",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "pdf_info 0.5.3 is vulnerable to Command Execution because the Ruby code uses backticks instead of Open3.",
        "URL": "https://github.com/newspaperclub/pdf_info/pull/15",
        "Tag": "['Patch']",
        "fix_commit_hash": "54d4e01da111a293fc4fb45d5b85669f38afc8b7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/android",
        "CVE_ID": "CVE-2021-32694",
        "Problem_Type": "CWE-248",
        "Description": "Nextcloud Android app is the Android client for Nextcloud. In versions prior to 3.15.1, a malicious application on the same device is possible to crash the Nextcloud Android Client due to an uncaught exception. The vulnerability is patched in version 3.15.1.",
        "URL": "https://github.com/nextcloud/android/pull/7919",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "33945b880bdab610fe78ef3901dd22abb70cf114",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/android",
        "CVE_ID": "CVE-2021-32695",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud Android app is the Android client for Nextcloud. In versions prior to 3.16.1, a malicious app on the same device could have gotten access to the shared preferences of the Nextcloud Android application. This required user-interaction as a victim had to initiate the sharing flow and choose the malicious app. The shared preferences contain some limited private data such as push tokens and the account name. The vulnerability is patched in version 3.16.1.",
        "URL": "https://github.com/nextcloud/android/pull/8433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8af3112fff7104e4e3a5d612be8e783e8fea6f4d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/android",
        "CVE_ID": "CVE-2022-24885",
        "Problem_Type": "CWE-287",
        "Description": "Nextcloud Android app is the Android client for Nextcloud, a self-hosted productivity platform. Prior to version 3.19.1, users can bypass a lock on the Nextcloud app on an Android device by repeatedly reopening the app. Version 3.19.1 contains a fix for the problem. There are currently no known workarounds.",
        "URL": "https://github.com/nextcloud/android/pull/9816",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9723c0458ef7acd66da38324e0a57bfb4434e96f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/android",
        "CVE_ID": "CVE-2022-29160",
        "Problem_Type": "CWE-459",
        "Description": "Nextcloud Android is the Android client for Nextcloud, a self-hosted productivity platform. Prior to version 3.19.0, sensitive tokens, images, and user related details exist after deletion of a user account. This could result in misuse of the former account holder's information. Nextcloud Android version 3.19.0 contains a patch for this issue. There are no known workarounds available.",
        "URL": "https://github.com/nextcloud/android/pull/9644",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d4fa2994ca974aadeb5beda0ddbad143ff3eba2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/android",
        "CVE_ID": "CVE-2022-39210",
        "Problem_Type": "CWE-22",
        "Description": "Nextcloud android is the official Android client for the Nextcloud home server platform. Internal paths to the Nextcloud Android app files are not properly protected. As a result access to internal files of the from within the Nextcloud Android app is possible. This may lead to a leak of sensitive information in some cases. It is recommended that the Nextcloud Android app is upgraded to 3.21.0. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/android/pull/10544",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1194a5c866d3506da067be67637de2d9d69ebf86",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/android",
        "CVE_ID": "CVE-2023-28646",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud android is an android app for interfacing with the nextcloud home server ecosystem. In versions from 3.7.0 and before 3.24.1 an attacker that has access to the unlocked physical device can bypass the Nextcloud Android Pin/passcode protection via a thirdparty app. This allows to see meta information like sharer, sharees and activity of files. It is recommended that the Nextcloud Android app is upgraded to 3.24.1. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/android/pull/11242",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7368809f370ab501c4a2384202c231065930fd04",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/calendar",
        "CVE_ID": "CVE-2022-24838",
        "Problem_Type": "CWE-74",
        "Description": "Nextcloud Calendar is a calendar application for the nextcloud framework. SMTP Command Injection in Appointment Emails via Newlines: as newlines and special characters are not sanitized in the email value in the JSON request, a malicious attacker can inject newlines to break out of the `RCPT TO:<BOOKING USER'S EMAIL> ` SMTP command and begin injecting arbitrary SMTP commands. It is recommended that Calendar is upgraded to 3.2.2. There are no workaround available.",
        "URL": "https://github.com/nextcloud/calendar/pull/4073",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "09428f525bfaf2709c314c24cf2774ffc52c9661",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/calendar",
        "CVE_ID": "CVE-2023-33183",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Calendar app for Nextcloud easily sync events from various devices with your Nextcloud. Some internal paths of the website are disclosed when the SMTP server is unavailable. It is recommended that the Calendar app is updated to 3.5.5 or 4.2.3\n\n",
        "URL": "https://github.com/nextcloud/calendar/pull/4938",
        "Tag": "['Patch']",
        "fix_commit_hash": "b6230de225d8cec6e26d2814834c869d4484945b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/calendar",
        "CVE_ID": "CVE-2023-45150",
        "Problem_Type": "CWE-354",
        "Description": "Nextcloud calendar is a calendar app for the Nextcloud server platform. Due to missing precondition checks the server was trying to validate strings of any length as email addresses even when megabytes of data were provided, eventually making the server busy and unresponsive. It is recommended that the Nextcloud Calendar app is upgraded to 4.4.4. The only workaround for users unable to upgrade is to disable the calendar app.",
        "URL": "https://github.com/nextcloud/calendar/pull/5358",
        "Tag": "['Patch']",
        "fix_commit_hash": "afb60be7d579fdaab9fac66a1228f7c16ea74a0e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/calendar",
        "CVE_ID": "CVE-2023-48308",
        "Problem_Type": "CWE-212",
        "Description": "Nextcloud/Cloud is a calendar app for Nextcloud. An attacker can gain access to stacktrace and internal paths of the server when generating an exception while editing a calendar appointment. It is recommended that the Nextcloud Calendar app is upgraded to 4.5.3\n",
        "URL": "https://github.com/nextcloud/calendar/pull/5553",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "438295522473e0df6944907191d83915b698e0cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/circles",
        "CVE_ID": "CVE-2021-37630",
        "Problem_Type": "CWE-639",
        "Description": "Nextcloud Circles is an open source social network built for the nextcloud ecosystem. In affected versions the Nextcloud Circles application allowed any user to join any \"Secret Circle\" without approval by the Circle owner leaking private information. It is recommended that Nextcloud Circles is upgraded to 0.19.15, 0.20.11 or 0.21.4. There are no workarounds for this issue.",
        "URL": "https://github.com/nextcloud/circles/pull/768",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3bd70e2ca592ed020c8d5db138858de8ba4e299c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/circles",
        "CVE_ID": "CVE-2022-29163",
        "Problem_Type": "CWE-671",
        "Description": "Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Prior to versions 22.2.6 and 23.0.3, a user can create a link that is not password protected even if the administrator requires links to be password protected. Versions 22.2.6 and 23.0.3 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/nextcloud/circles/pull/926",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "22238597fb9045e748119247fceaac7321f0a31e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/circles",
        "CVE_ID": "CVE-2022-29163",
        "Problem_Type": "CWE-671",
        "Description": "Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Prior to versions 22.2.6 and 23.0.3, a user can create a link that is not password protected even if the administrator requires links to be password protected. Versions 22.2.6 and 23.0.3 contain a patch for this issue. There are currently no known workarounds.",
        "URL": "https://github.com/nextcloud/circles/pull/866",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2e38ffd6b8b9db664cb4cdb540d92d300267eda1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/contacts",
        "CVE_ID": "CVE-2023-33182",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Contacts app for Nextcloud easily syncs contacts from various devices with your Nextcloud and allows editing. The unsanitized SVG is converted to a JavaScript blob (in memory data) that the Avatar can't render. Due to this constellation the missing sanitization does not seem to be exploitable. It is recommended that the Contacts app is upgraded to 5.0.3 or 4.2.4\n\n",
        "URL": "https://github.com/nextcloud/contacts/pull/3199",
        "Tag": "['Patch']",
        "fix_commit_hash": "9fea0a9c9790e124f5ebe0bba1d156b6024b3d27",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2020-8297",
        "Problem_Type": "CWE-639",
        "Description": "Nextcloud Deck before 1.0.2 suffers from an insecure direct object reference (IDOR) vulnerability that permits users with a duplicate user identifier to access deck data of a previous deleted user.",
        "URL": "https://github.com/nextcloud/deck/pull/1976",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9849ad09c897357cad6c7f94d09f4e8d601ca5d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2021-37631",
        "Problem_Type": "CWE-639",
        "Description": "Deck is an open source kanban style organization tool aimed at personal planning and project organization for teams integrated with Nextcloud. In affected versions the Deck application didn't properly check membership of users in a Circle. This allowed other users in the instance to gain access to boards that have been shared with a Circle, even if the user was not a member of the circle. It is recommended that Nextcloud Deck is upgraded to 1.5.1, 1.4.4 or 1.2.9. If you are unable to update it is advised to disable the Deck plugin.",
        "URL": "https://github.com/nextcloud/deck/pull/3217",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f2052702b51b8dcdfe0e69b4a0ed09b336b1d988",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2021-39225",
        "Problem_Type": "CWE-862",
        "Description": "Nextcloud is an open-source, self-hosted productivity platform. A missing permission check in Nextcloud Deck before 1.2.9, 1.4.5 and 1.5.3 allows another authenticated users to access Deck cards of another user. It is recommended that the Nextcloud Deck App is upgraded to 1.2.9, 1.4.5 or 1.5.3. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/nextcloud/deck/pull/3316",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0783fde14b594dda4b1512469ec2c27651d7de01",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2022-24906",
        "Problem_Type": "CWE-209",
        "Description": "Nextcloud Deck is a Kanban-style project & personal management tool for Nextcloud, similar to Trello. The full path of the application is exposed to unauthorized users. It is recommended that the Nextcloud Deck app is upgraded to 1.2.11, 1.4.6, or 1.5.4. There is no workaround available.",
        "URL": "https://github.com/nextcloud/deck/pull/3384",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0ce431e7a634af60937ab71bdbb8c264d4738679",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2022-29159",
        "Problem_Type": "CWE-639",
        "Description": "Nextcloud Deck is a Kanban-style project & personal management tool for Nextcloud. In versions prior to 1.4.8, 1.5.6, and 1.6.1, an authenticated user can move stacks with cards from their own board to a board of another user. The Nextcloud Deck app contains a patch for this issue in versions 1.4.8, 1.5.6, and 1.6.1. There are no known currently-known workarounds available.",
        "URL": "https://github.com/nextcloud/deck/pull/3541",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b00c8a119670e2f8cfc167605afc9e3d262e3294",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2023-22469",
        "Problem_Type": "CWE-922",
        "Description": "Deck is a kanban style organization tool aimed at personal planning and project organization for teams integrated with Nextcloud. When getting the reference preview for Deck cards the user has no access to, unauthorized user could eventually get the cached data of a user that has access. There are currently no known workarounds. It is recommended that the Nextcloud app Deck is upgraded to 1.8.2.\n",
        "URL": "https://github.com/nextcloud/deck/pull/4196",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "071cfca2413597c577d8652b572f71a1f7964d26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2023-22470",
        "Problem_Type": "CWE-20",
        "Description": "Nextcloud Deck is a kanban style organization tool aimed at personal planning and project organization for teams integrated with Nextcloud. A database error can be generated potentially causing a DoS when performed multiple times. There are currently no known workarounds. It is recommended that the Nextcloud Server is upgraded to 1.6.5 or 1.7.3 or 1.8.2.",
        "URL": "https://github.com/nextcloud/deck/pull/4059",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a2310610433ce73cafee8ba3866764e08da2d48f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/deck",
        "CVE_ID": "CVE-2023-22471",
        "Problem_Type": "CWE-639",
        "Description": "Deck is a kanban style organization tool aimed at personal planning and project organization for teams integrated with Nextcloud. Broken access control allows a user to delete attachments of other users. There are currently no known workarounds. It is recommended that the Nextcloud Deck app is upgraded to 1.6.5 or 1.7.3 or 1.8.2.",
        "URL": "https://github.com/nextcloud/deck/pull/4173",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "805f185191a6f98dd9de6764073c63fa7a07b018",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2021-22879",
        "Problem_Type": "CWE-74",
        "Description": "Nextcloud Desktop Client prior to 3.1.3 is vulnerable to resource injection by way of missing validation of URLs, allowing a malicious server to execute remote commands. User interaction is needed for exploitation.",
        "URL": "https://github.com/nextcloud/desktop/pull/2906",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7f92d8dccb258b15538cd5ef8d2679012e7202de",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2021-22895",
        "Problem_Type": "CWE-295",
        "Description": "Nextcloud Desktop Client before 3.3.1 is vulnerable to improper certificate validation due to lack of SSL certificate verification when using the \"Register with a Provider\" flow.",
        "URL": "https://github.com/nextcloud/desktop/pull/2926",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b1ddd0e491b2af0ed040e658d8bcde2a7a61c9fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2021-32728",
        "Problem_Type": "CWE-295",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server with a computer. Clients using the Nextcloud end-to-end encryption feature download the public and private key via an API endpoint. In versions prior to 3.3.0, the Nextcloud Desktop client fails to check if a private key belongs to previously downloaded public certificate. If the Nextcloud instance serves a malicious public key, the data would be encrypted for this key and thus could be accessible to a malicious actor. This issue is fixed in Nextcloud Desktop Client version 3.3.0. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/nextcloud/desktop/pull/3338",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba5f51741729e6217a6cfaa62420f9df79bcfac2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2021-37617",
        "Problem_Type": "CWE-427",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server with a computer. The Nextcloud Desktop Client invokes its uninstaller script when being installed to make sure there are no remnants of previous installations. In versions 3.0.3 through 3.2.4, the Client searches the `Uninstall.exe` file in a folder that can be written by regular users. This could lead to a case where a malicious user creates a malicious `Uninstall.exe`, which would be executed with administrative privileges on the Nextcloud Desktop Client installation. This issue is fixed in Nextcloud Desktop Client version 3.3.0. As a workaround, do not allow untrusted users to create content in the `C:\\` system folder and verify that there is no malicious `C:\\Uninstall.exe` file on the system.",
        "URL": "https://github.com/nextcloud/desktop/pull/3497",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80267adb3a8076d91d5bea6d7544d8b759cc68b2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2022-39331",
        "Problem_Type": "CWE-79",
        "Description": "Nexcloud desktop is the Desktop sync client for Nextcloud. An attacker can inject arbitrary HyperText Markup Language into the Desktop Client application in the notifications. It is recommended that the Nextcloud Desktop client is upgraded to 3.6.1. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/desktop/pull/4944",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7397d990cc444dbe0ac05f59222b2364480b1e26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2022-39332",
        "Problem_Type": "CWE-79",
        "Description": "Nexcloud desktop is the Desktop sync client for Nextcloud. An attacker can inject arbitrary HyperText Markup Language into the Desktop Client application via user status and information. It is recommended that the Nextcloud Desktop client is upgraded to 3.6.1. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/desktop/pull/4972",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "38bc1e271818e53822d5a089b88b0447473973c8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2022-39333",
        "Problem_Type": "CWE-79",
        "Description": "Nexcloud desktop is the Desktop sync client for Nextcloud. An attacker can inject arbitrary HyperText Markup Language into the Desktop Client application. It is recommended that the Nextcloud Desktop client is upgraded to 3.6.1. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/desktop/pull/4972",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "38bc1e271818e53822d5a089b88b0447473973c8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2022-39334",
        "Problem_Type": "CWE-295",
        "Description": "Nextcloud also ships a CLI utility called nextcloudcmd which is sometimes used for automated scripting and headless servers. Versions of nextcloudcmd prior to 3.6.1 would incorrectly trust invalid TLS certificates, which may enable a Man-in-the-middle attack that exposes sensitive data or credentials to a network attacker. This affects the CLI only. It does not affect the standard GUI desktop Nextcloud clients, and it does not affect the Nextcloud server.",
        "URL": "https://github.com/nextcloud/desktop/pull/5022",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42f6a63361e3dc31dce32fd50ac08a71333961bc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2022-41882",
        "Problem_Type": "CWE-94",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server with your computer. In version 3.6.0, if a user received a malicious file share and has it synced locally or the virtual filesystem enabled and clicked a nc://open/ link it will open the default editor for the file type of the shared file, which on Windows can also sometimes mean that a file depending on the type, e.g. \"vbs\", is being executed. It is recommended that the Nextcloud Desktop client is upgraded to version 3.6.1. As a workaround, users can block the Nextcloud Desktop client 3.6.0 by setting the `minimum.supported.desktop.version` system config to `3.6.1` on the server, so new files designed to use this attack vector are not downloaded anymore. Already existing files can still be used. Another workaround would be to enforce shares to be accepted by setting the `sharing.force_share_accept` system config to `true` on the server, so new files designed to use this attack vector are not downloaded anymore. Already existing shares can still be abused.",
        "URL": "https://github.com/nextcloud/desktop/pull/5039",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5baa254f3dfe66367d7d08c7fe4e2d257433a9a2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2023-22472",
        "Problem_Type": "CWE-352",
        "Description": "Deck is a kanban style organization tool aimed at personal planning and project organization for teams integrated with Nextcloud. It is possible to make a user send any POST request with an arbitrary body given they click on a malicious deep link on a Windows computer. (e.g. in an email, chat link, etc). There are currently no known workarounds. It is recommended that the Nextcloud Desktop client is upgraded to 3.6.2.\n",
        "URL": "https://github.com/nextcloud/desktop/pull/5106",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6fa2e60bba99f9be7c57eefc447252f7199a5a25",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2023-23942",
        "Problem_Type": "CWE-79",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from a Nextcloud Server with your computer. Versions prior to 3.6.3 are missing sanitisation on qml labels which are used for basic HTML elements such as `strong`, `em` and `head` lines in the UI of the desktop client. The lack of sanitisation may allow for javascript injection. It is recommended that the Nextcloud Desktop Client is upgraded to 3.6.3. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/desktop/pull/5233",
        "Tag": "['Patch']",
        "fix_commit_hash": "98e6ab2c646f5766ce08a841f3bb6e7f2516fb1f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2023-28997",
        "Problem_Type": "CWE-323",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server. Starting with version 3.0.0 and prior to version 3.6.5, a malicious server administrator can recover and modify the contents of end-to-end encrypted files. Users should upgrade the Nextcloud Desktop client to 3.6.5 to receive a patch. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/desktop/pull/5324",
        "Tag": "['Patch']",
        "fix_commit_hash": "593377a4cbc696a0c21db85d78b514da2290e0eb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2023-28998",
        "Problem_Type": "CWE-325",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server. Starting with version 3.0.0 and prior to version 3.6.5, a malicious server administrator can gain full access to an end-to-end encrypted folder. They can decrypt files, recover the folder structure, and add new files.? Users should upgrade the Nextcloud Desktop client to 3.6.5 to receive a patch. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/desktop/pull/5323",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "14072703c4f7e619a7fc6f92b05143c9333df6e8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2023-28999",
        "Problem_Type": "CWE-311",
        "Description": "Nextcloud is an open-source productivity platform. In Nextcloud Desktop client 3.0.0 until 3.8.0, Nextcloud Android app 3.13.0 until 3.25.0, and Nextcloud iOS app 3.0.5 until 4.8.0, a malicious server administrator can gain full access to an end-to-end encrypted folder. They can decrypt files, recover the folder structure and add new files.? This issue is fixed in Nextcloud Desktop 3.8.0, Nextcloud Android 3.25.0, and Nextcloud iOS 4.8.0. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/desktop/pull/5560",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "086eb14b83c2475e5d47b5b36f714e018b25045f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/desktop",
        "CVE_ID": "CVE-2023-29000",
        "Problem_Type": "CWE-295",
        "Description": "The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server. Starting with version 3.0.0 and prior to version 3.7.0, by trusting that the server will return a certificate that belongs to the keypair of the user, a malicious server could get the desktop client to encrypt files with a key known to the attacker. This issue is fixed in Nextcloud Desktop 3.7.0. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/desktop/pull/4949",
        "Tag": "['Patch']",
        "fix_commit_hash": "f1c3ceeee5726f2905a58bd0e4aade6b4ba25281",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/end_to_end_encryption",
        "CVE_ID": "CVE-2023-35173",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Nextcloud End-to-end encryption app provides all the necessary APIs to implement End-to-End encryption on the client side. By providing an invalid meta data file, an attacker can make previously dropped files inaccessible. It is recommended that the Nextcloud End-to-end encryption app is upgraded to version 1.12.4 that contains the fix.\n",
        "URL": "https://github.com/nextcloud/end_to_end_encryption/pull/435",
        "Tag": "['Patch']",
        "fix_commit_hash": "329dfcaa062a68a0d8ec08e1b0d5b08eeadb8981",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/files_accesscontrol",
        "CVE_ID": "CVE-2022-36075",
        "Problem_Type": "CWE-269",
        "Description": "Nextcloud files access control is a nextcloud app to manage access control for files. Users with limited access can see file names in certain cases where they do not have privilege to do so. This issue has been addressed and it is recommended that the Nextcloud Files Access Control app is upgraded to 1.12.2, 1.13.1 or 1.14.1. There are no known workarounds for this issue",
        "URL": "https://github.com/nextcloud/files_accesscontrol/pull/248",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e09f3c8487749c3ed29591bbe3bdb2d41ddf39d2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/files_automatedtagging",
        "CVE_ID": "CVE-2023-30539",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud is a personal home server system. Depending on the set up tags and other workflows this issue can be used to limit access of others or being able to grant them access when there are system tag based files access control or files retention rules. It is recommended that the Nextcloud Server is upgraded to 24.0.11 or 25.0.5, the Nextcloud Enterprise Server to 21.0.9.11, 22.2.10.11, 23.0.12.6, 24.0.11 or 25.0.5, and the Nextcloud Files automated tagging app to 1.11.1, 1.12.1, 1.13.1, 1.14.2, 1.15.3 or 1.16.1. Users unable to upgrade should disable all workflow related apps. Users are advised to upgrade.",
        "URL": "https://github.com/nextcloud/files_automatedtagging/pull/705",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "626deb1d11f86ffa33164c22788615b68f037c1a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/guests",
        "CVE_ID": "CVE-2024-22401",
        "Problem_Type": "CWE-281",
        "Description": "Nextcloud guests app is a utility to create guest users which can only see files shared with them. In affected versions users could change the allowed list of apps, allowing them to use apps that were not intended to be used. It is recommended that the Guests app is upgraded to 2.4.1, 2.5.1 or 3.0.1. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/guests/pull/1082",
        "Tag": "['Patch']",
        "fix_commit_hash": "119d106c2c7c30a9379b8b509159a91272eceed4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/guests",
        "CVE_ID": "CVE-2024-22402",
        "Problem_Type": "CWE-281",
        "Description": "Nextcloud guests app is a utility to create guest users which can only see files shared with them. In affected versions users were able to load the first page of apps they were actually not allowed to access. Depending on the selection of apps installed this may present a permissions bypass. It is recommended that the Guests app is upgraded to 2.4.1, 2.5.1 or 3.0.1. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/guests/pull/1082",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "119d106c2c7c30a9379b8b509159a91272eceed4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/ios",
        "CVE_ID": "CVE-2023-28647",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud iOS is an ios application used to interface with the nextcloud home cloud ecosystem. In versions prior to 4.7.0 when an attacker has physical access to an unlocked device, they may enable the integration into the iOS Files app and bypass the Nextcloud pin/password protection and gain access to a users files. It is recommended that the Nextcloud iOS app is upgraded to 4.7.0. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/ios/pull/2344",
        "Tag": "['Patch']",
        "fix_commit_hash": "64e9befd893d99d29d20044353b05ef7ff4b9507",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2021-22896",
        "Problem_Type": "CWE-862",
        "Description": "Nextcloud Mail before 1.9.5 suffers from improper access control due to a missing permission check allowing other authenticated users to create mail aliases for other users.",
        "URL": "https://github.com/nextcloud/mail/pull/4864",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "51c0255c4854652fde83988b9e1eefca05e18d15",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2021-32707",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Nextcloud Mail is a mail app for Nextcloud. In versions prior to 1.9.6, the Nextcloud Mail application does not, by default, render images in emails to not leak the read state. The privacy filter failed to filter images with a `background-image` CSS attribute. Note that the images were still passed through the Nextcloud image proxy, and thus there was no IP leakage. The issue was patched in version 1.9.6 and 1.10.0. No workarounds are known to exist.",
        "URL": "https://github.com/nextcloud/mail/pull/5189",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e2b1f1436bee18985b833de7b881b53033ac8718",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2021-39220",
        "Problem_Type": "CWE-20",
        "Description": "Nextcloud is an open-source, self-hosted productivity platform The Nextcloud Mail application prior to versions 1.10.4 and 1.11.0 does by default not render images in emails to not leak the read state or user IP. The privacy filter failed to filter images with a relative protocol. It is recommended that the Nextcloud Mail application is upgraded to 1.10.4 or 1.11.0. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/nextcloud/mail/pull/5470",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "30f09fbbf08d1e2a092f8665c5953d2b107caaf4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2022-31131",
        "Problem_Type": "CWE-639",
        "Description": "Nextcloud mail is a Mail app for the Nextcloud home server product. Versions of Nextcloud mail prior to 1.12.2 were found to be missing user account ownership checks when performing tasks related to mail attachments. Attachments may have been exposed to incorrect system users. It is recommended that the Nextcloud Mail app is upgraded to 1.12.2. There are no known workarounds for this issue. ### Workarounds No workaround available ### References * [Pull request](https://github.com/nextcloud/mail/pull/6600) * [HackerOne](https://hackerone.com/reports/1579820) ### For more information If you have any questions or comments about this advisory: * Create a post in [nextcloud/security-advisories](https://github.com/nextcloud/security-advisories/discussions) * Customers: Open a support ticket at [support.nextcloud.com](https://support.nextcloud.com)",
        "URL": "https://github.com/nextcloud/mail/pull/6600",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c5b7bb8823f2547c9335bb7e1f9b55f092082f9a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2023-23943",
        "Problem_Type": "CWE-918",
        "Description": "Nextcloud mail is an email app for the nextcloud home server platform. In affected versions the SMTP, IMAP and Sieve host fields allowed to scan for internal services and servers reachable from within the local network of the Nextcloud Server. It is recommended that the Nextcloud Maill app is upgraded to 1.15.0 or 2.2.2. The only known workaround for this issue is to completely disable the nextcloud mail app.",
        "URL": "https://github.com/nextcloud/mail/pull/7796",
        "Tag": "['Patch']",
        "fix_commit_hash": "213c2a9502847099245989972e2c71624a07f244",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2023-23944",
        "Problem_Type": "CWE-312",
        "Description": "Nextcloud mail is an email app for the nextcloud home server platform. In versions prior to 2.2.2 user's passwords were stored in cleartext in the database during the duration of OAuth2 setup procedure. Any attacker or malicious user with access to the database would have access to these user passwords until the OAuth setup has been completed. It is recommended that the Nextcloud Mail app is upgraded to 2.2.2. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/mail/pull/7797",
        "Tag": "['Patch']",
        "fix_commit_hash": "6a3ac8d507df37c10aed03d4acd43e91998583a1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2023-25160",
        "Problem_Type": "CWE-639",
        "Description": "Nextcloud Mail is an email app for the Nextcloud home server platform. Prior to versions 2.2.1, 1.14.5, 1.12.9, and 1.11.8, an attacker can access the mail box by ID getting the subjects and the first characters of the emails. Users should upgrade to Mail 2.2.1 for Nextcloud 25, Mail 1.14.5 for Nextcloud 22-24, Mail 1.12.9 for Nextcloud 21, or Mail 1.11.8 for Nextcloud 20 to receive a patch. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/mail/pull/7740",
        "Tag": "['Patch']",
        "fix_commit_hash": "4fa038ddf26c30231358ce1078623ed501f30fa3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2023-33184",
        "Problem_Type": "CWE-918",
        "Description": "Nextcloud Mail is a mail app in Nextcloud. A blind SSRF attack allowed to send GET requests to services running in the same web server. It is recommended that the Mail app is update to version 3.02, 2.2.5 or 1.15.3.\n\n",
        "URL": "https://github.com/nextcloud/mail/pull/8275",
        "Tag": "['Patch']",
        "fix_commit_hash": "e45fbc1cc107666b837dbefb1b49ec58a15632d8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2023-45660",
        "Problem_Type": "CWE-918",
        "Description": "Nextcloud mail is an email app for the Nextcloud home server platform. In affected versions a missing check of origin, target and cookies allows for an attacker to abuse the proxy endpoint to denial of service a third server. It is recommended that the Nextcloud Mail is upgraded to 2.2.8 or 3.3.0. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/mail/pull/8459",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "df221035fb5f2e7585cffc755a29d90152b90aab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/mail",
        "CVE_ID": "CVE-2023-48307",
        "Problem_Type": "CWE-918",
        "Description": "Nextcloud Mail is the mail app for Nextcloud, a self-hosted productivity platform. Starting in version 1.13.0 and prior to version 2.2.8 and 3.3.0, an attacker can use an unprotected endpoint in the Mail app to perform a SSRF attack. Nextcloud Mail app versions 2.2.8 and 3.3.0 contain a patch for this issue. As a workaround, disable the mail app.",
        "URL": "https://github.com/nextcloud/mail/pull/8709",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "65f36704696565a051ffea13bd7c4e7662bd1729",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/notes",
        "CVE_ID": "CVE-2023-39955",
        "Problem_Type": "CWE-79",
        "Description": "Notes is a note-taking app for Nextcloud, an open-source cloud platform. Starting in version 4.4.0 and prior to version 4.8.0, when creating a note file with HTML, the content is rendered in the preview instead of the file being offered to download. Nextcloud Notes app version 4.8.0 contains a patch for the issue. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/notes/pull/1031",
        "Tag": "['Patch']",
        "fix_commit_hash": "eb5c3ac65b744fcb2354368d0806baa674e747e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/officeonline",
        "CVE_ID": "CVE-2021-39224",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud is an open-source, self-hosted productivity platform. The Nextcloud OfficeOnline application prior to version 1.1.1 returned verbatim exception messages to the user. This could result in a full path disclosure on shared files. (e.g. an attacker could see that the file `shared.txt` is located within `/files/$username/Myfolder/Mysubfolder/shared.txt`). It is recommended that the OfficeOnline application is upgraded to 1.1.1. As a workaround, one may disable the OfficeOnline application in the app settings.",
        "URL": "https://github.com/nextcloud/officeonline/pull/204",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8715bfc114859ddd14d474ad36f04b619fb80063",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/password_policy",
        "CVE_ID": "CVE-2022-35931",
        "Problem_Type": "CWE-326",
        "Description": "Nextcloud Password Policy is an app that enables a Nextcloud server admin to define certain rules for passwords. Prior to versions 22.2.10, 23.0.7, and 24.0.3 the random password generator may, in very rare cases, generate common passwords that the validator itself would block. Upgrade Nextcloud Server to 22.2.10, 23.0.7 or 24.0.3 to receive a patch for the issue in Password Policy. There are no known workarounds available.",
        "URL": "https://github.com/nextcloud/password_policy/pull/363",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b19a56d8d79f4e61d8ee27d69baf4a06de8187f9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/richdocuments",
        "CVE_ID": "CVE-2021-37628",
        "Problem_Type": "CWE-639",
        "Description": "Nextcloud Richdocuments is an open source collaborative office suite. In affected versions the File Drop features (\"Upload Only\" public link shares in Nextcloud) can be bypassed using the Nextcloud Richdocuments app. An attacker was able to read arbitrary files in such a share. It is recommended that the Nextcloud Richdocuments is upgraded to 3.8.4 or 4.2.1. If upgrading is not possible then it is recommended to disable the Richdocuments application.",
        "URL": "https://github.com/nextcloud/richdocuments/pull/1664",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18824a97ab4200f151c7589f0787b2f2b3d61c1a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/richdocuments",
        "CVE_ID": "CVE-2021-39223",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud is an open-source, self-hosted productivity platform. The Nextcloud Richdocuments application prior to versions 3.8.6 and 4.2.3 returned verbatim exception messages to the user. This could result in a full path disclosure on shared files. (e.g. an attacker could see that the file `shared.txt` is located within `/files/$username/Myfolder/Mysubfolder/shared.txt`). It is recommended that the Richdocuments application is upgraded to 3.8.6 or 4.2.3. As a workaround, disable the Richdocuments application in the app settings.",
        "URL": "https://github.com/nextcloud/richdocuments/pull/1760",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "08c0d9ebe3f0e975fbef2b376d148095f29f19b5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/richdocuments",
        "CVE_ID": "CVE-2022-31024",
        "Problem_Type": "CWE-284",
        "Description": "richdocuments is the repository for NextCloud Collabra, the app for Nextcloud Office collaboration. Prior to versions 6.0.0, 5.0.4, and 4.2.6, a user could be tricked into working against a remote Office by sending them a federated share. richdocuments versions 6.0.0, 5.0.4 and 4.2.6 contain a fix for this issue. There are currently no known workarounds available.",
        "URL": "https://github.com/nextcloud/richdocuments/pull/2161",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "10235f21d84e69159b6b3e8d9317177465304594",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/richdocuments",
        "CVE_ID": "CVE-2023-25150",
        "Problem_Type": "CWE-732",
        "Description": "Nextcloud office/richdocuments is an office suit for the nextcloud server platform. In affected versions the Collabora integration can be tricked to provide access to any file without proper permission validation. As a result any user with access to Collabora can obtain the content of other users files. It is recommended that the Nextcloud Office App (Collabora Integration) is updated to 7.0.2 (Nextcloud 25), 6.3.2 (Nextcloud 24), 5.0.10 (Nextcloud 23), 4.2.9 (Nextcloud 21-22), or 3.8.7 (Nextcloud 15-20). There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/richdocuments/pull/2669",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b51562de1349d3648367de73c8d114f2ed91529a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/richdocuments",
        "CVE_ID": "CVE-2023-28645",
        "Problem_Type": "CWE-284",
        "Description": "Nextcloud richdocuments is a Nextcloud app integrating the office suit Collabora Online. In affected versions the secure view feature of the rich documents app can be bypassed by using unprotected internal API endpoint of the rich documents app. It is recommended that the Nextcloud Office app (richdocuments) is upgraded to 8.0.0-beta.1, 7.0.2 or 6.3.2. Users unable to upgrade may mitigate the issue by taking steps to restrict the ability to download documents. This includes ensuring that the `WOPI configuration` is configured to only serve documents between Nextcloud and Collabora. It is highly recommended to define the list of Collabora server IPs as the allow list within the Office admin settings of Nextcloud.",
        "URL": "https://github.com/nextcloud/richdocuments/pull/2604",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "eeb50a310efcf9174171724a9d06e4e0e9166571",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2021-32689",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Nextcloud Talk is a fully on-premises audio/video and chat communication service. In versions prior to 11.2.2, if a user was able to reuse an earlier used username, they could get access to any chat message sent to the previous user with this username. The issue was patched in versions 11.2.2 and 11.3.0. As a workaround, don't allow users to choose usernames themselves. This is the default behaviour of Nextcloud, but some user providers may allow doing so.",
        "URL": "https://github.com/nextcloud/spreed/pull/5633",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "75661785fac7046bc3f90e10d8319a77dbeba5d7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2021-41180",
        "Problem_Type": "CWE-601",
        "Description": "Nextcloud talk is a self hosting messaging service. In versions prior 12.1.2 an attacker is able to control the link of a geolocation preview in the Nextcloud Talk application due to a lack of validation on the link. This could result in an open-redirect, but required user interaction. This only affected users of the Android Talk client. It is recommended that the Nextcloud Talk App is upgraded to 12.1.2. There are no known workarounds.",
        "URL": "https://github.com/nextcloud/spreed/pull/6239",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "243e0771f153bcbc108ddaa31fb93897fa6987f9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-24887",
        "Problem_Type": "CWE-601",
        "Description": "Nextcloud Talk is a video and audio conferencing app for Nextcloud, a self-hosted productivity platform. Prior to versions 11.3.4, 12.2.2, and 13.0.0, when sharing a Deck card in conversation, the metaData can be manipulated so users can be tricked into opening arbitrary URLs. This issue is fixed in versions 11.3.4, 12.2.2, and 13.0.0. There are currently no known workarounds.",
        "URL": "https://github.com/nextcloud/spreed/pull/6410",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "24f8a335da8096a04f94f100550124d403f23289",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-24890",
        "Problem_Type": "CWE-276",
        "Description": "Nextcloud Talk is a video and audio conferencing app for Nextcloud. In versions prior to 13.0.5 and 14.0.0, a call moderator can indirectly enable user webcams by granting permissions, if they were enabled before removing the permissions. A patch is available in versions 13.0.5 and 14.0.0. There are currently no known workarounds.",
        "URL": "https://github.com/nextcloud/spreed/pull/7092",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1359d7092c0df6ccd075d5cbd8c974ad4a3cd604",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-35932",
        "Problem_Type": "CWE-307",
        "Description": "Nextcloud Talk is a video and audio conferencing app for Nextcloud. Prior to versions 12.2.7, 13.0.7, and 14.0.3, password protected conversations are susceptible to brute force attacks if the attacker has the link/conversation token. It is recommended that the Nextcloud Talk application is upgraded to 12.2.7, 13.0.7 or 14.0.3. There are currently no known workarounds available apart from not having password protected conversations.",
        "URL": "https://github.com/nextcloud/spreed/pull/7536",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4ba26ae1afdd519b17d8b07095e53fadd7fc622",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-35932",
        "Problem_Type": "CWE-307",
        "Description": "Nextcloud Talk is a video and audio conferencing app for Nextcloud. Prior to versions 12.2.7, 13.0.7, and 14.0.3, password protected conversations are susceptible to brute force attacks if the attacker has the link/conversation token. It is recommended that the Nextcloud Talk application is upgraded to 12.2.7, 13.0.7 or 14.0.3. There are currently no known workarounds available apart from not having password protected conversations.",
        "URL": "https://github.com/nextcloud/spreed/pull/7535",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7f33ad49df6c7d77173c6c9748e0f4e3cf381e4f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-35932",
        "Problem_Type": "CWE-307",
        "Description": "Nextcloud Talk is a video and audio conferencing app for Nextcloud. Prior to versions 12.2.7, 13.0.7, and 14.0.3, password protected conversations are susceptible to brute force attacks if the attacker has the link/conversation token. It is recommended that the Nextcloud Talk application is upgraded to 12.2.7, 13.0.7 or 14.0.3. There are currently no known workarounds available apart from not having password protected conversations.",
        "URL": "https://github.com/nextcloud/spreed/pull/7504",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ec9552b0fdadbf7f7012598f76b13abcdc0767a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-35932",
        "Problem_Type": "CWE-307",
        "Description": "Nextcloud Talk is a video and audio conferencing app for Nextcloud. Prior to versions 12.2.7, 13.0.7, and 14.0.3, password protected conversations are susceptible to brute force attacks if the attacker has the link/conversation token. It is recommended that the Nextcloud Talk application is upgraded to 12.2.7, 13.0.7 or 14.0.3. There are currently no known workarounds available apart from not having password protected conversations.",
        "URL": "https://github.com/nextcloud/spreed/pull/7537",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "16da0b251a4f6869917a10d32534abc3b8a9f967",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2022-39212",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud Talk is an open source chat, video & audio calls client for the Nextcloud platform. In affected versions an attacker could see the last video frame of any participant who has video disabled but a camera selected. It is recommended that the Nextcloud Talk app is upgraded to 13.0.8 or 14.0.4. Users unable to upgrade should select \"None\" as camera before joining the call.",
        "URL": "https://github.com/nextcloud/spreed/pull/7673",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e40448aee54206bfd6518adf7466d3b42d28a04a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2023-26041",
        "Problem_Type": "CWE-668",
        "Description": "Nextcloud Talk is a fully on-premises audio/video and chat communication service. When cron jobs were misconfigured and therefore messages are not expired, the API would still return them while they were then hidden by the frontend code. It is recommended that the Nextcloud Talk is upgraded to 15.0.3. There are no workaround available.\n",
        "URL": "https://github.com/nextcloud/spreed/pull/8515",
        "Tag": "['Patch']",
        "fix_commit_hash": "7d9db57f9ed3572501987a6398caeac72d6872ac",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2023-28845",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud talk is a video & audio conferencing app for Nextcloud. In affected versions the talk app does not properly filter access to a conversations member list. As a result an attacker could use this vulnerability to gain information about the members of a Talk conversation, even if they themselves are not members. It is recommended that the Nextcloud Talk is upgraded to 14.0.9 or 15.0.4. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/spreed/pull/8651",
        "Tag": "['Patch']",
        "fix_commit_hash": "df25d5ec4acbdddee6292ba90ad3cea0b689591d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2023-30540",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Nextcloud Talk is a chat, video & audio call extension for Nextcloud. In affected versions a user that was added later to a conversation can use this information to get access to data that was deleted before they were added to the conversation. This issue has been patched in version 15.0.5 and it is recommended that users upgrad to 15.0.5. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/spreed/pull/8985",
        "Tag": "['Patch']",
        "fix_commit_hash": "1f3ddd0fd0d0bb698bf1b357a3d93d6be367196f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/spreed",
        "CVE_ID": "CVE-2023-45149",
        "Problem_Type": "CWE-307",
        "Description": "Nextcloud talk is a chat module for the Nextcloud server platform. In affected versions brute force protection of public talk conversation passwords can be bypassed, as there was an endpoint validating the conversation password without registering bruteforce attempts. It is recommended that the Nextcloud Talk app is upgraded to 15.0.8, 16.0.6 or 17.1.1. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/nextcloud/spreed/pull/10545",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "939f0d3e6a8869219bde4a5514681a6d01a65322",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/talk-android",
        "CVE_ID": "CVE-2021-41181",
        "Problem_Type": "CWE-287",
        "Description": "Nextcloud talk is a self hosting messaging service. In versions prior to 12.3.0 the Nextcloud Android Talk application did not properly detect the lockscreen state when a call was incoming. If an attacker got physical access to the locked phone, and the victim received a phone call the attacker could gain access to the chat messages and files of the user. It is recommended that the Nextcloud Android Talk App is upgraded to 12.3.0. There are no known workarounds.",
        "URL": "https://github.com/nextcloud/talk-android/pull/1585",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "caa8915130fc14d508786f4380c7d8e4eca40e5f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/talk-android",
        "CVE_ID": "CVE-2022-41926",
        "Problem_Type": "CWE-200",
        "Description": "Nextcould talk android is the android OS implementation of the nextcloud talk chat system. In affected versions the receiver is not protected by broadcastPermission allowing malicious apps to monitor communication. It is recommended that the Nextcloud Talk Android is upgraded to 14.1.0. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/talk-android/pull/2148",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c4d9105613cdbc39a1509e44f04c19df17ded9ed",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/talk-android",
        "CVE_ID": "CVE-2023-22473",
        "Problem_Type": "CWE-284",
        "Description": "Talk-Android enables users to have video & audio calls through Nextcloud on Android. Due to passcode bypass, an attacker is able to access the user's Nextcloud files and view conversations. To exploit this the attacker needs to have physical access to the target's device. There are currently no known workarounds available. It is recommended that the Nextcloud Talk Android app is upgraded to 15.0.2. \n",
        "URL": "https://github.com/nextcloud/talk-android/pull/2598",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3ba468bb58ff7e954a39174ba9bd9c9fb3eab41",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/talk-android",
        "CVE_ID": "CVE-2023-39957",
        "Problem_Type": "CWE-22",
        "Description": "Nextcloud Talk Android allows users to place video and audio calls through Nextcloud on Android. Prior to version 17.0.0, an unprotected intend allowed malicious third party apps to trick the Talk Android app into writing files outside of its intended cache directory. Nextcloud Talk Android version 17.0.0 has a patch for this issue. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/talk-android/pull/3064",
        "Tag": "['Patch']",
        "fix_commit_hash": "303e28c154656a60c241d2d01c060c879c2ad1c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2021-32733",
        "Problem_Type": "CWE-79",
        "Description": "Nextcloud Text is a collaborative document editing application that uses Markdown. A cross-site scripting vulnerability is present in versions prior to 19.0.13, 20.0.11, and 21.0.3. The Nextcloud Text application shipped with Nextcloud server used a `text/html` Content-Type when serving files to users. Due the strict Content-Security-Policy shipped with Nextcloud, this issue is not exploitable on modern browsers supporting Content-Security-Policy. The issue was fixed in versions 19.0.13, 20.0.11, and 21.0.3. As a workaround, use a browser that has support for Content-Security-Policy.",
        "URL": "https://github.com/nextcloud/text/pull/1689",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "00aca97342638c56533df532c793e7136e050554",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2021-32734",
        "Problem_Type": "CWE-209",
        "Description": "Nextcloud Server is a Nextcloud package that handles data storage. In versions prior to 19.0.13, 20.011, and 21.0.3, the Nextcloud Text application shipped with Nextcloud Server returned verbatim exception messages to the user. This could result in a full path disclosure on shared files. The issue was fixed in versions 19.0.13, 20.0.11, and 21.0.3. As a workaround, one may disable the Nextcloud Text application in Nextcloud Server app settings.",
        "URL": "https://github.com/nextcloud/text/pull/1695",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4e4940c2e4fe81e728f9f4d189e58ab49f5a1472",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2021-32766",
        "Problem_Type": "CWE-209",
        "Description": "Nextcloud Text is an open source plaintext editing application which ships with the nextcloud server. In affected versions the Nextcloud Text application returned different error messages depending on whether a folder existed in a public link share. This is problematic in case the public link share has been created with \"Upload Only\" privileges. (aka \"File Drop\"). A link share recipient is not expected to see which folders or files exist in a \"File Drop\" share. Using this vulnerability an attacker is able to enumerate folders in such a share. Exploitation requires that the attacker has access to a valid affected \"File Drop\" link share. It is recommended that the Nextcloud Server is upgraded to 20.0.12, 21.0.4 or 22.0.1. Users who are unable to upgrade are advised to disable the Nextcloud Text application in the app settings.",
        "URL": "https://github.com/nextcloud/text/pull/1716",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c6b34c47c8d389268d01e6c62b6a81f913e74c98",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2021-41233",
        "Problem_Type": "CWE-863",
        "Description": "Nextcloud text is a collaborative document editing using Markdown built for the nextcloud server. Due to an issue with the Nextcloud Text application, which is by default shipped with Nextcloud Server, an attacker is able to access the folder names of \"File Drop\". For successful exploitation an attacker requires knowledge of the sharing link. It is recommended that users upgrade their Nextcloud Server to 20.0.14, 21.0.6 or 22.2.1. Users unable to upgrade should disable the Nextcloud Text application in the application settings.",
        "URL": "https://github.com/nextcloud/text/pull/1884",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3806ce170d57583d8f7ec53fe3b47910eb94c14",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2023-32318",
        "Problem_Type": "CWE-613",
        "Description": "Nextcloud server provides a home for data. A regression in the session handling between Nextcloud Server and the Nextcloud Text app prevented a correct destruction of the session on logout if cookies were not cleared manually. After successfully authenticating with any other account the previous session would be continued and the attacker would be authenticated as the previously logged in user. It is recommended that the Nextcloud Server is upgraded to 25.0.6 or 26.0.1.",
        "URL": "https://github.com/nextcloud/text/pull/3946",
        "Tag": "['Patch']",
        "fix_commit_hash": "3b9f353172ff284cd483cf7b88f2be1b3a7a36a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2023-39961",
        "Problem_Type": "CWE-284",
        "Description": "Nextcloud Server provides data storage for Nextcloud, an open source cloud platform. Starting in version 24.0.4 and prior to versions 25.0.9, 26.0.4, and 27.0.1, when a folder with images or an image was shared without download permissions, the user could add the image inline into a text file and download it. Nextcloud Server versions 25.0.9, 26.0.4, and 27.0.1 and Nextcloud Enterprise Server versions 24.0.12.5, 25.0.9, 26.0.4, and 27.0.1 contain a patch for this issue. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/text/pull/4481",
        "Tag": "['Patch']",
        "fix_commit_hash": "3b1951cdd1708dc74f6762c3f8fe832781650adf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/text",
        "CVE_ID": "CVE-2023-48302",
        "Problem_Type": "CWE-79",
        "Description": "Nextcloud Server provides data storage for Nextcloud, an open source cloud platform. Starting in version 25.0.0 and prior to versions 25.0.13, 26.0.8, and 27.1.3 of Nextcloud Server and Nextcloud Enterprise Server, when a user is tricked into copy pasting HTML code without markup (Ctrl+Shift+V) the markup will actually render. Nextcloud Server and Nextcloud Enterprise Server versions 25.0.13, 26.0.8, and 27.1.3 contain a fix for this issue. As a workaround, disable app text.",
        "URL": "https://github.com/nextcloud/text/pull/4877",
        "Tag": "['Patch']",
        "fix_commit_hash": "6972cf1d4f83eaf400b1fb6c405f87c28501a55d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_oidc",
        "CVE_ID": "CVE-2022-39338",
        "Problem_Type": "CWE-79",
        "Description": "user_oidc is an OpenID Connect user backend for Nextcloud. Versions prior to 1.2.1 did not properly validate discovery urls which may lead to a stored cross site scripting attack vector. The impact is limited due to the restrictive CSP that is applied on this endpoint. Additionally this vulnerability has only been shown to be exploitable in the Safari web browser. This issue has been addressed in version 1.2.1. Users are advised to upgrade. Users unable to upgrade should urge their users to avoid using the Safari web browser.",
        "URL": "https://github.com/nextcloud/user_oidc/pull/496",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a61b5732625e89f696b68a37c4e32e807c11a43",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_oidc",
        "CVE_ID": "CVE-2022-39339",
        "Problem_Type": "CWE-319",
        "Description": "user_oidc is an OpenID Connect user backend for Nextcloud. In versions prior to 1.2.1 sensitive information such as the OIDC client credentials and tokens are sent in plain text of HTTP without TLS. Any malicious actor with access to monitor user traffic may have been able to compromise account security. This issue has been addressed in in user_oidc v1.2.1. Users are advised to upgrade. Users unable to upgrade may use https to access Nextcloud. Set an HTTPS discovery URL in the provider settings (in Nextcloud OIDC admin settings).",
        "URL": "https://github.com/nextcloud/user_oidc/pull/495",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "95daf74c203b31ba70b3a39cd46e45f0c94b9eae",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_oidc",
        "CVE_ID": "CVE-2023-28848",
        "Problem_Type": "CWE-352",
        "Description": "user_oidc is the OIDC connect user backend for Nextcloud, an open source collaboration platform. A vulnerability in versions 1.0.0 until 1.3.0 effectively allowed an attacker to bypass the state protection as they could just copy the expected state token from the first request to their second request. Users should upgrade user_oidc to 1.3.0 to receive a patch for the issue. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/user_oidc/pull/580",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "2fe2e14dd5d109541d810d5ceb09e04c2b84eaa2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_oidc",
        "CVE_ID": "CVE-2023-32074",
        "Problem_Type": "CWE-307",
        "Description": "user_oidc app is an OpenID Connect user backend for Nextcloud. Authentication can be broken/bypassed in user_oidc app. It is recommended that the Nextcloud user_oidc app is upgraded to 1.3.2\n\n",
        "URL": "https://github.com/nextcloud/user_oidc/pull/615",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "4f9bef7f55d186d80ccd1e938cce975f993f0641",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_oidc",
        "CVE_ID": "CVE-2023-39953",
        "Problem_Type": "CWE-303",
        "Description": "user_oidc provides the OIDC connect user backend for Nextcloud, an open-source cloud platform. Starting in version 1.0.0 and prior to version 1.3.3, missing verification of the issuer would have allowed an attacker to perform a man-in-the-middle attack returning corrupted or known token they also have access to. user_oidc 1.3.3 contains a patch. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/user_oidc/pull/642",
        "Tag": "['Patch']",
        "fix_commit_hash": "e190a61d5e026f25b7e24ff6500ca61ecf0d67ff",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_oidc",
        "CVE_ID": "CVE-2023-39954",
        "Problem_Type": "CWE-311",
        "Description": "user_oidc provides the OIDC connect user backend for Nextcloud, an open-source cloud platform. Starting in version 1.0.0 and prior to version 1.3.3, an attacker that obtained at least read access to a snapshot of the database can impersonate the Nextcloud server towards linked servers. user_oidc 1.3.3 contains a patch. No known workarounds are available.",
        "URL": "https://github.com/nextcloud/user_oidc/pull/636",
        "Tag": "['Patch']",
        "fix_commit_hash": "780d9001041726576b338c9e33f18b74d7c9d52e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nextcloud/user_saml",
        "CVE_ID": "CVE-2024-22400",
        "Problem_Type": "CWE-601",
        "Description": "Nextcloud User Saml is an app for authenticating Nextcloud users using SAML. In affected versions users can be given a link to the Nextcloud server and end up on a uncontrolled thirdparty server. It is recommended that the User Saml app is upgraded to version 5.1.5, 5.2.5, or 6.0.1. There are no known workarounds for this issue.",
        "URL": "https://github.com/nextcloud/user_saml/pull/788",
        "Tag": "['Patch']",
        "fix_commit_hash": "c294458d2ccbcdc40e42054ea7451513488c9150",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nghttp2/nghttp2",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/nghttp2/nghttp2/pull/1961",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "aa0973caf584b199510c9ab1b28632ba074d4d5b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ngircd/ngircd",
        "CVE_ID": "CVE-2020-14148",
        "Problem_Type": "CWE-125",
        "Description": "The Server-Server protocol implementation in ngIRCd before 26~rc2 allows an out-of-bounds access, as demonstrated by the IRC_NJOIN() function.",
        "URL": "https://github.com/ngircd/ngircd/pull/275",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "02cf31c0e267a4c9a7656d43ad3ad4eeb37fc9c5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "NixOS/patchelf",
        "CVE_ID": "CVE-2022-44940",
        "Problem_Type": "CWE-125",
        "Description": "Patchelf v0.9 was discovered to contain an out-of-bounds read via the function modifyRPath at src/patchelf.cc.",
        "URL": "https://github.com/NixOS/patchelf/pull/419",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b751eeb137d71765b3c35c4210c1c3b64dcd3a32",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nmanousos/email-existence",
        "CVE_ID": "CVE-2018-25049",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability was found in email-existence. It has been rated as problematic. Affected by this issue is some unknown functionality of the file index.js. The manipulation leads to inefficient regular expression complexity. The name of the patch is 0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56. It is recommended to apply a patch to fix this issue. VDB-216854 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/nmanousos/email-existence/pull/37",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "99966d00c92927f1693f8665a603d302dbbf0b68",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "node-saml/passport-saml",
        "CVE_ID": "CVE-2021-39171",
        "Problem_Type": "CWE-400",
        "Description": "Passport-SAML is a SAML 2.0 authentication provider for Passport, the Node.js authentication library. Prior to version 3.1.0, a malicious SAML payload can require transforms that consume significant system resources to process, thereby resulting in reduced or denied service. This would be an effective way to perform a denial-of-service attack. This has been resolved in version 3.1.0. The resolution is to limit the number of allowable transforms to 2.",
        "URL": "https://github.com/node-saml/passport-saml/pull/595",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f1e00b64c21a725f545e675cd810bbaa435a3972",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "NodeBB/NodeBB",
        "CVE_ID": "CVE-2015-9286",
        "Problem_Type": "CWE-79",
        "Description": "Controllers.outgoing in controllers/index.js in NodeBB before 0.7.3 has outgoing XSS.",
        "URL": "https://github.com/NodeBB/NodeBB/pull/3371",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "924692404d8415893b7c903d6e9b61550aaae68c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nothings/stb",
        "CVE_ID": "CVE-2022-28041",
        "Problem_Type": "CWE-190",
        "Description": "stb_image.h v2.27 was discovered to contain an integer overflow via the function stbi__jpeg_decode_block_prog_dc. This vulnerability allows attackers to cause a Denial of Service (DoS) via unspecified vectors.",
        "URL": "https://github.com/nothings/stb/pull/1297",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b15b04321dfd8a2307c49ad9c5bf3c0c6bcc04cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nothings/stb",
        "CVE_ID": "CVE-2022-28042",
        "Problem_Type": "CWE-416",
        "Description": "stb_image.h v2.27 was discovered to contain an heap-based use-after-free via the function stbi__jpeg_huff_decode.",
        "URL": "https://github.com/nothings/stb/pull/1297",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b15b04321dfd8a2307c49ad9c5bf3c0c6bcc04cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nothings/stb",
        "CVE_ID": "CVE-2022-28048",
        "Problem_Type": "CWE-682",
        "Description": "STB v2.27 was discovered to contain an integer shift of invalid size in the component stbi__jpeg_decode_block_prog_ac.",
        "URL": "https://github.com/nothings/stb/pull/1297",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b15b04321dfd8a2307c49ad9c5bf3c0c6bcc04cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "novuhq/novu",
        "CVE_ID": "CVE-2023-35948",
        "Problem_Type": "CWE-601",
        "Description": "Novu provides an API for sending notifications through multiple channels. Versions prior to 0.16.0 contain an open redirect vulnerability in the \"Sign In with GitHub\" functionality of Novu's open-source repository. It could have allowed an attacker to force a victim into opening a malicious URL and thus, potentially log into the repository under the victim's account gaining full control of the account. This vulnerability only affected the Novu Cloud and Open-Source deployments if the user manually enabled the GitHub OAuth on their self-hosted instance of Novu. Users should upgrade to version 0.16.0 to receive a patch.",
        "URL": "https://github.com/novuhq/novu/pull/3510",
        "Tag": "['Patch']",
        "fix_commit_hash": "7168ed75c72e4605c016a9f423a4f3fe03cf608f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nsupdate-info/nsupdate.info",
        "CVE_ID": "CVE-2019-25091",
        "Problem_Type": "CWE-1004",
        "Description": "A vulnerability classified as problematic has been found in nsupdate.info. This affects an unknown part of the file src/nsupdate/settings/base.py of the component CSRF Cookie Handler. The manipulation of the argument CSRF_COOKIE_HTTPONLY leads to cookie without 'httponly' flag. It is possible to initiate the attack remotely. The name of the patch is 60a3fe559c453bc36b0ec3e5dd39c1303640a59a. It is recommended to apply a patch to fix this issue. The identifier VDB-216909 was assigned to this vulnerability.",
        "URL": "https://github.com/nsupdate-info/nsupdate.info/pull/410",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5edb9f768ab462870eeb4aa99457820a3028a409",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "numpy/numpy",
        "CVE_ID": "CVE-2014-1859",
        "Problem_Type": "CWE-59",
        "Description": "(1) core/tests/test_memmap.py, (2) core/tests/test_multiarray.py, (3) f2py/f2py2e.py, and (4) lib/tests/test_io.py in NumPy before 1.8.1 allow local users to write to arbitrary files via a symlink attack on a temporary file.",
        "URL": "https://github.com/numpy/numpy/pull/4262",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c7a30d538ba4c984d6f97b613486a3738b2c7922",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "octobercms/library",
        "CVE_ID": "CVE-2020-15128",
        "Problem_Type": "CWE-327",
        "Description": "In OctoberCMS before version 1.0.468, encrypted cookie values were not tied to the name of the cookie the value belonged to. This meant that certain classes of attacks that took advantage of other theoretical vulnerabilities in user facing code (nothing exploitable in the core project itself) had a higher chance of succeeding. Specifically, if your usage exposed a way for users to provide unfiltered user input and have it returned to them as an encrypted cookie (ex. storing a user provided search query in a cookie) they could then use the generated cookie in place of other more tightly controlled cookies; or if your usage exposed the plaintext version of an encrypted cookie at any point to the user they could theoretically provide encrypted content from your application back to it as an encrypted cookie and force the framework to decrypt it for them. Issue has been fixed in build 468 (v1.0.468).",
        "URL": "https://github.com/octobercms/library/pull/508",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "28310d4fb336a1741b39498f4474497644a6875c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "omniauth/omniauth",
        "CVE_ID": "CVE-2017-18076",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In strategy.rb in OmniAuth before 1.3.2, the authenticity_token value is improperly protected because POST (in addition to GET) parameters are stored in the session and become available in the environment of the callback phase.",
        "URL": "https://github.com/omniauth/omniauth/pull/867",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "61df4e8198b2b33600830e00eaaae0ac0c4cabec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "onlaj/Piano-LED-Visualizer",
        "CVE_ID": "CVE-2022-24900",
        "Problem_Type": "CWE-668",
        "Description": "Piano LED Visualizer is software that allows LED lights to light up as a person plays a piano connected to a computer. Version 1.3 and prior are vulnerable to a path traversal attack. The `os.path.join` call is unsafe for use with untrusted input. When the `os.path.join` call encounters an absolute path, it ignores all the parameters it has encountered till that point and starts working with the new absolute path. Since the \"malicious\" parameter represents an absolute path, the result of `os.path.join` ignores the static directory completely. Hence, untrusted input is passed via the `os.path.join` call to `flask.send_file` can lead to path traversal attacks. A patch with a fix is available on the `master` branch of the GitHub repository. This can also be fixed by preventing flow of untrusted data to the vulnerable `send_file` function. In case the application logic necessiates this behaviour, one can either use the `flask.safe_join` to join untrusted paths or replace `flask.send_file` calls with `flask.send_from_directory` calls.",
        "URL": "https://github.com/onlaj/Piano-LED-Visualizer/pull/351",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3f10602323cd8184e1c69a76b815655597bf0ee5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OnShift/turbogears",
        "CVE_ID": "CVE-2019-25101",
        "Problem_Type": "CWE-436",
        "Description": "A vulnerability classified as critical has been found in OnShift TurboGears 1.0.11.10. This affects an unknown part of the file turbogears/controllers.py of the component HTTP Header Handler. The manipulation leads to http response splitting. It is possible to initiate the attack remotely. Upgrading to version 1.0.11.11 is able to address this issue. The patch is named f68bbaba47f4474e1da553aa51564a73e1d92a84. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-220059.",
        "URL": "https://github.com/OnShift/turbogears/pull/18",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2f56206760a94f8c8bbaa5da6648130a9c0f843f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "open-iscsi/tcmu-runner",
        "CVE_ID": "CVE-2021-3139",
        "Problem_Type": "CWE-22",
        "Description": "In Open-iSCSI tcmu-runner 1.3.x, 1.4.x, and 1.5.x through 1.5.2, xcopy_locate_udev in tcmur_cmd_handler.c lacks a check for transport-layer restrictions, allowing remote attackers to read or write files via directory traversal in an XCOPY request. For example, an attack can occur over a network if the attacker has access to one iSCSI LUN. NOTE: relative to CVE-2020-28374, this is a similar mistake in a different algorithm.",
        "URL": "https://github.com/open-iscsi/tcmu-runner/pull/644",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b4a986b0d1233a8a6f2d340133c2efaa1d9e8c14",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openark/orchestrator",
        "CVE_ID": "CVE-2021-27940",
        "Problem_Type": "CWE-79",
        "Description": "resources/public/js/orchestrator.js in openark orchestrator before 3.2.4 allows XSS via the orchestrator-msg parameter.",
        "URL": "https://github.com/openark/orchestrator/pull/1313",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eed0d4969d3e46d5474e21eb283e943dc1ba2d05",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpencachingDeutschland/oc-server3",
        "CVE_ID": "CVE-2022-4514",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, was found in Opencaching Deutschland oc-server3. Affected is an unknown function of the file htdocs/lang/de/ocstyle/varset.inc.php. The manipulation of the argument varvalue leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 4bdd6a0e7b7760cea03b91812cbb80d7b16e3b5f. It is recommended to apply a patch to fix this issue. VDB-215886 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/OpencachingDeutschland/oc-server3/pull/902",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4bdd6a0e7b7760cea03b91812cbb80d7b16e3b5f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpencachingDeutschland/oc-server3",
        "CVE_ID": "CVE-2022-4585",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in Opencaching Deutschland oc-server3. This affects an unknown part of the file htdocs/templates2/ocstyle/start.tpl of the component Cookie Handler. The manipulation of the argument usercountryCode leads to cross site scripting. It is possible to initiate the attack remotely. The name of the patch is c720f2777a452186c67ef30db3679dd409556544. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216171.",
        "URL": "https://github.com/OpencachingDeutschland/oc-server3/pull/894",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9e37286adee66106740d97954733608a80084031",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpencachingDeutschland/oc-server3",
        "CVE_ID": "CVE-2022-4586",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in Opencaching Deutschland oc-server3. This vulnerability affects unknown code of the file htdocs/templates2/ocstyle/cachelists.tpl of the component Cachelist Handler. The manipulation of the argument name_filter/by_filter leads to cross site scripting. The attack can be initiated remotely. The name of the patch is a9f79c7da78cd24a7ef1d298e6bc86006972ea73. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216172.",
        "URL": "https://github.com/OpencachingDeutschland/oc-server3/pull/894",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9e37286adee66106740d97954733608a80084031",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpencachingDeutschland/oc-server3",
        "CVE_ID": "CVE-2022-4587",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in Opencaching Deutschland oc-server3. This issue affects some unknown processing of the file htdocs/templates2/ocstyle/login.tpl of the component Login Page. The manipulation of the argument username leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 3296ebd61e7fe49e93b5755d5d7766d6e94a7667. It is recommended to apply a patch to fix this issue. The identifier VDB-216173 was assigned to this vulnerability.",
        "URL": "https://github.com/OpencachingDeutschland/oc-server3/pull/893",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e36cbdce882fe37af3fed29e826fa86fed463ee4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpenConext/OpenConext-engineblock",
        "CVE_ID": "CVE-2018-1000611",
        "Problem_Type": "CWE-79",
        "Description": "SURFnet OpenConext EngineBlock version 5.7.0 to 5.7.3 contains a Cross Site Scripting (XSS) vulnerability that can result in Allows an attacker to inject arbitrary web scripts or HTML into help and login pages. This attack appear to be exploitable via the victim opening a specially crafted URL.",
        "URL": "https://github.com/OpenConext/OpenConext-engineblock/pull/563/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "77b96991f8e92b18cd96399d8030e8298fb015b7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "opencontainers/runc",
        "CVE_ID": "CVE-2023-28642",
        "Problem_Type": "CWE-59",
        "Description": "runc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\n",
        "URL": "https://github.com/opencontainers/runc/pull/3785",
        "Tag": "['Patch']",
        "fix_commit_hash": "059d7730fc102052c90fea52c7b3c6f04fbbc487",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "opencryptoki/opencryptoki",
        "CVE_ID": "CVE-2021-3798",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A flaw was found in openCryptoki. The openCryptoki Soft token does not check if an EC key is valid when an EC key is created via C_CreateObject, nor when C_DeriveKey is used with ECDH public data. This may allow a malicious user to extract the private key by performing an invalid curve attack.",
        "URL": "https://github.com/opencryptoki/opencryptoki/pull/402",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4e3b43c3d8844402c04a66b55c6c940f965109f0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "opencv/opencv_contrib",
        "CVE_ID": "CVE-2023-2618",
        "Problem_Type": "CWE-401",
        "Description": "A vulnerability, which was classified as problematic, has been found in OpenCV wechat_qrcode Module up to 4.7.0. Affected by this issue is the function DecodedBitStreamParser::decodeHanziSegment of the file qrcode/decoder/decoded_bit_stream_parser.cpp. The manipulation leads to memory leak. The attack may be launched remotely. The name of the patch is 2b62ff6181163eea029ed1cab11363b4996e9cd6. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-228548.",
        "URL": "https://github.com/opencv/opencv_contrib/pull/3484",
        "Tag": "['Patch']",
        "fix_commit_hash": "ec406fa4748fb4b0630c1b986469e7918d5e8953",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openemr/openemr",
        "CVE_ID": "CVE-2019-17197",
        "Problem_Type": "CWE-89",
        "Description": "OpenEMR through 5.0.2 has SQL Injection in the Lifestyle demographic filter criteria in library/clinical_rules.php that affects library/patient.inc.",
        "URL": "https://github.com/openemr/openemr/pull/2698/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "52e6c1e8df0127f5c20656111c710fc2cbc9aec3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openforis/arena",
        "CVE_ID": "CVE-2019-15567",
        "Problem_Type": "CWE-89",
        "Description": "OpenForis Arena before 2019-05-07 allows SQL injection in the sorting feature.",
        "URL": "https://github.com/openforis/arena/pull/170",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "599280a89f35daf215db413f91198affa41a5685",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openkm/document-management-system",
        "CVE_ID": "CVE-2021-33950",
        "Problem_Type": "CWE-611",
        "Description": "An issue discovered in OpenKM v6.3.10 allows attackers to obtain sensitive information via the XMLTextExtractor function.",
        "URL": "https://github.com/openkm/document-management-system/pull/288",
        "Tag": "['Patch']",
        "fix_commit_hash": "85a3a8fed0d2963082e7c5662c64fe6a590f97f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openkm/document-management-system",
        "CVE_ID": "CVE-2022-40317",
        "Problem_Type": "CWE-79",
        "Description": "OpenKM 6.3.11 allows stored XSS related to the javascript&colon; substring in an A element.",
        "URL": "https://github.com/openkm/document-management-system/pull/336",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7680e284596c9a984b39aa1477895d1ec443d61e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openmrs/openmrs-module-adminui",
        "CVE_ID": "CVE-2021-4292",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in OpenMRS Admin UI Module up to 1.4.x. It has been rated as problematic. This issue affects some unknown processing of the file omod/src/main/webapp/pages/metadata/privileges/privilege.gsp of the component Manage Privilege Page. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.5.0 is able to address this issue. The name of the patch is 4f8565425b7c74128dec9ca46dfbb9a3c1c24911. It is recommended to upgrade the affected component. The identifier VDB-216917 was assigned to this vulnerability.",
        "URL": "https://github.com/openmrs/openmrs-module-adminui/pull/58",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4f8565425b7c74128dec9ca46dfbb9a3c1c24911",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openmrs/openmrs-module-htmlformentry",
        "CVE_ID": "CVE-2018-16521",
        "Problem_Type": "CWE-611",
        "Description": "An XML External Entity (XXE) vulnerability exists in HTML Form Entry 3.7.0, as distributed in OpenMRS Reference Application 2.8.0.",
        "URL": "https://github.com/openmrs/openmrs-module-htmlformentry/pull/138",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "830db76f5da1b147ac5816ea66d8a7f14d9058f8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openmrs/openmrs-module-referenceapplication",
        "CVE_ID": "CVE-2021-4289",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in OpenMRS openmrs-module-referenceapplication up to 2.11.x. Affected by this vulnerability is the function post of the file omod/src/main/java/org/openmrs/module/referenceapplication/page/controller/UserAppPageController.java of the component User App Page. The manipulation of the argument AppId leads to cross site scripting. The attack can be launched remotely. Upgrading to version 2.12.0 is able to address this issue. The name of the patch is 0410c091d46eed3c132fe0fcafe5964182659f74. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216883.",
        "URL": "https://github.com/openmrs/openmrs-module-referenceapplication/pull/89",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0410c091d46eed3c132fe0fcafe5964182659f74",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openmrs/openmrs-module-reporting",
        "CVE_ID": "CVE-2017-7990",
        "Problem_Type": "CWE-352",
        "Description": "The Reporting Module 1.12.0 for OpenMRS allows CSRF attacks with resultant XSS, in which administrative authentication is hijacked to insert JavaScript into a name field in webapp/reports/manageReports.jsp.",
        "URL": "https://github.com/openmrs/openmrs-module-reporting/pull/141/commits/0023a659288538d2763835847d3414ecb18b931a#diff-50e25eddc5909110fa3d31090877c2fd",
        "Tag": "['Patch']",
        "fix_commit_hash": "079977276fa9c5f38d471af9ea53e885fb963f2d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpenNMS/opennms",
        "CVE_ID": "CVE-2016-6555",
        "Problem_Type": "CWE-79",
        "Description": "OpenNMS version 18.0.1 and prior are vulnerable to a stored XSS issue due to insufficient filtering of SNMP trap supplied data. By creating a malicious SNMP trap, an attacker can store an XSS payload which will trigger when a user of the web UI views the events list page. This issue was fixed in version 18.0.2, released on September 20, 2016.",
        "URL": "https://github.com/OpenNMS/opennms/pull/1019",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b11b33ba75e5a9386a6abfd0d5ab9e00a2bf3510",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpenNMS/opennms",
        "CVE_ID": "CVE-2016-6556",
        "Problem_Type": "CWE-79",
        "Description": "OpenNMS version 18.0.1 and prior are vulnerable to a stored XSS issue due to insufficient filtering of SNMP agent supplied data. By creating a malicious SNMP 'sysName' or 'sysContact' response, an attacker can store an XSS payload which will trigger when a user of the web UI views the data. This issue was fixed in version 18.0.2, released on September 20, 2016.",
        "URL": "https://github.com/OpenNMS/opennms/pull/1019",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b11b33ba75e5a9386a6abfd0d5ab9e00a2bf3510",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpenNMS/opennms",
        "CVE_ID": "CVE-2023-0815",
        "Problem_Type": "CWE-532",
        "Description": "Potential Insertion of Sensitive Information into Jetty Log Files in multiple versions of OpenNMS Meridian and Horizon could allow disclosure of usernames and passwords if the logging level is set to debug.\u00c2\u00a0Users\nshould upgrade to Meridian 2023.1.0 or newer, or Horizon 31.0.4. Meridian and\nHorizon installation instructions state that they are intended for installation\nwithin an organization's private networks and should not be directly accessible\nfrom the Internet.\n\n\n\n\n\n\n",
        "URL": "https://github.com/OpenNMS/opennms/pull/5741/files",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "a176b1c13d07bb8c5bb37c96e1e0be8b0d5aba7f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpenNMS/opennms",
        "CVE_ID": "CVE-2023-0867",
        "Problem_Type": "CWE-79",
        "Description": "Multiple stored and reflected cross-site scripting vulnerabilities in webapp jsp pages in multiple versions of OpenNMS Meridian and Horizon could allow an attacker access to confidential session information.\u00c2\u00a0Users\nshould upgrade to Meridian 2023.1.0 or newer, or Horizon 31.0.4. Meridian and\nHorizon installation instructions state that they are intended for installation\nwithin an organization's private networks and should not be directly accessible\nfrom the Internet.\n\n\n\n\n\n\n\n",
        "URL": "https://github.com/OpenNMS/opennms/pull/5765",
        "Tag": "['Patch']",
        "fix_commit_hash": "a2efee8f3a5046d15d5401d9cfc20158a1e7ca56",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openscad/openscad",
        "CVE_ID": "CVE-2022-0497",
        "Problem_Type": "CWE-125",
        "Description": "A vulnerbiility was found in Openscad, where a .scad file with no trailing newline could cause an out-of-bounds read during parsing of annotations.",
        "URL": "https://github.com/openscad/openscad/pull/4044",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "78a82cf31767bda6969d8ea2eb851dc24c12b4b0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "opensearch-project/notifications",
        "CVE_ID": "CVE-2022-41906",
        "Problem_Type": "CWE-918",
        "Description": "OpenSearch Notifications is a notifications plugin for OpenSearch that enables other plugins to send notifications via Email, Slack, Amazon Chime, Custom web-hook etc channels. A potential SSRF issue in OpenSearch Notifications Plugin starting in 2.0.0 and prior to 2.2.1 could allow an existing privileged user to enumerate listening services or interact with configured resources via HTTP requests exceeding the Notification plugin's intended scope. OpenSearch 2.2.1+ contains the fix for this issue. There are currently no recommended workarounds. \n",
        "URL": "https://github.com/opensearch-project/notifications/pull/507",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e7277526d80cf346975225de8d5977f302840ec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/cluster-kube-apiserver-operator",
        "CVE_ID": "CVE-2019-10165",
        "Problem_Type": "CWE-532",
        "Description": "OpenShift Container Platform before version 4.1.3 writes OAuth tokens in plaintext to the audit logs for the Kubernetes API server and OpenShift API server. A user with sufficient privileges could recover OAuth tokens from these audit logs and use them to access other resources.",
        "URL": "https://github.com/openshift/cluster-kube-apiserver-operator/pull/499/",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f8a0a355751f764beb89d414926cdc08631b0d5c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/cluster-openshift-apiserver-operator",
        "CVE_ID": "CVE-2019-10165",
        "Problem_Type": "CWE-532",
        "Description": "OpenShift Container Platform before version 4.1.3 writes OAuth tokens in plaintext to the audit logs for the Kubernetes API server and OpenShift API server. A user with sufficient privileges could recover OAuth tokens from these audit logs and use them to access other resources.",
        "URL": "https://github.com/openshift/cluster-openshift-apiserver-operator/pull/205",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4c221ed5e58eb05110cdf92f81a2e5356dd3c6b2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/enhancements",
        "CVE_ID": "CVE-2020-10752",
        "Problem_Type": "CWE-532",
        "Description": "A flaw was found in the OpenShift API Server, where it failed to sufficiently protect OAuthTokens by leaking them into the logs when an API Server panic occurred. This flaw allows an attacker with the ability to cause an API Server error to read the logs, and use the leaked OAuthToken to log into the API Server with the leaked token.",
        "URL": "https://github.com/openshift/enhancements/pull/323",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e33b4ea8856179eb8dd047682f75df10dd66ddb8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/origin-web-console",
        "CVE_ID": "CVE-2020-10715",
        "Problem_Type": "CWE-20",
        "Description": "A content spoofing vulnerability was found in the openshift/console 3.11 and 4.x. This flaw allows an attacker to craft a URL and inject arbitrary text onto the error page that appears to be from the OpenShift instance. This attack could potentially convince a user that the inserted text is legitimate.",
        "URL": "https://github.com/openshift/origin-web-console/pull/3173",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c37982397087036321312172282e139da378eff2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "snoyberg/keter",
        "CVE_ID": "CVE-2022-4877",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability has been found in snoyberg keter up to 1.8.1 and classified as problematic. This vulnerability affects unknown code of the file Keter/Proxy.hs. The manipulation of the argument host leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.8.2 is able to address this issue. The name of the patch is d41f3697926b231782a3ad8050f5af1ce5cc40b7. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217444.",
        "URL": "https://github.com/snoyberg/keter/pull/246",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "435f06a44001d475b6c4ea7a094b152da311f0e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "snyk/kubernetes-monitor",
        "CVE_ID": "CVE-2023-1065",
        "Problem_Type": "CWE-287",
        "Description": "This vulnerability in the Snyk Kubernetes Monitor can result in irrelevant data being posted to a Snyk Organization, which could in turn obfuscate other, relevant, security issues. It does not expose the user of the integration to any direct security risk and no user data can be leaked. To exploit the vulnerability the attacker does not need to be authenticated to Snyk but does need to know the target's Integration ID (which may or may not be the same as the Organization ID, although this is an unpredictable UUID in either case).",
        "URL": "https://github.com/snyk/kubernetes-monitor/pull/1275",
        "Tag": "['Patch']",
        "fix_commit_hash": "29a95267c91fe36ab76ee6e6e90a3bc70c3a7bf0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "softwaremill/akka-http-session",
        "CVE_ID": "CVE-2020-28452",
        "Problem_Type": "CWE-352",
        "Description": "This affects the package com.softwaremill.akka-http-session:core_2.12 from 0 and before 0.6.1; all versions of package com.softwaremill.akka-http-session:core_2.11; the package com.softwaremill.akka-http-session:core_2.13 from 0 and before 0.6.1. CSRF protection can be bypassed by forging a request that contains the same value for both the X-XSRF-TOKEN header and the XSRF-TOKEN cookie value, as the check in randomTokenCsrfProtection only checks that the two values are equal and non-empty.",
        "URL": "https://github.com/softwaremill/akka-http-session/pull/79",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c4c82275daeeeb83ffc49f1c8491264189e95d27",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sonicdoe/detect-character-encoding",
        "CVE_ID": "CVE-2021-39176",
        "Problem_Type": "CWE-401",
        "Description": "detect-character-encoding is a package for detecting character encoding using ICU. In detect-character-encoding v0.3.0 and earlier, allocated memory is not released. The problem has been patched in detect-character-encoding v0.3.1.",
        "URL": "https://github.com/sonicdoe/detect-character-encoding/pull/6",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d44356927b92e3b13e178071bf6d7c671766f588",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "SpiderLabs/ModSecurity",
        "CVE_ID": "CVE-2022-48279",
        "Problem_Type": "CWE-436",
        "Description": "In ModSecurity before 2.9.6 and 3.x before 3.0.8, HTTP multipart requests were incorrectly parsed and could bypass the Web Application Firewall. NOTE: this is related to CVE-2022-39956 but can be considered independent changes to the ModSecurity (C language) codebase.",
        "URL": "https://github.com/SpiderLabs/ModSecurity/pull/2797",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "51a30d7b406af95c4143560d9753cf0b6d2151f5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "SpiderLabs/ModSecurity",
        "CVE_ID": "CVE-2023-24021",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Incorrect handling of '\\0' bytes in file uploads in ModSecurity before 2.9.7 may allow for Web Application Firewall bypasses and buffer over-reads on the Web Application Firewall when executing rules that read the FILES_TMP_CONTENT collection.",
        "URL": "https://github.com/SpiderLabs/ModSecurity/pull/2857",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9640b5408ab5dbc2e95900b248b6a1ddcc9db00c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "spree/spree",
        "CVE_ID": "CVE-2020-26223",
        "Problem_Type": "CWE-863",
        "Description": "Spree is a complete open source e-commerce solution built with Ruby on Rails. In Spree from version 3.7 and before versions 3.7.13, 4.0.5, and 4.1.12, there is an authorization bypass vulnerability. The perpetrator could query the API v2 Order Status endpoint with an empty string passed as an Order token. This is patched in versions 3.7.11, 4.0.4, or 4.1.11 depending on your used Spree version. Users of Spree < 3.7 are not affected.",
        "URL": "https://github.com/spree/spree/pull/10573",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bc1b1ade97aa58fef3032c7ea7fd8bc6af539032",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "square/git-fastclone",
        "CVE_ID": "CVE-2015-8968",
        "Problem_Type": "CWE-77",
        "Description": "git-fastclone before 1.0.1 permits arbitrary shell command execution from .gitmodules. If an attacker can instruct a user to run a recursive clone from a repository they control, they can get a client to run an arbitrary shell command. Alternately, if an attacker can MITM an unencrypted git clone, they could exploit this. The ext command will be run if the repository is recursively cloned or if submodules are updated. This attack works when cloning both local and remote repositories.",
        "URL": "https://github.com/square/git-fastclone/pull/2",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "14198fe12443055839b1ba4cc294b04a38ae15f1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "squid-cache/squid",
        "CVE_ID": "CVE-2018-19132",
        "Problem_Type": "CWE-772",
        "Description": "Squid before 4.4, when SNMP is enabled, allows a denial of service (Memory Leak) via an SNMP packet.",
        "URL": "https://github.com/squid-cache/squid/pull/313",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "644131ff1e00c1895d77561f561d29c104ba6b11",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Squirrel/Squirrel.Windows",
        "CVE_ID": "CVE-2022-46330",
        "Problem_Type": "CWE-427",
        "Description": "Squirrel.Windows is both a toolset and a library that provides installation and update functionality for Windows desktop applications. Installers generated by Squirrel.Windows 2.0.1 and earlier contain an issue with the DLL search path, which may lead to insecurely loading Dynamic Link Libraries. As a result, arbitrary code may be executed with the privilege of the user invoking the installer.",
        "URL": "https://github.com/Squirrel/Squirrel.Windows/pull/1807",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a1eb63ac1cfb04bc2ce6ed91b4aaff44b672df6d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "StackStorm/st2",
        "CVE_ID": "CVE-2021-44657",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "In StackStorm versions prior to 3.6.0, the jinja interpreter was not run in sandbox mode and thus allows execution of unsafe system commands. Jinja does not enable sandboxed mode by default due to backwards compatibility. Stackstorm now sets sandboxed mode for jinja by default.",
        "URL": "https://github.com/StackStorm/st2/pull/5359",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e97659c5c1d39863d870a081787a176eb8e260c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Starcounter-Jack/JSON-Patch",
        "CVE_ID": "CVE-2021-4279",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability has been found in Starcounter-Jack JSON-Patch up to 3.1.0 and classified as problematic. This vulnerability affects unknown code. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.1.1 is able to address this issue. The name of the patch is 7ad6af41eabb2d799f698740a91284d762c955c9. It is recommended to upgrade the affected component. VDB-216778 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/Starcounter-Jack/JSON-Patch/pull/262",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7ad6af41eabb2d799f698740a91284d762c955c9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "stepmania/stepmania",
        "CVE_ID": "CVE-2022-25010",
        "Problem_Type": "CWE-732",
        "Description": "The component /rootfs in RageFile of Stepmania v5.1b2 and below allows attackers access to the entire file system.",
        "URL": "https://github.com/stepmania/stepmania/pull/2184",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2de42736259460b640188ab9aa92e5261fb64676",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "steveukx/git-js",
        "CVE_ID": "CVE-2022-24433",
        "Problem_Type": "CWE-88",
        "Description": "The package simple-git before 3.3.0 are vulnerable to Command Injection via argument injection. When calling the .fetch(remote, branch, handlerFn) function, both the remote and branch parameters are passed to the git fetch subcommand. By injecting some git options it was possible to get arbitrary command execution.",
        "URL": "https://github.com/steveukx/git-js/pull/767",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "372efa0f5efacb49cfb60703b6adb8b2e58ed9f8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "STMicroelectronics/stm32_mw_usb_host",
        "CVE_ID": "CVE-2021-42553",
        "Problem_Type": "CWE-120",
        "Description": "A buffer overflow vulnerability in stm32_mw_usb_host of STMicroelectronics in versions before 3.5.1 allows an attacker to execute arbitrary code when the descriptor contains more endpoints than USBH_MAX_NUM_ENDPOINTS. The library is typically integrated when using a RTOS such as FreeRTOS on STM32 MCUs.",
        "URL": "https://github.com/STMicroelectronics/stm32_mw_usb_host/pull/4",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4332bd63dc43c251a95ae6a1eb1b15a6fcadaea",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "strapi/strapi",
        "CVE_ID": "CVE-2020-27664",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "admin/src/containers/InputModalStepperProvider/index.js in Strapi before 3.2.5 has unwanted /proxy?url= functionality.",
        "URL": "https://github.com/strapi/strapi/pull/8442",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "328c1a3a137a91ce857ec70a9322d4301aad745a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "strapi/strapi",
        "CVE_ID": "CVE-2020-27666",
        "Problem_Type": "CWE-79",
        "Description": "Strapi before 3.2.5 has stored XSS in the wysiwyg editor's preview feature.",
        "URL": "https://github.com/strapi/strapi/pull/8440",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3240205790f3ed6c1cce7b47bb80e687df40114",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Strategy11/formidable-forms",
        "CVE_ID": "CVE-2021-24884",
        "Problem_Type": "CWE-352",
        "Description": "The Formidable Form Builder WordPress plugin before 4.09.05 allows to inject certain HTML Tags like <audio>,<video>,<img>,<a> and<button>.This could allow an unauthenticated, remote attacker to exploit a HTML-injection byinjecting a malicous link. The HTML-injection may trick authenticated users to follow the link. If the Link gets clicked, Javascript code can be executed. The vulnerability is due to insufficient sanitization of the \"data-frmverify\" tag for links in the web-based entry inspection page of affected systems. A successful exploitation incomibantion with CSRF could allow the attacker to perform arbitrary actions on an affected system with the privileges of the user. These actions include stealing the users account by changing their password or allowing attackers to submit their own code through an authenticated user resulting in Remote Code Execution. If an authenticated user who is able to edit Wordpress PHP Code in any kind, clicks the malicious link, PHP code can be edited.",
        "URL": "https://github.com/Strategy11/formidable-forms/pull/335/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8612efab229ca998663e9f5ea85c89a187f64cfd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "studygolang/studygolang",
        "CVE_ID": "CVE-2021-4273",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in studygolang. This vulnerability affects the function Search of the file http/controller/search.go. The manipulation of the argument q leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 97ba556d42fa89dfaa7737e9cd3a8ddaf670bb23. It is recommended to apply a patch to fix this issue. VDB-216478 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/studygolang/studygolang/pull/158",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "97ba556d42fa89dfaa7737e9cd3a8ddaf670bb23",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "substack/static-eval",
        "CVE_ID": "CVE-2017-16226",
        "Problem_Type": "CWE-20",
        "Description": "The static-eval module is intended to evaluate statically-analyzable expressions. In affected versions, untrusted user input is able to access the global function constructor, effectively allowing arbitrary code execution.",
        "URL": "https://github.com/substack/static-eval/pull/18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fca62272ab1be9cbedd45839edac943c1e30ca24",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "swoole/swoole-src",
        "CVE_ID": "CVE-2019-15518",
        "Problem_Type": "CWE-22",
        "Description": "Swoole before 4.2.13 allows directory traversal in swPort_http_static_handler.",
        "URL": "https://github.com/swoole/swoole-src/pull/2323",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d6b446aced52b8112e7e3a49ffd6de5eb71f629",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Sylius/SyliusGridBundle",
        "CVE_ID": "CVE-2022-24752",
        "Problem_Type": "CWE-89",
        "Description": "SyliusGridBundle is a package of generic data grids for Symfony applications. Prior to versions 1.10.1 and 1.11-rc2, values added at the end of query sorting were passed directly to the database. The maintainers do not know if this could lead to direct SQL injections but took steps to remediate the vulnerability. The issue is fixed in versions 1.10.1 and 1.11-rc2. As a workaround, overwrite the`Sylius\\Component\\Grid\\Sorting\\Sorter.php` class and register it in the container. More information about this workaround is available in the GitHub Security Advisory.",
        "URL": "https://github.com/Sylius/SyliusGridBundle/pull/222",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "73d0791d0575f955e830a3da4c3345f420d2f784",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "symfony/symfony",
        "CVE_ID": "CVE-2016-1902",
        "Problem_Type": "CWE-310",
        "Description": "The nextBytes function in the SecureRandom class in Symfony before 2.3.37, 2.6.x before 2.6.13, and 2.7.x before 2.7.9 does not properly generate random numbers when used with PHP 5.x without the paragonie/random_compat library and the openssl_random_pseudo_bytes function fails, which makes it easier for attackers to defeat cryptographic protection mechanisms via unspecified vectors.",
        "URL": "https://github.com/symfony/symfony/pull/17359",
        "Tag": "['Patch']",
        "fix_commit_hash": "7d72f93e90f79c19a4f422e14a6d9bcbae42e083",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "symfony/symfony",
        "CVE_ID": "CVE-2021-41267",
        "Problem_Type": "CWE-444",
        "Description": "Symfony/Http-Kernel is the HTTP kernel component for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Headers that are not part of the \"trusted_headers\" allowed list are ignored and protect users from \"Cache poisoning\" attacks. In Symfony 5.2, maintainers added support for the `X-Forwarded-Prefix` headers, but this header was accessible in SubRequest, even if it was not part of the \"trusted_headers\" allowed list. An attacker could leverage this opportunity to forge requests containing a `X-Forwarded-Prefix` header, leading to a web cache poisoning issue. Versions 5.3.12 and later have a patch to ensure that the `X-Forwarded-Prefix` header is not forwarded to subrequests when it is not trusted.",
        "URL": "https://github.com/symfony/symfony/pull/44243",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "256c34a45b79fdc6276a8c941a1656713ee1ffec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "symfony/symfony",
        "CVE_ID": "CVE-2021-41270",
        "Problem_Type": "CWE-1236",
        "Description": "Symfony/Serializer handles serializing and deserializing data structures for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Symfony versions 4.1.0 before 4.4.35 and versions 5.0.0 before 5.3.12 are vulnerable to CSV injection, also known as formula injection. In Symfony 4.1, maintainers added the opt-in `csv_escape_formulas` option in the `CsvEncoder`, to prefix all cells starting with `=`, `+`, `-` or `@` with a tab `\\t`. Since then, OWASP added 2 chars in that list: Tab (0x09) and Carriage return (0x0D). This makes the previous prefix char (Tab `\\t`) part of the vulnerable characters, and OWASP suggests using the single quote `'` for prefixing the value. Starting with versions 4.4.34 and 5.3.12, Symfony now follows the OWASP recommendations and uses the single quote `'` to prefix formulas and add the prefix to cells starting by `\\t`, `\\r` as well as `=`, `+`, `-` and `@`.",
        "URL": "https://github.com/symfony/symfony/pull/44243",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "256c34a45b79fdc6276a8c941a1656713ee1ffec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sysstat/sysstat",
        "CVE_ID": "CVE-2023-33204",
        "Problem_Type": "CWE-190",
        "Description": "sysstat through 12.7.2 allows a multiplication integer overflow in check_overflow in common.c. NOTE: this issue exists because of an incomplete fix for CVE-2022-39377.",
        "URL": "https://github.com/sysstat/sysstat/pull/360",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "6f8dc568e6ab072bb8205b732f04e685bf9237c0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2018-15686",
        "Problem_Type": "CWE-502",
        "Description": "A vulnerability in unit_deserialize of systemd allows an attacker to supply arbitrary state across systemd re-execution via NotifyAccess. This can be used to improperly influence systemd execution and possibly lead to root privilege escalation. Affected releases are systemd versions up to and including 239.",
        "URL": "https://github.com/systemd/systemd/pull/10519",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9f1c81d80a435d15ca1bd536a6d043c18c81c047",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2018-15688",
        "Problem_Type": "CWE-120",
        "Description": "A buffer overflow vulnerability in the dhcp6 client of systemd allows a malicious dhcp6 server to overwrite heap memory in systemd-networkd. Affected releases are systemd: versions up to and including 239.",
        "URL": "https://github.com/systemd/systemd/pull/10518",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5ec1fca41e5c5f31c7f6bfb42b113f0fb7dc1a87",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2022-45873",
        "Problem_Type": "CWE-400",
        "Description": "systemd 250 and 251 allows local users to achieve a systemd-coredump deadlock by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively, and put it in a deeply nested directory to make its backtrace large enough to cause the deadlock. This must be done 16 times when MaxConnections=16 is set for the systemd/units/systemd-coredump.socket file.",
        "URL": "https://github.com/systemd/systemd/pull/25055#issuecomment-1313733553",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "875c0bd07eac652c584d858f0a7811ca83b6c6ed",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "szabodanika/microbin",
        "CVE_ID": "CVE-2023-27075",
        "Problem_Type": "CWE-79",
        "Description": "A cross-site scripting vulnerability (XSS) in the component microbin/src/pasta.rs of Microbin v1.2.0 allows attackers to execute arbitrary web scripts or HTML via a crafted payload.",
        "URL": "https://github.com/szabodanika/microbin/pull/143",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ded125c89bcefc6a8f9465877bb85d9eccfe95c6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tass-belgium/picotcp",
        "CVE_ID": "CVE-2017-1000210",
        "Problem_Type": "CWE-119",
        "Description": "picoTCP (versions 1.7.0 - 1.5.0) is vulnerable to stack buffer overflow resulting in code execution or denial of service attack",
        "URL": "https://github.com/tass-belgium/picotcp/pull/473",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "faf924ec1a059e98d1f50b1eb5f798b89338df8b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tbeu/matio",
        "CVE_ID": "CVE-2019-13107",
        "Problem_Type": "CWE-190",
        "Description": "Multiple integer overflows exist in MATIO before 1.5.16, related to mat.c, mat4.c, mat5.c, mat73.c, and matvar_struct.c",
        "URL": "https://github.com/tbeu/matio/pull/118",
        "Tag": "['Patch']",
        "fix_commit_hash": "3aa96c28af1d2280656639d0dbb0630c3788ed96",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Tendrl/api",
        "CVE_ID": "CVE-2018-1127",
        "Problem_Type": "CWE-384",
        "Description": "Tendrl API in Red Hat Gluster Storage before 3.4.0 does not immediately remove session tokens after a user logs out. Session tokens remain active for a few minutes allowing attackers to replay tokens acquired via sniffing/MITM attacks and authenticate as the target user.",
        "URL": "https://github.com/Tendrl/api/pull/422",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df92c8232566a1a871d2ee0edc23a183d9389b45",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tensorflow/tensorflow",
        "CVE_ID": "CVE-2021-37692",
        "Problem_Type": "CWE-20",
        "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions under certain conditions, Go code can trigger a segfault in string deallocation. For string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function. However, tensor structure isn't checked until encoding to avoid a performance penalty. The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions). To fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written. We have patched the issue in GitHub commit 8721ba96e5760c229217b594f6d2ba332beedf22. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, which is the other affected version.",
        "URL": "https://github.com/tensorflow/tensorflow/pull/50508",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8721ba96e5760c229217b594f6d2ba332beedf22",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tensorflow/tensorflow",
        "CVE_ID": "CVE-2022-29209",
        "Problem_Type": "CWE-843",
        "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the macros that TensorFlow uses for writing assertions (e.g., `CHECK_LT`, `CHECK_GT`, etc.) have an incorrect logic when comparing `size_t` and `int` values. Due to type conversion rules, several of the macros would trigger incorrectly. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.",
        "URL": "https://github.com/tensorflow/tensorflow/pull/55730",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b917181c29b50cb83399ba41f4d938dc369109a1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tgstation/tgstation-server",
        "CVE_ID": "CVE-2023-32687",
        "Problem_Type": "CWE-522",
        "Description": "tgstation-server is a toolset to manage production BYOND servers. Starting in version 4.7.0 and prior to 5.12.1, instance users with the list chat bots permission can read chat bot connections strings without the associated permission. This issue is patched in version 5.12.1. As a workaround, remove the list chat bots permission from users that should not have the ability to view connection strings. Invalidate any credentials previously stored for safety.",
        "URL": "https://github.com/tgstation/tgstation-server/pull/1487",
        "Tag": "['Patch']",
        "fix_commit_hash": "e17a648283fd8aa2c799dc86c5f79c8eecabd195",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tgstation/tgstation-server",
        "CVE_ID": "CVE-2023-34243",
        "Problem_Type": "CWE-307",
        "Description": "TGstation is a toolset to manage production BYOND servers. In affected versions if a Windows user was registered in tgstation-server (TGS), an attacker could discover their username by brute-forcing the login endpoint with an invalid password. When a valid Windows logon was found, a distinct response would be generated. This issue has been addressed in version 5.12.5. Users are advised to upgrade. Users unable to upgrade may be mitigated by rate-limiting API calls with software that sits in front of TGS in the HTTP pipeline such as fail2ban.",
        "URL": "https://github.com/tgstation/tgstation-server/pull/1526",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b86d678e9fc5dc4b81bf90a2959f7f25a81f7146",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "thephpleague/oauth2-server",
        "CVE_ID": "CVE-2023-37260",
        "Problem_Type": "CWE-209",
        "Description": "league/oauth2-server is an implementation of an OAuth 2.0 authorization server written in PHP. Starting in version 8.3.2 and prior to version 8.5.3, servers that passed their keys to the CryptKey constructor as as string instead of a file path will have had that key included in a LogicException message if they did not provide a valid pass phrase for the key where required. This issue has been patched so that the provided key is no longer exposed in the exception message in the scenario outlined above. Users should upgrade to version 8.5.3 to receive the patch. As a workaround, pass the key as a file instead of a string.",
        "URL": "https://github.com/thephpleague/oauth2-server/pull/1353",
        "Tag": "['Patch']",
        "fix_commit_hash": "cb93a0f577609cf25dd637ce4dd08b9d25da4bd2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "theupdateframework/tuf",
        "CVE_ID": "CVE-2020-6174",
        "Problem_Type": "CWE-347",
        "Description": "TUF (aka The Update Framework) through 0.12.1 has Improper Verification of a Cryptographic Signature.",
        "URL": "https://github.com/theupdateframework/tuf/pull/974",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2977188139d065ff3356c3cb4aec60c582b57e0e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TicklishHoneyBee/nodau",
        "CVE_ID": "CVE-2022-4399",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in TicklishHoneyBee nodau. It has been rated as critical. Affected by this issue is some unknown functionality of the file src/db.c. The manipulation of the argument value/name leads to sql injection. The name of the patch is 7a7d737a3929f335b9717ddbd31db91151b69ad2. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-215252.",
        "URL": "https://github.com/TicklishHoneyBee/nodau/pull/26",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "248190479f555c75e9a8411c2681b99954ab2787",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7392",
        "Problem_Type": "CWE-772",
        "Description": "In TigerVNC 1.7.1 (SSecurityVeNCrypt.cxx SSecurityVeNCrypt::SSecurityVeNCrypt), an unauthenticated client can cause a small memory leak in the server.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/441",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f3e8663b3cf57c0b62d939d6953fbfcc112aadd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7394",
        "Problem_Type": "CWE-20",
        "Description": "In TigerVNC 1.7.1 (SSecurityPlain.cxx SSecurityPlain::processMsg), unauthenticated users can crash the server by sending long usernames.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/440",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62197c89e98be47a174074e4c7429c57767a4929",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tinacms/tinacms",
        "CVE_ID": "CVE-2023-25164",
        "Problem_Type": "CWE-200",
        "Description": "Tinacms is a Git-backed headless content management system with support for visual editing. Sites being built with @tinacms/cli >= 1.0.0 && < 1.0.9 which store sensitive values in the process.env variable are impacted. These values will be added in plaintext to the index.js file. If you're on a version prior to 1.0.0 this vulnerability does not affect you. If you are affected and your Tina-enabled website has sensitive credentials stored as environment variables (eg. Algolia API keys) you should rotate those keys immediately. This issue has been patched in @tinacms/cli@1.0.9. Users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/tinacms/tinacms/pull/3584",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a5f69fc777702842dd6077bcf29a0cc2e7093860",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tlsfuzzer/tlsfuzzer",
        "CVE_ID": "CVE-2023-0361",
        "Problem_Type": "CWE-203",
        "Description": "A timing side-channel in the handling of RSA ClientKeyExchange messages was discovered in GnuTLS. This side-channel can be sufficient to recover the key encrypted in the RSA ciphertext across a network in a Bleichenbacher style attack. To achieve a successful decryption the attacker would need to send a large amount of specially crafted messages to the vulnerable server. By recovering the secret from the ClientKeyExchange message, the attacker would be able to decrypt the application data exchanged over that connection.",
        "URL": "https://github.com/tlsfuzzer/tlsfuzzer/pull/679",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "4b990ab73c4041dd2f6a6b8dd2b6b214e144841f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tlsfuzzer/tlslite-ng",
        "CVE_ID": "CVE-2020-26263",
        "Problem_Type": "CWE-326",
        "Description": "tlslite-ng is an open source python library that implements SSL and TLS cryptographic protocols. In tlslite-ng before versions 0.7.6 and 0.8.0-alpha39, the code that performs decryption and padding check in RSA PKCS#1 v1.5 decryption is data dependant. In particular, the code has multiple ways in which it leaks information about the decrypted ciphertext. It aborts as soon as the plaintext doesn't start with 0x00, 0x02. All TLS servers that enable RSA key exchange as well as applications that use the RSA decryption API directly are vulnerable. This is patched in versions 0.7.6 and 0.8.0-alpha39. Note: the patches depend on Python processing the individual bytes in side-channel free manner, this is known to not the case (see reference). As such, users that require side-channel resistance are recommended to use different TLS implementations, as stated in the security policy of tlslite-ng.",
        "URL": "https://github.com/tlsfuzzer/tlslite-ng/pull/438",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a6cbf7e36782969739550214708a7bcb94d94dc5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tremor-rs/tremor-runtime",
        "CVE_ID": "CVE-2021-39228",
        "Problem_Type": "CWE-416",
        "Description": "Tremor is an event processing system for unstructured data. A vulnerability exists between versions 0.7.2 and 0.11.6. This vulnerability is a memory safety Issue when using `patch` or `merge` on `state` and assign the result back to `state`. In this case, affected versions of Tremor and the tremor-script crate maintains references to memory that might have been freed already. And these memory regions can be accessed by retrieving the `state`, e.g. send it over TCP or HTTP. This requires the Tremor server (or any other program using tremor-script) to execute a tremor-script script that uses the mentioned language construct. The issue has been patched in version 0.11.6 by removing the optimization and always cloning the target expression of a Merge or Patch. If an upgrade is not possible, a possible workaround is to avoid the optimization by introducing a temporary variable and not immediately reassigning to `state`.",
        "URL": "https://github.com/tremor-rs/tremor-runtime/pull/1217",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ec22294e1fab94bf344d85b7664d224e4790ddec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TryGhost/Ghost",
        "CVE_ID": "CVE-2024-23725",
        "Problem_Type": "CWE-79",
        "Description": "Ghost before 5.76.0 allows XSS via a post excerpt in excerpt.js. An XSS payload can be rendered in post summaries.",
        "URL": "https://github.com/TryGhost/Ghost/pull/17190",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "dc7e2b9261555f4a1a160ea4369e9d9578194358",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "twisted/twisted",
        "CVE_ID": "CVE-2019-12855",
        "Problem_Type": "CWE-295",
        "Description": "In words.protocols.jabber.xmlstream in Twisted through 19.2.1, XMPP support did not verify certificates when used with TLS, allowing an attacker to MITM connections.",
        "URL": "https://github.com/twisted/twisted/pull/1147",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cf8ed69824502cb39b3a077ec596fe01c03b93da",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "typelevel/jawn",
        "CVE_ID": "CVE-2022-21653",
        "Problem_Type": "CWE-326",
        "Description": "Jawn is an open source JSON parser. Extenders of the `org.typelevel.jawn.SimpleFacade` and `org.typelevel.jawn.MutableFacade` who don't override `objectContext()` are vulnerable to a hash collision attack which may result in a denial of service. Most applications do not implement these traits directly, but inherit from a library. `jawn-parser-1.3.1` fixes this issue and users are advised to upgrade. For users unable to upgrade override `objectContext()` to use a collision-safe collection.",
        "URL": "https://github.com/typelevel/jawn/pull/390",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "19ceb95cdc1142edaa492e7a94be899e9635bbce",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ualbertalib/NEOSDiscovery",
        "CVE_ID": "CVE-2022-4927",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A vulnerability was found in ualbertalib NEOSDiscovery 1.0.70 and classified as problematic. This issue affects some unknown processing of the file app/views/bookmarks/_refworks.html.erb. The manipulation leads to use of web link to untrusted target with window.opener access. The attack may be initiated remotely. Upgrading to version 1.0.71 is able to address this issue. The patch is named abe9f57123e0c278ae190cd7402a623d66c51375. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-222287.",
        "URL": "https://github.com/ualbertalib/NEOSDiscovery/pull/547",
        "Tag": "['Patch', 'Release Notes']",
        "fix_commit_hash": "0d5b4558f3330988a0bfed5a35c69098dac97363",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ucfopen/Materia",
        "CVE_ID": "CVE-2022-4564",
        "Problem_Type": "CWE-352",
        "Description": "A vulnerability classified as problematic has been found in University of Central Florida Materia up to 9.0.0. This affects the function before of the file fuel/app/classes/controller/api.php of the component API Controller. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 9.0.1-alpha1 is able to address this issue. The name of the patch is af259115d2e8f17068e61902151ee8a9dbac397b. It is recommended to upgrade the affected component. The identifier VDB-215973 was assigned to this vulnerability.",
        "URL": "https://github.com/ucfopen/Materia/pull/1371",
        "Tag": "['Patch']",
        "fix_commit_hash": "af259115d2e8f17068e61902151ee8a9dbac397b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "uclouvain/openjpeg",
        "CVE_ID": "CVE-2018-20845",
        "Problem_Type": "CWE-369",
        "Description": "Division-by-zero vulnerabilities in the functions pi_next_pcrl, pi_next_cprl, and pi_next_rpcl in openmj2/pi.c in OpenJPEG through 2.3.0 allow remote attackers to cause a denial of service (application crash).",
        "URL": "https://github.com/uclouvain/openjpeg/pull/1168/commits/c5bd64ea146162967c29bd2af0cbb845ba3eaaaf",
        "Tag": "['Patch']",
        "fix_commit_hash": "c5bd64ea146162967c29bd2af0cbb845ba3eaaaf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "udx/wp-stateless",
        "CVE_ID": "CVE-2022-4905",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in UDX Stateless Media Plugin 3.1.1 on WordPress. It has been declared as problematic. This vulnerability affects the function setup_wizard_interface of the file lib/classes/class-settings.php. The manipulation of the argument settings leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 3.2.0 is able to address this issue. The patch is identified as 6aee7ae0b0beeb2232ce6e1c82aa7e2041ae151a. It is recommended to upgrade the affected component. VDB-220750 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/udx/wp-stateless/pull/630",
        "Tag": "['Patch']",
        "fix_commit_hash": "a64718b43836541618d4b2b2d1a0ef650a6a74fe",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "umbraco/UmbracoIdentityExtensions",
        "CVE_ID": "CVE-2023-32312",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "UmbracoIdentityExtensions is an Umbraco add-on package that enables easy extensibility points for ASP.Net Identity integration. In affected versions client secrets are not required which may expose some endpoints to untrusted actors. Since Umbraco is not a single-page application, the implicit flow is not safe. For traditional MVC applications, it is recommended to use the authorization code flow, which requires the client to authenticate with the authorization server using a client secret. This flow provides better security, as it involves exchanging an authorization code for an access token and/or ID token, rather than directly returning tokens in the URL fragment. This issue has been patched in commit `e792429f9` and a release to Nuget is pending. Users are advised to upgrade when possible.",
        "URL": "https://github.com/umbraco/UmbracoIdentityExtensions/pull/53",
        "Tag": "['Patch']",
        "fix_commit_hash": "25f46ee530b4d35a4d935cbb8de355be9bc0d2b6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Uninett/mod_auth_mellon",
        "CVE_ID": "CVE-2019-3878",
        "Problem_Type": "CWE-287",
        "Description": "A vulnerability was found in mod_auth_mellon before v0.14.2. If Apache is configured as a reverse proxy and mod_auth_mellon is configured to only let through authenticated users (with the require valid-user directive), adding special HTTP headers that are normally used to start the special SAML ECP (non-browser based) can be used to bypass authentication.",
        "URL": "https://github.com/Uninett/mod_auth_mellon/pull/196",
        "Tag": "['Exploit', 'Third Party Advisory', 'Patch']",
        "fix_commit_hash": "7bc436760d10edb4be27fc326548ef3e7ffddf65",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "uriparser/uriparser",
        "CVE_ID": "CVE-2021-46141",
        "Problem_Type": "CWE-416",
        "Description": "An issue was discovered in uriparser before 0.9.6. It performs invalid free operations in uriFreeUriMembers and uriMakeOwner.",
        "URL": "https://github.com/uriparser/uriparser/pull/124",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd6070c92f3bab157139c35ff4841054afaa67ef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "urllib3/urllib3",
        "CVE_ID": "CVE-2020-26137",
        "Problem_Type": "CWE-74",
        "Description": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.",
        "URL": "https://github.com/urllib3/urllib3/pull/1800",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1dd69c5c5982fae7c87a620d487c2ebf7a6b436b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vaadin/flow",
        "CVE_ID": "CVE-2019-25027",
        "Problem_Type": "CWE-79",
        "Description": "Missing output sanitization in default RouteNotFoundError view in com.vaadin:flow-server versions 1.0.0 through 1.0.10 (Vaadin 10.0.0 through 10.0.13), and 1.1.0 through 1.4.2 (Vaadin 11.0.0 through 13.0.5) allows attacker to execute malicious JavaScript via crafted URL",
        "URL": "https://github.com/vaadin/flow/pull/5498",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f56eb4302d8a26e050145fadd3dc2648378ac8b9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2019-25028",
        "Problem_Type": "CWE-79",
        "Description": "Missing variable sanitization in Grid component in com.vaadin:vaadin-server versions 7.4.0 through 7.7.19 (Vaadin 7.4.0 through 7.7.19), and 8.0.0 through 8.8.4 (Vaadin 8.0.0 through 8.8.4) allows attacker to inject malicious JavaScript via unspecified vector",
        "URL": "https://github.com/vaadin/framework/pull/11645",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ca3af82272105fc7585124b9eb1ab76a84cd1df5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2021-33609",
        "Problem_Type": "CWE-20",
        "Description": "Missing check in DataCommunicator class in com.vaadin:vaadin-server versions 8.0.0 through 8.14.0 (Vaadin 8.0.0 through 8.14.0) allows authenticated network attacker to cause heap exhaustion by requesting too many rows of data.",
        "URL": "https://github.com/vaadin/framework/pull/12415",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2fc98eaf9c0e2cd42cf4a66fb6d2cd2e9f0a08a9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vanilla/safecurl",
        "CVE_ID": "CVE-2020-36474",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "SafeCurl before 0.9.2 has a DNS rebinding vulnerability.",
        "URL": "https://github.com/vanilla/safecurl/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4552574b59086898da81b7a2f6342d99026b27d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vantage6/vantage6",
        "CVE_ID": "CVE-2023-28635",
        "Problem_Type": "CWE-863",
        "Description": "vantage6 is privacy preserving federated learning infrastructure. Prior to version 4.0.0, malicious users may try to get access to resources they are not allowed to see, by creating resources with integers as names. One example where this is a risk, is when users define which users are allowed to run algorithms on their node. This may be defined by username or user id. Now, for example, if user id 13 is allowed to run tasks, and an attacker creates a username with username '13', they would be wrongly allowed to run an algorithm. There may also be other places in the code where such a mixup of resource ID or name leads to issues. Version 4.0.0 contains a patch for this issue. The best solution is to check when resources are created or modified, that the resource name always starts with a character.",
        "URL": "https://github.com/vantage6/vantage6/pull/744",
        "Tag": "['Patch']",
        "fix_commit_hash": "aacfc24548cbf168579d2e13b2ddaf8ded715d36",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vantage6/vantage6",
        "CVE_ID": "CVE-2023-41882",
        "Problem_Type": "CWE-284",
        "Description": "vantage6 is privacy preserving federated learning infrastructure. The endpoint /api/collaboration/{id}/task is used to collect all tasks from a certain collaboration. To get such tasks, a user should have permission to view the collaboration and to view the tasks in it. However, prior to version 4.0.0, it is only checked if the user has permission to view the collaboration. Version 4.0.0 contains a patch. There are no known workarounds.",
        "URL": "https://github.com/vantage6/vantage6/pull/711",
        "Tag": "['Patch']",
        "fix_commit_hash": "86564e103cbac5238ce2fe392e3357e0e8c20220",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vercel/next.js",
        "CVE_ID": "CVE-2023-46298",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Next.js before 13.4.20-canary.13 lacks a cache-control header and thus empty prefetch responses may sometimes be cached by a CDN, causing a denial of service to all users requesting the same URL via that CDN.",
        "URL": "https://github.com/vercel/next.js/pull/54732",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "20d05958ff853e9c9e42139ffec294336881c648",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vert-x3/vertx-web",
        "CVE_ID": "CVE-2020-35217",
        "Problem_Type": "CWE-352",
        "Description": "Vert.x-Web framework v4.0 milestone 1-4 does not perform a correct CSRF verification. Instead of comparing the CSRF token in the request with the CSRF token in the cookie, it compares the CSRF token in the cookie against a CSRF token that is stored in the session. An attacker does not even need to provide a CSRF token in the request because the framework does not consider it. The cookies are automatically sent by the browser and the verification will always succeed, leading to a successful CSRF attack.",
        "URL": "https://github.com/vert-x3/vertx-web/pull/1613",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f5eb8524c9b671c2e441a6ffacf2bb42e8fccd2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "viabtc/viabtc_exchange_server",
        "CVE_ID": "CVE-2018-17568",
        "Problem_Type": "CWE-190",
        "Description": "utils/ut_rpc.c in ViaBTC Exchange Server before 2018-08-21 has an integer overflow leading to memory corruption.",
        "URL": "https://github.com/viabtc/viabtc_exchange_server/pull/131",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4a7c27bfe98f409623d4d857894d017ff0672cc9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "victornpb/asciitable.js",
        "CVE_ID": "CVE-2020-7771",
        "Problem_Type": "CWE-1321",
        "Description": "The package asciitable.js before 1.0.3 are vulnerable to Prototype Pollution via the main function.",
        "URL": "https://github.com/victornpb/asciitable.js/pull/1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8db8fc5ffa7a2a6e8596709d99b200afb53f40ab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "virtualsquare/picotcp",
        "CVE_ID": "CVE-2023-35848",
        "Problem_Type": "CWE-682",
        "Description": "VirtualSquare picoTCP (aka PicoTCP-NG) through 2.1 lacks certain size calculations before attempting to set a value of an mss structure member.",
        "URL": "https://github.com/virtualsquare/picotcp/pull/15/files",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "41b43cbbc7f2c5c7bd8849911ccceaa1df6586e6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vivo-project/Vitro",
        "CVE_ID": "CVE-2019-6986",
        "Problem_Type": "CWE-77",
        "Description": "SPARQL Injection in VIVO Vitro v1.10.0 allows a remote attacker to execute arbitrary SPARQL via the uri parameter, leading to a regular expression denial of service (ReDoS), as demonstrated by crafted use of FILTER%20regex in a /individual?uri= request.",
        "URL": "https://github.com/vivo-project/Vitro/pull/111",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dd04f3def86fddee6acd5ceb8c41277f7919d6b4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vpoliakov/FlashLingo",
        "CVE_ID": "CVE-2019-15561",
        "Problem_Type": "CWE-89",
        "Description": "FlashLingo before 2019-06-12 allows SQL injection, related to flashlingo.js and db.js.",
        "URL": "https://github.com/vpoliakov/FlashLingo/pull/3",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe260adb102f8d199fc88caac271080849fefac3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vyperlang/vyper",
        "CVE_ID": "CVE-2021-41121",
        "Problem_Type": "CWE-119",
        "Description": "Vyper is a Pythonic Smart Contract Language for the EVM. In affected versions when performing a function call inside a literal struct, there is a memory corruption issue that occurs because of an incorrect pointer to the the top of the stack. This issue has been resolved in version 0.3.0.",
        "URL": "https://github.com/vyperlang/vyper/pull/2447",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "93287e5ac184b53b395c907d40701f721daf8177",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wal-g/wal-g",
        "CVE_ID": "CVE-2021-38599",
        "Problem_Type": "CWE-754",
        "Description": "WAL-G before 1.1, when a non-libsodium build (e.g., one of the official binary releases published as GitHub Releases) is used, silently ignores the libsodium encryption key and uploads cleartext backups. This is arguably a Principle of Least Surprise violation because \"the user likely wanted to encrypt all file activity.\"",
        "URL": "https://github.com/wal-g/wal-g/pull/1062",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cadf598e1c2a345915a21a44518c5a4d5401e2e3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wazuh/wazuh",
        "CVE_ID": "CVE-2021-44079",
        "Problem_Type": "CWE-77",
        "Description": "In the wazuh-slack active response script in Wazuh 4.2.x before 4.2.5, untrusted user agents are passed to a curl command line, potentially resulting in remote code execution.",
        "URL": "https://github.com/wazuh/wazuh/pull/10809",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a121e732cd4885a9630b890c04e94c6ba4b75038",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "weaveworks/weave",
        "CVE_ID": "CVE-2020-26278",
        "Problem_Type": "CWE-250",
        "Description": "Weave Net is open source software which creates a virtual network that connects Docker containers across multiple hosts and enables their automatic discovery. Weave Net before version 2.8.0 has a vulnerability in which can allow an attacker to take over any host in the cluster. Weave Net is supplied with a manifest that runs pods on every node in a Kubernetes cluster, which are responsible for managing network connections for all other pods in the cluster. This requires a lot of power over the host, and the manifest sets `privileged: true`, which gives it that power. It also set `hostPID: true`, which gave it the ability to access all other processes on the host, and write anywhere in the root filesystem of the host. This setting was not necessary, and is being removed. You are only vulnerable if you have an additional vulnerability (e.g. a bug in Kubernetes) or misconfiguration that allows an attacker to run code inside the Weave Net pod, No such bug is known at the time of release, and there are no known instances of this being exploited. Weave Net 2.8.0 removes the hostPID setting and moves CNI plugin install to an init container. Users who do not update to 2.8.0 can edit the hostPID line in their existing DaemonSet manifest to say false instead of true, arrange some other way to install CNI plugins (e.g. Ansible) and remove those mounts from the DaemonSet manifest.",
        "URL": "https://github.com/weaveworks/weave/pull/3876",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d81e908d1a4ab455ad5c3ee2c2eb3feba5ccdbb7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "webbukkit/dynmap",
        "CVE_ID": "CVE-2019-12395",
        "Problem_Type": "CWE-287",
        "Description": "In Webbukkit Dynmap 3.0-beta-3 or below, due to a missing login check in servlet/MapStorageHandler.java, an attacker can see a map image without login even if victim enables login-required in setting.",
        "URL": "https://github.com/webbukkit/dynmap/pull/2475",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "641f142cd3ccdcbfb04eda3059be22dd9ed93783",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "webkul/hotelcommerce",
        "CVE_ID": "CVE-2023-36235",
        "Problem_Type": "CWE-639",
        "Description": "An issue in webkul qloapps before v1.6.0 allows an attacker to obtain sensitive information via the id_order parameter.",
        "URL": "https://github.com/webkul/hotelcommerce/pull/537",
        "Tag": "['Patch']",
        "fix_commit_hash": "843867b19cb68b85ac8c236aabccbed3bf4b0901",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "webpack/webpack",
        "CVE_ID": "CVE-2023-28154",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Webpack 5 before 5.76.0 does not avoid cross-realm object access. ImportParserPlugin.js mishandles the magic comment feature. An attacker who controls a property of an untrusted object can obtain access to the real global object.",
        "URL": "https://github.com/webpack/webpack/pull/16500",
        "Tag": "['Patch']",
        "fix_commit_hash": "4b4ca3bb53f36a5b8fc6bc1bd976ed7af161bd80",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "websvnphp/websvn",
        "CVE_ID": "CVE-2021-32305",
        "Problem_Type": "CWE-78",
        "Description": "WebSVN before 2.6.1 allows remote attackers to execute arbitrary commands via shell metacharacters in the search parameter.",
        "URL": "https://github.com/websvnphp/websvn/pull/142",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "88fce56b7b9dbfc0fe2629217c3bff2c2e751920",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "weston-embedded/uC-FTPs",
        "CVE_ID": "CVE-2022-41985",
        "Problem_Type": "CWE-287",
        "Description": "An authentication bypass vulnerability exists in the Authentication functionality of Weston Embedded uC-FTPs v 1.98.00. A specially crafted set of network packets can lead to authentication bypass and denial of service. An attacker can send a sequence of unauthenticated packets to trigger this vulnerability.",
        "URL": "https://github.com/weston-embedded/uC-FTPs/pull/1",
        "Tag": "['Patch']",
        "fix_commit_hash": "057203387144fbf97903f4e4705d4cbbdfba641b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "weston-embedded/uC-FTPs",
        "CVE_ID": "CVE-2022-46378",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read vulnerability exists in the PORT command parameter extraction functionality of Weston Embedded uC-FTPs v 1.98.00. A specially-crafted set of network packets can lead to denial of service. An attacker can send packets to trigger this vulnerability.This vulnerability occurs when no port argument is provided to the `PORT` command.",
        "URL": "https://github.com/weston-embedded/uC-FTPs/pull/2",
        "Tag": "['Patch']",
        "fix_commit_hash": "0f54674769456a31ba693a44029bd8baa9f73e0f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wildfly/wildfly-core",
        "CVE_ID": "CVE-2021-3644",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A flaw was found in wildfly-core in all versions. If a vault expression is in the form of a single attribute that contains multiple expressions, a user who was granted access to the management interface can potentially access a vault expression they should not be able to access and possibly retrieve the item which was stored in the vault. The highest threat from this vulnerability is data confidentiality and integrity.",
        "URL": "https://github.com/wildfly/wildfly-core/pull/4668",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6d8db43cd43b5994b7a14003db978064e086090b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wireapp/restund",
        "CVE_ID": "CVE-2021-21382",
        "Problem_Type": "CWE-862",
        "Description": "Restund is an open source NAT traversal server. The restund TURN server can be instructed to open a relay to the loopback address range. This allows you to reach any other service running on localhost which you might consider private. In the configuration that we ship (https://github.com/wireapp/ansible-restund/blob/master/templates/restund.conf.j2#L40-L43) the `status` interface of restund is enabled and is listening on `127.0.0.1`.The `status` interface allows users to issue administrative commands to `restund` like listing open relays or draining connections. It would be possible for an attacker to contact the status interface and issue administrative commands by setting `XOR-PEER-ADDRESS` to `127.0.0.1:{{restund_udp_status_port}}` when opening a TURN channel. We now explicitly disallow relaying to loopback addresses, 'any' addresses, link local addresses, and the broadcast address. As a workaround disable the `status` module in your restund configuration. However there might still be other services running on `127.0.0.0/8` that you do not want to have exposed. The `turn` module can be disabled. Restund will still perform STUN and this might already be enough for initiating calls in your environments. TURN is only used as a last resort when other NAT traversal options do not work. One should also make sure that the TURN server is set up with firewall rules so that it cannot relay to other addresses that you don't want the TURN server to relay to. For example other services in the same VPC where the TURN server is running. Ideally TURN servers should be deployed in an isolated fashion where they can only reach what they need to reach to perform their task of assisting NAT-traversal.",
        "URL": "https://github.com/wireapp/restund/pull/7",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5c0ed84b578c6af7cadd80d6c7b36681d7a3a0fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wireapp/wire-webapp",
        "CVE_ID": "CVE-2021-21400",
        "Problem_Type": "CWE-200",
        "Description": "wire-webapp is an open-source front end for Wire, a secure collaboration platform. In wire-webapp before version 2021-03-15-production.0, when being prompted to enter the app-lock passphrase, the typed passphrase will be sent into the most recently used chat when the user does not actively give focus to the input field. Input element focus is enforced programatically in version 2021-03-15-production.0.",
        "URL": "https://github.com/wireapp/wire-webapp/pull/10704",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "281f2a9d795f68abe423c116d5da4e1e73a60062",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssh",
        "CVE_ID": "CVE-2022-32073",
        "Problem_Type": "CWE-190",
        "Description": "WolfSSH v1.4.7 was discovered to contain an integer overflow via the function wolfSSH_SFTP_RecvRMDIR.",
        "URL": "https://github.com/wolfSSL/wolfssh/pull/360",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4fd2b36eb05348b399efde93070fe4be81f144a3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2018-16870",
        "Problem_Type": "CWE-310",
        "Description": "It was found that wolfssl before 3.15.7 is vulnerable to a new variant of the Bleichenbacher attack to perform downgrade attacks against TLS. This may lead to leakage of sensible data.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/1950",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d6ebd2d83244374025d48d03ebd9a8b2258725bf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2020-12457",
        "Problem_Type": "CWE-835",
        "Description": "An issue was discovered in wolfSSL before 4.5.0. It mishandles the change_cipher_spec (CCS) message processing logic for TLS 1.3. If an attacker sends ChangeCipherSpec messages in a crafted way involving more than one in a row, the server becomes stuck in the ProcessReply() loop, i.e., a denial of service.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/2927",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a585e4115eded0ddcc0195b5b7b09de85bda8900",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2021-3336",
        "Problem_Type": "CWE-295",
        "Description": "DoTls13CertificateVerify in tls13.c in wolfSSL before 4.7.0 does not cease processing for certain anomalous peer behavior (sending an ED22519, ED448, ECC, or RSA signature without the corresponding certificate). The client side is affected because man-in-the-middle attackers can impersonate TLS 1.3 servers.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/3676",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "58f9b6ec01f0caf89e9e4d37a8816b310005aaf1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2022-25638",
        "Problem_Type": "CWE-295",
        "Description": "In wolfSSL before 5.2.0, certificate validation may be bypassed during attempted authentication by a TLS 1.3 client to a TLS 1.3 server. This occurs when the sig_algo field differs between the certificate_verify message and the certificate message.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/4813",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6d79ff598f5a007f2455d1c3f9e22c9e0875b5c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2022-38152",
        "Problem_Type": "CWE-754",
        "Description": "An issue was discovered in wolfSSL before 5.5.0. When a TLS 1.3 client connects to a wolfSSL server and SSL_clear is called on its session, the server crashes with a segmentation fault. This occurs in the second session, which is created through TLS session resumption and reuses the initial struct WOLFSSL. If the server reuses the previous session structure (struct WOLFSSL) by calling wolfSSL_clear(WOLFSSL* ssl) on it, the next received Client Hello (that resumes the previous session) crashes the server. Note that this bug is only triggered when resuming sessions using TLS session resumption. Only servers that use wolfSSL_clear instead of the recommended SSL_free; SSL_new sequence are affected. Furthermore, wolfSSL_clear is part of wolfSSL's compatibility layer and is not enabled by default. It is not part of wolfSSL's native API.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/5468",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "91a49da4b8e27be92c57aa9b3c8c3dfc7c5bf6db",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2023-3724",
        "Problem_Type": "CWE-295",
        "Description": "If a TLS 1.3 client gets neither a PSK (pre shared key) extension nor a KSE (key share extension) when connecting to a malicious server, a default predictable buffer gets used for the IKM (Input Keying Material) value when generating the session master secret. Using a potentially known IKM value when generating the session master secret key compromises the key generated, allowing an eavesdropper to reconstruct it and potentially allowing access to or meddling with message contents in the session. This issue does not affect client validation of connected servers, nor expose private key information, but could result in an insecure TLS 1.3 session when not controlling both sides of the connection. wolfSSL recommends that TLS 1.3 client side users update the version of wolfSSL used.\u00c2\u00a0\n\n\n",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/6412",
        "Tag": "['Patch']",
        "fix_commit_hash": "5f1ce09dce32366b4475c4d44f51e9dccbb41115",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolkykim/qdecoder",
        "CVE_ID": "CVE-2022-32265",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "qDecoder before 12.1.0 does not ensure that the percent character is followed by two hex digits for URL decoding.",
        "URL": "https://github.com/wolkykim/qdecoder/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "40d87189e2e33431a515d9327819f5410d7eb5dd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Woorank/robots-txt-guard",
        "CVE_ID": "CVE-2021-4305",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability was found in Woorank robots-txt-guard. It has been rated as problematic. Affected by this issue is the function makePathPattern of the file lib/patterns.js. The manipulation of the argument pattern leads to inefficient regular expression complexity. The exploit has been disclosed to the public and may be used. The name of the patch is c03827cd2f9933619c23894ce7c98401ea824020. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217448.",
        "URL": "https://github.com/Woorank/robots-txt-guard/pull/4",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c03827cd2f9933619c23894ce7c98401ea824020",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wp-cli/config-command",
        "CVE_ID": "CVE-2021-29504",
        "Problem_Type": "CWE-295",
        "Description": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
        "URL": "https://github.com/wp-cli/config-command/pull/128",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "63c60cea31b3925899d99fc8f9aca0327786fd20",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wp-cli/extension-command",
        "CVE_ID": "CVE-2021-29504",
        "Problem_Type": "CWE-295",
        "Description": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
        "URL": "https://github.com/wp-cli/extension-command/pull/287",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "84f39c21f787d05799a116f1f7f89cf987736629",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "WPO-Foundation/webpagetest",
        "CVE_ID": "CVE-2019-17199",
        "Problem_Type": "CWE-22",
        "Description": "www/getfile.php in WPO WebPageTest 19.04 on Windows allows Directory Traversal (for reading arbitrary files) because of an unanchored regular expression, as demonstrated by the a.jpg\\.. substring.",
        "URL": "https://github.com/WPO-Foundation/webpagetest/pull/1299",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "89712ab2d50b9bad3930239c220edee9c78d371b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wso2/carbon-apimgt",
        "CVE_ID": "CVE-2018-20736",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in WSO2 API Manager 2.1.0 and 2.6.0. A DOM-based XSS exists in the store part of the product.",
        "URL": "https://github.com/wso2/carbon-apimgt/pull/5844/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c56a6d7070e1bcda6db0b5e50af0751c34274b9c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wso2/carbon-registry",
        "CVE_ID": "CVE-2022-4520",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in WSO2 carbon-registry up to 4.8.11. It has been rated as problematic. Affected by this issue is some unknown functionality of the file components/registry/org.wso2.carbon.registry.search.ui/src/main/resources/web/search/advancedSearchForm-ajaxprocessor.jsp of the component Advanced Search. The manipulation of the argument mediaType/rightOp/leftOp/rightPropertyValue/leftPropertyValue leads to cross site scripting. The attack may be launched remotely. Upgrading to version 4.8.12 is able to address this issue. The name of the patch is 0c827cc1b14b82d8eb86117ab2e43c34bb91ddb4. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-215900.",
        "URL": "https://github.com/wso2/carbon-registry/pull/404",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0c827cc1b14b82d8eb86117ab2e43c34bb91ddb4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xbmc/xbmc",
        "CVE_ID": "CVE-2017-8314",
        "Problem_Type": "CWE-22",
        "Description": "Directory Traversal in Zip Extraction built-in function in Kodi 17.1 and earlier allows arbitrary file write on disk via a Zip file as subtitles.",
        "URL": "https://github.com/xbmc/xbmc/pull/12024",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "089bed625a9c8b2a6323a98f925da8369f9fbb64",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xbmc/xbmc",
        "CVE_ID": "CVE-2023-23082",
        "Problem_Type": "CWE-787",
        "Description": "A heap buffer overflow vulnerability in Kodi Home Theater Software up to 19.5 allows attackers to cause a denial of service due to an improper length of the value passed to the offset argument.",
        "URL": "https://github.com/xbmc/xbmc/pull/22380",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c2aafb6d4987833803e037c923aaf83f9ff41e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xcat2/xcat-core",
        "CVE_ID": "CVE-2023-27486",
        "Problem_Type": "CWE-863",
        "Description": "xCAT is a toolkit for deployment and administration of computer clusters. In versions prior to 2.16.5 if zones are configured as a mechanism to secure clusters in XCAT, it is possible for a local root user from one node to obtain credentials to SSH to any node in any zone, except the management node of the default zone. XCAT zones are not enabled by default. Only users that use the optional zone feature are impacted. All versions of xCAT prior to xCAT 2.16.5 are vulnerable. This problem has been fixed in xCAT 2.16.5. Users making use of zones should upgrade to 2.16.5. Users unable to upgrade may mitigate the issue by disabling zones or patching the management node with the fix contained in commit `85149c37f49`.",
        "URL": "https://github.com/xcat2/xcat-core/pull/7247",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "d58445a685159b5e59a4a8f07939f6326708b7fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xm-online/xm-uaa",
        "CVE_ID": "CVE-2019-15557",
        "Problem_Type": "CWE-89",
        "Description": "XM^online 2 User Account and Authentication server 1.0.0 allows SQL injection via a tenant key.",
        "URL": "https://github.com/xm-online/xm-uaa/pull/61",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "32a27e5876ef871938679f3a958f1c777e20d838",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xnio/xnio",
        "CVE_ID": "CVE-2022-0084",
        "Problem_Type": "CWE-770",
        "Description": "A flaw was found in XNIO, specifically in the notifyReadClosed method. The issue revealed this method was logging a message to another expected end. This flaw allows an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up.",
        "URL": "https://github.com/xnio/xnio/pull/291",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fdefb3b8b715d33387cadc4d48991fb1989b0c12",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "yaklang/yaklang",
        "CVE_ID": "CVE-2023-40023",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "yaklang is a programming language designed for cybersecurity. The Yak Engine has been found to contain a local file inclusion (LFI) vulnerability. This vulnerability allows attackers to include files from the server's local file system through the web application. When exploited, this can lead to the unintended exposure of sensitive data, potential remote code execution, or other security breaches. Users utilizing versions of the Yak Engine prior to 1.2.4-sp1 are impacted. This vulnerability has been patched in version 1.2.4-sp1. Users are advised to upgrade. users unable to upgrade may avoid exposing vulnerable versions to untrusted input and to closely monitor any unexpected server behavior until they can upgrade.",
        "URL": "https://github.com/yaklang/yaklang/pull/295",
        "Tag": "['Patch']",
        "fix_commit_hash": "4d4d6df6d9c29fa429b23d95ecf7ed1903b4d2ac",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "yarnpkg/yarn",
        "CVE_ID": "CVE-2020-8131",
        "Problem_Type": "CWE-22",
        "Description": "Arbitrary filesystem write vulnerability in Yarn before 1.22.0 allows attackers to write to any path on the filesystem and potentially lead to arbitrary code execution by forcing the user to install a malicious package.",
        "URL": "https://github.com/yarnpkg/yarn/pull/7831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e7133ca28618513503b4e1d9063f1c18ea318e5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6299",
        "Problem_Type": "CWE-835",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"2 of 9. Infinite Loop / DoS in the TNEFFillMapi function in lib/ytnef.c.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6301",
        "Problem_Type": "CWE-125",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"4 of 9. Out of Bounds Reads.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6303",
        "Problem_Type": "CWE-190",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"6 of 9. Invalid Write and Integer Overflow.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6305",
        "Problem_Type": "CWE-125",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"8 of 9. Out of Bounds read and write.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "youngerheart/nodeserver",
        "CVE_ID": "CVE-2020-36651",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability has been found in youngerheart nodeserver and classified as critical. Affected by this vulnerability is an unknown functionality of the file nodeserver.js. The manipulation leads to path traversal. The identifier of the patch is c4c0f0138ab5afbac58e03915d446680421bde28. It is recommended to apply a patch to fix this issue. The identifier VDB-218461 was assigned to this vulnerability.",
        "URL": "https://github.com/youngerheart/nodeserver/pull/6",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "4a2828f2138455c7e445ba158541d2acd60eac5c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "yrutschle/sslh",
        "CVE_ID": "CVE-2022-4639",
        "Problem_Type": "CWE-134",
        "Description": "A vulnerability, which was classified as critical, has been found in sslh. This issue affects the function hexdump of the file probe.c of the component Packet Dumping Handler. The manipulation of the argument msg_info leads to format string. The attack may be initiated remotely. The name of the patch is b19f8a6046b080e4c2e28354a58556bb26040c6f. It is recommended to apply a patch to fix this issue. The identifier VDB-216497 was assigned to this vulnerability.",
        "URL": "https://github.com/yrutschle/sslh/pull/353",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9a36854ed37dab1c2cf66ead53bf0467caae0af7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "YunoHost-Apps/transmission_ynh",
        "CVE_ID": "CVE-2020-36647",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability classified as critical has been found in YunoHost-Apps transmission_ynh. Affected is an unknown function of the file conf/nginx.conf. The manipulation leads to path traversal. The patch is identified as f136dfd44eda128129e5fd2d850a3a3c600e6a4a. It is recommended to apply a patch to fix this issue. VDB-217638 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/YunoHost-Apps/transmission_ynh/pull/75",
        "Tag": "['Patch']",
        "fix_commit_hash": "bad858edaf59182a282dc2a25e213395eb58b4c3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zenoss/ZenPacks.zenoss.Dashboard",
        "CVE_ID": "CVE-2018-25063",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in Zenoss Dashboard up to 1.3.4. Affected by this vulnerability is an unknown functionality of the file ZenPacks/zenoss/Dashboard/browser/resources/js/defaultportlets.js. The manipulation of the argument HTMLString leads to cross site scripting. The attack can be launched remotely. Upgrading to version 1.3.5 is able to address this issue. The identifier of the patch is f462285a0a2d7e1a9255b0820240b94a43b00a44. It is recommended to upgrade the affected component. The identifier VDB-217153 was assigned to this vulnerability.",
        "URL": "https://github.com/zenoss/ZenPacks.zenoss.Dashboard/pull/130",
        "Tag": "['Patch']",
        "fix_commit_hash": "16e061aed7142800d9d8b9454923492ea04d6ba2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10019",
        "Problem_Type": "CWE-120",
        "Description": "USB DFU has a potential buffer overflow where the requested length (wLength) is not checked against the buffer size. This could be used by a malicious USB host to exploit the buffer overflow. See NCC-ZEP-002 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23190",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "105849cf38bf8e1ac9e2bcdca559f5da1b4c0034",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10019",
        "Problem_Type": "CWE-120",
        "Description": "USB DFU has a potential buffer overflow where the requested length (wLength) is not checked against the buffer size. This could be used by a malicious USB host to exploit the buffer overflow. See NCC-ZEP-002 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23460",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "afb307d3ff994714b929542cfdc4836dc51f49ff",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10021",
        "Problem_Type": "CWE-787",
        "Description": "Out-of-bounds Write in the USB Mass Storage memoryWrite handler with unaligned Sizes See NCC-ZEP-024, NCC-ZEP-025, NCC-ZEP-026 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23456",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d59ad8170884c0cedfc3555d9551aa8d2a7d2ac8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10024",
        "Problem_Type": "CWE-697",
        "Description": "The arm platform-specific code uses a signed integer comparison when validating system call numbers. An attacker who has obtained code execution within a user thread is able to elevate privileges to that of the kernel. See NCC-ZEP-001 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23323",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "61fc061fc43bbe9a113974bc5beaf63ab8093310",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10028",
        "Problem_Type": "CWE-20",
        "Description": "Multiple syscalls with insufficient argument validation See NCC-ZEP-006 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23733",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c49afac8d5efa5a5519d1e102c92c120441b8a5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10028",
        "Problem_Type": "CWE-20",
        "Description": "Multiple syscalls with insufficient argument validation See NCC-ZEP-006 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23737",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7722736184fc4d96e11f656d59eac82e6f71f5da",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10060",
        "Problem_Type": "CWE-824",
        "Description": "In updatehub_probe, right after JSON parsing is complete, objects\\[1] is accessed from the output structure in two different places. If the JSON contained less than two elements, this access would reference unitialized stack memory. This could result in a crash, denial of service, or possibly an information leak. Provided the fix in CVE-2020-10059 is applied, the attack requires compromise of the server. See NCC-ZEP-030 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions. version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/27889",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa9248f5b7912c1c934365b890ed5fbb8c84ebe3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10062",
        "Problem_Type": "CWE-193",
        "Description": "An off-by-one error in the Zephyr project MQTT packet length decoder can result in memory corruption and possible remote code execution. NCC-ZEP-031 This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23821/commits/11b7a37d9a0b438270421b224221d91929843de4",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b173c177db7fd69bf658aeceaa9f2b7e0d4b7895",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10067",
        "Problem_Type": "CWE-190",
        "Description": "A malicious userspace application can cause a integer overflow and bypass security checks performed by system call handlers. The impact would depend on the underlying system call and can range from denial of service to information leak to memory corruption resulting in code execution within the kernel. See NCC-ZEP-005 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23654",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2649e4c0bef3582ad4146109d315088b838d092f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10067",
        "Problem_Type": "CWE-190",
        "Description": "A malicious userspace application can cause a integer overflow and bypass security checks performed by system call handlers. The impact would depend on the underlying system call and can range from denial of service to information leak to memory corruption resulting in code execution within the kernel. See NCC-ZEP-005 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23653",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f032de6cc8969922d504176a7bd35ce30c95f996",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10070",
        "Problem_Type": "CWE-120",
        "Description": "In the Zephyr Project MQTT code, improper bounds checking can result in memory corruption and possibly remote code execution. NCC-ZEP-031 This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23821/commits/0b39cbf3c01d7feec9d0dd7cc7e0e374b6113542",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b173c177db7fd69bf658aeceaa9f2b7e0d4b7895",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Zerocoin/libzerocoin",
        "CVE_ID": "CVE-2017-20180",
        "Problem_Type": "CWE-345",
        "Description": "A vulnerability classified as critical has been found in Zerocoin libzerocoin. Affected is the function CoinSpend::CoinSpend of the file CoinSpend.cpp of the component Proof Handler. The manipulation leads to insufficient verification of data authenticity. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The patch is identified as ce103a09ec079d0a0ed95475992348bed6e860de. It is recommended to apply a patch to fix this issue. VDB-222318 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/Zerocoin/libzerocoin/pull/16",
        "Tag": "['Patch']",
        "fix_commit_hash": "5f2eeb1fbe5e31567660b7f254f772db79d8fa57",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zeromq/libzmq",
        "CVE_ID": "CVE-2020-15166",
        "Problem_Type": "CWE-400",
        "Description": "In ZeroMQ before version 4.3.3, there is a denial-of-service vulnerability. Users with TCP transport public endpoints, even with CURVE/ZAP enabled, are impacted. If a raw TCP socket is opened and connected to an endpoint that is fully configured with CURVE/ZAP, legitimate clients will not be able to exchange any message. Handshakes complete successfully, and messages are delivered to the library, but the server application never receives them. This is patched in version 4.3.3.",
        "URL": "https://github.com/zeromq/libzmq/pull/3973",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4dd504abebf3eb944d0554c36d490fb2bb742e4f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ZJONSSON/node-unzipper",
        "CVE_ID": "CVE-2018-1002203",
        "Problem_Type": "CWE-22",
        "Description": "unzipper npm library before 0.8.13 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
        "URL": "https://github.com/ZJONSSON/node-unzipper/pull/59",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2220ddd5b58f6252069a4f99f9475441ad0b50cd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zmanda/amanda",
        "CVE_ID": "CVE-2022-37704",
        "Problem_Type": "CWE-77",
        "Description": "Amanda 3.5.1 allows privilege escalation from the regular user backup to root. The SUID binary located at /lib/amanda/rundump will execute /usr/sbin/dump as root with controlled arguments from the attacker which may lead to escalation of privileges, denial of service, and information disclosure.",
        "URL": "https://github.com/zmanda/amanda/pull/205",
        "Tag": "['Patch']",
        "fix_commit_hash": "f069e2c190146c5ed4d5ef8df390ee5024d4a3c8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zmanda/amanda",
        "CVE_ID": "CVE-2022-37705",
        "Problem_Type": "CWE-88",
        "Description": "A privilege escalation flaw was found in Amanda 3.5.1 in which the backup user can acquire root privileges. The vulnerable component is the runtar SUID program, which is a wrapper to run /usr/bin/tar with specific arguments that are controllable by the attacker. This program mishandles the arguments passed to tar binary (it expects that the argument name and value are separated with a space; however, separating them with an equals sign is also supported),",
        "URL": "https://github.com/zmanda/amanda/pull/196",
        "Tag": "['Patch']",
        "fix_commit_hash": "497410c7555376795f324e5bd2cbed7742219099",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zmartzone/mod_auth_openidc",
        "CVE_ID": "CVE-2019-14857",
        "Problem_Type": "CWE-601",
        "Description": "A flaw was found in mod_auth_openidc before version 2.4.0.1. An open redirect issue exists in URLs with trailing slashes similar to CVE-2019-3877 in mod_auth_mellon.",
        "URL": "https://github.com/zmartzone/mod_auth_openidc/pull/451",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6c9a42e88e1f821c309c12bf73171469b529af3a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zvory/csv-safe",
        "CVE_ID": "CVE-2022-28481",
        "Problem_Type": "CWE-1236",
        "Description": "CSV-Safe gem < 3.0.0 doesn't filter out special characters which could trigger CSV Injection.",
        "URL": "https://github.com/zvory/csv-safe/pull/8",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b50b22c9abb903a80fbd3dc06076c7c22d62b6b2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sockjs/sockjs-node",
        "CVE_ID": "CVE-2020-7693",
        "Problem_Type": "CWE-755",
        "Description": "Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps. This affects the package sockjs before 0.3.20.",
        "URL": "https://github.com/sockjs/sockjs-node/pull/265",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "86ba45a9be79bbe1a3c47858628d0a3d7871f6dc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "SpiderLabs/ModSecurity",
        "CVE_ID": "CVE-2022-48279",
        "Problem_Type": "CWE-436",
        "Description": "In ModSecurity before 2.9.6 and 3.x before 3.0.8, HTTP multipart requests were incorrectly parsed and could bypass the Web Application Firewall. NOTE: this is related to CVE-2022-39956 but can be considered independent changes to the ModSecurity (C language) codebase.",
        "URL": "https://github.com/SpiderLabs/ModSecurity/pull/2795",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d6c10885e08779e99e76efcd5ad65802104cda14",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "square/squalor",
        "CVE_ID": "CVE-2020-36645",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability, which was classified as critical, was found in square squalor. This affects an unknown part. The manipulation leads to sql injection. Upgrading to version v0.0.0 is able to address this issue. The patch is named f6f0a47cc344711042eb0970cb423e6950ba3f93. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217623.",
        "URL": "https://github.com/square/squalor/pull/76",
        "Tag": "['Patch']",
        "fix_commit_hash": "f6f0a47cc344711042eb0970cb423e6950ba3f93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "stakira/OpenUtau",
        "CVE_ID": "CVE-2022-4880",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability was found in stakira OpenUtau. It has been classified as critical. This affects the function VoicebankInstaller of the file OpenUtau.Core/Classic/VoicebankInstaller.cs of the component ZIP Archive Handler. The manipulation leads to path traversal. Upgrading to version 0.0.991 is able to address this issue. The identifier of the patch is 849a0a6912aac8b1c28cc32aa1132a3140caff4a. It is recommended to upgrade the affected component. The identifier VDB-217617 was assigned to this vulnerability.",
        "URL": "https://github.com/stakira/OpenUtau/pull/544",
        "Tag": "['Patch']",
        "fix_commit_hash": "849a0a6912aac8b1c28cc32aa1132a3140caff4a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Sterc/Analytics-dashboard-widget",
        "CVE_ID": "CVE-2017-20155",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in Sterc Google Analytics Dashboard for MODX up to 1.0.5. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file core/components/analyticsdashboardwidget/elements/tpl/widget.analytics.tpl of the component Internal Search. The manipulation leads to cross site scripting. The attack can be launched remotely. Upgrading to version 1.0.6 is able to address this issue. The identifier of the patch is 855d9560d3782c105568eedf9b22a769fbf29cc0. It is recommended to upgrade the affected component. The identifier VDB-217069 was assigned to this vulnerability.",
        "URL": "https://github.com/Sterc/Analytics-dashboard-widget/pull/12",
        "Tag": "['Patch']",
        "fix_commit_hash": "855d9560d3782c105568eedf9b22a769fbf29cc0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "strapi/strapi",
        "CVE_ID": "CVE-2019-19609",
        "Problem_Type": "CWE-78",
        "Description": "The Strapi framework before 3.0.0-beta.17.8 is vulnerable to Remote Code Execution in the Install and Uninstall Plugin components of the Admin panel, because it does not sanitize the plugin name, and attackers can inject arbitrary shell commands to be executed by the execa function.",
        "URL": "https://github.com/strapi/strapi/pull/4636",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c198c266687fbb68ca116f2718873b3e8f0315aa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "strapi/strapi",
        "CVE_ID": "CVE-2021-46440",
        "Problem_Type": "CWE-522",
        "Description": "Storing passwords in a recoverable format in the DOCUMENTATION plugin component of Strapi before 3.6.9 and 4.x before 4.1.5 allows an attacker to access a victim's HTTP request, get the victim's cookie, perform a base64 decode on the victim's cookie, and obtain a cleartext password, leading to getting API documentation for further API attacks.",
        "URL": "https://github.com/strapi/strapi/pull/12246",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "229c1091e5ad0f3114b318671d3a940cb0ffe395",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "symfony/symfony",
        "CVE_ID": "CVE-2017-11365",
        "Problem_Type": "CWE-284",
        "Description": "Certain Symfony products are affected by: Incorrect Access Control. This affects Symfony 2.7.30 and Symfony 2.8.23 and Symfony 3.2.10 and Symfony 3.3.3. The type of exploitation is: remote. The component is: Password validator.",
        "URL": "https://github.com/symfony/symfony/pull/23507",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "878198cefae028386c6dc800ccbf18f2b9cbff3f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sympa-community/sympa",
        "CVE_ID": "CVE-2020-29668",
        "Problem_Type": "CWE-287",
        "Description": "Sympa before 6.2.59b.2 allows remote attackers to obtain full SOAP API access by sending any arbitrary string (except one from an expired cookie) as the cookie value to authenticateAndRun.",
        "URL": "https://github.com/sympa-community/sympa/pull/1044",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4dacc825d8e79dd9b35e9942669af8ee1de2331a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2018-15687",
        "Problem_Type": "CWE-362",
        "Description": "A race condition in chown_one() of systemd allows an attacker to cause systemd to set arbitrary permissions on arbitrary files. Affected releases are systemd versions up to and including 239.",
        "URL": "https://github.com/systemd/systemd/pull/10517/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dc81f52c4d07de0c24f16edf889120780d9ae734",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2022-45873",
        "Problem_Type": "CWE-400",
        "Description": "systemd 250 and 251 allows local users to achieve a systemd-coredump deadlock by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively, and put it in a deeply nested directory to make its backtrace large enough to cause the deadlock. This must be done 16 times when MaxConnections=16 is set for the systemd/units/systemd-coredump.socket file.",
        "URL": "https://github.com/systemd/systemd/pull/24853#issuecomment-1326561497",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "697f082697c8db466fe263ea307fbf3f12f965be",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tats/w3m",
        "CVE_ID": "CVE-2023-4255",
        "Problem_Type": "CWE-787",
        "Description": "An out-of-bounds write issue has been discovered in the backspace handling of the checkType() function in etc.c within the W3M application. This vulnerability is triggered by supplying a specially crafted HTML file to the w3m binary. Exploitation of this flaw could lead to application crashes, resulting in a denial of service condition.",
        "URL": "https://github.com/tats/w3m/pull/273",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "25fb402cea405b263466c627f32513d186a38ade",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tensorflow/tensorflow",
        "CVE_ID": "CVE-2020-15266",
        "Problem_Type": "CWE-119",
        "Description": "In Tensorflow before version 2.4.0, when the `boxes` argument of `tf.image.crop_and_resize` has a very large value, the CPU kernel implementation receives it as a C++ `nan` floating point value. Attempting to operate on this is undefined behavior which later produces a segmentation fault. The issue is patched in eccb7ec454e6617738554a255d77f08e60ee0808 and TensorFlow 2.4.0 will be released containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.",
        "URL": "https://github.com/tensorflow/tensorflow/pull/42143/commits/3ade2efec2e90c6237de32a19680caaa3ebc2845",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3ade2efec2e90c6237de32a19680caaa3ebc2845",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tensorflow/tensorflow",
        "CVE_ID": "CVE-2022-29213",
        "Problem_Type": "CWE-617",
        "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the `tf.compat.v1.signal.rfft2d` and `tf.compat.v1.signal.rfft3d` lack input validation and under certain condition can result in crashes (due to `CHECK`-failures). Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.",
        "URL": "https://github.com/tensorflow/tensorflow/pull/55274",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0a8a781e597b18ead006d19b7d23d0a369e9ad73",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tgstation/tgstation-server",
        "CVE_ID": "CVE-2023-33198",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "tgstation-server is a production scale tool for BYOND server management. The DreamMaker API (DMAPI) chat channel cache can possibly be poisoned by a tgstation-server (TGS) restart and reattach. This can result in sending chat messages to one of any of the configured IRC or Discord channels for the instance on enabled chat bots. This lasts until the instance's chat channels are updated in TGS or DreamDaemon is restarted. TGS chat commands are unaffected, custom or otherwise.\n",
        "URL": "https://github.com/tgstation/tgstation-server/pull/1493",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "7aa47f79ceb6d658a91420ea339dc46c8df75624",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "theupdateframework/tuf",
        "CVE_ID": "CVE-2020-15093",
        "Problem_Type": "CWE-347",
        "Description": "The tough library (Rust/crates.io) prior to version 0.7.1 does not properly verify the threshold of cryptographic signatures. It allows an attacker to duplicate a valid signature in order to circumvent TUF requiring a minimum threshold of unique signatures before the metadata is considered valid. A fix is available in version 0.7.1. CVE-2020-6174 is assigned to the same vulnerability in the TUF reference implementation.",
        "URL": "https://github.com/theupdateframework/tuf/pull/974",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2977188139d065ff3356c3cb4aec60c582b57e0e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TigerVNC/tigervnc",
        "CVE_ID": "CVE-2017-7395",
        "Problem_Type": "CWE-190",
        "Description": "In TigerVNC 1.7.1 (SMsgReader.cxx SMsgReader::readClientCutText), by causing an integer overflow, an authenticated client can crash the server.",
        "URL": "https://github.com/TigerVNC/tigervnc/pull/436/commits/bf3bdac082978ca32895a4b6a123016094905689",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bf3bdac082978ca32895a4b6a123016094905689",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tinymighty/wiki-seo",
        "CVE_ID": "CVE-2015-10073",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, was found in tinymighty WikiSEO 1.2.1 on MediaWiki. This affects the function modifyHTML of the file WikiSEO.body.php of the component Meta Property Tag Handler. The manipulation of the argument content leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 1.2.2 is able to address this issue. The patch is named 089a5797be612b18a820f9f1e6593ad9a91b1dba. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-220215.",
        "URL": "https://github.com/tinymighty/wiki-seo/pull/21",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a4d06c71cd7a43772d7e095f60dd4079c8f50370",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tlsfuzzer/tlslite-ng",
        "CVE_ID": "CVE-2020-26263",
        "Problem_Type": "CWE-326",
        "Description": "tlslite-ng is an open source python library that implements SSL and TLS cryptographic protocols. In tlslite-ng before versions 0.7.6 and 0.8.0-alpha39, the code that performs decryption and padding check in RSA PKCS#1 v1.5 decryption is data dependant. In particular, the code has multiple ways in which it leaks information about the decrypted ciphertext. It aborts as soon as the plaintext doesn't start with 0x00, 0x02. All TLS servers that enable RSA key exchange as well as applications that use the RSA decryption API directly are vulnerable. This is patched in versions 0.7.6 and 0.8.0-alpha39. Note: the patches depend on Python processing the individual bytes in side-channel free manner, this is known to not the case (see reference). As such, users that require side-channel resistance are recommended to use different TLS implementations, as stated in the security policy of tlslite-ng.",
        "URL": "https://github.com/tlsfuzzer/tlslite-ng/pull/439",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c28d6d387bba59d8bd5cb3ba15edc42edf54b368",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "TykTechnologies/tyk-identity-broker",
        "CVE_ID": "CVE-2021-23365",
        "Problem_Type": "CWE-287",
        "Description": "The package github.com/tyktechnologies/tyk-identity-broker before 1.1.1 are vulnerable to Authentication Bypass via the Go XML parser which can cause SAML authentication bypass. This is because the XML parser doesn\u00c2\u2019t guarantee integrity in the XML round-trip (encoding/decoding XML data).",
        "URL": "https://github.com/TykTechnologies/tyk-identity-broker/pull/147",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "46f70420e0911e4e8b638575e29d394c227c75d0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ubertidavide/fastbots",
        "CVE_ID": "CVE-2023-48699",
        "Problem_Type": "CWE-94",
        "Description": "fastbots is a library for fast bot and scraper development using selenium and the Page Object Model (POM) design. Prior to version 0.1.5, an attacker could modify the locators.ini locator file with python code that without proper validation it's executed and it could lead to rce. The vulnerability is in the function `def __locator__(self, locator_name: str)` in `page.py`. In order to mitigate this issue, upgrade to fastbots version 0.1.5 or above.",
        "URL": "https://github.com/ubertidavide/fastbots/pull/3#issue-2003080806",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "73eb03bd75365e112b39877e26ef52853f5e9f57",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "uclouvain/openjpeg",
        "CVE_ID": "CVE-2018-20846",
        "Problem_Type": "CWE-20",
        "Description": "Out-of-bounds accesses in the functions pi_next_lrcp, pi_next_rlcp, pi_next_rpcl, pi_next_pcrl, pi_next_rpcl, and pi_next_cprl in openmj2/pi.c in OpenJPEG through 2.3.0 allow remote attackers to cause a denial of service (application crash).",
        "URL": "https://github.com/uclouvain/openjpeg/pull/1168/commits/c277159986c80142180fbe5efb256bbf3bdf3edc",
        "Tag": "['Patch']",
        "fix_commit_hash": "c277159986c80142180fbe5efb256bbf3bdf3edc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "undertow-io/undertow",
        "CVE_ID": "CVE-2019-10184",
        "Problem_Type": "CWE-862",
        "Description": "undertow before version 2.0.23.Final is vulnerable to an information leak issue. Web apps may have their directory structures predicted through requests without trailing slashes via the api.",
        "URL": "https://github.com/undertow-io/undertow/pull/794",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5fa7ac68c0e4251c93056d9982db5e794e04ebfa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "uriparser/uriparser",
        "CVE_ID": "CVE-2021-46142",
        "Problem_Type": "CWE-416",
        "Description": "An issue was discovered in uriparser before 0.9.6. It performs invalid free operations in uriNormalizeSyntax.",
        "URL": "https://github.com/uriparser/uriparser/pull/124",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd6070c92f3bab157139c35ff4841054afaa67ef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vaadin/framework",
        "CVE_ID": "CVE-2019-25028",
        "Problem_Type": "CWE-79",
        "Description": "Missing variable sanitization in Grid component in com.vaadin:vaadin-server versions 7.4.0 through 7.7.19 (Vaadin 7.4.0 through 7.7.19), and 8.0.0 through 8.8.4 (Vaadin 8.0.0 through 8.8.4) allows attacker to inject malicious JavaScript via unspecified vector",
        "URL": "https://github.com/vaadin/framework/pull/11644",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2584e9ad44fa9135daa405df8cbc9ae7d4a3ee33",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vantage6/vantage6",
        "CVE_ID": "CVE-2022-39228",
        "Problem_Type": "CWE-203",
        "Description": "vantage6 is a privacy preserving federated learning infrastructure for secure insight exchange. vantage6 does not inform the user of wrong username/password combination if the username actually exists. This is an attempt to prevent bots from obtaining usernames. However, if a wrong password is entered a number of times, the user account is blocked temporarily. This issue has been fixed in version 3.8.0.\n",
        "URL": "https://github.com/vantage6/vantage6/pull/281",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "41618096ef112eaf827056dd13395abffd7a4f4d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vcs-python/libvcs",
        "CVE_ID": "CVE-2022-21187",
        "Problem_Type": "CWE-88",
        "Description": "The package libvcs before 0.11.1 are vulnerable to Command Injection via argument injection. When calling the update_repo function (when using hg), the url parameter is passed to the hg clone command. By injecting some hg options it was possible to get arbitrary command execution.",
        "URL": "https://github.com/vcs-python/libvcs/pull/306",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7179656631ab5e88a4b8ce3db8e28f2d9af7c4f5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "verdammelt/tnef",
        "CVE_ID": "CVE-2019-18849",
        "Problem_Type": "CWE-125",
        "Description": "In tnef before 1.4.18, an attacker may be able to write to the victim's .ssh/authorized_keys file via an e-mail message with a crafted winmail.dat application/ms-tnef attachment, because of a heap-based buffer over-read involving strdup.",
        "URL": "https://github.com/verdammelt/tnef/pull/40",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b424a216ec6622fbf909b0c90d66c44b61f2e06",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "viafintech/Barzahlen-PHP",
        "CVE_ID": "CVE-2016-15015",
        "Problem_Type": "CWE-203",
        "Description": "A vulnerability, which was classified as problematic, was found in viafintech Barzahlen Payment Module PHP SDK up to 2.0.0. Affected is the function verify of the file src/Webhook.php. The manipulation leads to observable timing discrepancy. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 2.0.1 is able to address this issue. The patch is identified as 3e7d29dc0ca6c054a6d6e211f32dae89078594c1. It is recommended to upgrade the affected component. VDB-217650 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/viafintech/Barzahlen-PHP/pull/8",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0509556a7f52ab140713459ea4101219bb3db6a7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "visegripped/stracker",
        "CVE_ID": "CVE-2022-4889",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability classified as critical was found in visegripped Stracker. Affected by this vulnerability is the function getHistory of the file doc_root/public_html/stracker/api.php. The manipulation of the argument symbol/startDate/endDate leads to sql injection. The identifier of the patch is 63e1b040373ee5b6c7d1e165ecf5ae1603d29e0a. It is recommended to apply a patch to fix this issue. The identifier VDB-218377 was assigned to this vulnerability.",
        "URL": "https://github.com/visegripped/stracker/pull/16",
        "Tag": "['Patch']",
        "fix_commit_hash": "9649fe5c29b7ee6523853d14c63fac82c0b8e768",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wazuh/wazuh",
        "CVE_ID": "CVE-2022-40497",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Wazuh v3.6.1 - v3.13.5, v4.0.0 - v4.2.7, and v4.3.0 - v4.3.7 were discovered to contain an authenticated remote code execution (RCE) vulnerability via the Active Response endpoint.",
        "URL": "https://github.com/wazuh/wazuh/pull/14801",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b59855dbb29d9cfda06dbaff79b114becdc28444",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "WebAssembly/binaryen",
        "CVE_ID": "CVE-2019-15758",
        "Problem_Type": "CWE-617",
        "Description": "An issue was discovered in Binaryen 1.38.32. Missing validation rules in asmjs/asmangle.cpp can lead to an Assertion Failure at wasm/wasm.cpp in wasm::asmangle. A crafted input can cause denial-of-service, as demonstrated by wasm2js.",
        "URL": "https://github.com/WebAssembly/binaryen/pull/2290",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0cd48e6c19207e54066f621bb8e0d9e8e4b6c085",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "WebPA/WebPA",
        "CVE_ID": "CVE-2021-4308",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in WebPA up to 3.1.1. It has been rated as critical. This issue affects some unknown processing. The manipulation leads to sql injection. Upgrading to version 3.1.2 is able to address this issue. The identifier of the patch is 8836c4f549181e885a68e0e7ca561fdbcbd04bf0. It is recommended to upgrade the affected component. The identifier VDB-217637 was assigned to this vulnerability.",
        "URL": "https://github.com/WebPA/WebPA/pull/87",
        "Tag": "['Patch']",
        "fix_commit_hash": "8836c4f549181e885a68e0e7ca561fdbcbd04bf0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "weston-embedded/uC-FTPs",
        "CVE_ID": "CVE-2022-46377",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read vulnerability exists in the PORT command parameter extraction functionality of Weston Embedded uC-FTPs v 1.98.00. A specially-crafted set of network packets can lead to denial of service. An attacker can send packets to trigger this vulnerability.This vulnerability occurs when no IP address argument is provided to the `PORT` command.",
        "URL": "https://github.com/weston-embedded/uC-FTPs/pull/2",
        "Tag": "['Patch']",
        "fix_commit_hash": "0f54674769456a31ba693a44029bd8baa9f73e0f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wildfly/wildfly",
        "CVE_ID": "CVE-2021-3503",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A flaw was found in Wildfly where insufficient RBAC restrictions may lead to expose metrics data. The highest threat from this vulnerability is to the confidentiality.",
        "URL": "https://github.com/wildfly/wildfly/pull/14136",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "30751edda3cdb09f988553aa64833914baeb8a75",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wocommunity/wonder",
        "CVE_ID": "CVE-2022-37724",
        "Problem_Type": "CWE-79",
        "Description": "Project Wonder WebObjects 1.0 through 5.4.3 is vulnerable to Arbitrary HTTP Header injection and URL- or Header-based XSS reflection in all web-server adaptor interfaces.",
        "URL": "https://github.com/wocommunity/wonder/pull/992",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b0d2d74f13203268ea254b02552600850f28014b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2020-11713",
        "Problem_Type": "CWE-203",
        "Description": "wolfSSL 4.3.0 has mulmod code in wc_ecc_mulmod_ex in ecc.c that does not properly resist timing side-channel attacks.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/2894/",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3cb0c600ba849e482ac52c3bf9f39c2c822c2f61",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2021-37155",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "wolfSSL 4.6.x through 4.7.x before 4.8.0 does not produce a failure outcome when the serial number in an OCSP request differs from the serial number in the OCSP response.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/3990",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "385e0bedaac935a1fc86766fbb2fcc47c9b82386",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2022-38153",
        "Problem_Type": "CWE-770",
        "Description": "An issue was discovered in wolfSSL before 5.5.0 (when --enable-session-ticket is used); however, only version 5.3.0 is exploitable. Man-in-the-middle attackers or a malicious server can crash TLS 1.2 clients during a handshake. If an attacker injects a large ticket (more than 256 bytes) into a NewSessionTicket message in a TLS 1.2 handshake, and the client has a non-empty session cache, the session cache frees a pointer that points to unallocated memory, causing the client to crash with a \"free(): invalid pointer\" message. NOTE: It is likely that this is also exploitable during TLS 1.3 handshakes between a client and a malicious server. With TLS 1.3, it is not possible to exploit this as a man-in-the-middle.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/5476",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b9d9dc02bb64993e0bd53e2ce66ce3c8d280b787",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wp-cli/checksum-command",
        "CVE_ID": "CVE-2021-29504",
        "Problem_Type": "CWE-295",
        "Description": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
        "URL": "https://github.com/wp-cli/checksum-command/pull/86",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ddaf3afac0484287abe2d2e3609fd78052b2963",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wp-cli/wp-cli",
        "CVE_ID": "CVE-2021-29504",
        "Problem_Type": "CWE-295",
        "Description": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
        "URL": "https://github.com/wp-cli/wp-cli/pull/5523",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6f4e5dd78b4ae8f8c8c17040c8a691a80bb24137",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wso2/carbon-identity-framework",
        "CVE_ID": "CVE-2021-42646",
        "Problem_Type": "CWE-611",
        "Description": "XML External Entity (XXE) vulnerability in the file based service provider creation feature of the Management Console in WSO2 API Manager 2.6.0, 3.0.0, 3.1.0, 3.2.0, and 4.0.0; and WSO2 IS as Key Manager 5.7.0, 5.9.0, and 5.10.0; and WSO2 Identity Server 5.7.0, 5.8.0, 5.9.0, 5.10.0, and 5.11.0. Allows attackers to gain read access to sensitive information or cause a denial of service via crafted GET requests.",
        "URL": "https://github.com/wso2/carbon-identity-framework/pull/3472",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e255b012d105a4760aad78b3260abbeaa7d9caad",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xbmc/xbmc",
        "CVE_ID": "CVE-2021-42917",
        "Problem_Type": "CWE-120",
        "Description": "Buffer overflow vulnerability in Kodi xbmc up to 19.0, allows attackers to cause a denial of service due to improper length of values passed to istream.",
        "URL": "https://github.com/xbmc/xbmc/pull/20306",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "48730b64494798705d46dfccc4029bd36d072df3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xm-online/xm-commons",
        "CVE_ID": "CVE-2019-15558",
        "Problem_Type": "CWE-89",
        "Description": "XM^online 2 Common Utils and Endpoints 0.2.1 allows SQL injection, related to Constants.java, DropSchemaResolver.java, and SchemaChangeResolver.java.",
        "URL": "https://github.com/xm-online/xm-commons/pull/62",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "27c6717ec1fd28a7115213fecf041c03c934a48f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xsf/xeps",
        "CVE_ID": "CVE-2022-26491",
        "Problem_Type": "CWE-295",
        "Description": "An issue was discovered in Pidgin before 2.14.9. A remote attacker who can spoof DNS responses can redirect a client connection to a malicious server. The client will perform TLS certificate verification of the malicious domain name instead of the original XMPP service domain, allowing the attacker to take over control over the XMPP connection and to obtain user credentials and all communication content. This is similar to CVE-2022-24968.",
        "URL": "https://github.com/xsf/xeps/pull/1158",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0bb46763d1887066e1db65eee45462b18d1f539e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6298",
        "Problem_Type": "CWE-476",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"1 of 9. Null Pointer Deref / calloc return value not checked.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6302",
        "Problem_Type": "CWE-190",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"5 of 9. Integer Overflow.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6306",
        "Problem_Type": "CWE-22",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"9 of 9. Directory Traversal using the filename; SanitizeFilename function in settings.c.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "YourAcclaim/block_acclaim",
        "CVE_ID": "CVE-2019-15536",
        "Problem_Type": "CWE-89",
        "Description": "The Acclaim block plugin before 2019-06-26 for Moodle allows SQL Injection via delete_records.",
        "URL": "https://github.com/YourAcclaim/block_acclaim/pull/18",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "703318ab3ddae7690903284875ff12e907b4fea2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10019",
        "Problem_Type": "CWE-120",
        "Description": "USB DFU has a potential buffer overflow where the requested length (wLength) is not checked against the buffer size. This could be used by a malicious USB host to exploit the buffer overflow. See NCC-ZEP-002 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23457",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8289dc75dda522b459418ec93f8a91012fdeddb9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10021",
        "Problem_Type": "CWE-787",
        "Description": "Out-of-bounds Write in the USB Mass Storage memoryWrite handler with unaligned Sizes See NCC-ZEP-024, NCC-ZEP-025, NCC-ZEP-026 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23240",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "23ace0e55681c02a81fb6b891f832aa356c85aab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10024",
        "Problem_Type": "CWE-697",
        "Description": "The arm platform-specific code uses a signed integer comparison when validating system call numbers. An attacker who has obtained code execution within a user thread is able to elevate privileges to that of the kernel. See NCC-ZEP-001 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23498",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d4f1e731307fda42d8bf7f79ab001abd94dee52b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10028",
        "Problem_Type": "CWE-20",
        "Description": "Multiple syscalls with insufficient argument validation See NCC-ZEP-006 This issue affects: zephyrproject-rtos zephyr version 1.14.0 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23308",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d6d42bef9770a218985700fd430ce5fac6cea36e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10067",
        "Problem_Type": "CWE-190",
        "Description": "A malicious userspace application can cause a integer overflow and bypass security checks performed by system call handlers. The impact would depend on the underlying system call and can range from denial of service to information leak to memory corruption resulting in code execution within the kernel. See NCC-ZEP-005 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23239",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4b2fc256cfe46f831da3bb8176a849645713dcee",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10071",
        "Problem_Type": "CWE-120",
        "Description": "The Zephyr MQTT parsing code performs insufficient checking of the length field on publish messages, allowing a buffer overflow and potentially remote code execution. NCC-ZEP-031 This issue affects: zephyrproject-rtos zephyr version 2.2.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23821/commits/989c4713ba429aa5105fe476b4d629718f3e6082",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b173c177db7fd69bf658aeceaa9f2b7e0d4b7895",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ZeusCart/zeuscart",
        "CVE_ID": "CVE-2014-3868",
        "Problem_Type": "CWE-89",
        "Description": "Multiple SQL injection vulnerabilities in ZeusCart 4.x.",
        "URL": "https://github.com/ZeusCart/zeuscart/pull/23",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b488c7e2b82ce07fd75d18f167bb48f4f84a425f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zmanda/amanda",
        "CVE_ID": "CVE-2022-37704",
        "Problem_Type": "CWE-77",
        "Description": "Amanda 3.5.1 allows privilege escalation from the regular user backup to root. The SUID binary located at /lib/amanda/rundump will execute /usr/sbin/dump as root with controlled arguments from the attacker which may lead to escalation of privileges, denial of service, and information disclosure.",
        "URL": "https://github.com/zmanda/amanda/pull/197",
        "Tag": "['Patch']",
        "fix_commit_hash": "ee766efdd77acd2e08f646bf2f9028944cdb9d06",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zmanda/amanda",
        "CVE_ID": "CVE-2022-37705",
        "Problem_Type": "CWE-88",
        "Description": "A privilege escalation flaw was found in Amanda 3.5.1 in which the backup user can acquire root privileges. The vulnerable component is the runtar SUID program, which is a wrapper to run /usr/bin/tar with specific arguments that are controllable by the attacker. This program mishandles the arguments passed to tar binary (it expects that the argument name and value are separated with a space; however, separating them with an equals sign is also supported),",
        "URL": "https://github.com/zmanda/amanda/pull/204",
        "Tag": "['Patch']",
        "fix_commit_hash": "448a8b663523bfaf4739aa43337c19fd305be027",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zwczou/weixin-python",
        "CVE_ID": "CVE-2018-25082",
        "Problem_Type": "CWE-611",
        "Description": "A vulnerability was found in zwczou WeChat SDK Python 0.3.0 and classified as critical. This issue affects the function validate/to_xml. The manipulation leads to xml external entity reference. The attack may be initiated remotely. Upgrading to version 0.5.5 is able to address this issue. The patch is named e54abadc777715b6dcb545c13214d1dea63df6c9. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-223403.",
        "URL": "https://github.com/zwczou/weixin-python/pull/30",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bae7c80d443e2799523b61ad39b32c2cbda1ec5a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "statamic/cms",
        "CVE_ID": "CVE-2022-24784",
        "Problem_Type": "CWE-203",
        "Description": "Statamic is a Laravel and Git powered CMS. Before versions 3.2.39 and 3.3.2, it is possible to confirm a single character of a user's password hash using a specially crafted regular expression filter in the users endpoint of the REST API. Multiple such requests can eventually uncover the entire hash. The hash is not present in the response, however the presence or absence of a result confirms if the character is in the right position. The API has throttling enabled by default, making this a time intensive task. Both the REST API and the users endpoint need to be enabled, as they are disabled by default. The issue has been fixed in versions 3.2.39 and above, and 3.3.2 and above.",
        "URL": "https://github.com/statamic/cms/pull/5568",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d0296715ca370a07a5874a7816d8aa438c894d16",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "strapi/strapi",
        "CVE_ID": "CVE-2020-27665",
        "Problem_Type": "CWE-276",
        "Description": "In Strapi before 3.2.5, there is no admin::hasPermissions restriction for CTB (aka content-type-builder) routes.",
        "URL": "https://github.com/strapi/strapi/pull/8439",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3cdd73987950d5c7976701047b38203e902007bb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "symfony/symfony",
        "CVE_ID": "CVE-2021-41268",
        "Problem_Type": "CWE-384",
        "Description": "Symfony/SecurityBundle is the security system for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Since the rework of the Remember me cookie in version 5.3.0, the cookie is not invalidated when the user changes their password. Attackers can therefore maintain their access to the account even if the password is changed as long as they have had the chance to login once and get a valid remember me cookie. Starting with version 5.3.12, Symfony makes the password part of the signature by default. In that way, when the password changes, then the cookie is not valid anymore.",
        "URL": "https://github.com/symfony/symfony/pull/44243",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "256c34a45b79fdc6276a8c941a1656713ee1ffec",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2018-21029",
        "Problem_Type": "CWE-295",
        "Description": "systemd 239 through 245 accepts any certificate signed by a trusted certificate authority for DNS Over TLS. Server Name Indication (SNI) is not sent, and there is no hostname validation with the GnuTLS backend. NOTE: This has been disputed by the developer as not a vulnerability since hostname validation does not have anything to do with this issue (i.e. there is no hostname to be sent)",
        "URL": "https://github.com/systemd/systemd/pull/13870",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7a4129ca946ed49e161a03283faf5bbab96d110",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tad0616/tad_discuss",
        "CVE_ID": "CVE-2021-4267",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic was found in tad_discuss. Affected by this vulnerability is an unknown functionality. The manipulation of the argument DiscussTitle leads to cross site scripting. The attack can be launched remotely. The name of the patch is af94d034ff8db642d05fd8788179eab05f433958. It is recommended to apply a patch to fix this issue. The identifier VDB-216469 was assigned to this vulnerability.",
        "URL": "https://github.com/tad0616/tad_discuss/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "93aba3ff1a189a4e917c6b0d341b3417edd545eb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "tensorflow/tensorflow",
        "CVE_ID": "CVE-2021-41195",
        "Problem_Type": "CWE-190",
        "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `tf.math.segment_*` operations results in a `CHECK`-fail related abort (and denial of service) if a segment id in `segment_ids` is large. This is similar to CVE-2021-29584 (and similar other reported vulnerabilities in TensorFlow, localized to specific APIs): the implementation (both on CPU and GPU) computes the output shape using `AddDim`. However, if the number of elements in the tensor overflows an `int64_t` value, `AddDim` results in a `CHECK` failure which provokes a `std::abort`. Instead, code should use `AddDimWithStatus`. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
        "URL": "https://github.com/tensorflow/tensorflow/pull/51733",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e9c81c1e1a9cd8dd31f4e83676cab61b60658429",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vantage6/vantage6",
        "CVE_ID": "CVE-2023-41881",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "vantage6 is privacy preserving federated learning infrastructure. When a collaboration is deleted, the linked resources (such as tasks from that collaboration) should be deleted. This is partly to manage data properly, but also to prevent a potential (but unlikely) side-effect that affects versions prior to 4.0.0, where if a collaboration with id=10 is deleted, and subsequently a new collaboration is created with id=10, the authenticated users in that collaboration could potentially see results of the deleted collaboration in some cases. Version 4.0.0 contains a patch for this issue. There are no known workarounds.",
        "URL": "https://github.com/vantage6/vantage6/pull/748",
        "Tag": "['Patch']",
        "fix_commit_hash": "cce9538f8b70e814c080dd0ae43b297f3af8a732",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vexim/vexim2",
        "CVE_ID": "CVE-2022-4523",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability, which was classified as problematic, has been found in vexim2. This issue affects some unknown processing. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 21c0a60d12e9d587f905cd084b2c70f9b1592065. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215903.",
        "URL": "https://github.com/vexim/vexim2/pull/274",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "21c0a60d12e9d587f905cd084b2c70f9b1592065",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "webtorrent/webtorrent",
        "CVE_ID": "CVE-2019-15782",
        "Problem_Type": "CWE-79",
        "Description": "WebTorrent before 0.107.6 allows XSS in the HTTP server via a title or file name.",
        "URL": "https://github.com/webtorrent/webtorrent/pull/1714",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7e829b5d52c32d2e6d8f5fbcf0f8f418fffde083",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2017-13099",
        "Problem_Type": "CWE-203",
        "Description": "wolfSSL prior to version 3.12.2 provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable wolfSSL application. This vulnerability is referred to as \"ROBOT.\"",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/1229",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "098edc2845d52893b6fcfc1924af49946edfc4cf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2022-25640",
        "Problem_Type": "CWE-295",
        "Description": "In wolfSSL before 5.2.0, a TLS 1.3 server cannot properly enforce a requirement for mutual authentication. A client can simply omit the certificate_verify message from the handshake, and never present a certificate.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/4831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "67b2a1be4027bc1d09baff6e93562c61a44998ab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wp-cli/core-command",
        "CVE_ID": "CVE-2021-29504",
        "Problem_Type": "CWE-295",
        "Description": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
        "URL": "https://github.com/wp-cli/core-command/pull/186",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cc32c8aecfb539dbdfa8ca2ddd05f9f305e03eb7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wso2/carbon-registry",
        "CVE_ID": "CVE-2022-4521",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in WSO2 carbon-registry up to 4.8.6. This affects an unknown part of the component Request Parameter Handler. The manipulation of the argument parentPath/path/username/path/profile_menu leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 4.8.7 is able to address this issue. The name of the patch is 9f967abfde9317bee2cda469dbc09b57d539f2cc. It is recommended to upgrade the affected component. The identifier VDB-215901 was assigned to this vulnerability.",
        "URL": "https://github.com/wso2/carbon-registry/pull/399",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9f967abfde9317bee2cda469dbc09b57d539f2cc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xbmc/xbmc",
        "CVE_ID": "CVE-2023-30207",
        "Problem_Type": "CWE-369",
        "Description": "A divide by zero issue discovered in Kodi Home Theater Software 19.5 and earlier allows attackers to cause a denial of service via use of crafted mp3 file.",
        "URL": "https://github.com/xbmc/xbmc/pull/22391",
        "Tag": "['Patch']",
        "fix_commit_hash": "10f29c9fd4fe391641f91f2503a3a60f9101730b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "xmidt-org/cjwt",
        "CVE_ID": "CVE-2019-19324",
        "Problem_Type": "CWE-670",
        "Description": "Xmidt cjwt through 1.0.1 before 2019-11-25 maps unsupported algorithms to alg=none, which sometimes leads to untrusted accidental JWT acceptance.",
        "URL": "https://github.com/xmidt-org/cjwt/pull/29#issuecomment-558356866",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9304d3e94242c1a6df77b21bde0e949392e1040a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6300",
        "Problem_Type": "CWE-119",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"3 of 9. Buffer Overflow in version field in lib/tnef-types.h.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10021",
        "Problem_Type": "CWE-787",
        "Description": "Out-of-bounds Write in the USB Mass Storage memoryWrite handler with unaligned Sizes See NCC-ZEP-024, NCC-ZEP-025, NCC-ZEP-026 This issue affects: zephyrproject-rtos zephyr version 1.14.1 and later versions. version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23455",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dae2e71c581b89dfd783e998bcdc64553bc2aa39",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zephyrproject-rtos/zephyr",
        "CVE_ID": "CVE-2020-10058",
        "Problem_Type": "CWE-20",
        "Description": "Multiple syscalls in the Kscan subsystem perform insufficient argument validation, allowing code executing in userspace to potentially gain elevated privileges. See NCC-ZEP-006 This issue affects: zephyrproject-rtos zephyr version 2.1.0 and later versions.",
        "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/23308",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d6d42bef9770a218985700fd430ce5fac6cea36e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zeromq/libzmq",
        "CVE_ID": "CVE-2020-15166",
        "Problem_Type": "CWE-400",
        "Description": "In ZeroMQ before version 4.3.3, there is a denial-of-service vulnerability. Users with TCP transport public endpoints, even with CURVE/ZAP enabled, are impacted. If a raw TCP socket is opened and connected to an endpoint that is fully configured with CURVE/ZAP, legitimate clients will not be able to exchange any message. Handshakes complete successfully, and messages are delivered to the library, but the server application never receives them. This is patched in version 4.3.3.",
        "URL": "https://github.com/zeromq/libzmq/pull/3913",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "afacdbeccf3598e2409c4be24ffc62067aa5b6f0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "zmartzone/mod_auth_openidc",
        "CVE_ID": "CVE-2019-20479",
        "Problem_Type": "CWE-601",
        "Description": "A flaw was found in mod_auth_openidc before version 2.4.1. An open redirect issue exists in URLs with a slash and backslash at the beginning.",
        "URL": "https://github.com/zmartzone/mod_auth_openidc/pull/453",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "02431c0adfa30f478cf2eb20ed6ea51fdf446be7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "systemd/systemd",
        "CVE_ID": "CVE-2017-15908",
        "Problem_Type": "CWE-835",
        "Description": "In systemd 223 through 235, a remote DNS server can respond with a custom crafted DNS NSEC resource record to trigger an infinite loop in the dns_packet_read_type_window() function of the 'systemd-resolved' service and cause a DoS of the affected service.",
        "URL": "https://github.com/systemd/systemd/pull/7184",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8aeadf3052a2130b88d5bccf5439890e1034f28d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolfSSL/wolfssl",
        "CVE_ID": "CVE-2020-36177",
        "Problem_Type": "CWE-787",
        "Description": "RsaPad_PSS in wolfcrypt/src/rsa.c in wolfSSL before 4.6.0 has an out-of-bounds write for certain relationships between key size and digest size.",
        "URL": "https://github.com/wolfSSL/wolfssl/pull/3426",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "63bf5dc56ccbfc12a73b06327361687091a4c6f7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wso2-extensions/identity-inbound-auth-oauth",
        "CVE_ID": "CVE-2018-20737",
        "Problem_Type": "CWE-79",
        "Description": "An issue was discovered in WSO2 API Manager 2.1.0 and 2.6.0. Reflected XSS exists in the carbon part of the product.",
        "URL": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/978/files",
        "Tag": "['Third Party Advisory', 'Patch']",
        "fix_commit_hash": "c04ed012ae5fb78ea402da7be1cc70fa7ff35611",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Yeraze/ytnef",
        "CVE_ID": "CVE-2017-6304",
        "Problem_Type": "CWE-125",
        "Description": "An issue was discovered in ytnef before 1.9.1. This is related to a patch described as \"7 of 9. Out of Bounds read.\"",
        "URL": "https://github.com/Yeraze/ytnef/pull/27",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b36d6b25b7a546fc28d6c3812124e487987a4910",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "wolkykim/qdecoder",
        "CVE_ID": "CVE-2022-32265",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "qDecoder before 12.1.0 does not ensure that the percent character is followed by two hex digits for URL decoding.",
        "URL": "https://github.com/wolkykim/qdecoder/pull/29/commits/ce7c8a7ac450a823a11b06508ef1eb7441241f81#diff-1c4e2f5adfa1ad30618e78ff459b2c0758ecf34278459ad0a8d58db4fec622ea",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "40d87189e2e33431a515d9327819f5410d7eb5dd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/origin",
        "CVE_ID": "CVE-2015-3207",
        "Problem_Type": "CWE-311",
        "Description": "In Openshift Origin 3 the cookies being set in console have no 'secure', 'HttpOnly' attributes.",
        "URL": "https://github.com/openshift/origin/pull/2261",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "adfdfcd8d266976c1e364b7862a6debf66de27f7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/origin",
        "CVE_ID": "CVE-2016-3711",
        "Problem_Type": "CWE-200",
        "Description": "HAproxy in Red Hat OpenShift Enterprise 3.2 and OpenShift Origin allows local users to obtain the internal IP address of a pod by reading the \"OPENSHIFT_[namespace]_SERVERID\" cookie.",
        "URL": "https://github.com/openshift/origin/pull/8334",
        "Tag": "['Patch']",
        "fix_commit_hash": "2d4cec7abefee8af1bfefa886541b370618d817c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "opensource-table/reviews-module",
        "CVE_ID": "CVE-2019-15560",
        "Problem_Type": "CWE-89",
        "Description": "The Reviews Module before 2019-06-14 for OpenSource Table allows SQL injection in database/index.js.",
        "URL": "https://github.com/opensource-table/reviews-module/pull/6",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ad97c50967a7adba799a37655dae44a1013e7b39",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openSUSE/libsolv",
        "CVE_ID": "CVE-2018-20532",
        "Problem_Type": "CWE-476",
        "Description": "There is a NULL pointer dereference at ext/testcase.c (function testcase_read) in libsolvext.a in libsolv through 0.7.2 that will cause a denial of service.",
        "URL": "https://github.com/openSUSE/libsolv/pull/291",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4830af9d979d3685de538b80fbeba51ad590525e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openSUSE/libsolv",
        "CVE_ID": "CVE-2018-20534",
        "Problem_Type": "CWE-119",
        "Description": "There is an illegal address access at ext/testcase.c in libsolv.a in libsolv through 0.7.2 that will cause a denial of service. NOTE: third parties dispute this issue stating that the issue affects the test suite and not the underlying library. It cannot be exploited in any real-world application",
        "URL": "https://github.com/openSUSE/libsolv/pull/291",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4830af9d979d3685de538b80fbeba51ad590525e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "opf/openproject",
        "CVE_ID": "CVE-2023-31140",
        "Problem_Type": "CWE-613",
        "Description": "OpenProject is open source project management software. Starting with version 7.4.0 and prior to version 12.5.4, when a user registers and confirms their first two-factor authentication (2FA) device for an account, existing logged in sessions for that user account are not terminated. Likewise, if an administrators creates a mobile phone 2FA device on behalf of a user, their existing sessions are not terminated. The issue has been resolved in OpenProject version 12.5.4 by actively terminating sessions of user accounts having registered and confirmed a 2FA device. As a workaround, users who register the first 2FA device on their account can manually log out to terminate all other active sessions. This is the default behavior of OpenProject but might be disabled through a configuration option. Double check that this option is not overridden if one plans to employ the workaround.",
        "URL": "https://github.com/opf/openproject/pull/12508",
        "Tag": "['Patch']",
        "fix_commit_hash": "39f2781374c885a3c0723eae39fd62fa3c8b8a28",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "orchest/orchest",
        "CVE_ID": "CVE-2022-31503",
        "Problem_Type": "CWE-22",
        "Description": "The orchest/orchest repository before 2022.05.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.",
        "URL": "https://github.com/orchest/orchest/pull/913",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a5401b6ae4368f10aec43269e1904fb6b92780a2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Orckestra/C1-CMS-Foundation",
        "CVE_ID": "CVE-2022-39256",
        "Problem_Type": "CWE-502",
        "Description": "Orckestra C1 CMS is a .NET based Web Content Management System. A vulnerability in versions prior to 6.13 allows remote attackers to execute arbitrary code on affected installations of Orckestra C1 CMS. Authentication is required to exploit this vulnerability. The authenticated user may perform the actions unknowingly by visiting a specially crafted site. This issue is patched in C1 CMS v6.13. There are no known workarounds.",
        "URL": "https://github.com/Orckestra/C1-CMS-Foundation/pull/814",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "af856ab5a62d19acf6aea1b1f4c6c3c4985c9446",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OSGeo/gdal",
        "CVE_ID": "CVE-2021-45943",
        "Problem_Type": "CWE-787",
        "Description": "GDAL 3.3.0 through 3.4.0 has a heap-based buffer overflow in PCIDSK::CPCIDSKFile::ReadFromFile (called from PCIDSK::CPCIDSKSegment::ReadFromFile and PCIDSK::CPCIDSKBinarySegment::CPCIDSKBinarySegment).",
        "URL": "https://github.com/OSGeo/gdal/pull/4944",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1ca6a3e5168c200763fa46d8aa7e698d0b757e7e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ospfranco/link-preview-js",
        "CVE_ID": "CVE-2022-25876",
        "Problem_Type": "CWE-918",
        "Description": "The package link-preview-js before 2.1.16 are vulnerable to Server-side Request Forgery (SSRF) which allows attackers to send arbitrary requests to the local network and read the response. This is due to flawed DNS rebinding protection.",
        "URL": "https://github.com/ospfranco/link-preview-js/pull/117",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7331edd8845622366d1fdc4ed6305ecfec5dfdd3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "p-quic/pquic",
        "CVE_ID": "CVE-2024-25679",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In PQUIC before 5bde5bb, retention of unused initial encryption keys allows attackers to disrupt a connection with a PSK configuration by sending a CONNECTION_CLOSE frame that is encrypted via the initial key computed. Network traffic sniffing is needed as part of exploitation.",
        "URL": "https://github.com/p-quic/pquic/pull/39",
        "Tag": "['Patch']",
        "fix_commit_hash": "5bde5bb5534ae3fc233547b2db88f418fceff170",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pallets/flask",
        "CVE_ID": "CVE-2018-1000656",
        "Problem_Type": "CWE-20",
        "Description": "The Pallets Project flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3. NOTE: this may overlap CVE-2019-1010083.",
        "URL": "https://github.com/pallets/flask/pull/2691",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "465b48ed4e4af52493df1febe4687f53032a5e0a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2021-39193",
        "Problem_Type": "CWE-1284",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.",
        "URL": "https://github.com/paritytech/frontier/pull/465/commits/8a2b890a2fb477d5fedd0e4335b00623832849ae",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "patriksimek/vm2",
        "CVE_ID": "CVE-2022-25893",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package vm2 before 3.9.10 are vulnerable to Arbitrary Code Execution due to the usage of prototype lookup for the WeakMap.prototype.set method. Exploiting this vulnerability leads to access to a host object and a sandbox compromise.",
        "URL": "https://github.com/patriksimek/vm2/pull/445",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e3e573fdc99a98a9c7db026e4c40474eb78cab4a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "percona/percona-xtrabackup",
        "CVE_ID": "CVE-2016-6225",
        "Problem_Type": "CWE-326",
        "Description": "xbcrypt in Percona XtraBackup before 2.3.6 and 2.4.x before 2.4.5 does not properly set the initialization vector (IV) for encryption, which makes it easier for context-dependent attackers to obtain sensitive information from encrypted backup files via a Chosen-Plaintext attack. NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-6394.",
        "URL": "https://github.com/percona/percona-xtrabackup/pull/267",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "83efde4398a6fe355d34a945ad82897716282b55",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "perl5-dbi/DBD-mysql",
        "CVE_ID": "CVE-2015-8949",
        "Problem_Type": "CWE-416",
        "Description": "Use-after-free vulnerability in the my_login function in DBD::mysql before 4.033_01 allows attackers to have unspecified impact by leveraging a call to mysql_errno after a failure of my_login.",
        "URL": "https://github.com/perl5-dbi/DBD-mysql/pull/45",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "cf0aa7751f6ef8445e9310a64b14dc81460ca156",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pgjdbc/pgjdbc",
        "CVE_ID": "CVE-2022-26520",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In pgjdbc before 42.3.3, an attacker (who controls the jdbc URL or properties) can call java.util.logging.FileHandler to write to arbitrary files through the loggerFile and loggerLevel connection properties. An example situation is that an attacker could create an executable JSP file under a Tomcat web root. NOTE: the vendor's position is that there is no pgjdbc vulnerability; instead, it is a vulnerability for any application to use the pgjdbc driver with untrusted connection properties",
        "URL": "https://github.com/pgjdbc/pgjdbc/pull/2454/commits/017b929977b4f85795f9ad2fa5de6e80978b8ccc",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "12c7fb40f761d69d64ced158684af2ccef279b48",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "phpmyadmin/phpmyadmin",
        "CVE_ID": "CVE-2020-22452",
        "Problem_Type": "CWE-89",
        "Description": "SQL Injection vulnerability in function getTableCreationQuery in CreateAddField.php in phpMyAdmin 5.x before 5.2.0 via the tbl_storage_engine or tbl_collation parameters to tbl_create.php.",
        "URL": "https://github.com/phpmyadmin/phpmyadmin/pull/16004",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e1f5dfcd167488a3a72706cb3ebb792a62452e38",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PHPSocialNetwork/phpfastcache",
        "CVE_ID": "CVE-2021-37704",
        "Problem_Type": "CWE-668",
        "Description": "PhpFastCache is a high-performance backend cache system (packagist package phpfastcache/phpfastcache). In versions before 6.1.5, 7.1.2, and 8.0.7 the `phpinfo()` can be exposed if the `/vendor` is not protected from public access. This is a rare situation today since the vendor directory is often located outside the web directory or protected via server rule (.htaccess, etc). Only the v6, v7 and v8 will be patched respectively in 8.0.7, 7.1.2, 6.1.5. Older versions such as v5, v4 are not longer supported and will **NOT** be patched. As a workaround, protect the `/vendor` directory from public access.",
        "URL": "https://github.com/PHPSocialNetwork/phpfastcache/pull/813",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "41a77d0d8f126dbd6fbedcd9e6a82e86cdaafa51",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pi-hole/AdminLTE",
        "CVE_ID": "CVE-2020-35659",
        "Problem_Type": "CWE-79",
        "Description": "The DNS query log in Pi-hole before 5.2.2 is vulnerable to stored XSS. An attacker with the ability to directly or indirectly query DNS with a malicious hostname can cause arbitrary JavaScript to execute when the Pi-hole administrator visits the Query Log or Long-term data Query Log page.",
        "URL": "https://github.com/pi-hole/AdminLTE/pull/1665",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8d735110059f8a774b0dc5be268768c7bc1f8be2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pimcore/admin-ui-classic-bundle",
        "CVE_ID": "CVE-2024-24822",
        "Problem_Type": "CWE-862",
        "Description": "Pimcore's Admin Classic Bundle provides a backend user interface for Pimcore. Prior to version 1.3.3, an attacker can create, delete etc. tags without having the permission to do so. A fix is available in version 1.3.3. As a workaround, one may apply the patch manually.",
        "URL": "https://github.com/pimcore/admin-ui-classic-bundle/pull/412",
        "Tag": "['Patch']",
        "fix_commit_hash": "24660b6d5ad9cbcb037a48d4309a6024e9adf251",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pires/go-proxyproto",
        "CVE_ID": "CVE-2021-23351",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package github.com/pires/go-proxyproto before 0.5.0 are vulnerable to Denial of Service (DoS) via the parseVersion1() function. The reader in this package is a default bufio.Reader wrapping a net.Conn. It will read from the connection until it finds a newline. Since no limits are implemented in the code, a deliberately malformed V1 header could be used to exhaust memory in a server process using this code - and create a DoS. This can be exploited by sending a stream starting with PROXY and continuing to send data (which does not contain a newline) until the target stops acknowledging. The risk here is small, because only trusted sources should be allowed to send proxy protocol headers.",
        "URL": "https://github.com/pires/go-proxyproto/pull/71",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7f48261db810703d173f27f3309a808cc2b49b8b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pires/go-proxyproto",
        "CVE_ID": "CVE-2021-23409",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package github.com/pires/go-proxyproto before 0.6.0 are vulnerable to Denial of Service (DoS) via creating connections without the proxy protocol header.",
        "URL": "https://github.com/pires/go-proxyproto/pull/74",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3aa7ea95a821cf534fae576651e2ca11f222a4e3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "plannigan/hyper-bump-it",
        "CVE_ID": "CVE-2023-41057",
        "Problem_Type": "CWE-22",
        "Description": "hyper-bump-it is a command line tool for updating the version in project files.`hyper-bump-it` reads a file glob pattern from the configuration file. That is combined with the project root directory to construct a full glob pattern that is used to find files that should be edited. These matched files should be contained within the project root directory, but that is not checked. This could result in changes being written to files outside of the project. The default behaviour of `hyper-bump-it` is to display the planned changes and prompt the user for confirmation before editing any files. However, the configuration file provides a field that can be used cause files to be edited without displaying the prompt. This issue has been fixed in release version 0.5.1. Users are advised to upgrade. Users that are unable to update from vulnerable versions, executing `hyper-bump-it` with the `--interactive` command line argument will ensure that all planned changes are displayed and prompt the user for confirmation before editing any files, even if the configuration file contains `show_confirm_prompt=true`.\n",
        "URL": "https://github.com/plannigan/hyper-bump-it/pull/307",
        "Tag": "['Patch']",
        "fix_commit_hash": "dadec52ae75a686db90b4487c4ae519eda93244a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "playframework/playframework",
        "CVE_ID": "CVE-2022-31018",
        "Problem_Type": "CWE-400",
        "Description": "Play Framework is a web framework for Java and Scala. A denial of service vulnerability has been discovered in verions 2.8.3 through 2.8.15 of Play's forms library, in both the Scala and Java APIs. This can occur when using either the `Form#bindFromRequest` method on a JSON request body or the `Form#bind` method directly on a JSON value. If the JSON data being bound to the form contains a deeply-nested JSON object or array, the form binding implementation may consume all available heap space and cause an `OutOfMemoryError`. If executing on the default dispatcher and `akka.jvm-exit-on-fatal-error` is enabled\u00c2\u2014as it is by default\u00c2\u2014then this can crash the application process. `Form.bindFromRequest` is vulnerable when using any body parser that produces a type of `AnyContent` or `JsValue` in Scala, or one that can produce a `JsonNode` in Java. This includes Play's default body parser. This vulnerability been patched in version 2.8.16. There is now a global limit on the depth of a JSON object that can be parsed, which can be configured by the user if necessary. As a workaround, applications that do not need to parse a request body of type `application/json` can switch from the default body parser to another body parser that supports only the specific type of body they expect.",
        "URL": "https://github.com/playframework/playframework/pull/11301",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6722f1e57544cc95cc5eaee587e278eee420b50",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "plotly/dash",
        "CVE_ID": "CVE-2024-21485",
        "Problem_Type": "CWE-79",
        "Description": "Versions of the package dash-core-components before 2.13.0; versions of the package dash-core-components before 2.0.0; versions of the package dash before 2.15.0; versions of the package dash-html-components before 2.0.0; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.\n\n**Note:**\n\nThis is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.",
        "URL": "https://github.com/plotly/dash/pull/2732",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9920073c9a8619ae8f90fcec1924f2f3a4332a8c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pomerium/pomerium",
        "CVE_ID": "CVE-2021-41230",
        "Problem_Type": "CWE-863",
        "Description": "Pomerium is an open source identity-aware access proxy. In affected versions changes to the OIDC claims of a user after initial login are not reflected in policy evaluation when using `allowed_idp_claims` as part of policy. If using `allowed_idp_claims` and a user's claims are changed, Pomerium can make incorrect authorization decisions. This issue has been resolved in v0.15.6. For users unable to upgrade clear data on `databroker` service by clearing redis or restarting the in-memory databroker to force claims to be updated.",
        "URL": "https://github.com/pomerium/pomerium/pull/2724",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "79ec52d3546684cee216057d05d4cab889186b6e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "postfixadmin/postfixadmin",
        "CVE_ID": "CVE-2017-5930",
        "Problem_Type": "CWE-862",
        "Description": "The AliasHandler component in PostfixAdmin before 3.0.2 allows remote authenticated domain admins to delete protected aliases via the delete parameter to delete.php, involving a missing permission check.",
        "URL": "https://github.com/postfixadmin/postfixadmin/pull/23",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bf9ec09829dbaa4973eff662d5ca44089c9479f4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PreMiD/PreMiD",
        "CVE_ID": "CVE-2020-24928",
        "Problem_Type": "CWE-862",
        "Description": "managers/socketManager.ts in PreMiD through 2.1.3 has a locally hosted socketio web server (port 3020) open to all origins, which allows attackers to obtain sensitive Discord user information.",
        "URL": "https://github.com/PreMiD/PreMiD/pull/501",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a9169821079042fbe2dd9882e58ff8e387eb53fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2018-19124",
        "Problem_Type": "CWE-22",
        "Description": "PrestaShop 1.6.x before 1.6.1.23 and 1.7.x before 1.7.4.4 on Windows allows remote attackers to write to arbitrary image files.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/11286",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "241a549d69c1aaa71ced9be7b17aef50c0e65ba3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2018-19125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "PrestaShop 1.6.x before 1.6.1.23 and 1.7.x before 1.7.4.4 allows remote attackers to delete an image directory.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/11286",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "241a549d69c1aaa71ced9be7b17aef50c0e65ba3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2018-19126",
        "Problem_Type": "CWE-434",
        "Description": "PrestaShop 1.6.x before 1.6.1.23 and 1.7.x before 1.7.4.4 allows remote attackers to execute arbitrary code via a file upload.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/11286",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "241a549d69c1aaa71ced9be7b17aef50c0e65ba3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2020-6632",
        "Problem_Type": "CWE-79",
        "Description": "In PrestaShop 1.7.6.2, XSS can occur during addition or removal of a QuickAccess link. This is related to AdminQuickAccessesController.php, themes/default/template/header.tpl, and themes/new-theme/js/header.js.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/17050/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e8c6090475dc3f1299682dc059668dae31d12cb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "proftpd/proftpd",
        "CVE_ID": "CVE-2019-12815",
        "Problem_Type": "CWE-755",
        "Description": "An arbitrary file copy vulnerability in mod_copy in ProFTPD up to 1.3.5b allows for remote code execution and information disclosure without authentication, a related issue to CVE-2015-3306.",
        "URL": "https://github.com/proftpd/proftpd/pull/816",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d19dd64161936d70c0a1544bd2c8e90850f4b7ae",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "progfay/scrapbox-parser",
        "CVE_ID": "CVE-2021-27405",
        "Problem_Type": "CWE-400",
        "Description": "A ReDoS (regular expression denial of service) flaw was found in the @progfay/scrapbox-parser package before 6.0.3 for Node.js.",
        "URL": "https://github.com/progfay/scrapbox-parser/pull/539",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a1142341b06b1840de4e1760baf7f9b13b207bbb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "proglottis/gpgme",
        "CVE_ID": "CVE-2020-8945",
        "Problem_Type": "CWE-416",
        "Description": "The proglottis Go wrapper before 0.1.1 for the GPGME library has a use-after-free, as demonstrated by use for container image pulls by Docker or CRI-O. This leads to a crash or potential code execution during GPG signature verification.",
        "URL": "https://github.com/proglottis/gpgme/pull/23",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "92153bcb59bd2f511e502262c46c7bd660e21733",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "projectacrn/acrn-hypervisor",
        "CVE_ID": "CVE-2021-36146",
        "Problem_Type": "CWE-476",
        "Description": "ACRN before 2.5 has a devicemodel/hw/pci/xhci.c NULL Pointer Dereference for a trb pointer.",
        "URL": "https://github.com/projectacrn/acrn-hypervisor/pull/6173/commits/330359921e2e4c2f3f3a10b5bab86942d63c4428",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "211a961e18efeb61a084664ba4be24cc447d8606",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "projectatomic/oci-register-machine",
        "CVE_ID": "CVE-2016-6349",
        "Problem_Type": "CWE-200",
        "Description": "The machinectl command in oci-register-machine allows local users to list running containers and possibly obtain sensitive information by running that command.",
        "URL": "https://github.com/projectatomic/oci-register-machine/pull/22",
        "Tag": "['Patch']",
        "fix_commit_hash": "40e9650bf1baa92a6f2513a43cd9440e5aba78e2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "projectdiscovery/interactsh",
        "CVE_ID": "CVE-2023-36474",
        "Problem_Type": "CWE-79",
        "Description": "Interactsh is an open-source tool for detecting out-of-band interactions. Domains configured with interactsh server prior to version 1.0.0 were vulnerable to subdomain takeover for a specific subdomain, i.e `app.` Interactsh server used to create cname entries for `app` pointing to `projectdiscovery.github.io` as default, which intended to used for hosting interactsh web client using GitHub pages. This is a security issue with a self-hosted interactsh server in which the user may not have configured a web client but still have a CNAME entry pointing to GitHub pages, making them vulnerable to subdomain takeover. This allows a threat actor to host / run arbitrary client side code (cross-site scripting) in a user's browser when browsing the vulnerable subdomain. Version 1.0.0 fixes this issue by making CNAME optional, rather than default.",
        "URL": "https://github.com/projectdiscovery/interactsh/pull/155",
        "Tag": "['Patch']",
        "fix_commit_hash": "30135c8377ccba2c21c26ba5b9f7eadd3afabaf0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "protobuf-c/protobuf-c",
        "CVE_ID": "CVE-2022-33070",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Protobuf-c v1.4.0 was discovered to contain an invalid arithmetic shift via the function parse_tag_and_wiretype in protobuf-c/protobuf-c.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via unspecified vectors.",
        "URL": "https://github.com/protobuf-c/protobuf-c/pull/508",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fc9b2b2ea99839ecdd52a0b3a6386a3ae266588c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "protobufjs/protobuf.js",
        "CVE_ID": "CVE-2022-25878",
        "Problem_Type": "CWE-1321",
        "Description": "The package protobufjs before 6.11.3 are vulnerable to Prototype Pollution which can allow an attacker to add/modify properties of the Object.prototype. This vulnerability can occur in multiple ways: 1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions 2. by parsing/loading .proto files",
        "URL": "https://github.com/protobufjs/protobuf.js/pull/1731",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3357ef753871b394b825d15429ceb27b26e24d63",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "psd-tools/psd-tools",
        "CVE_ID": "CVE-2020-10571",
        "Problem_Type": "CWE-754",
        "Description": "An issue was discovered in psd-tools before 1.9.4. The Cython implementation of RLE decoding did not check for malicious data.",
        "URL": "https://github.com/psd-tools/psd-tools/pull/198",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fd51f8b4a52bc9c1c06d1035dfdf2cd920e87074",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pulp/pulp",
        "CVE_ID": "CVE-2013-7450",
        "Problem_Type": "CWE-295",
        "Description": "Pulp before 2.3.0 uses the same the same certificate authority key and certificate for all installations.",
        "URL": "https://github.com/pulp/pulp/pull/627",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cf107ccd16a46883d87680bf1309a4cf86d1058",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PX4/PX4-Autopilot",
        "CVE_ID": "CVE-2021-34125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Yuneec Mantis Q and PX4-Autopilot v 1.11.3 and below allow attacker to gain access to sensitive information via various nuttx commands.",
        "URL": "https://github.com/PX4/PX4-Autopilot/pull/17264/commits/555f900cf52c0057e4c429ff3699c91911a21cab",
        "Tag": "['Patch']",
        "fix_commit_hash": "6874e9fba03bbec52da09f134563f644f9299ca8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pyca/cryptography",
        "CVE_ID": "CVE-2018-10903",
        "Problem_Type": "CWE-20",
        "Description": "A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.",
        "URL": "https://github.com/pyca/cryptography/pull/4342/commits/688e0f673bfbf43fa898994326c6877f00ab19ef",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d4378e42937b56f473ddade2667f919ce32208cb",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Pycord-Development/pycord",
        "CVE_ID": "CVE-2022-36024",
        "Problem_Type": "CWE-284",
        "Description": "py-cord is a an API wrapper for Discord written in Python. Bots creating using py-cord version 2.0.0 are vulnerable to remote shutdown if they are added to the server with the `application.commands` scope without the `bot` scope. Currently, it appears that all public bots that use slash commands are affected. This issue has been patched in version 2.0.1. There are currently no recommended workarounds - please upgrade to a patched version.",
        "URL": "https://github.com/Pycord-Development/pycord/pull/1568",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c3f794318aa7fcd5704654465ebcb76f0af4d3d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Pylons/colander",
        "CVE_ID": "CVE-2017-18361",
        "Problem_Type": "CWE-835",
        "Description": "In Pylons Colander through 1.6, the URL validator allows an attacker to potentially cause an infinite loop thereby causing a denial of service via an unclosed parenthesis.",
        "URL": "https://github.com/Pylons/colander/pull/323",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "98805557c10ab5ff3016ed09aa2d48c49b9df40b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pypa/pip",
        "CVE_ID": "CVE-2013-1629",
        "Problem_Type": "CWE-20",
        "Description": "pip before 1.3 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a \"pip install\" operation.",
        "URL": "https://github.com/pypa/pip/pull/791/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "beb9dead6bc58ee29fdf4316b05feb0be3a46832",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pypa/pip",
        "CVE_ID": "CVE-2013-1888",
        "Problem_Type": "CWE-59",
        "Description": "pip before 1.3 allows local users to overwrite arbitrary files via a symlink attack on a file in the /tmp/pip-build temporary directory.",
        "URL": "https://github.com/pypa/pip/pull/780/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6961e33fd4f9bc28f3e6f9e42f62db599ccb3d27",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pypa/pip",
        "CVE_ID": "CVE-2023-5752",
        "Problem_Type": "CWE-77",
        "Description": "When installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.\n",
        "URL": "https://github.com/pypa/pip/pull/12306",
        "Tag": "['Patch']",
        "fix_commit_hash": "1082eb12622b20d101d2864111dd9a591dd6c2f5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-babel/babel",
        "CVE_ID": "CVE-2021-42771",
        "Problem_Type": "CWE-22",
        "Description": "Babel.Locale in Babel before 2.9.1 allows attackers to load arbitrary locale .dat files (containing serialized Python objects) via directory traversal, leading to code execution.",
        "URL": "https://github.com/python-babel/babel/pull/782",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "412015ef642bfcc0d8ba8f4d05cdbb6aac98d9b3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2016-9189",
        "Problem_Type": "CWE-190",
        "Description": "Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the \"crafted image file\" approach, related to an \"Integer Overflow\" issue affecting the Image.core.map_buffer in map.c component.",
        "URL": "https://github.com/python-pillow/Pillow/pull/2146/commits/c50ebe6459a131a1ea8ca531f10da616d3ceaa0f",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c50ebe6459a131a1ea8ca531f10da616d3ceaa0f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-10177",
        "Problem_Type": "CWE-125",
        "Description": "Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4503",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "0da1eca7cfcea4ea67692ecec8dfd16837242da2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-10378",
        "Problem_Type": "CWE-125",
        "Description": "In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state->shuffle is instructed to read beyond state->buffer.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4538",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "41b554bc56982ee4f30238a7677c0f4ff90a73a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-10994",
        "Problem_Type": "CWE-125",
        "Description": "In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4538",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "41b554bc56982ee4f30238a7677c0f4ff90a73a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-11538",
        "Problem_Type": "CWE-125",
        "Description": "In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4538",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "41b554bc56982ee4f30238a7677c0f4ff90a73a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2021-28677",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in Pillow before 8.2.0. For EPS data, the readline implementation used in EPSImageFile has to deal with any combination of \\r and \\n as line endings. It used an accidentally quadratic method of accumulating lines while looking for a line ending. A malicious EPS file could use this to perform a DoS of Pillow in the open phase, before an image was accepted for opening.",
        "URL": "https://github.com/python-pillow/Pillow/pull/5377",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ee635befc6497f1c6c4fdb58c232e62d922ec8b7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2022-45198",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Pillow before 9.2.0 performs Improper Handling of Highly Compressed GIF Data (Data Amplification).",
        "URL": "https://github.com/python-pillow/Pillow/pull/6402",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "884437f8a2b953a0abd2a3b130a87fcfb438092e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2023-44271",
        "Problem_Type": "CWE-770",
        "Description": "An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.",
        "URL": "https://github.com/python-pillow/Pillow/pull/7244",
        "Tag": "['Patch']",
        "fix_commit_hash": "e37b25087d39bd54495380a9898c8c7a2a4698d1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PythonCharmers/python-future",
        "CVE_ID": "CVE-2022-40899",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Python Charmers Future 0.18.2 and earlier allows remote attackers to cause a denial of service via crafted Set-Cookie header from malicious web server.",
        "URL": "https://github.com/PythonCharmers/python-future/pull/610",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "02f7a8143d5b68f50a1cca44d8f5a58c1925a515",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2019-20907",
        "Problem_Type": "CWE-835",
        "Description": "In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation.",
        "URL": "https://github.com/python/cpython/pull/21454",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5a8d121a1f3ef5ad7c105ee378cc79a3eac0c7d4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "quarkusio/quarkus",
        "CVE_ID": "CVE-2023-0481",
        "Problem_Type": "CWE-668",
        "Description": "In RestEasy Reactive implementation of Quarkus the insecure File.createTempFile() is used in the FileBodyHandler class which creates temp files with insecure permissions that could be read by a local user.",
        "URL": "https://github.com/quarkusio/quarkus/pull/30694",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "4646c1557e85372315155c5d78a1456da4ab383a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "quill-mention/quill-mention",
        "CVE_ID": "CVE-2023-26149",
        "Problem_Type": "CWE-79",
        "Description": "Versions of the package quill-mention before 4.0.0 are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, via the renderList function. \n\n**Note:**\n\nIf the mentions list is sourced from unsafe (user-sourced) data, this might allow an injection attack when a Quill user hits @.",
        "URL": "https://github.com/quill-mention/quill-mention/pull/341",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "e85262ddced0a7f0b6fc8350d236a68bd1e28385",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rabbitmq/rabbitmq-server",
        "CVE_ID": "CVE-2021-32718",
        "Problem_Type": "CWE-79",
        "Description": "RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.17, a new user being added via management UI could lead to the user's bane being rendered in a confirmation message without proper `<script>` tag sanitization, potentially allowing for JavaScript code execution in the context of the page. In order for this to occur, the user must be signed in and have elevated permissions (other user management). The vulnerability is patched in RabbitMQ 3.8.17. As a workaround, disable `rabbitmq_management` plugin and use CLI tools for management operations and Prometheus and Grafana for metrics and monitoring.",
        "URL": "https://github.com/rabbitmq/rabbitmq-server/pull/3028",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8dffdf7de9793a76fc4685c89b968d8eddca4ca",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rabbitmq/rabbitmq-server",
        "CVE_ID": "CVE-2022-31008",
        "Problem_Type": "CWE-335",
        "Description": "RabbitMQ is a multi-protocol messaging and streaming broker. In affected versions the shovel and federation plugins perform URI obfuscation in their worker (link) state. The encryption key used to encrypt the URI was seeded with a predictable secret. This means that in case of certain exceptions related to Shovel and Federation plugins, reasonably easily deobfuscatable data could appear in the node log. Patched versions correctly use a cluster-wide secret for that purpose. This issue has been addressed and Patched versions: `3.10.2`, `3.9.18`, `3.8.32` are available. Users unable to upgrade should disable the Shovel and Federation plugins.",
        "URL": "https://github.com/rabbitmq/rabbitmq-server/pull/4841",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c22e1cb20e656d211e025c417d1fc75a9067b717",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rails/activerecord-session_store",
        "CVE_ID": "CVE-2019-25025",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The activerecord-session_store (aka Active Record Session Store) component through 1.1.3 for Ruby on Rails does not use a constant-time approach when delivering information about whether a guessed session ID is valid. Consequently, remote attackers can leverage timing discrepancies to achieve a correct guess in a relatively short amount of time. This is a related issue to CVE-2019-16782.",
        "URL": "https://github.com/rails/activerecord-session_store/pull/151",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9d4dd113d3010b82daaadf0b0ee6b9fb2afb2160",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "randombit/botan",
        "CVE_ID": "CVE-2021-24115",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Botan before 2.17.3, constant-time computations are not used for certain decoding and encoding operations (base32, base58, base64, and hex).",
        "URL": "https://github.com/randombit/botan/pull/2549",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "456d3dc005b872dd9773874e40e252a9a187e7f3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2019-12799",
        "Problem_Type": "CWE-502",
        "Description": "In createInstanceFromNamedArguments in Shopware through 5.6.x, a crafted web request can trigger a PHP object instantiation vulnerability, which can result in an arbitrary deserialization if the right class is instantiated. An attacker can leverage this deserialization to achieve remote code execution. NOTE: this issue is a bypass for a CVE-2017-18357 whitelist patch.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/11828",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1df703b85fc5e921b4c88be287433805742c2b93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-10808",
        "Problem_Type": "CWE-78",
        "Description": "Vesta Control Panel (VestaCP) through 0.9.8-26 allows Command Injection via the schedule/backup Backup Listing Endpoint. The attacker must be able to create a crafted filename on the server, as demonstrated by an FTP session that renames .bash_logout to a .bash_logout' substring followed by shell metacharacters.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13094",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c64b8fde9ffeaee56a6b4758d88dac3eb77da74",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-28347",
        "Problem_Type": "CWE-78",
        "Description": "tdpServer on TP-Link Archer A7 AC1750 devices before 201029 allows remote attackers to execute arbitrary code via the slave_mac parameter. NOTE: this issue exists because of an incomplete fix for CVE-2020-10882 in which shell quotes are mishandled.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14365",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "87eba681e02c63a47449a84b3b49c821c09aba0d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7356",
        "Problem_Type": "CWE-89",
        "Description": "CAYIN xPost suffers from an unauthenticated SQL Injection vulnerability. Input passed via the GET parameter 'wayfinder_seqid' in wayfinder_meeting_input.jsp is not properly sanitized before being returned to the user or used in SQL queries. This can be exploited to manipulate SQL queries by injecting arbitrary SQL code and execute SYSTEM commands.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13607",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "db4006e9f66c2397d20770e14d7e8cf881f4dfc2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7374",
        "Problem_Type": "CWE-120",
        "Description": "Documalis Free PDF Editor version 5.7.2.26 and Documalis Free PDF Scanner version 5.7.2.122 do not appropriately validate the contents of JPEG images contained within a PDF. Attackers can exploit this vulnerability to trigger a buffer overflow on the stack and gain remote code execution as the user running the Documalis Free PDF Editor or Documalis Free PDF Scanner software.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13517",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ed05df30818579bc618db3282167e904f54df31",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7385",
        "Problem_Type": "CWE-502",
        "Description": "By launching the drb_remote_codeexec exploit, a Metasploit Framework user will inadvertently expose Metasploit to the same deserialization issue that is exploited by that module, due to the reliance on the vulnerable Distributed Ruby class functions. Since Metasploit Framework typically runs with elevated privileges, this can lead to a system compromise on the Metasploit workstation. Note that an attacker would have to lie in wait and entice the Metasploit user to run the affected module against a malicious endpoint in a \"hack-back\" type of attack. Metasploit is only vulnerable when the drb_remote_codeexec module is running. In most cases, this cannot happen automatically.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14335",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8add7fb7ca8ab75a350bbce562606d09750f7050",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2021-29133",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Lack of verification in haserl, a component of Alpine Linux Configuration Framework, before 0.9.36 allows local users to read the contents of any file on the filesystem.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14833/commits/5bf6b2d094deb22fa8183ce161b90cbe4fd40a70",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "943698ef199674c118dc2a64359ae14b0fa8c8be",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2021-43258",
        "Problem_Type": "CWE-434",
        "Description": "CartView.php in ChurchInfo 1.3.0 allows attackers to achieve remote code execution through insecure uploads. This requires authenticated access tot he ChurchInfo application. Once authenticated, a user can add names to their cart, and compose an email. Uploading an attachment for the email stores the attachment on the site in the /tmp_attach/ folder where it can be accessed with a GET request. There are no limitations on files that can be attached, allowing for malicious PHP code to be uploaded and interpreted by the server.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/17257",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8ca755006244fb08951d02673534bdf0c5050814",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-3218",
        "Problem_Type": "CWE-287",
        "Description": "Due to a reliance on client-side authentication, the WiFi Mouse (Mouse Server) from Necta LLC's authentication mechanism is trivially bypassed, which can result in remote code execution.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16985",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "09080064663d42025d1908221450c4eb40c677e8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-34876",
        "Problem_Type": "CWE-89",
        "Description": "SQL Injection vulnerability in admin interface (/vicidial/admin.php) of VICIdial via modify_email_accounts, access_recordings, and agentcall_email parameters allows attacker to spoof identity, tamper with existing data, allow the complete disclosure of all data on the system, destroy the data or make it otherwise unavailable, and become administrators of the database server. This issue affects: VICIdial 2.14b0.5 versions prior to 3555.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16732",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "12f3325f3e84e33bfdeac60218524a800f324632",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-34878",
        "Problem_Type": "CWE-89",
        "Description": "SQL Injection vulnerability in User Stats interface (/vicidial/user_stats.php) of VICIdial via the file_download parameter allows attacker to spoof identity, tamper with existing data, allow the complete disclosure of all data on the system, destroy the data or make it otherwise unavailable, and become administrators of the database server.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16732",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "12f3325f3e84e33bfdeac60218524a800f324632",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-37393",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Zimbra's sudo configuration permits the zimbra user to execute the zmslapd binary as root with arbitrary parameters. As part of its intended functionality, zmslapd can load a user-defined configuration file, which includes plugins in the form of .so files, which also execute as root.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16807",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8e73d9fa90471fa5ccf75c2a09ca27f6741e00c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RaspAP/raspap-webgui",
        "CVE_ID": "CVE-2023-30260",
        "Problem_Type": "CWE-77",
        "Description": "Command injection vulnerability in RaspAP raspap-webgui 2.8.8 and earlier allows remote attackers to run arbitrary commands via crafted POST request to hostapd settings form.",
        "URL": "https://github.com/RaspAP/raspap-webgui/pull/1322",
        "Tag": "['Patch']",
        "fix_commit_hash": "238e1670fcef8b18ec4628ee74fc345607536a16",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RDFLib/pyrdfa3",
        "CVE_ID": "CVE-2022-4396",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in RDFlib pyrdfa3 and classified as problematic. This issue affects the function _get_option of the file pyRdfa/__init__.py. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is ffd1d62dd50d5f4190013b39cedcdfbd81f3ce3e. It is recommended to apply a patch to fix this issue. The identifier VDB-215249 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/RDFLib/pyrdfa3/pull/40",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "404bd418575ddcd58a0d5b0fe47b6d9d33ff5ead",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rear/rear",
        "CVE_ID": "CVE-2024-23301",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Relax-and-Recover (aka ReaR) through 2.7 creates a world-readable initrd when using GRUB_RESCUE=y. This allows local attackers to gain access to system secrets otherwise only readable by root.",
        "URL": "https://github.com/rear/rear/pull/3123",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "89b61793d80bc2cb2abe47a7d0549466fb087d16",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "redis/redis",
        "CVE_ID": "CVE-2023-28856",
        "Problem_Type": "CWE-617",
        "Description": "Redis is an open source, in-memory database that persists on disk. Authenticated users can use the `HINCRBYFLOAT` command to create an invalid hash field that will crash Redis on access in affected versions. This issue has been addressed in in versions 7.0.11, 6.2.12, and 6.0.19. Users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/redis/redis/pull/11149",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "bc7fe41e5857a0854d524e2a63a028e9394d2a5c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "redpanda-data/redpanda",
        "CVE_ID": "CVE-2023-30450",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "rpk in Redpanda before 23.1.2 mishandles the redpanda.rpc_server_tls field, leading to (for example) situations in which there is a data type mismatch that cannot be automatically fixed by rpk, and instead a user must reconfigure (while a cluster is turned off) in order to have TLS on broker RPC ports. NOTE: the fix was also backported to the 22.2 and 22.3 branches.",
        "URL": "https://github.com/redpanda-data/redpanda/pull/7719",
        "Tag": "['Patch']",
        "fix_commit_hash": "6a69c280a05721178946835130b5f2b20002e33d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "redpanda-data/redpanda",
        "CVE_ID": "CVE-2023-50976",
        "Problem_Type": "CWE-862",
        "Description": "Redpanda before 23.1.21 and 23.2.x before 23.2.18 has missing authorization checks in the Transactions API.",
        "URL": "https://github.com/redpanda-data/redpanda/pull/15060",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "ea7e1b2f03a4affb4e711aa39a79090d399e1bda",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Reference-LAPACK/lapack",
        "CVE_ID": "CVE-2021-4048",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read flaw was found in the CLARRV, DLARRV, SLARRV, and ZLARRV functions in lapack through version 3.10.0, as also used in OpenBLAS before version 0.3.18. Specially crafted inputs passed to these functions could cause an application using lapack to crash or possibly disclose portions of its memory.",
        "URL": "https://github.com/Reference-LAPACK/lapack/pull/625",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "38f3eeee3108b18158409ca2a100e6fe03754781",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ReFirmLabs/binwalk",
        "CVE_ID": "CVE-2022-4510",
        "Problem_Type": "CWE-22",
        "Description": "\nA path traversal vulnerability was identified in ReFirm Labs binwalk from version 2.1.2b through 2.3.3 included. By crafting a malicious PFS filesystem file, an attacker can get binwalk's PFS extractor to extract files at arbitrary locations when binwalk is run in extraction mode (-e option). Remote code execution can be achieved by building a PFS filesystem that, upon extraction,\u00c2\u00a0would extract a malicious binwalk module into the folder .config/binwalk/plugins.\n This vulnerability is associated with program files src/binwalk/plugins/unpfs.py.\n\nThis issue affects binwalk from 2.1.2b through 2.3.3 included.\n\n",
        "URL": "https://github.com/ReFirmLabs/binwalk/pull/617",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cddfede795971045d99422bd7a9676c8803ec5ee",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "requests/requests",
        "CVE_ID": "CVE-2018-18074",
        "Problem_Type": "CWE-522",
        "Description": "The Requests package before 2.20.0 for Python sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",
        "URL": "https://github.com/requests/requests/pull/4718",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c45d7c49ea75133e52ab22a8e9e13173938e36ff",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "resque/resque",
        "CVE_ID": "CVE-2023-50724",
        "Problem_Type": "CWE-79",
        "Description": "Resque (pronounced like \"rescue\") is a Redis-backed library for creating background jobs, placing those jobs on multiple queues, and processing them later. resque-web in resque versions before 2.1.0 are vulnerable to reflected XSS through the current_queue parameter in the path of the queues endpoint. This issue has been patched in version 2.1.0.\n",
        "URL": "https://github.com/resque/resque/pull/1687",
        "Tag": "['Patch']",
        "fix_commit_hash": "e8e2367fff6990d13109ec2483a456a05fbf9811",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2017-8289",
        "Problem_Type": "CWE-119",
        "Description": "Stack-based buffer overflow in the ipv6_addr_from_str function in sys/net/network_layer/ipv6/addr/ipv6_addr_from_str.c in RIOT prior to 2017-04-25 allows local attackers, and potentially remote attackers, to cause a denial of service or possibly have unspecified other impact via a malformed IPv6 address.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/6962",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "341d35b78e7a04384010323d5916a402e9a5e5ab",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2019-15134",
        "Problem_Type": "CWE-401",
        "Description": "RIOT through 2019.07 contains a memory leak in the TCP implementation (gnrc_tcp), allowing an attacker to consume all memory available for network packets and thus effectively stopping all network threads from working. This is related to _receive in sys/net/gnrc/transport_layer/tcp/gnrc_tcp_eventloop.c upon receiving an ACK before a SYN.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/12001",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f483988ae96b010d2a5be9462e9e0c01cfb7fac3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2019-17389",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In RIOT 2019.07, the MQTT-SN implementation (asymcute) mishandles errors occurring during a read operation on a UDP socket. The receive loop ends. This allows an attacker (via a large packet) to prevent a RIOT MQTT-SN client from working until the device is restarted.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/12382",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "999a7714b07a3ffa87dfdd8519d3466a6a0ba003",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24818",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/f4fb746d1acaacc962daeed3aa71aadfe307d20e",
        "Tag": "['Patch']",
        "fix_commit_hash": "f4fb746d1acaacc962daeed3aa71aadfe307d20e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24818",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/aa27ed71fa3e5d48dee1748dcf27b6323ec98a33",
        "Tag": "['Patch']",
        "fix_commit_hash": "aa27ed71fa3e5d48dee1748dcf27b6323ec98a33",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24821",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a large out of bounds write beyond the packet buffer. The write will create a hard fault exception after reaching the last page of RAM. The hard fault is not handled and the system will be stuck until reset, thus the impact is denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/bd31010231f5340e21410595dd95afc86bbfd341",
        "Tag": "['Patch']",
        "fix_commit_hash": "bd31010231f5340e21410595dd95afc86bbfd341",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24822",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference while encoding a 6LoWPAN IPHC header. The NULL pointer dereference causes a hard fault exception, leading to denial of service. Version 2022.10 fixes this issue. As a workaround, apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/7253e261556f252816f4a3b7c4f96fc10d642485",
        "Tag": "['Patch']",
        "fix_commit_hash": "7253e261556f252816f4a3b7c4f96fc10d642485",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-33973",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system for Internet of Things (IoT) devices, contains a network stack with the ability to process 6LoWPAN frames. In versions 2023.01 and prior, an attacker can send a crafted frame which is forwarded by the device. During encoding of the packet a NULL pointer dereference occurs. This crashes the device leading to denial of service. A patch is available at pull request 19678. There are no known workarounds.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/19678",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "00b5bc12a219e4076418e59aaa2457acb6eb7f08",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-33975",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system for Internet of Things (IoT) devices, contains a network stack with the ability to process 6LoWPAN frames. In version 2023.01 and prior, an attacker can send a crafted frame to the device resulting in an out of bounds write in the packet buffer. The overflow can be used to corrupt other packets and the allocator metadata. Corrupting a pointer will easily lead to denial of service. While carefully manipulating the allocator metadata gives an attacker the possibility to write data to arbitrary locations and thus execute arbitrary code. This issue is fixed in pull request 19680. As a workaround, disable support for fragmented IP datagrams.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/19680",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "00b5bc12a219e4076418e59aaa2457acb6eb7f08",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rl-institut/NESP2",
        "CVE_ID": "CVE-2020-36768",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in rl-institut NESP2 Initial Release/1.0. It has been classified as critical. Affected is an unknown function of the file app/database.py. The manipulation leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The patch is identified as 07c0cdf36cf6a4345086d07b54423723a496af5e. It is recommended to apply a patch to fix this issue. VDB-246642 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/rl-institut/NESP2/pull/333",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f517ae2afba7b62d93105bb732442b0c455839b6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rmccue/Requests",
        "CVE_ID": "CVE-2021-29476",
        "Problem_Type": "CWE-502",
        "Description": "Requests is a HTTP library written in PHP. Requests mishandles deserialization in FilteredIterator. The issue has been patched and users of `Requests` 1.6.0, 1.6.1 and 1.7.0 should update to version 1.8.0.",
        "URL": "https://github.com/rmccue/Requests/pull/421",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "549e3fd2d2d65dcf7b4d99a181776cf8518f8ec0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rockcarry/ffjpeg",
        "CVE_ID": "CVE-2021-34122",
        "Problem_Type": "CWE-476",
        "Description": "The function bitstr_tell at bitstr.c in ffjpeg commit 4ab404e has a NULL pointer dereference.",
        "URL": "https://github.com/rockcarry/ffjpeg/pull/37",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "863adf23144ee21dcee9064ceba90bbbf0edc919",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RocketChat/Rocket.Chat",
        "CVE_ID": "CVE-2017-1000493",
        "Problem_Type": "CWE-74",
        "Description": "Rocket.Chat Server version 0.59 and prior is vulnerable to a NoSQL injection leading to administrator account takeover",
        "URL": "https://github.com/RocketChat/Rocket.Chat/pull/8408",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "10f89856eb974d083a29fe01496f8d79b8958365",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rohe/pysaml2",
        "CVE_ID": "CVE-2016-10127",
        "Problem_Type": "CWE-611",
        "Description": "PySAML2 allows remote attackers to conduct XML external entity (XXE) attacks via a crafted SAML XML request or response.",
        "URL": "https://github.com/rohe/pysaml2/pull/379",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "8c2b0529efce45b94209da938c89ebdf0a79748d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rooseveltframework/teddy",
        "CVE_ID": "CVE-2021-23447",
        "Problem_Type": "CWE-843",
        "Description": "This affects the package teddy before 0.5.9. A type confusion vulnerability can be used to bypass input sanitization when the model content is an array (instead of a string).",
        "URL": "https://github.com/rooseveltframework/teddy/pull/518",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "64c556717b4879bf8d4c30067cf6e70d899a3dc0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rsyslog/rsyslog",
        "CVE_ID": "CVE-2017-12588",
        "Problem_Type": "CWE-134",
        "Description": "The zmq3 input and output modules in rsyslog before 8.28.0 interpreted description fields as format strings, possibly allowing a format string attack with unspecified impact.",
        "URL": "https://github.com/rsyslog/rsyslog/pull/1565",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "062d0c671a29f7c6f7dff4a2f1f35df375bbb30b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rsyslog/rsyslog",
        "CVE_ID": "CVE-2019-17041",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in Rsyslog v8.1908.0. contrib/pmaixforwardedfrom/pmaixforwardedfrom.c has a heap overflow in the parser for AIX log messages. The parser tries to locate a log message delimiter (in this case, a space or a colon) but fails to account for strings that do not satisfy this constraint. If the string does not match, then the variable lenMsg will reach the value zero and will skip the sanity check that detects invalid log messages. The message will then be considered valid, and the parser will eat up the nonexistent colon delimiter. In doing so, it will decrement lenMsg, a signed integer, whose value was zero and now becomes minus one. The following step in the parser is to shift left the contents of the message. To do this, it will call memmove with the right pointers to the target and destination strings, but the lenMsg will now be interpreted as a huge value, causing a heap overflow.",
        "URL": "https://github.com/rsyslog/rsyslog/pull/3884",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c64dc4e0df91c0ff9aab2ddde891feff315124a7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rtcwcoop/rtcwcoop",
        "CVE_ID": "CVE-2019-25104",
        "Problem_Type": "CWE-404",
        "Description": "A vulnerability has been found in rtcwcoop 1.0.2 and classified as problematic. Affected by this vulnerability is the function AICast_ScriptLoad of the file code/game/ai_cast_script.c of the component Team Command Handler. The manipulation leads to denial of service. The identifier of the patch is f2cd18bc2e1cbca8c4b78bee9c392272bd5f42ac. It is recommended to apply a patch to fix this issue. The identifier VDB-221485 was assigned to this vulnerability.",
        "URL": "https://github.com/rtcwcoop/rtcwcoop/pull/45",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "c29bb478e956ce19f55a1d7fc266264995f344b6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ruby-ldap/ruby-net-ldap",
        "CVE_ID": "CVE-2017-17718",
        "Problem_Type": "CWE-295",
        "Description": "The Net::LDAP (aka net-ldap) gem before 0.16.0 for Ruby has Missing SSL Certificate Validation.",
        "URL": "https://github.com/ruby-ldap/ruby-net-ldap/pull/279",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e4c46a223a19feda78393a793711353aa1febdcd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rubysec/ruby-advisory-db",
        "CVE_ID": "CVE-2014-10077",
        "Problem_Type": "CWE-20",
        "Description": "Hash#slice in lib/i18n/core_ext/hash.rb in the i18n gem before 0.8.0 for Ruby allows remote attackers to cause a denial of service (application crash) via a call in a situation where :some_key is present in keep_keys but not present in the hash.",
        "URL": "https://github.com/rubysec/ruby-advisory-db/pull/182/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "76dc29f77ed744ddfb2a28bd499fc31a62df8b85",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rubyzip/rubyzip",
        "CVE_ID": "CVE-2019-16892",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Rubyzip before 1.3.0, a crafted ZIP file can bypass application checks on ZIP entry sizes because data about the uncompressed size can be spoofed. This allows attackers to cause a denial of service (disk consumption).",
        "URL": "https://github.com/rubyzip/rubyzip/pull/403",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d65fe7bd283ec94f9d6dc7605f61a6b0dd00f55e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/cargo",
        "CVE_ID": "CVE-2023-38497",
        "Problem_Type": "CWE-278",
        "Description": "Cargo downloads the Rust project\u00c2\u2019s dependencies and compiles the project. Cargo prior to version 0.72.2, bundled with Rust prior to version 1.71.1, did not respect the umask when extracting crate archives on UNIX-like systems. If the user downloaded a crate containing files writeable by any local user, another local user could exploit this to change the source code compiled and executed by the current user. To prevent existing cached extractions from being exploitable, the Cargo binary version 0.72.2 included in Rust 1.71.1 or later will purge caches generated by older Cargo versions automatically. As a workaround, configure one's system to prevent other local users from accessing the Cargo directory, usually located in `~/.cargo`.",
        "URL": "https://github.com/rust-lang/cargo/pull/12443",
        "Tag": "['Mailing List', 'Patch']",
        "fix_commit_hash": "d78bbf4bde3c6b95caca7512f537c6f9721426ff",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2015-20001",
        "Problem_Type": "CWE-119",
        "Description": "In the standard library in Rust before 1.2.0, BinaryHeap is not panic-safe. The binary heap is left in an inconsistent state when the comparison of generic elements inside sift_up or sift_down_range panics. This bug leads to a drop of zeroed memory as an arbitrary type, which can result in a memory safety violation.",
        "URL": "https://github.com/rust-lang/rust/pull/25856",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "efebe45cc0f3265ee8bb6396952e93a2004128c8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2020-36317",
        "Problem_Type": "CWE-787",
        "Description": "In the standard library in Rust before 1.49.0, String::retain() function has a panic safety problem. It allows creation of a non-UTF-8 Rust string when the provided closure panics. This bug could result in a memory safety violation when other string APIs assume that UTF-8 encoding is used on the same string.",
        "URL": "https://github.com/rust-lang/rust/pull/78499",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "48c4afbf9c29880dd946067d1c9aee1e7f75834a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2020-36323",
        "Problem_Type": "CWE-134",
        "Description": "In the standard library in Rust before 1.52.0, there is an optimization for joining strings that can cause uninitialized bytes to be exposed (or the program to crash) if the borrowed string changes after its length is checked.",
        "URL": "https://github.com/rust-lang/rust/pull/81728",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5208f63ba8ec70a2a7a074d7ecd59a94693286fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2020-36323",
        "Problem_Type": "CWE-134",
        "Description": "In the standard library in Rust before 1.52.0, there is an optimization for joining strings that can cause uninitialized bytes to be exposed (or the program to crash) if the borrowed string changes after its length is checked.",
        "URL": "https://github.com/rust-lang/rust/pull/81728#issuecomment-824904190",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5208f63ba8ec70a2a7a074d7ecd59a94693286fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-28876",
        "Problem_Type": "CWE-755",
        "Description": "In the standard library in Rust before 1.52.0, the Zip implementation has a panic safety issue. It calls __iterator_get_unchecked() more than once for the same index when the underlying iterator panics (in certain conditions). This bug could lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.",
        "URL": "https://github.com/rust-lang/rust/pull/81741",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0cfba2fd090834c909d5ed9deccdee8170da791b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-28878",
        "Problem_Type": "CWE-119",
        "Description": "In the standard library in Rust before 1.52.0, the Zip implementation calls __iterator_get_unchecked() more than once for the same index (under certain conditions) when next_back() and next() are used together. This bug could lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.",
        "URL": "https://github.com/rust-lang/rust/pull/82292",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d5b2dc945124c619ebb3641c096c063ca8ca1e5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-29922",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "library/std/src/net/parser.rs in Rust before 1.53.0 does not properly consider extraneous zero characters at the beginning of an IP address string, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation.",
        "URL": "https://github.com/rust-lang/rust/pull/83652",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74874a690bc95443292496ff5df5cc5c8cb56e0b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-31162",
        "Problem_Type": "CWE-415",
        "Description": "In the standard library in Rust before 1.52.0, a double free can occur in the Vec::from_iter function if freeing the element panics.",
        "URL": "https://github.com/rust-lang/rust/pull/84603",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f97769a2b7bc5a6b3d8f7140613cf26352f2b518",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2022-21658",
        "Problem_Type": "CWE-363",
        "Description": "Rust is a multi-paradigm, general-purpose programming language designed for performance and safety, especially safe concurrency. The Rust Security Response WG was notified that the `std::fs::remove_dir_all` standard library function is vulnerable a race condition enabling symlink following (CWE-363). An attacker could use this security issue to trick a privileged program into deleting files and directories the attacker couldn't otherwise access or delete. Rust 1.0.0 through Rust 1.58.0 is affected by this vulnerability with 1.58.1 containing a patch. Note that the following build targets don't have usable APIs to properly mitigate the attack, and are thus still vulnerable even with a patched toolchain: macOS before version 10.10 (Yosemite) and REDOX. We recommend everyone to update to Rust 1.58.1 as soon as possible, especially people developing programs expected to run in privileged contexts (including system daemons and setuid binaries), as those have the highest risk of being affected by this. Note that adding checks in your codebase before calling remove_dir_all will not mitigate the vulnerability, as they would also be vulnerable to race conditions like remove_dir_all itself. The existing mitigation is working as intended outside of race conditions.",
        "URL": "https://github.com/rust-lang/rust/pull/93110",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "08182e4670b07fbb0511e01338eb9d6402c90dd3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rustsec/advisory-db",
        "CVE_ID": "CVE-2021-43620",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "An issue was discovered in the fruity crate through 0.2.0 for Rust. Security-relevant validation of filename extensions is plausibly affected. Methods of NSString for conversion to a string may return a partial result. Because they call CStr::from_ptr on a pointer to the string buffer, the string is terminated at the first '\\0' byte, which might not be the end of the string.",
        "URL": "https://github.com/rustsec/advisory-db/pull/1102",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5184e35e368262496dccfba2e5ddfcd56f3c1d8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sagemath/sage",
        "CVE_ID": "CVE-2023-29465",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "SageMath FlintQS 1.0 relies on pathnames under TMPDIR (typically world-writable), which (for example) allows a local user to overwrite files with the privileges of a different user (who is running FlintQS).",
        "URL": "https://github.com/sagemath/sage/pull/35419",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "820909d7c55599836a881a8dd1ed385a4cc1b2a0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "salesagility/SuiteDocs",
        "CVE_ID": "CVE-2018-20816",
        "Problem_Type": "CWE-352",
        "Description": "An XSS combined with CSRF vulnerability discovered in SalesAgility SuiteCRM 7.x before 7.8.24 and 7.10.x before 7.10.11 leads to cookie stealing, aka session hijacking. This issue affects the \"add dashboard pages\" feature where users can receive a malicious attack through a phished URL, with script executed.",
        "URL": "https://github.com/salesagility/SuiteDocs/pull/198/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f03b4c17760fb8c8fad933d74735d1cbdff9ce6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "saltstack/salt",
        "CVE_ID": "CVE-2017-8109",
        "Problem_Type": "CWE-200",
        "Description": "The salt-ssh minion code in SaltStack Salt 2016.11 before 2016.11.4 copied over configuration from the Salt Master without adjusting permissions, which might leak credentials to local attackers on configured minions (clients).",
        "URL": "https://github.com/saltstack/salt/pull/40609",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8492cef7a5c8871a3978ffc2f6e48b3b960e0151",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Sama34/OUGC-Feedback",
        "CVE_ID": "CVE-2021-28115",
        "Problem_Type": "CWE-79",
        "Description": "The OUGC Feedback plugin before 1.8.23 for MyBB allows XSS via the comment field of feedback during an edit operation.",
        "URL": "https://github.com/Sama34/OUGC-Feedback/pull/31/commits/ceef7c06359e5dcbaffe90a40884265c5754068c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ceef7c06359e5dcbaffe90a40884265c5754068c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sbt/io",
        "CVE_ID": "CVE-2023-46122",
        "Problem_Type": "CWE-22",
        "Description": "sbt is a build tool for Scala, Java, and others. Given a specially crafted zip or JAR file, `IO.unzip` allows writing of arbitrary file. This would have potential to overwrite `/root/.ssh/authorized_keys`. Within sbt's main code, `IO.unzip` is used in `pullRemoteCache` task and `Resolvers.remote`; however many projects use `IO.unzip(...)` directly to implement custom tasks. This vulnerability has been patched in version 1.9.7.",
        "URL": "https://github.com/sbt/io/pull/360",
        "Tag": "['Patch']",
        "fix_commit_hash": "124538348db0713c80793cb57b915f97ec13188a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "scala/scala",
        "CVE_ID": "CVE-2017-15288",
        "Problem_Type": "CWE-732",
        "Description": "The compilation daemon in Scala before 2.10.7, 2.11.x before 2.11.12, and 2.12.x before 2.12.4 uses weak permissions for private files in /tmp/scala-devel/${USER:shared}/scalac-compile-server-port, which allows local users to write to arbitrary class files and consequently gain privileges.",
        "URL": "https://github.com/scala/scala/pull/6108",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f3419fc358a8ea6e366538126279da88d4d1fb1f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "scipy/scipy",
        "CVE_ID": "CVE-2023-25399",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A refcounting issue which leads to potential memory leak was discovered in scipy commit 8627df31ab in Py_FindObjects() function.",
        "URL": "https://github.com/scipy/scipy/pull/16397",
        "Tag": "['Patch']",
        "fix_commit_hash": "9a992782abc3123e139901c8751c076ceca0cf72",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ScottTZhang/voter-js",
        "CVE_ID": "CVE-2014-125050",
        "Problem_Type": "CWE-89",
        "Description": "A vulnerability was found in ScottTZhang voter-js and classified as critical. Affected by this issue is some unknown functionality of the file main.js. The manipulation leads to sql injection. The patch is identified as 6317c67a56061aeeaeed3cf9ec665fd9983d8044. It is recommended to apply a patch to fix this issue. VDB-217562 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/ScottTZhang/voter-js/pull/15",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6317c67a56061aeeaeed3cf9ec665fd9983d8044",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sddm/sddm",
        "CVE_ID": "CVE-2014-7271",
        "Problem_Type": "CWE-306",
        "Description": "Simple Desktop Display Manager (SDDM) before 0.10.0 allows local users to log in as user \"sddm\" without authentication.",
        "URL": "https://github.com/sddm/sddm/pull/279/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "62668500755c05520152f532e68bdcee1ca5e82f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "secdev/scapy",
        "CVE_ID": "CVE-2019-1010142",
        "Problem_Type": "CWE-835",
        "Description": "scapy 2.4.0 is affected by: Denial of Service. The impact is: infinite loop, resource consumption and program unresponsive. The component is: _RADIUSAttrPacketListField.getfield(self..). The attack vector is: over the network or in a pcap. both work.",
        "URL": "https://github.com/secdev/scapy/pull/1409/files#diff-441eff981e466959968111fc6314fe93L1058",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "905c80d6ed435477224c53de8850f763b04d495d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "segmentio/is-url",
        "CVE_ID": "CVE-2018-25079",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability was found in Segmentio is-url up to 1.2.2. It has been rated as problematic. Affected by this issue is some unknown functionality of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. Upgrading to version 1.2.3 is able to address this issue. The patch is identified as 149550935c63a98c11f27f694a7c4a9479e53794. It is recommended to upgrade the affected component. VDB-220058 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/segmentio/is-url/pull/18",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "55ee8ee9dcadccb82746288cd8c36958228a7b70",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sensu/sensu",
        "CVE_ID": "CVE-2018-1000060",
        "Problem_Type": "CWE-532",
        "Description": "Sensu, Inc. Sensu Core version Before 1.2.0 & before commit 46ff10023e8cbf1b6978838f47c51b20b98fe30b contains a CWE-522 vulnerability in Sensu::Utilities.redact_sensitive() that can result in sensitive configuration data (e.g. passwords) may be logged in clear-text. This attack appear to be exploitable via victims with configuration matching a specific pattern will observe sensitive data outputted in their service log files. This vulnerability appears to have been fixed in 1.2.1 and later, after commit 46ff10023e8cbf1b6978838f47c51b20b98fe30b.",
        "URL": "https://github.com/sensu/sensu/pull/1810",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory', 'Vendor Advisory']",
        "fix_commit_hash": "44dc4263021782728c0d12b24f57c4cefd8e9360",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sergeKashkin/Simple-RAT",
        "CVE_ID": "CVE-2022-31510",
        "Problem_Type": "CWE-22",
        "Description": "The sergeKashkin/Simple-RAT repository before 2022-05-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.",
        "URL": "https://github.com/sergeKashkin/Simple-RAT/pull/11",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ea772dc813d3ba70cf62ad6b84851eaa8bdab5d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "shadowsocks/ShadowsocksX-NG",
        "CVE_ID": "CVE-2023-27574",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "ShadowsocksX-NG 1.10.0 signs with com.apple.security.get-task-allow entitlements because of CODE_SIGNING_INJECT_BASE_ENTITLEMENTS.",
        "URL": "https://github.com/shadowsocks/ShadowsocksX-NG/pull/1456",
        "Tag": "['Patch']",
        "fix_commit_hash": "e42131e8e4ecc550df087a5f2cdb8f9fef458123",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Shopify/quilt",
        "CVE_ID": "CVE-2020-8176",
        "Problem_Type": "CWE-79",
        "Description": "A cross-site scripting vulnerability exists in koa-shopify-auth v3.1.61-v3.1.62 that allows an attacker to inject JS payloads into the `shop` parameter on the `/shopify/auth/enable_cookies` endpoint.",
        "URL": "https://github.com/Shopify/quilt/pull/1455",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dec36405a80ebc686138c3504c372fb9578b2b93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "shy2850/node-server",
        "CVE_ID": "CVE-2017-16038",
        "Problem_Type": "CWE-22",
        "Description": "`f2e-server` 1.12.11 and earlier is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url. This is compounded by `f2e-server` requiring elevated privileges to run.",
        "URL": "https://github.com/shy2850/node-server/pull/12/files",
        "Tag": "['Patch']",
        "fix_commit_hash": "956675190e1bdf86722c4b26181781c3b0403a90",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Significant-Gravitas/Auto-GPT",
        "CVE_ID": "CVE-2023-37273",
        "Problem_Type": "CWE-94",
        "Description": "Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. Running Auto-GPT version prior to 0.4.3 by cloning the git repo and executing `docker compose run auto-gpt` in the repo root uses a different docker-compose.yml file from the one suggested in the official docker set up instructions. The docker-compose.yml file located in the repo root mounts itself into the docker container without write protection. This means that if malicious custom python code is executed via the `execute_python_file` and `execute_python_code` commands, it can overwrite the docker-compose.yml file and abuse it to gain control of the host system the next time Auto-GPT is started. The issue has been patched in version 0.4.3.",
        "URL": "https://github.com/Significant-Gravitas/Auto-GPT/pull/4761",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "321edc5e3db0e801430d51aacfa0c343883ee52d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "silverstripe/silverstripe-graphql",
        "CVE_ID": "CVE-2023-28104",
        "Problem_Type": "CWE-770",
        "Description": "`silverstripe/graphql` serves Silverstripe data as GraphQL representations. In versions 4.2.2 and 4.1.1, an attacker could use a specially crafted graphql query to execute a denial of service attack against a website which has a publicly exposed graphql endpoint. This mostly affects websites with particularly large/complex graphql schemas. Users should upgrade to `silverstripe/graphql` 4.2.3 or 4.1.2 to remedy the vulnerability.",
        "URL": "https://github.com/silverstripe/silverstripe-graphql/pull/526",
        "Tag": "['Patch']",
        "fix_commit_hash": "1d360f246a74884efdbd1f08bb45c583bdf61a2a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "SimonWaldherr/zplgfa",
        "CVE_ID": "CVE-2023-36307",
        "Problem_Type": "CWE-129",
        "Description": "ZPLGFA 1.1.1 allows attackers to cause a panic (because of an integer index out of range during a ConvertToGraphicField call) via an image of zero width. NOTE: it is unclear whether there are common use cases in which this panic could have any security consequence",
        "URL": "https://github.com/SimonWaldherr/zplgfa/pull/6",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0d018ffa921cd2460b80f766b7969fbe63678fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sinatra/sinatra",
        "CVE_ID": "CVE-2022-29970",
        "Problem_Type": "CWE-22",
        "Description": "Sinatra before 2.2.0 does not validate that the expanded path matches public_dir when serving static files.",
        "URL": "https://github.com/sinatra/sinatra/pull/1683/commits/462c3ca1db53ed3cfc394cf5948e9c948ad1c10e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "462c3ca1db53ed3cfc394cf5948e9c948ad1c10e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sisimai/rb-sisimai",
        "CVE_ID": "CVE-2022-4891",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability has been found in Sisimai up to 4.25.14p11 and classified as problematic. This vulnerability affects the function to_plain of the file lib/sisimai/string.rb. The manipulation leads to inefficient regular expression complexity. The exploit has been disclosed to the public and may be used. Upgrading to version 4.25.14p12 is able to address this issue. The name of the patch is 51fe2e6521c9c02b421b383943dc9e4bbbe65d4e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218452.",
        "URL": "https://github.com/sisimai/rb-sisimai/pull/244",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e720273b470b0757930836377345ee5803ddedf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "skoranga/node-connection-tester",
        "CVE_ID": "CVE-2020-7781",
        "Problem_Type": "CWE-78",
        "Description": "This affects the package connection-tester before 0.2.1. The injection point is located in line 15 in index.js. The following PoC demonstrates the vulnerability:",
        "URL": "https://github.com/skoranga/node-connection-tester/pull/10",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "291933f27364816a34ae72b820098fb11f4a1326",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sleuthkit/sleuthkit",
        "CVE_ID": "CVE-2018-19497",
        "Problem_Type": "CWE-125",
        "Description": "In The Sleuth Kit (TSK) through 4.6.4, hfs_cat_traverse in tsk/fs/hfs.c does not properly determine when a key length is too large, which allows attackers to cause a denial of service (SEGV on unknown address with READ memory access in a tsk_getu16 call in hfs_dir_open_meta_cb in tsk/fs/hfs_dent.c).",
        "URL": "https://github.com/sleuthkit/sleuthkit/pull/1374",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bc04aa017c0bd297de8a3b7fc40ffc6ddddbb95d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "snaptec/openWB",
        "CVE_ID": "CVE-2023-30261",
        "Problem_Type": "CWE-78",
        "Description": "Command Injection vulnerability in OpenWB 1.6 and 1.7 allows remote attackers to run arbitrary commands via crafted GET request.",
        "URL": "https://github.com/snaptec/openWB/pull/2673",
        "Tag": "['Patch']",
        "fix_commit_hash": "859aa6e8dbc0aacbebc58e4cecc9c5596a33c0e9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "snowflakedb/gosnowflake",
        "CVE_ID": "CVE-2023-34231",
        "Problem_Type": "CWE-77",
        "Description": "gosnowflake is th Snowflake Golang driver. Prior to version 1.6.19, a command injection vulnerability exists in the Snowflake Golang driver via single sign-on (SSO) browser URL authentication. In order to exploit the potential for command injection, an attacker would need to be successful in (1) establishing a malicious resource and (2) redirecting users to utilize the resource. The attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the user\u00c2\u2019s local machine would render the malicious payload, leading to a remote code execution. This attack scenario can be mitigated through URL whitelisting as well as common anti-phishing resources. A patch is available in version 1.6.19.",
        "URL": "https://github.com/snowflakedb/gosnowflake/pull/757",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "e11a2a555f1b9f7adc1f01fb7b5e7f38fbbb2a1c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openshift/origin",
        "CVE_ID": "CVE-2016-2160",
        "Problem_Type": "CWE-264",
        "Description": "Red Hat OpenShift Enterprise 3.2 and OpenShift Origin allow remote authenticated users to execute commands with root privileges by changing the root password in an sti builder image.",
        "URL": "https://github.com/openshift/origin/pull/7864",
        "Tag": "['Patch']",
        "fix_commit_hash": "2d0350c84150d88be4d1ac181694366832a55709",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openSUSE/libsolv",
        "CVE_ID": "CVE-2018-20533",
        "Problem_Type": "CWE-476",
        "Description": "There is a NULL pointer dereference at ext/testcase.c (function testcase_str2dep_complex) in libsolvext.a in libsolv through 0.7.2 that will cause a denial of service.",
        "URL": "https://github.com/openSUSE/libsolv/pull/291",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4830af9d979d3685de538b80fbeba51ad590525e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "orchest/orchest",
        "CVE_ID": "CVE-2022-39268",
        "Problem_Type": "CWE-352",
        "Description": "### Impact In a CSRF attack, an innocent end user is tricked by an attacker into submitting a web request that they did not intend. This may cause actions to be performed on the website that can include inadvertent client or server data leakage, change of session state, or manipulation of an end user's account. ### Patch Upgrade to v2022.09.10 to patch this vulnerability. ### Workarounds Rebuild and redeploy the Orchest `auth-server` with this commit: https://github.com/orchest/orchest/commit/c2587a963cca742c4a2503bce4cfb4161bf64c2d ### References https://en.wikipedia.org/wiki/Cross-site_request_forgery https://cwe.mitre.org/data/definitions/352.html ### For more information If you have any questions or comments about this advisory: * Open an issue in https://github.com/orchest/orchest * Email us at rick@orchest.io",
        "URL": "https://github.com/orchest/orchest/pull/1324",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3692eadcf0de10fbaae04ae31aa28bb16b1df386",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "osmlab/show-me-the-way",
        "CVE_ID": "CVE-2018-25064",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in OSM Lab show-me-the-way. It has been rated as problematic. This issue affects some unknown processing of the file js/site.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. The patch is named 4bed3b34dcc01fe6661f39c0e5d2285b340f7cac. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217439.",
        "URL": "https://github.com/osmlab/show-me-the-way/pull/57",
        "Tag": "['Patch']",
        "fix_commit_hash": "950f337f1062b3670eca833808c4ca1724468b58",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "padrino/padrino-contrib",
        "CVE_ID": "CVE-2019-16145",
        "Problem_Type": "CWE-79",
        "Description": "The breadcrumbs contributed module through 0.2.0 for Padrino Framework allows XSS via a caption.",
        "URL": "https://github.com/padrino/padrino-contrib/pull/35",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "662616162265a74da5a35b55c10f85d8168fc635",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2021-39193",
        "Problem_Type": "CWE-1284",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.",
        "URL": "https://github.com/paritytech/frontier/pull/465",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pendulum-project/ntpd-rs",
        "CVE_ID": "CVE-2023-33192",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "ntpd-rs is an NTP implementation written in Rust. ntpd-rs does not validate the length of NTS cookies in received NTP packets to the server. An attacker can crash the server by sending a specially crafted NTP packet containing a cookie shorter than what the server expects. The server also crashes when it is not configured to handle NTS packets. The issue was caused by improper slice indexing. The indexing operations were replaced by safer alternatives that do not crash the ntpd-rs server process but instead properly handle the error condition. A patch was released in version 0.3.3.",
        "URL": "https://github.com/pendulum-project/ntpd-rs/pull/752",
        "Tag": "['Patch']",
        "fix_commit_hash": "7e292a3bff891a79c93188249fd9ae423abfd46b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "phpMussel/phpMussel",
        "CVE_ID": "CVE-2020-4043",
        "Problem_Type": "CWE-502",
        "Description": "phpMussel from versions 1.0.0 and less than 1.6.0 has an unserialization vulnerability in PHP's phar wrapper. Uploading a specially crafted file to an affected version allows arbitrary code execution (discovered, tested, and confirmed by myself), so the risk factor should be regarded as very high. Newer phpMussel versions don't use PHP's phar wrapper, and are therefore unaffected. This has been fixed in version 1.6.0.",
        "URL": "https://github.com/phpMussel/phpMussel/pull/173",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "97f25973433921c1f953430f32d3081adc4851a4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pi-hole/AdminLTE",
        "CVE_ID": "CVE-2020-8816",
        "Problem_Type": "CWE-78",
        "Description": "Pi-hole Web v4.3.2 (aka AdminLTE) allows Remote Code Execution by privileged dashboard users via a crafted DHCP static lease.",
        "URL": "https://github.com/pi-hole/AdminLTE/pull/1165",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62f2ffc8394ac67880424644246eff8697b8e7e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pimcore/perspective-editor",
        "CVE_ID": "CVE-2023-28850",
        "Problem_Type": "CWE-79",
        "Description": "Pimcore Perspective Editor provides an editor for Pimcore that allows users to add/remove/edit custom views and perspectives. This vulnerability has the potential to steal a user's cookie and gain unauthorized access to that user's account through the stolen cookie or redirect users to other malicious sites. Version 1.5.1 has a patch. As a workaround, one may apply the patch manually.",
        "URL": "https://github.com/pimcore/perspective-editor/pull/121.patch",
        "Tag": "['Mailing List', 'Patch']",
        "fix_commit_hash": "16979055c684ff3321cf0945d11a1b0ee1e4b8d2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "plataformatec/devise",
        "CVE_ID": "CVE-2019-16109",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in Plataformatec Devise before 4.7.1. It confirms accounts upon receiving a request with a blank confirmation_token, if a database record has a blank value in the confirmation_token column. (However, there is no scenario within Devise itself in which such database records would exist.)",
        "URL": "https://github.com/plataformatec/devise/pull/5132",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fee43f3c11e176c53c5c3bfda7fd2e97c4c912be",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "playframework/playframework",
        "CVE_ID": "CVE-2022-31023",
        "Problem_Type": "CWE-209",
        "Description": "Play Framework is a web framework for Java and Scala. Verions prior to 2.8.16 are vulnerable to generation of error messages containing sensitive information. Play Framework, when run in dev mode, shows verbose errors for easy debugging, including an exception stack trace. Play does this by configuring its `DefaultHttpErrorHandler` to do so based on the application mode. In its Scala API Play also provides a static object `DefaultHttpErrorHandler` that is configured to always show verbose errors. This is used as a default value in some Play APIs, so it is possible to inadvertently use this version in production. It is also possible to improperly configure the `DefaultHttpErrorHandler` object instance as the injected error handler. Both of these situations could result in verbose errors displaying to users in a production application, which could expose sensitive information from the application. In particular, the constructor for `CORSFilter` and `apply` method for `CORSActionBuilder` use the static object `DefaultHttpErrorHandler` as a default value. This is patched in Play Framework 2.8.16. The `DefaultHttpErrorHandler` object has been changed to use the prod-mode behavior, and `DevHttpErrorHandler` has been introduced for the dev-mode behavior. A workaround is available. When constructing a `CORSFilter` or `CORSActionBuilder`, ensure that a properly-configured error handler is passed. Generally this should be done by using the `HttpErrorHandler` instance provided through dependency injection or through Play's `BuiltInComponents`. Ensure that the application is not using the `DefaultHttpErrorHandler` static object in any code that may be run in production.",
        "URL": "https://github.com/playframework/playframework/pull/11305",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "296784bbbc28277f47ca8b91b366bda5f6f0fd04",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PreMiD/PreMiD",
        "CVE_ID": "CVE-2021-46701",
        "Problem_Type": "CWE-346",
        "Description": "PreMiD 2.2.0 allows unintended access via the websocket transport. An attacker can receive events from a socket and emit events to a socket, potentially interfering with a victim's \"now playing\" status on Discord.",
        "URL": "https://github.com/PreMiD/PreMiD/pull/791",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0f3af215e2b7a307e9b179ea9f5c83fb651b004a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2018-19125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "PrestaShop 1.6.x before 1.6.1.23 and 1.7.x before 1.7.4.4 allows remote attackers to delete an image directory.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/11285",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "76619b513cb9698bc42a1a769a183c02e67be381",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "progfay/scrapbox-parser",
        "CVE_ID": "CVE-2021-27405",
        "Problem_Type": "CWE-400",
        "Description": "A ReDoS (regular expression denial of service) flaw was found in the @progfay/scrapbox-parser package before 6.0.3 for Node.js.",
        "URL": "https://github.com/progfay/scrapbox-parser/pull/540",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "95a7deb299ff12b0501ee72c7772f82fcf1511df",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "projectcalico/calico",
        "CVE_ID": "CVE-2023-41378",
        "Problem_Type": "CWE-755",
        "Description": "In certain conditions for Calico Typha (v3.26.2, v3.25.1 and below), and Calico Enterprise Typha (v3.17.1, v3.16.3, v3.15.3 and below), a client TLS handshake can block the Calico Typha server indefinitely, resulting in denial of service. The TLS Handshake() call is performed inside the main server handle for loop without any timeout allowing an unclean TLS handshake to block the main loop indefinitely while other connections will be idle waiting for that handshake to finish.\n",
        "URL": "https://github.com/projectcalico/calico/pull/7993",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2ebc1f92ecc39332cf1d55ba676d9101af24982f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "protobuf-c/protobuf-c",
        "CVE_ID": "CVE-2022-48468",
        "Problem_Type": "CWE-190",
        "Description": "protobuf-c before 1.4.1 has an unsigned integer overflow in parse_required_member.",
        "URL": "https://github.com/protobuf-c/protobuf-c/pull/513",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ec3d900001a13ccdaa8aef996b34c61159c76217",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "psf/requests",
        "CVE_ID": "CVE-2022-24719",
        "Problem_Type": "CWE-212",
        "Description": "Fluture-Node is a FP-style HTTP and streaming utils for Node based on Fluture. Using `followRedirects` or `followRedirectsWith` with any of the redirection strategies built into fluture-node 4.0.0 or 4.0.1, paired with a request that includes confidential headers such as Authorization or Cookie, exposes you to a vulnerability where, if the destination server were to redirect the request to a server on a third-party domain, or the same domain over unencrypted HTTP, the headers would be included in the follow-up request and be exposed to the third party, or potential http traffic sniffing. The redirection strategies made available in version 4.0.2 automatically redact confidential headers when a redirect is followed across to another origin. A workaround has been identified by using a custom redirection strategy via the `followRedirectsWith` function. The custom strategy can be based on the new strategies available in fluture-node@4.0.2.",
        "URL": "https://github.com/psf/requests/pull/4718",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c45d7c49ea75133e52ab22a8e9e13173938e36ff",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "Pylons/waitress",
        "CVE_ID": "CVE-2022-31015",
        "Problem_Type": "CWE-362",
        "Description": "Waitress is a Web Server Gateway Interface server for Python 2 and 3. Waitress versions 2.1.0 and 2.1.1 may terminate early due to a thread closing a socket while the main thread is about to call select(). This will lead to the main thread raising an exception that is not handled and then causing the entire application to be killed. This issue has been fixed in Waitress 2.1.2 by no longer allowing the WSGI thread to close the socket. Instead, that is always delegated to the main thread. There is no work-around for this issue. However, users using waitress behind a reverse proxy server are less likely to have issues if the reverse proxy always reads the full response.",
        "URL": "https://github.com/Pylons/waitress/pull/377",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4f6789b035610e0552738cdc4b35ca809a592d48",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pypa/pip",
        "CVE_ID": "CVE-2014-8991",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "pip 1.3 through 1.5.6 allows local users to cause a denial of service (prevention of package installation) by creating a /tmp/pip-build-* file for another user.",
        "URL": "https://github.com/pypa/pip/pull/2122",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "043fe9f5700315d97f83609c1f59deece8f1b901",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2016-4009",
        "Problem_Type": "CWE-119",
        "Description": "Integer overflow in the ImagingResampleHorizontal function in libImaging/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.",
        "URL": "https://github.com/python-pillow/Pillow/pull/1714",
        "Tag": "['Patch']",
        "fix_commit_hash": "1723dc2d0709d4e3e65333dfcabcfddd25c0f83e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-10177",
        "Problem_Type": "CWE-125",
        "Description": "Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4538",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "41b554bc56982ee4f30238a7677c0f4ff90a73a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-10994",
        "Problem_Type": "CWE-125",
        "Description": "In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4505",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "ff60894d697d1992147b791101ad53a8bf1352e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2021-28678",
        "Problem_Type": "CWE-345",
        "Description": "An issue was discovered in Pillow before 8.2.0. For BLP data, BlpImagePlugin did not properly check that reads (after jumping to file offsets) returned data. This could lead to a DoS where the decoder could be run a large number of times on empty data.",
        "URL": "https://github.com/python-pillow/Pillow/pull/5377",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ee635befc6497f1c6c4fdb58c232e62d922ec8b7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python/cpython",
        "CVE_ID": "CVE-2019-9636",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by: Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is: Information disclosure (credentials, cookies, etc. that are cached against a given hostname). The components are: urllib.parse.urlsplit, urllib.parse.urlparse. The attack vector is: A specially crafted URL could be incorrectly parsed to locate cookies or authentication data and send that information to a different host than when parsed correctly. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
        "URL": "https://github.com/python/cpython/pull/12201",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "16e6f7dee7f02bb81aa6b385b982dcdda5b99286",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rabbitmq/rabbitmq-server",
        "CVE_ID": "CVE-2021-32719",
        "Problem_Type": "CWE-79",
        "Description": "RabbitMQ is a multi-protocol messaging broker. In rabbitmq-server prior to version 3.8.18, when a federation link was displayed in the RabbitMQ management UI via the `rabbitmq_federation_management` plugin, its consumer tag was rendered without proper <script> tag sanitization. This potentially allows for JavaScript code execution in the context of the page. The user must be signed in and have elevated permissions (manage federation upstreams and policies) for this to occur. The vulnerability is patched in RabbitMQ 3.8.18. As a workaround, disable the `rabbitmq_federation_management` plugin and use [CLI tools](https://www.rabbitmq.com/cli.html) instead.",
        "URL": "https://github.com/rabbitmq/rabbitmq-server/pull/3122",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f01f0f2d840b98128cdb7ff966d8234b06ef7c75",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "randombit/botan",
        "CVE_ID": "CVE-2021-40529",
        "Problem_Type": "CWE-327",
        "Description": "The ElGamal implementation in Botan through 2.18.1, as used in Thunderbird and other products, allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
        "URL": "https://github.com/randombit/botan/pull/2790",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1df7edc8676e7e219cf3edb324aaeee7904ab22b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7351",
        "Problem_Type": "CWE-78",
        "Description": "An OS Command Injection vulnerability in the endpoint_devicemap.php component of Fonality Trixbox Community Edition allows an attacker to execute commands on the underlying operating system as the \"asterisk\" user. Note that Trixbox Community Edition has been unsupported by the vendor since 2012. This issue affects: Fonality Trixbox Community Edition, versions 1.2.0 through 2.8.0.4. Versions 1.0 and 1.1 are unaffected.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13353",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d2b196f17257e419468ad3d743f5a9c013c8852e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7357",
        "Problem_Type": "CWE-78",
        "Description": "Cayin CMS suffers from an authenticated OS semi-blind command injection vulnerability using default credentials. This can be exploited to inject and execute arbitrary shell commands as the root user through the 'NTP_Server_IP' HTTP POST parameter in system.cgi page. This issue affects several branches and versions of the CMS application, including CME-SE, CMS-60, CMS-40, CMS-20, and CMS version 8.2, 8.0, and 7.5.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/13607",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "db4006e9f66c2397d20770e14d7e8cf881f4dfc2",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7384",
        "Problem_Type": "CWE-77",
        "Description": "Rapid7's Metasploit msfvenom framework handles APK files in a way that allows for a malicious user to craft and publish a file that would execute arbitrary commands on a victim's machine.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14288",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9d1642c9879cb4b126412f4de558d2bc5ca4154e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2021-29133",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Lack of verification in haserl, a component of Alpine Linux Configuration Framework, before 0.9.36 allows local users to read the contents of any file on the filesystem.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14833",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "943698ef199674c118dc2a64359ae14b0fa8c8be",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-3229",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Because the web management interface for Unified Intents' Unified Remote solution does not itself require authentication, a remote, unauthenticated attacker can change or disable authentication requirements for the Unified Remote protocol, and leverage this now-unauthenticated access to run code of the attacker's choosing.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16989",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "4943d86ec619f9c7073c5fb4cd120933c00900d3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-3569",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Due to an issue with incorrect sudo permissions, Zimbra Collaboration Suite (ZCS) suffers from a local privilege escalation issue in versions 9.0.0 and prior, where the 'zimbra' user can effectively coerce postfix into running arbitrary commands as 'root'.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/17141",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c43272985e4688e3ddc92340e419f44b9182dd3e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "reactphp/http",
        "CVE_ID": "CVE-2022-36032",
        "Problem_Type": "CWE-20",
        "Description": "ReactPHP HTTP is a streaming HTTP client and server implementation for ReactPHP. In ReactPHP's HTTP server component versions starting with 0.7.0 and prior to 1.7.0, when ReactPHP is processing incoming HTTP cookie values, the cookie names are url-decoded. This may lead to cookies with prefixes like `__Host-` and `__Secure-` confused with cookies that decode to such prefix, thus leading to an attacker being able to forge cookie which is supposed to be secure. This issue is fixed in ReactPHP HTTP version 1.7.0. As a workaround, Infrastructure or DevOps can place a reverse proxy in front of the ReactPHP HTTP server to filter out any unexpected `Cookie` request headers.",
        "URL": "https://github.com/reactphp/http/pull/175",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bb4b14a3fab2636616119eb8b4175aaf98ba62ae",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "redpanda-data/redpanda",
        "CVE_ID": "CVE-2023-24619",
        "Problem_Type": "CWE-522",
        "Description": "Redpanda before 22.3.12 discloses cleartext AWS credentials. The import functionality in the rpk binary logs an AWS Access Key ID and Secret in cleartext to standard output, allowing a local user to view the key in the console, or in Kubernetes logs if stdout output is collected. The fixed versions are 22.3.12, 22.2.10, and 22.1.12.",
        "URL": "https://github.com/redpanda-data/redpanda/pull/8339",
        "Tag": "['Exploit', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": "2279fc759990da31a52cde9493b1ec7f5acba096",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ReFirmLabs/binwalk",
        "CVE_ID": "CVE-2021-4287",
        "Problem_Type": "CWE-59",
        "Description": "A vulnerability, which was classified as problematic, was found in ReFirm Labs binwalk up to 2.3.2. Affected is an unknown function of the file src/binwalk/modules/extractor.py of the component Archive Extraction Handler. The manipulation leads to symlink following. It is possible to launch the attack remotely. Upgrading to version 2.3.3 is able to address this issue. The name of the patch is fa0c0bd59b8588814756942fe4cb5452e76c1dcd. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216876.",
        "URL": "https://github.com/ReFirmLabs/binwalk/pull/556",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fa0c0bd59b8588814756942fe4cb5452e76c1dcd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "resiprocate/resiprocate",
        "CVE_ID": "CVE-2017-11521",
        "Problem_Type": "CWE-400",
        "Description": "The SdpContents::Session::Medium::parse function in resip/stack/SdpContents.cxx in reSIProcate 1.10.2 allows remote attackers to cause a denial of service (memory consumption) by triggering many media connections.",
        "URL": "https://github.com/resiprocate/resiprocate/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "881cb0c80e23193ea2bdaf720de9b3310f52a0a6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2017-8289",
        "Problem_Type": "CWE-119",
        "Description": "Stack-based buffer overflow in the ipv6_addr_from_str function in sys/net/network_layer/ipv6/addr/ipv6_addr_from_str.c in RIOT prior to 2017-04-25 allows local attackers, and potentially remote attackers, to cause a denial of service or possibly have unspecified other impact via a malformed IPv6 address.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/6961",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "92fe84214967012e951f7aee5bcee9977c426eef",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2020-15350",
        "Problem_Type": "CWE-119",
        "Description": "RIOT 2020.04 has a buffer overflow in the base64 decoder. The decoding function base64_decode() uses an output buffer estimation function to compute the required buffer capacity and validate against the provided buffer size. The base64_estimate_decode_size() function calculates the expected decoded size with an arithmetic round-off error and does not take into account possible padding bytes. Due to this underestimation, it may be possible to craft base64 input that causes a buffer overflow.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/14400",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "339e3faf21099640d31d170007b5f1accf4b56de",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24821",
        "Problem_Type": "CWE-787",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a large out of bounds write beyond the packet buffer. The write will create a hard fault exception after reaching the last page of RAM. The hard fault is not handled and the system will be stuck until reset, thus the impact is denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/9728f727e75d7d78dbfb5918e0de1b938b7b6d2c",
        "Tag": "['Patch']",
        "fix_commit_hash": "9728f727e75d7d78dbfb5918e0de1b938b7b6d2c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-33974",
        "Problem_Type": "CWE-362",
        "Description": "RIOT-OS, an operating system for Internet of Things (IoT) devices, contains a network stack with the ability to process 6LoWPAN frames. In versions 2023.01 and prior, an attacker can send multiple crafted frames to the device to trigger a race condition. The race condition invalidates assumptions about the program state and leads to an invalid memory access resulting in denial of service. This issue is patched in pull request 19679. There are no known workarounds.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/19679",
        "Tag": "['Patch']",
        "fix_commit_hash": "00b5bc12a219e4076418e59aaa2457acb6eb7f08",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ROBOTIS-GIT/DynamixelSDK",
        "CVE_ID": "CVE-2019-15786",
        "Problem_Type": "CWE-119",
        "Description": "ROBOTIS Dynamixel SDK through 3.7.11 has a buffer overflow via a large rxpacket.",
        "URL": "https://github.com/ROBOTIS-GIT/DynamixelSDK/pull/339",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "40ae1530c01e0ed5f101442e45b46686ac05f819",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rohe/pysaml2",
        "CVE_ID": "CVE-2016-10149",
        "Problem_Type": "CWE-611",
        "Description": "XML External Entity (XXE) vulnerability in PySAML2 4.4.0 and earlier allows remote attackers to read arbitrary files via a crafted SAML XML request or response.",
        "URL": "https://github.com/rohe/pysaml2/pull/379",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c2b0529efce45b94209da938c89ebdf0a79748d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rsyslog/rsyslog",
        "CVE_ID": "CVE-2019-17040",
        "Problem_Type": "CWE-125",
        "Description": "contrib/pmdb2diag/pmdb2diag.c in Rsyslog v8.1908.0 allows out-of-bounds access because the level length is mishandled.",
        "URL": "https://github.com/rsyslog/rsyslog/pull/3875",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "03efebf299436b3bb334e7048be9b4bad4ad834b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rubygems/rubygems",
        "CVE_ID": "CVE-2021-43809",
        "Problem_Type": "CWE-88",
        "Description": "`Bundler` is a package for managing application dependencies in Ruby. In `bundler` versions before 2.2.33, when working with untrusted and apparently harmless `Gemfile`'s, it is not expected that they lead to execution of external code, unless that's explicit in the ruby code inside the `Gemfile` itself. However, if the `Gemfile` includes `gem` entries that use the `git` option with invalid, but seemingly harmless, values with a leading dash, this can be false. To handle dependencies that come from a Git repository instead of a registry, Bundler uses various commands, such as `git clone`. These commands are being constructed using user input (e.g. the repository URL). When building the commands, Bundler versions before 2.2.33 correctly avoid Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (`-`) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables. Since this value comes from the `Gemfile` file, it can contain any character, including a leading dash.\n\nTo exploit this vulnerability, an attacker has to craft a directory containing a `Gemfile` file that declares a dependency that is located in a Git repository. This dependency has to have a Git URL in the form of `-u./payload`. This URL will be used to construct a Git clone command but will be interpreted as the upload-pack argument. Then this directory needs to be shared with the victim, who then needs to run a command that evaluates the Gemfile, such as `bundle lock`, inside.\n\nThis vulnerability can lead to Arbitrary Code Execution, which could potentially lead to the takeover of the system. However, the exploitability is very low, because it requires a lot of user interaction. Bundler 2.2.33 has patched this problem by inserting `--` as an argument before any positional arguments to those Git commands that were affected by this issue. Regardless of whether users can upgrade or not, they should review any untrustred `Gemfile`'s before running any `bundler` commands that may read them, since they can contain arbitrary ruby code.",
        "URL": "https://github.com/rubygems/rubygems/pull/5142",
        "Tag": "['Patch']",
        "fix_commit_hash": "6a655a698e952f897d0d014fc11bae4b608528ce",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/cargo",
        "CVE_ID": "CVE-2023-40030",
        "Problem_Type": "CWE-79",
        "Description": "Cargo downloads a Rust project\u00c2\u2019s dependencies and compiles the project. Starting in Rust 1.60.0 and prior to 1.72, Cargo did not escape Cargo feature names when including them in the report generated by `cargo build --timings`. A malicious package included as a dependency may inject nearly arbitrary HTML here, potentially leading to cross-site scripting if the report is subsequently uploaded somewhere. The vulnerability affects users relying on dependencies from git, local paths, or alternative registries. Users who solely depend on crates.io are unaffected.\n\nRust 1.60.0 introduced `cargo build --timings`, which produces a report of how long the different steps of the build process took. It includes lists of Cargo features for each crate. Prior to Rust 1.72, Cargo feature names were allowed to contain almost any characters (with some exceptions as used by the feature syntax), but it would produce a future incompatibility warning about them since Rust 1.49. crates.io is far more stringent about what it considers a valid feature name and has not allowed such feature names. As the feature names were included unescaped in the timings report, they could be used to inject Javascript into the page, for example with a feature name like `features = [\"<img src='' onerror=alert(0)\"]`. If this report were subsequently uploaded to a domain that uses credentials, the injected Javascript could access resources from the website visitor.\n\nThis issue was fixed in Rust 1.72 by turning the future incompatibility warning into an error. Users should still exercise care in which package they download, by only including trusted dependencies in their projects. Please note that even with these vulnerabilities fixed, by design Cargo allows arbitrary code execution at build time thanks to build scripts and procedural macros: a malicious dependency will be able to cause damage regardless of these vulnerabilities. crates.io has server-side checks preventing this attack, and there are no packages on crates.io exploiting these vulnerabilities. crates.io users still need to excercise care in choosing their dependencies though, as remote code execution is allowed by design there as well.",
        "URL": "https://github.com/rust-lang/cargo/pull/12291",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "dead4b8740c4b6a8ed5211e37c99cf81d01c3b1c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2020-36318",
        "Problem_Type": "CWE-415",
        "Description": "In the standard library in Rust before 1.49.0, VecDeque::make_contiguous has a bug that pops the same element more than once under certain condition. This bug could result in a use-after-free or double free.",
        "URL": "https://github.com/rust-lang/rust/pull/79814",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d32c320d7eee56706486fef6be778495303afe9e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-28875",
        "Problem_Type": "CWE-252",
        "Description": "In the standard library in Rust before 1.50.0, read_to_end() does not validate the return value from Read in an unsafe context. This bug could lead to a buffer overflow.",
        "URL": "https://github.com/rust-lang/rust/pull/80895",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ce48709405270cae2dfdf99d9a8d57a4f672ad34",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-28879",
        "Problem_Type": "CWE-190",
        "Description": "In the standard library in Rust before 1.52.0, the Zip implementation can report an incorrect size due to an integer overflow. This bug can lead to a buffer overflow when a consumed Zip iterator is used again.",
        "URL": "https://github.com/rust-lang/rust/pull/82289",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ee796c65233e24f76c6867bb393416608364500f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rustsec/advisory-db",
        "CVE_ID": "CVE-2023-46277",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "please (aka pleaser) through 0.5.4 allows privilege escalation through the TIOCSTI and/or TIOCLINUX ioctl. (If both TIOCSTI and TIOCLINUX are disabled, this cannot be exploited.)",
        "URL": "https://github.com/rustsec/advisory-db/pull/1798",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "59c41cbaa6afedde2671c46fc88e57aac8b6d336",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "saltstack/salt",
        "CVE_ID": "CVE-2017-12791",
        "Problem_Type": "CWE-22",
        "Description": "Directory traversal vulnerability in minion id validation in SaltStack Salt before 2016.11.7 and 2017.7.x before 2017.7.1 allows remote minions with incorrect credentials to authenticate to a master via a crafted minion ID.",
        "URL": "https://github.com/saltstack/salt/pull/42944",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6366e05d0d70bd709cc4233c3faf32a759d0173a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "saltstack/salt",
        "CVE_ID": "CVE-2019-1010259",
        "Problem_Type": "CWE-89",
        "Description": "SaltStack Salt 2018.3, 2019.2 is affected by: SQL Injection. The impact is: An attacker could escalate privileges on MySQL server deployed by cloud provider. It leads to RCE. The component is: The mysql.user_chpass function from the MySQL module for Salt. The attack vector is: specially crafted password string. The fixed version is: 2018.3.4.",
        "URL": "https://github.com/saltstack/salt/pull/51462",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a05305dce35f22ba89dbd96acf4deee95a96a4c3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "scala/scala",
        "CVE_ID": "CVE-2017-15288",
        "Problem_Type": "CWE-732",
        "Description": "The compilation daemon in Scala before 2.10.7, 2.11.x before 2.11.12, and 2.12.x before 2.12.4 uses weak permissions for private files in /tmp/scala-devel/${USER:shared}/scalac-compile-server-port, which allows local users to write to arbitrary class files and consequently gain privileges.",
        "URL": "https://github.com/scala/scala/pull/6120",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "67fcf5ce4496000574676d81ed72e4a6cb9e7757",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sddm/sddm",
        "CVE_ID": "CVE-2014-7272",
        "Problem_Type": "CWE-264",
        "Description": "Simple Desktop Display Manager (SDDM) before 0.10.0 allows local users to gain root privileges because code running as root performs write operations within a user home directory, and this user may have created links in advance (exploitation requires the user to win a race condition in the ~/.Xauthority chown case, but not other cases).",
        "URL": "https://github.com/sddm/sddm/pull/280",
        "Tag": "['Patch']",
        "fix_commit_hash": "412462d1884c53fd5131e8c1c986c489b7cac38b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "secdev/scapy",
        "CVE_ID": "CVE-2019-1010142",
        "Problem_Type": "CWE-835",
        "Description": "scapy 2.4.0 is affected by: Denial of Service. The impact is: infinite loop, resource consumption and program unresponsive. The component is: _RADIUSAttrPacketListField.getfield(self..). The attack vector is: over the network or in a pcap. both work.",
        "URL": "https://github.com/secdev/scapy/pull/1409",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "905c80d6ed435477224c53de8850f763b04d495d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "shadow-maint/shadow",
        "CVE_ID": "CVE-2019-19882",
        "Problem_Type": "CWE-732",
        "Description": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
        "URL": "https://github.com/shadow-maint/shadow/pull/199",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1ec36eabb2cd45d1380463e44a3697a78bf42a9a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "shyiko/ktlint",
        "CVE_ID": "CVE-2019-1010260",
        "Problem_Type": "CWE-319",
        "Description": "Using ktlint to download and execute custom rulesets can result in arbitrary code execution as the served jars can be compromised by a MITM. This attack is exploitable via Man in the Middle of the HTTP connection to the artifact servers. This vulnerability appears to have been fixed in 0.30.0 and later; after commit 5e547b287d6c260d328a2cb658dbe6b7a7ff2261.",
        "URL": "https://github.com/shyiko/ktlint/pull/332",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5e547b287d6c260d328a2cb658dbe6b7a7ff2261",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "SimbCo/httpster",
        "CVE_ID": "CVE-2020-36629",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability classified as critical was found in SimbCo httpster. This vulnerability affects the function fs.realpathSync of the file src/server.coffee. The manipulation leads to path traversal. The exploit has been disclosed to the public and may be used. The name of the patch is d3055b3e30b40b65d30c5a06d6e053dffa7f35d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216748.",
        "URL": "https://github.com/SimbCo/httpster/pull/36",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d3055b3e30b40b65d30c5a06d6e053dffa7f35d0",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sitefusion/server",
        "CVE_ID": "CVE-2016-15023",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability, which was classified as problematic, was found in SiteFusion Application Server up to 6.6.6. This affects an unknown part of the file getextension.php of the component Extension Handler. The manipulation leads to path traversal. Upgrading to version 6.6.7 is able to address this issue. The identifier of the patch is 49fff155c303d6cd06ce8f97bba56c9084bf08ac. It is recommended to upgrade the affected component. The identifier VDB-219765 was assigned to this vulnerability.",
        "URL": "https://github.com/sitefusion/server/pull/67",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "405de453f29739b7a4a01a9fd1c690da24d5adf5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "SLMNBJ/selectize-plugin-a11y",
        "CVE_ID": "CVE-2019-15482",
        "Problem_Type": "CWE-79",
        "Description": "selectize-plugin-a11y before 1.1.0 has XSS via the msg field.",
        "URL": "https://github.com/SLMNBJ/selectize-plugin-a11y/pull/9",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "927d81e9ea86acac1724d57b2ce9f3c962fd34c4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OpenSlides/OpenSlides",
        "CVE_ID": "CVE-2020-26280",
        "Problem_Type": "CWE-79",
        "Description": "OpenSlides is a free, Web-based presentation and assembly system for managing and projecting agenda, motions, and elections of assemblies. OpenSlides version 3.2, due to unsufficient user input validation and escaping, it is vulnerable to persistant cross-site scripting (XSS). In the web applications users can enter rich text in various places, e.g. for personal notes or in motions. These fields can be used to store arbitrary JavaScript Code that will be executed when other users read the respective text. An attacker could utilize this vulnerability be used to manipulate votes of other users, hijack the moderators session or simply disturb the meeting. The vulnerability was introduced with 6eae497abeab234418dfbd9d299e831eff86ed45 on 16.04.2020, which is first included in the 3.2 release. It has been patched in version 3.3 ( in commit f3809fc8a97ee305d721662a75f788f9e9d21938, merged in master on 20.11.2020).",
        "URL": "https://github.com/OpenSlides/OpenSlides/pull/5714",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "26e414e3d1d10d48156bbcc51ead88c748b745de",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openSUSE/travel-support-program",
        "CVE_ID": "CVE-2022-46163",
        "Problem_Type": "CWE-89",
        "Description": "Travel support program is a rails app to support the travel support program of openSUSE (TSP). Sensitive user data (bank account details, password Hash) can be extracted via Ransack query injection. Every deployment of travel-support-program below the patched version is affected. The travel-support-program uses the Ransack library to implement search functionality. In its default configuration, Ransack will allow for query conditions based on properties of associated database objects [1]. The `*_start`, `*_end` or `*_cont` search matchers [2] can then be abused to exfiltrate sensitive string values of associated database objects via character-by-character brute-force (A match is indicated by the returned JSON not being empty). A single bank account number can be extracted with <200 requests, a password hash can be extracted with ~1200 requests, all within a few minutes. The problem has been patched in commit d22916275c51500b4004933ff1b0a69bc807b2b7. In order to work around this issue, you can also cherry pick that patch, however it will not work without the Rails 5.0 migration that was done in #150, which in turn had quite a few pull requests it depended on.",
        "URL": "https://github.com/openSUSE/travel-support-program/pull/158",
        "Tag": "['Patch']",
        "fix_commit_hash": "78d212dd9a47e210ba39c3f624f40944e6e46935",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "OriginProtocol/origin-website",
        "CVE_ID": "CVE-2022-24864",
        "Problem_Type": "CWE-79",
        "Description": "Origin Protocol is a blockchain based project. The Origin Protocol project website allows for malicious users to inject malicious Javascript via a POST request to `/presale/join`. User-controlled data is passed with no sanitization to SendGrid and injected into an email that is delivered to the founders@originprotocol.com. If the email recipient is using an email program that is susceptible to XSS, then that email recipient will receive an email that may contain malicious XSS. Regardless if the email recipient\u00c2\u2019s mail program has vulnerabilities or not, the hacker can at the very least inject malicious HTML that modifies the body content of the email. There are currently no known workarounds.",
        "URL": "https://github.com/OriginProtocol/origin-website/pull/617",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c583526b557dbcc548865acc241a5105cf689c1a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pallets/jinja",
        "CVE_ID": "CVE-2020-28493",
        "Problem_Type": "CWE-400",
        "Description": "This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",
        "URL": "https://github.com/pallets/jinja/pull/1343",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "15ef8f09b659f9100610583938005a7a10472d4d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "percona/percona-xtrabackup",
        "CVE_ID": "CVE-2016-6225",
        "Problem_Type": "CWE-326",
        "Description": "xbcrypt in Percona XtraBackup before 2.3.6 and 2.4.x before 2.4.5 does not properly set the initialization vector (IV) for encryption, which makes it easier for context-dependent attackers to obtain sensitive information from encrypted backup files via a Chosen-Plaintext attack. NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-6394.",
        "URL": "https://github.com/percona/percona-xtrabackup/pull/266",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "04936ee6eaacf1ff35e7cf386f381da3d91c618d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "phpseclib/phpseclib",
        "CVE_ID": "CVE-2021-30130",
        "Problem_Type": "CWE-347",
        "Description": "phpseclib before 2.0.31 and 3.x before 3.0.7 mishandles RSA PKCS#1 v1.5 signature verification.",
        "URL": "https://github.com/phpseclib/phpseclib/pull/1635",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "05550b9c490bf342bce66de75d127d2f75c48bdd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2018-19124",
        "Problem_Type": "CWE-22",
        "Description": "PrestaShop 1.6.x before 1.6.1.23 and 1.7.x before 1.7.4.4 on Windows allows remote attackers to write to arbitrary image files.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/11285",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "76619b513cb9698bc42a1a769a183c02e67be381",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "progfay/scrapbox-parser",
        "CVE_ID": "CVE-2021-27405",
        "Problem_Type": "CWE-400",
        "Description": "A ReDoS (regular expression denial of service) flaw was found in the @progfay/scrapbox-parser package before 6.0.3 for Node.js.",
        "URL": "https://github.com/progfay/scrapbox-parser/pull/519",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "47e170661732eb8207b192494aeccaca0cf5f1d7",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2016-9190",
        "Problem_Type": "CWE-284",
        "Description": "Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the \"crafted image file\" approach, related to an \"Insecure Sign Extension\" issue affecting the ImagingNew in Storage.c component.",
        "URL": "https://github.com/python-pillow/Pillow/pull/2146/commits/5d8a0be45aad78c5a22c8d099118ee26ef8144af",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d8a0be45aad78c5a22c8d099118ee26ef8144af",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-11538",
        "Problem_Type": "CWE-125",
        "Description": "In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4504",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2ef59fdbaeb756bc512ab3f2ad15ac45665b303d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2020-7385",
        "Problem_Type": "CWE-502",
        "Description": "By launching the drb_remote_codeexec exploit, a Metasploit Framework user will inadvertently expose Metasploit to the same deserialization issue that is exploited by that module, due to the reliance on the vulnerable Distributed Ruby class functions. Since Metasploit Framework typically runs with elevated privileges, this can lead to a system compromise on the Metasploit workstation. Note that an attacker would have to lie in wait and entice the Metasploit user to run the affected module against a malicious endpoint in a \"hack-back\" type of attack. Metasploit is only vulnerable when the drb_remote_codeexec module is running. In most cases, this cannot happen automatically.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/14300",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "294269bd4eea7b1afe1efd9052f60cb496066f75",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2022-34877",
        "Problem_Type": "CWE-89",
        "Description": "SQL Injection vulnerability in AST Agent Time Sheet interface ((/vicidial/AST_agent_time_sheet.php) of VICIdial via the agent parameter allows attacker to spoof identity, tamper with existing data, allow the complete disclosure of all data on the system, destroy the data or make it otherwise unavailable, and become administrators of the database server. This issue affects: VICIdial 2.14b0.5 versions prior to 3555.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/16732",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "12f3325f3e84e33bfdeac60218524a800f324632",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "redpanda-data/redpanda",
        "CVE_ID": "CVE-2023-50976",
        "Problem_Type": "CWE-862",
        "Description": "Redpanda before 23.1.21 and 23.2.x before 23.2.18 has missing authorization checks in the Transactions API.",
        "URL": "https://github.com/redpanda-data/redpanda/pull/14969",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "892c79d46e18a0ac35780c343909a143b0faf4a3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "reportportal/service-api",
        "CVE_ID": "CVE-2021-29620",
        "Problem_Type": "CWE-611",
        "Description": "Report portal is an open source reporting and analysis framework. Starting from version 3.1.0 of the service-api XML parsing was introduced. Unfortunately the XML parser was not configured properly to prevent XML external entity (XXE) attacks. This allows a user to import a specifically-crafted XML file which imports external Document Type Definition (DTD) file with external entities for extraction of secrets from Report Portal service-api module or server-side request forgery. This will be resolved in the 5.4.0 release.",
        "URL": "https://github.com/reportportal/service-api/pull/1392",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a73e0dfb4eda844c37139df1f9847013d55f084e",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2019-16754",
        "Problem_Type": "CWE-476",
        "Description": "RIOT 2019.07 contains a NULL pointer dereference in the MQTT-SN implementation (asymcute), potentially allowing an attacker to crash a network node running RIOT. This requires spoofing an MQTT server response. To do so, the attacker needs to know the MQTT MsgID of a pending MQTT protocol message and the ephemeral port used by RIOT's MQTT implementation. Additionally, the server IP address is required for spoofing the packet.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/12293",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "71680a6265ac868787fbde2adc70e5cf41650332",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "RIOT-OS/RIOT",
        "CVE_ID": "CVE-2023-24822",
        "Problem_Type": "CWE-476",
        "Description": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference while encoding a 6LoWPAN IPHC header. The NULL pointer dereference causes a hard fault exception, leading to denial of service. Version 2022.10 fixes this issue. As a workaround, apply the patches manually.",
        "URL": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/639c04325de4ceb9d444955f4927bfae95843a39",
        "Tag": "['Patch']",
        "fix_commit_hash": "639c04325de4ceb9d444955f4927bfae95843a39",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rootless-containers/rootlesskit",
        "CVE_ID": "CVE-2021-20199",
        "Problem_Type": "CWE-346",
        "Description": "Rootless containers run with Podman, receive all traffic with a source IP address of 127.0.0.1 (including from remote hosts). This impacts containerized applications that trust localhost (127.0.01) connections by default and do not require authentication. This issue affects Podman 1.8.0 onwards.",
        "URL": "https://github.com/rootless-containers/rootlesskit/pull/206",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d41416ded8a2122e810d9c69c501df18d0c68e8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rsyslog/rsyslog",
        "CVE_ID": "CVE-2019-17042",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in Rsyslog v8.1908.0. contrib/pmcisconames/pmcisconames.c has a heap overflow in the parser for Cisco log messages. The parser tries to locate a log message delimiter (in this case, a space or a colon), but fails to account for strings that do not satisfy this constraint. If the string does not match, then the variable lenMsg will reach the value zero and will skip the sanity check that detects invalid log messages. The message will then be considered valid, and the parser will eat up the nonexistent colon delimiter. In doing so, it will decrement lenMsg, a signed integer, whose value was zero and now becomes minus one. The following step in the parser is to shift left the contents of the message. To do this, it will call memmove with the right pointers to the target and destination strings, but the lenMsg will now be interpreted as a huge value, causing a heap overflow.",
        "URL": "https://github.com/rsyslog/rsyslog/pull/3883",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7092b225f17774325a891cb2e74fa12034e92104",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rubysec/ruby-advisory-db",
        "CVE_ID": "CVE-2020-10187",
        "Problem_Type": "CWE-862",
        "Description": "Doorkeeper version 5.0.0 and later contains an information disclosure vulnerability that allows an attacker to retrieve the client secret only intended for the OAuth application owner. After authorizing the application and allowing access, the attacker simply needs to request the list of their authorized applications in a JSON format (usually GET /oauth/authorized_applications.json). An application is vulnerable if the authorized applications controller is enabled.",
        "URL": "https://github.com/rubysec/ruby-advisory-db/pull/446",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a3968b68f8f59d9eac8dc269e22321366c312a47",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2020-36323",
        "Problem_Type": "CWE-134",
        "Description": "In the standard library in Rust before 1.52.0, there is an optimization for joining strings that can cause uninitialized bytes to be exposed (or the program to crash) if the borrowed string changes after its length is checked.",
        "URL": "https://github.com/rust-lang/rust/pull/81728#issuecomment-821549174",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5208f63ba8ec70a2a7a074d7ecd59a94693286fc",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-31162",
        "Problem_Type": "CWE-415",
        "Description": "In the standard library in Rust before 1.52.0, a double free can occur in the Vec::from_iter function if freeing the element panics.",
        "URL": "https://github.com/rust-lang/rust/pull/83629",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f97769a2b7bc5a6b3d8f7140613cf26352f2b518",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "scala/scala",
        "CVE_ID": "CVE-2022-36944",
        "Problem_Type": "CWE-502",
        "Description": "Scala 2.13.x before 2.13.9 has a Java deserialization chain in its JAR file. On its own, it cannot be exploited. There is only a risk in conjunction with Java object deserialization within an application. In such situations, it allows attackers to erase contents of arbitrary files, make network connections, or possibly run arbitrary code (specifically, Function0 functions) via a gadget chain.",
        "URL": "https://github.com/scala/scala/pull/10118",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3a124138843ef06594aa955800ba83d7c8ac2b84",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sehmaschine/django-grappelli",
        "CVE_ID": "CVE-2021-46898",
        "Problem_Type": "CWE-601",
        "Description": "views/switch.py in django-grappelli (aka Django Grappelli) before 2.15.2 attempts to prevent external redirection with startswith(\"/\") but this does not consider a protocol-relative URL (e.g., //example.com) attack.",
        "URL": "https://github.com/sehmaschine/django-grappelli/pull/976",
        "Tag": "['Patch']",
        "fix_commit_hash": "ac35b747b927899c5c3a0f8ed042caa4eaaff1d9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "shamaton/msgpack",
        "CVE_ID": "CVE-2022-41719",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Unmarshal can panic on some inputs, possibly allowing for denial of service attacks.",
        "URL": "https://github.com/shamaton/msgpack/pull/32",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01ee57d9d63a659e59a6257f8dc4cf94ae27b6cf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "PrestaShop/PrestaShop",
        "CVE_ID": "CVE-2018-19126",
        "Problem_Type": "CWE-434",
        "Description": "PrestaShop 1.6.x before 1.6.1.23 and 1.7.x before 1.7.4.4 allows remote attackers to execute arbitrary code via a file upload.",
        "URL": "https://github.com/PrestaShop/PrestaShop/pull/11285",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "76619b513cb9698bc42a1a769a183c02e67be381",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2020-10379",
        "Problem_Type": "CWE-120",
        "Description": "In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c.",
        "URL": "https://github.com/python-pillow/Pillow/pull/4538",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "41b554bc56982ee4f30238a7677c0f4ff90a73a8",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rapid7/metasploit-framework",
        "CVE_ID": "CVE-2023-0669",
        "Problem_Type": "CWE-502",
        "Description": "Fortra (formerly, HelpSystems) GoAnywhere MFT suffers from a pre-authentication command injection vulnerability in the License Response Servlet due to deserializing an arbitrary attacker-controlled object. This issue was patched in version 7.1.2.",
        "URL": "https://github.com/rapid7/metasploit-framework/pull/17607",
        "Tag": "['Patch']",
        "fix_commit_hash": "c997952d838fc704847e9d4527a0f8b4e8dee26f",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "rust-lang/rust",
        "CVE_ID": "CVE-2021-28877",
        "Problem_Type": "CWE-119",
        "Description": "In the standard library in Rust before 1.51.0, the Zip implementation calls __iterator_get_unchecked() for the same index more than once when nested. This bug can lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.",
        "URL": "https://github.com/rust-lang/rust/pull/80670",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d8843d9d82950eeb27bdce496f6179b085549d29",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "python-pillow/Pillow",
        "CVE_ID": "CVE-2022-45199",
        "Problem_Type": "CWE-400",
        "Description": "Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.",
        "URL": "https://github.com/python-pillow/Pillow/pull/6700",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2444cddab2f83f28687c7c20871574acbb6dbcf3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "chbrown/rfc6902",
        "CVE_ID": "CVE-2021-4245",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability classified as problematic has been found in chbrown rfc6902. This affects an unknown part of the file pointer.ts. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The exploit has been disclosed to the public and may be used. The name of the patch is c006ce9faa43d31edb34924f1df7b79c137096cf. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215883.",
        "URL": "https://github.com/chbrown/rfc6902/pull/76",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c006ce9faa43d31edb34924f1df7b79c137096cf",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "curl/curl",
        "CVE_ID": "CVE-2018-1000005",
        "Problem_Type": "CWE-125",
        "Description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
        "URL": "https://github.com/curl/curl/pull/2231",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fa3dbb9a147488a2943bda809c66fc497efe06cb",
        "inducing_commit_hash_pyszz": [
            "15cb03ad846a10c4aa4889d46804389ad11cdc1d"
        ],
        "inducing_commit_hash_pd": [
            "984d1e9e23a6cfa1ef6c233c681d82b0c018c493"
        ],
        "matched": [
            "15cb03ad846a10c4aa4889d46804389ad11cdc1d"
        ]
    },
    {
        "repo_name": "Flask-Middleware/flask-security",
        "CVE_ID": "CVE-2021-21241",
        "Problem_Type": "CWE-352",
        "Description": "The Python \"Flask-Security-Too\" package is used for adding security features to your Flask application. It is an is a independently maintained version of Flask-Security based on the 3.0.0 version of Flask-Security. In Flask-Security-Too from version 3.3.0 and before version 3.4.5, the /login and /change endpoints can return the authenticated user's authentication token in response to a GET request. Since GET requests aren't protected with a CSRF token, this could lead to a malicious 3rd party site acquiring the authentication token. Version 3.4.5 and version 4.0.0 are patched. As a workaround, if you aren't using authentication tokens - you can set the SECURITY_TOKEN_MAX_AGE to \"0\" (seconds) which should make the token unusable.",
        "URL": "https://github.com/Flask-Middleware/flask-security/pull/422",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2020-36567",
        "Problem_Type": "CWE-116",
        "Description": "Unsanitized input in the default logger in github.com/gin-gonic/gin before v1.6.0 allows remote attackers to inject arbitrary log lines.",
        "URL": "https://github.com/gin-gonic/gin/pull/2237",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-36188",
        "Problem_Type": "CWE-74",
        "Description": "An issue in langchain v.0.0.64 allows a remote attacker to execute arbitrary code via the PALChain parameter in the Python exec method.",
        "URL": "https://github.com/hwchase17/langchain/pull/6003",
        "Tag": "['Patch']",
        "fix_commit_hash": "e294ba475a355feb95003ed8f1a2b99942509a9e",
        "inducing_commit_hash_pyszz": [
            "485ecc35805f9d8cf97ca32cdb751e862adad37f"
        ],
        "inducing_commit_hash_pd": [
            "485ecc35805f9d8cf97ca32cdb751e862adad37f",
            "36aa7f30e4294a9ca8db1293e38a89409930a5ef",
            "d3ec00b5664798be74daa9bdc28ae7c2c86ee22e",
            "1b9b8efbc9ad6736c58f1decf3c8cbc1a16d4a1f"
        ],
        "matched": [
            "485ecc35805f9d8cf97ca32cdb751e862adad37f"
        ]
    },
    {
        "repo_name": "hwchase17/langchain",
        "CVE_ID": "CVE-2023-38896",
        "Problem_Type": "CWE-74",
        "Description": "An issue in Harrison Chase langchain v.0.0.194 and before allows a remote attacker to execute arbitrary code via the from_math_prompt and from_colored_object_prompt functions.",
        "URL": "https://github.com/hwchase17/langchain/pull/6003",
        "Tag": "['Patch']",
        "fix_commit_hash": "e294ba475a355feb95003ed8f1a2b99942509a9e",
        "inducing_commit_hash_pyszz": [
            "485ecc35805f9d8cf97ca32cdb751e862adad37f"
        ],
        "inducing_commit_hash_pd": [
            "485ecc35805f9d8cf97ca32cdb751e862adad37f",
            "36aa7f30e4294a9ca8db1293e38a89409930a5ef",
            "d3ec00b5664798be74daa9bdc28ae7c2c86ee22e",
            "1b9b8efbc9ad6736c58f1decf3c8cbc1a16d4a1f"
        ],
        "matched": [
            "485ecc35805f9d8cf97ca32cdb751e862adad37f"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2015-8898",
        "Problem_Type": "CWE-476",
        "Description": "The WriteImages function in magick/constitute.c in ImageMagick before 6.9.2-4 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image file.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/34",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b4bebaa91849c592a8448bc353ab25a54ff8c44",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed852eea50f9d4cd633efb8c2b054b8e33c2530"
        ],
        "matched": [
            "3ed852eea50f9d4cd633efb8c2b054b8e33c2530"
        ]
    },
    {
        "repo_name": "ImageMagick/ImageMagick",
        "CVE_ID": "CVE-2016-7540",
        "Problem_Type": "CWE-19",
        "Description": "coders/rgf.c in ImageMagick before 6.9.4-10 allows remote attackers to cause a denial of service (assertion failure) by converting an image to rgf format.",
        "URL": "https://github.com/ImageMagick/ImageMagick/pull/223",
        "Tag": "['Issue Tracking', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "intridea/omniauth-oauth2",
        "CVE_ID": "CVE-2012-6134",
        "Problem_Type": "CWE-352",
        "Description": "Cross-site request forgery (CSRF) vulnerability in the omniauth-oauth2 gem 1.1.1 and earlier for Ruby allows remote attackers to hijack the authentication of users for requests that modify session state.",
        "URL": "https://github.com/intridea/omniauth-oauth2/pull/25",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "451f7ecad175e3f91a890a6b363b39889e727b68",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "ipython/ipython",
        "CVE_ID": "CVE-2014-3429",
        "Problem_Type": "CWE-94",
        "Description": "IPython Notebook 0.12 through 1.x before 1.2 does not validate the origin of websocket requests, which allows remote attackers to execute arbitrary code by leveraging knowledge of the kernel id and a crafted page.",
        "URL": "https://github.com/ipython/ipython/pull/4845",
        "Tag": "['Patch', 'Issue Tracking']",
        "fix_commit_hash": "e5b669ce4750d628dba383fd637dbde918ea15f5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "libuv/libuv",
        "CVE_ID": "CVE-2014-9748",
        "Problem_Type": "CWE-362",
        "Description": "The uv_rwlock_t fallback implementation for Windows XP and Server 2003 in libuv before 1.7.4 does not properly prevent threads from releasing the locks of other threads, which allows attackers to cause a denial of service (deadlock) or possibly have unspecified other impact by leveraging a race condition.",
        "URL": "https://github.com/libuv/libuv/pull/516",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3eb6764acd2d708f6873c177a77f9bef3b266fa9",
        "inducing_commit_hash_pyszz": [
            "1fc1f28093cc584205b456d1f1210df63e1aaa3b"
        ],
        "inducing_commit_hash_pd": [
            "1fc1f28093cc584205b456d1f1210df63e1aaa3b",
            "3ee4d3f183331a123ce35edd0d32268a2bb22aa5"
        ],
        "matched": [
            "1fc1f28093cc584205b456d1f1210df63e1aaa3b"
        ]
    },
    {
        "repo_name": "LuaJIT/LuaJIT",
        "CVE_ID": "CVE-2019-19391",
        "Problem_Type": "CWE-843",
        "Description": "In LuaJIT through 2.0.5, as used in Moonjit before 2.1.2 and other products, debug.getinfo has a type confusion issue that leads to arbitrary memory write or read operations, because certain cases involving valid stack levels and > options are mishandled. NOTE: The LuaJIT project owner states that the debug libary is unsafe by definition and that this is not a vulnerability. When LuaJIT was originally developed, the expectation was that the entire debug library had no security guarantees and thus it made no sense to assign CVEs. However, not all users of later LuaJIT derivatives share this perspective",
        "URL": "https://github.com/LuaJIT/LuaJIT/pull/526",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "madler/zlib",
        "CVE_ID": "CVE-2023-45853",
        "Problem_Type": "CWE-190",
        "Description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "URL": "https://github.com/madler/zlib/pull/843",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "73331a6a0481067628f065ffe87bb1d8f787d10c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "matrix-org/matrix-spec-proposals",
        "CVE_ID": "CVE-2022-39236",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Matrix Javascript SDK is the Matrix Client-Server SDK for JavaScript. Starting with version 17.1.0-rc.1, improperly formed beacon events can disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer. This is patched in matrix-js-sdk v19.7.0. Redacting applicable events, waiting for the sync processor to store data, and restarting the client are possible workarounds. Alternatively, redacting the applicable events and clearing all storage will fix the further perceived issues. Downgrading to an unaffected version, noting that such a version may be subject to other vulnerabilities, will additionally resolve the issue.",
        "URL": "https://github.com/matrix-org/matrix-spec-proposals/pull/3488",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "mscdex/dicer",
        "CVE_ID": "CVE-2022-24434",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
        "URL": "https://github.com/mscdex/dicer/pull/22",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "nodejs/node",
        "CVE_ID": "CVE-2022-29244",
        "Problem_Type": "CWE-200",
        "Description": "npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.",
        "URL": "https://github.com/nodejs/node/pull/43210",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6375b13de86d0e993e0e2798ce77c5812598b953",
        "inducing_commit_hash_pyszz": [
            "229a182823aa5e60ee5420170ec11e9a541f2163"
        ],
        "inducing_commit_hash_pd": [
            "69ffb3e77f3b75dec6ec18a1090e5349b78c03c6",
            "306a57d33191d171bc148c0d06254730b6faa28e",
            "1f287b04a20a9c69987703ff341d9c1085018238",
            "8d381c0ff0e1cc8e2aa64e202a514f0022264907",
            "5fdcfb33d776f8848f4cda0430cf3e0019d1746c",
            "d7d321b071789f08c65dbb11a0e4b3b6a299af44",
            "ce300d6f768c74ab639722bb88b806f8cd7d7add",
            "0f5aedb4a8ee1da78fd4ce2472d88d4a58875ac5",
            "ace4fe566fc3af4876c7458f983feeb5eae3df26",
            "d5088d8dbbcf1cdc32e15a37e132a43e95dece2f",
            "43dd49c9782848c25e5b03448c8a0f923f13c158",
            "2d84620f867cfc18be1a50f4e5f076dd79ba22e4",
            "54c1a09202e68517d826104bad3e8e787d358197",
            "2e545249557c265f7d5f338cc3a382985211603c",
            "c0d858f8bb8ba5212548da2fba6a7bc02db0462b",
            "468ab4519e1b92473acefb22801497a1af6aebae",
            "73b3e06c910549a7fd3c8f49324ab14e0adf2c8d",
            "dc05c70c8f9a84f88e5dd78471082ac1a86099d4",
            "94405650aebbb16dde6fcc215e1ba912ced0111d",
            "3c0672e3f676a3053f6426a025c5cc2f8356fff7",
            "63503a4f72067959b02f88f17a1ef333a1b6daed",
            "b323cec78f713bc113be7f6030d787804a9af5a0",
            "248f4c376444d0202f1d08f039c59485d6aea2e9",
            "78f5685acc8fa574c32ed60d07de6273c60639b9",
            "aa0e4eb27f922017d7a05f41b483e57188dbd3e7",
            "65234bbce024dec9d5490b17137abe381a979a28",
            "7e6e5937019e58a2c93d62d2727187a96eff170a",
            "4b97c3addb246274cd7e8432edd537e0bdf60b63",
            "a7c7c703aff362f06ef5d49451a0f79fd289910f",
            "76d85a82ea606ffa58bb34e13fc312e3004224db",
            "b89d4090e7d3a87c4b8e1114541cfd925c68ca04",
            "5a3c41133085a074b4e974b110276c0e450cf0c9",
            "c58cea5a163cd5d7133e00fdf257325ce3807c09",
            "c975dff3c0f0f1ecb1574f3b10dd1d135a7704db",
            "1b8300b238923822ea0934b196e3a9e97e0a0893",
            "7809c4ff809b4575a99db34f0a0018d4db5e1510",
            "af7caf8d4746ca527f7fee97b0dea18c026538d0",
            "06dd8c31fd7e736f1d0e57d8ae4a41227661bbc3",
            "8a03482cf1d43df915456cfb067bbb757558ce35",
            "5d9fd768f050b38e1ddd4c9a965fe7344e1f5a04",
            "6e1629786fe16058e0f12bc1613fae7734bff9b0",
            "d3b1c971bcf0177b17c649c3aeca1a94cbc3fff5",
            "c0d5f4b3d7a50703c7ededf1d6b1440cb37325ad",
            "ffa1f84009bd481e9c3c49028048fe672dbb01a0",
            "f3d3769f9f6da29fb562f25074cda6c86a0366df"
        ],
        "matched": [
            "229a182823aa5e60ee5420170ec11e9a541f2163"
        ]
    },
    {
        "repo_name": "nothings/stb",
        "CVE_ID": "CVE-2023-43898",
        "Problem_Type": "CWE-476",
        "Description": "Nothings stb 2.28 was discovered to contain a Null Pointer Dereference via the function stbi__convert_format. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted pic file.",
        "URL": "https://github.com/nothings/stb/pull/1454",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "omniauth/omniauth",
        "CVE_ID": "CVE-2015-9284",
        "Problem_Type": "CWE-352",
        "Description": "The request phase of the OmniAuth Ruby gem (1.9.1 and earlier) is vulnerable to Cross-Site Request Forgery when used as part of the Ruby on Rails framework, allowing accounts to be connected without user intent, user interaction, or feedback to the user. This permits a secondary account to be able to sign into the web application as the primary account.",
        "URL": "https://github.com/omniauth/omniauth/pull/809",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openvswitch/ovs",
        "CVE_ID": "CVE-2022-4337",
        "Problem_Type": "CWE-125",
        "Description": "An out-of-bounds read in Organization Specific TLV was found in various versions of OpenvSwitch.",
        "URL": "https://github.com/openvswitch/ovs/pull/405",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7490f281f09a8455c48e19b0cf1b99ab758ee4f4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "openvswitch/ovs",
        "CVE_ID": "CVE-2022-4338",
        "Problem_Type": "CWE-125",
        "Description": "An integer underflow in Organization Specific TLV was found in various versions of OpenvSwitch.",
        "URL": "https://github.com/openvswitch/ovs/pull/405",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7490f281f09a8455c48e19b0cf1b99ab758ee4f4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "pallets-eco/flask-caching",
        "CVE_ID": "CVE-2021-33026",
        "Problem_Type": "CWE-502",
        "Description": "The Flask-Caching extension through 1.10.1 for Flask relies on Pickle for serialization, which may lead to remote code execution or local privilege escalation. If an attacker gains access to cache storage (e.g., filesystem, Memcached, Redis, etc.), they can construct a crafted payload, poison the cache, and execute Python code. NOTE: a third party indicates that exploitation is extremely unlikely unless the machine is already compromised; in other cases, the attacker would be unable to write their payload to the cache and generate the required collision",
        "URL": "https://github.com/pallets-eco/flask-caching/pull/209#issuecomment-1136397937",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "projectcontour/contour",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/projectcontour/contour/pull/5826",
        "Tag": "['Issue Tracking', 'Patch', 'Vendor Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "request/request",
        "CVE_ID": "CVE-2023-28155",
        "Problem_Type": "CWE-918",
        "Description": "The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/request/request/pull/3444",
        "Tag": "['Patch']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "sh4nks/flask-caching",
        "CVE_ID": "CVE-2021-33026",
        "Problem_Type": "CWE-502",
        "Description": "The Flask-Caching extension through 1.10.1 for Flask relies on Pickle for serialization, which may lead to remote code execution or local privilege escalation. If an attacker gains access to cache storage (e.g., filesystem, Memcached, Redis, etc.), they can construct a crafted payload, poison the cache, and execute Python code. NOTE: a third party indicates that exploitation is extremely unlikely unless the machine is already compromised; in other cases, the attacker would be unable to write their payload to the cache and generate the required collision",
        "URL": "https://github.com/sh4nks/flask-caching/pull/209",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "svenfuchs/i18n",
        "CVE_ID": "CVE-2014-10077",
        "Problem_Type": "CWE-20",
        "Description": "Hash#slice in lib/i18n/core_ext/hash.rb in the i18n gem before 0.8.0 for Ruby allows remote attackers to cause a denial of service (application crash) via a call in a situation where :some_key is present in keep_keys but not present in the hash.",
        "URL": "https://github.com/svenfuchs/i18n/pull/289",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9c8b24031abe12d9024e69eccda76ea8061976ba",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "torvalds/linux",
        "CVE_ID": "CVE-2017-14156",
        "Problem_Type": "CWE-200",
        "Description": "The atyfb_ioctl function in drivers/video/fbdev/aty/atyfb_base.c in the Linux kernel through 4.12.10 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory by reading locations associated with padding bytes.",
        "URL": "https://github.com/torvalds/linux/pull/441",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "trusteddomainproject/OpenDMARC",
        "CVE_ID": "CVE-2019-16378",
        "Problem_Type": "CWE-290",
        "Description": "OpenDMARC through 1.3.2 and 1.4.x through 1.4.0-Beta1 is prone to a signature-bypass vulnerability with multiple From: addresses, which might affect applications that consider a domain name to be relevant to the origin of an e-mail message.",
        "URL": "https://github.com/trusteddomainproject/OpenDMARC/pull/48",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "vercel/next.js",
        "CVE_ID": "CVE-2021-43803",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue.",
        "URL": "https://github.com/vercel/next.js/pull/32080",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6d98b4fb4315dec1badecf0e9bdc212a4272b264",
        "inducing_commit_hash_pyszz": [
            "1c199a5e4a158685007c006820e6eaec94796528"
        ],
        "inducing_commit_hash_pd": [
            "b2d1d87e7feed5535a05ec99d7558934dcbc82a5",
            "5959f184312c3693099165bf8f781f14cb6206a7",
            "44e40d4f55f47cf5836f6b322c49911948f8da68",
            "75c721c5837453705cbc5b437cbe15a447c431d1",
            "c8e8cb5e52e07fd87696a2761830bbf43a50f7ee",
            "59281adef30a8f55e258127314bff94a50b17c4d",
            "bbc1a21c749c423e842586ab116889c9f9c7024e",
            "cfa9326c63d1c139eb25ca86ccadfb74a2c31cde",
            "fe77397f269112e6ee244376a2aff5a0421982cb",
            "4ab41efdbfd082497d3f851a138e091ebea5b810",
            "1bc9b1ac02ec771a5b36ddeb9b0a978eff81fd4a",
            "3417164c1db8e968e255e35efb5685edb02b8a1c",
            "e65c56e7e6c16c3c971984ce7acd161bca6b9c2f",
            "6b89fbf12d50f6ed7fc696d5ded48a52af98bca8",
            "86808bbce295e46b1ff36100de8215fcaac01a00",
            "5b2c845e57ca3ba156901f8669465ea9761e0293",
            "5fc4325aa62b7e85b3b4707c20d4a8ce35ab9fee",
            "5544adc481f8821567e947a6e6d51d9d68ebd367",
            "1c199a5e4a158685007c006820e6eaec94796528",
            "40738c6e44ffd901be0935bbf865ed19499d7ece",
            "9a5a1525bc6b9b1aab4325bc1e15c156941a28bf",
            "d130f63c416b21adc67dc3c755ad6e1a707e2cc8",
            "fab345d952cbb5a924f1ae487ddb094dbc51cada",
            "eb0bd63af48ea9bec85670ad1bcbc455c5f879ec",
            "7cb68f7981b29305fb4ad52eccdbc858660acbe9",
            "53c245bf63c028d8f4bd994ca9eb4a2caf5c4dc1"
        ],
        "matched": [
            "1c199a5e4a158685007c006820e6eaec94796528"
        ]
    },
    {
        "repo_name": "mscdex/dicer",
        "CVE_ID": "CVE-2022-24434",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.",
        "URL": "https://github.com/mscdex/dicer/pull/22/commits/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": "-",
        "matched": "-"
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2021-44219",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gin-Vue-Admin before 2.4.6 mishandles a SQL database.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/811",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "da644038291a7b9fa36955db9b9d84217d75596d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    }
]