[
    {
        "repo_name": "1Panel-dev/1Panel",
        "CVE_ID": "CVE-2024-24768",
        "Problem_Type": "CWE-311",
        "Description": "1Panel is an open source Linux server operation and maintenance management panel. The HTTPS cookie that comes with the panel does not have the Secure keyword, which may cause the cookie to be sent in plain text if accessed using HTTP. This issue has been patched in version 1.9.6.\n\n",
        "URL": "https://github.com/1Panel-dev/1Panel/pull/3817",
        "Tag": "['Patch']",
        "fix_commit_hash": "1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
        "inducing_commit_hash_pyszz": [
            "10684f9aac872c9ab4b1be8829c891ba8674fd70"
        ],
        "inducing_commit_hash_pd": [
            "5342b758cb20cb0be49a800ff65442a2d86037a9",
            "10684f9aac872c9ab4b1be8829c891ba8674fd70"
        ],
        "matched": [
            "10684f9aac872c9ab4b1be8829c891ba8674fd70"
        ]
    },
    {
        "repo_name": "aaugustin/websockets",
        "CVE_ID": "CVE-2018-1000518",
        "Problem_Type": "CWE-400",
        "Description": "aaugustin websockets version 4 contains a CWE-409: Improper Handling of Highly Compressed Data (Data Amplification) vulnerability in Servers and clients, unless configured with compression=None that can result in Denial of Service by memory exhaustion. This attack appear to be exploitable via Sending a specially crafted frame on an established connection. This vulnerability appears to have been fixed in 5.",
        "URL": "https://github.com/aaugustin/websockets/pull/407",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b6a25ceb3555d0ba69e5961b8d7616e4c1aecb2b",
        "inducing_commit_hash_pyszz": [
            "f83362ef91a6ac2ea89fd8bda4d18ff22ffb7a40"
        ],
        "inducing_commit_hash_pd": [
            "09d443971b6b126eab55d6b961880c54dabdbcdd",
            "cb6f56e70a5e1a27a85e3ea4529a6e6fed223223",
            "f83362ef91a6ac2ea89fd8bda4d18ff22ffb7a40",
            "7e878e6d0e479b7df251aaa65c58922fb71e8a74",
            "2cf56e9af53d8a22ca320d817c657e9bc83dd27d",
            "1e81db7d07412bf521d4be99200b41169b5f4236"
        ],
        "matched": [
            "f83362ef91a6ac2ea89fd8bda4d18ff22ffb7a40"
        ]
    },
    {
        "repo_name": "abhinavsingh/proxy.py",
        "CVE_ID": "CVE-2021-3116",
        "Problem_Type": "CWE-697",
        "Description": "before_upstream_connection in AuthPlugin in http/proxy/auth.py in proxy.py before 2.3.1 accepts incorrect Proxy-Authorization header data because of a boolean confusion (and versus or).",
        "URL": "https://github.com/abhinavsingh/proxy.py/pull/482/commits/9b00093288237f5073c403f2c4f62acfdfa8ed46",
        "Tag": "['Patch']",
        "fix_commit_hash": "bff171ec26d826ae1d22d2466eaf9d8bdbf059d3",
        "inducing_commit_hash_pyszz": [
            "6d3135cab6d2897a10299eb95746f3ff70821c38"
        ],
        "inducing_commit_hash_pd": [
            "ea227b1cdf8befa5d1228ae17b20e715986e2a4c",
            "5bdfd20ce8289b9c2137791a1e10d7e1b5aa39f7",
            "c3cd9be816b2710775d792195bbeed6a898c721a",
            "5d4f73541537282c3dcea6b7c26972a3254cee49",
            "0744cd8e7fc6985f5ab5656685833b85a096ddf0",
            "c943dd7e27eaed3a72c144e9350cef6e1305fcfc",
            "c302537572065154b57df781b87f7c023fb19736",
            "4019e95850523ee53a392d04630c468113c8ba95",
            "e42cfefcf6eab9037fb6257871bef8d37ed1c0ac",
            "397f92e56173f5494a50af0b5537027a5b43f663",
            "b03629fa0df1595eb4995427bc601063be7fdca9",
            "dc560be6ea140ad3eb551922bab637e735200da4",
            "62012ed1814d47ca7489f800de882fa5e2788044",
            "93d8a55c0e39a7d8065dc814e84523277e055cb9",
            "e14548252ca60f754368587a605547be6fd001c6",
            "f3c1ce664edd985e6d480b87faf29747f16f8f5e",
            "8ba63b1821da69de2880b256bde4cb6ff3792185",
            "269484df2e89bc659124177d339d4fc59f280cba",
            "7f9385ed1cbcb2d9e53760ce0c9512cd67c0b19a",
            "e4ba6b16cd68c15c11d75e2da72907463422f9d9",
            "ab1198268c9e845eccaea56b20be32c39b14c2fe",
            "a1bb659488603aae67e43aa5de932284a690ac00",
            "31bd810b6510a2a342baefd696c67f48fbda9968",
            "ad42e0d74df4917b70c2cac3249e0133a3f197d2",
            "a9c8659ffa9ac5c28cb1a776dc625f1a058d26e5",
            "e23444b766aaff5a484deef636d887dcaa30d5e1",
            "807c93f253798433ec1b23f731b87b12f3bc701f",
            "439d58fdc26332496a43dcdc439440cfd1cc6293",
            "bb7006b67ac7b9a4c44417b05b1dea0c8942cc33",
            "ac29e34137203b7d9e1ca29870d329e6f5b0b945",
            "131e9366ac7890373c194718b4687e67ff61cfe5",
            "0cc4e5e625865d1f790059f8f57d9b79c98b73a8",
            "d0f696212e42ab66c627cb8f65130cfd9b438060",
            "91a6942e49a8e06c0d277fac868641c52f42e167",
            "033b7ad24a51c7084190405a983ec11572b5073a",
            "6d3135cab6d2897a10299eb95746f3ff70821c38",
            "f04845cd645e642b92a40ea5650fd805f4f9ad04",
            "9e950436a71140f6046adf483b8156639cd97bb4",
            "0e2194d683e739a6ebcc69f460bf6fed5c9f2fdd",
            "92142a70d98d01a9c1e3cbe987d0f4ce9a13edc3",
            "b7c4c5f17511dd610bd75c073ac08d8b7c7c2b53",
            "3d65366c7bb5be9558489d5c7170bf7f7cfd904b",
            "908c0b585525b9641958fd1664bb9047bb0f1bc5"
        ],
        "matched": [
            "6d3135cab6d2897a10299eb95746f3ff70821c38"
        ]
    },
    {
        "repo_name": "abodelot/jquery.json-viewer",
        "CVE_ID": "CVE-2022-30241",
        "Problem_Type": "CWE-79",
        "Description": "The jquery.json-viewer library through 1.4.0 for Node.js does not properly escape characters such as < in a JSON object, as demonstrated by a SCRIPT element.",
        "URL": "https://github.com/abodelot/jquery.json-viewer/pull/26",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe890813fc3980e60d5ba0f41834c8581b3e6361",
        "inducing_commit_hash_pyszz": [
            "1c700fa3e4a9e85202aa85807fd19f56da80c9af"
        ],
        "inducing_commit_hash_pd": [
            "1c700fa3e4a9e85202aa85807fd19f56da80c9af",
            "dd2db487f7ff1a7df2dd669b116a28908e3cd8e3"
        ],
        "matched": [
            "1c700fa3e4a9e85202aa85807fd19f56da80c9af"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2020-15306",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in OpenEXR before v2.5.2. Invalid chunkCount attributes could cause a heap buffer overflow in getChunkOffsetTableSize() in IlmImf/ImfMisc.cpp.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/738",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a9f8af6e89547bcd370ae3cec2b12849eee0b54",
        "inducing_commit_hash_pyszz": [
            "f580a0ba13dbead561e25dd89e9ce46df941b834"
        ],
        "inducing_commit_hash_pd": [
            "f580a0ba13dbead561e25dd89e9ce46df941b834",
            "6cf09aea90c21f95c651ba91bc617ea351bacfad",
            "9f011ae9ce9b1ca03521ff76e7659d34ee830344"
        ],
        "matched": [
            "f580a0ba13dbead561e25dd89e9ce46df941b834"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20298",
        "Problem_Type": "CWE-787",
        "Description": "A flaw was found in OpenEXR's B44Compressor. This flaw allows an attacker who can submit a crafted file to be processed by OpenEXR, to exhaust all memory accessible to the application. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/843",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "85fd638ae0d5fa132434f4cbf32590261c1dba97",
        "inducing_commit_hash_pyszz": [
            "e08946ade358313859a03fa367f647ef223a192c"
        ],
        "inducing_commit_hash_pd": [
            "e08946ade358313859a03fa367f647ef223a192c"
        ],
        "matched": [
            "e08946ade358313859a03fa367f647ef223a192c"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20300",
        "Problem_Type": "CWE-190",
        "Description": "A flaw was found in OpenEXR's hufUncompress functionality in OpenEXR/IlmImf/ImfHuf.cpp. This flaw allows an attacker who can submit a crafted file that is processed by OpenEXR, to trigger an integer overflow. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/836",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed560b8a932c78d5e8e5990ce36fe7808b35d9f0",
        "inducing_commit_hash_pyszz": [
            "801272c9bf8b84a66c62f1e8a4490ece81da6a56"
        ],
        "inducing_commit_hash_pd": [
            "801272c9bf8b84a66c62f1e8a4490ece81da6a56"
        ],
        "matched": [
            "801272c9bf8b84a66c62f1e8a4490ece81da6a56"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20302",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "A flaw was found in OpenEXR's TiledInputFile functionality. This flaw allows an attacker who can submit a crafted single-part non-image to be processed by OpenEXR, to trigger a floating-point exception error. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/842",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b6886cbd972ebe4be8f10e8a0dd50ddffc71c23",
        "inducing_commit_hash_pyszz": [
            "d80f11f4f55100d007ae80a162bf257ec291612c"
        ],
        "inducing_commit_hash_pd": [
            "d80f11f4f55100d007ae80a162bf257ec291612c",
            "9f011ae9ce9b1ca03521ff76e7659d34ee830344"
        ],
        "matched": [
            "d80f11f4f55100d007ae80a162bf257ec291612c"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20303",
        "Problem_Type": "CWE-190",
        "Description": "A flaw found in function dataWindowForTile() of IlmImf/ImfTiledMisc.cpp. An attacker who is able to submit a crafted file to be processed by OpenEXR could trigger an integer overflow, leading to an out-of-bounds write on the heap. The greatest impact of this flaw is to application availability, with some potential impact to data integrity as well.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/831",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31472b638bb2bd7020a3465d6e6ddffd564ae0ea",
        "inducing_commit_hash_pyszz": [
            "50e9b31cc1069a787458b368b64e6452f7541da1"
        ],
        "inducing_commit_hash_pd": [
            "50e9b31cc1069a787458b368b64e6452f7541da1",
            "5788a07609d3a24df80afa9d6e95d9c541da70e6"
        ],
        "matched": [
            "50e9b31cc1069a787458b368b64e6452f7541da1"
        ]
    },
    {
        "repo_name": "AcademySoftwareFoundation/openexr",
        "CVE_ID": "CVE-2021-20304",
        "Problem_Type": "CWE-190",
        "Description": "A flaw was found in OpenEXR's hufDecode functionality. This flaw allows an attacker who can pass a crafted file to be processed by OpenEXR, to trigger an undefined right shift error. The highest threat from this vulnerability is to system availability.",
        "URL": "https://github.com/AcademySoftwareFoundation/openexr/pull/849",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "51a92d67f53c08230734e74564c807043cbfe41e",
        "inducing_commit_hash_pyszz": [
            "88246d991e0318c043e6f584f7493da08a31f9f8"
        ],
        "inducing_commit_hash_pd": [
            "6e37ef8aed4e20ea834f570845533b65a97a3bc4",
            "7f0c9e256f34cac5a31e9d9cce00ccc898f49f3b",
            "88246d991e0318c043e6f584f7493da08a31f9f8",
            "51845c1e857549d95c6bc27aa1aff37eebe244ed"
        ],
        "matched": [
            "88246d991e0318c043e6f584f7493da08a31f9f8"
        ]
    },
    {
        "repo_name": "acassen/keepalived",
        "CVE_ID": "CVE-2018-19115",
        "Problem_Type": "CWE-787",
        "Description": "keepalived before 2.0.7 has a heap-based buffer overflow when parsing HTTP status codes resulting in DoS or possibly unspecified other impact, because extract_status_code in lib/html.c has no validation of the status code and instead writes an unlimited amount of data to the heap.",
        "URL": "https://github.com/acassen/keepalived/pull/961/commits/f28015671a4b04785859d1b4b1327b367b6a10e9",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f28015671a4b04785859d1b4b1327b367b6a10e9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "33a4dd3613a3ad7717a5faa8f0840817f2070914",
            "e023f42b44e50c5768d09100136cb9a3a8d9bc21"
        ],
        "matched": [
            "33a4dd3613a3ad7717a5faa8f0840817f2070914"
        ]
    },
    {
        "repo_name": "achernya/hesiod",
        "CVE_ID": "CVE-2016-10151",
        "Problem_Type": "CWE-264",
        "Description": "The hesiod_init function in lib/hesiod.c in Hesiod 3.2.1 compares EUID with UID to determine whether to use configurations from environment variables, which allows local users to gain privileges via the (1) HESIOD_CONFIG or (2) HES_DOMAIN environment variable and leveraging certain SUID/SGUID binary.",
        "URL": "https://github.com/achernya/hesiod/pull/9",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "39b21dac9bc6473365de04d94be0da94941c7c73",
        "inducing_commit_hash_pyszz": [
            "fb5778afcc17671282eab183b766c61ccdf41a34"
        ],
        "inducing_commit_hash_pd": [
            "fb5778afcc17671282eab183b766c61ccdf41a34",
            "6b41c0866478cfc716daef55b6cf0c6a4a542c75"
        ],
        "matched": [
            "fb5778afcc17671282eab183b766c61ccdf41a34"
        ]
    },
    {
        "repo_name": "ACINQ/eclair",
        "CVE_ID": "CVE-2021-41591",
        "Problem_Type": "CWE-770",
        "Description": "ACINQ Eclair before 0.6.3 allows loss of funds because of dust HTLC exposure.",
        "URL": "https://github.com/ACINQ/eclair/pull/1985",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "75eafd0e4d4d93ac51e40a56c85e9df87a47d391",
        "inducing_commit_hash_pyszz": [
            "af618bc44fe6054957f65d77000a460c14b41f30"
        ],
        "inducing_commit_hash_pd": [
            "f202587e9c71b2106194c0e6cabc8032f6f67df4",
            "daddfc007fe569c89bb854ef5d672614d397e91e",
            "08c21fa5e919c4033c3606c3abe5e5830b6a230d",
            "84650f8147d4c6a3037d0a5e3d8207a2628cc6d9",
            "5b7a474b6a758aab00bbb651c141eb5c7045d04f",
            "46e48735620d1bbce722c9715af22de783791060",
            "c22596bb9243331c8195998738a89d1b0739bf60",
            "95b34f270f32eabbf0145880850ebf393d96831e",
            "92e53dc9a9b2d9f717ac45889ac954681d1da95b",
            "5b718bffac46fc5907f71a9ef0b172cc72b2d30f",
            "92a094c4987133bf2496a7b3515c7bd89de0d524",
            "4012db582815e4d77b4cb20831bb11db0e90a6a7",
            "af618bc44fe6054957f65d77000a460c14b41f30",
            "06b2337ed905ad72ba7fc0b7d7b110cd6c78ca39",
            "d07a20135312a7461344bda3fbbfd028ab287ac5",
            "22b6bfb0abce4f7f27f91be625e129f0a0beb20d",
            "c7cc536b9da8a6b14ce3f4eeb993fbe00952fa2f",
            "4875d4c879fcfc82560b4f365a2b0b947bd4187b",
            "b728520ad7f3d8f5968c0f5d8d29dbb587ebb4b0",
            "9f2b0368c70e62351ff880044a6a0af946fdaa72",
            "31022ceca52e5e16e0353de3cdbb3c3330d2e574",
            "ab7b373d58e64cade16e6935c25ccfd26dfd27ff",
            "8887ac20433d8e9d12d367e326e516129d5414dc",
            "6b05099f073c1cf74098b690a2c7928f647b8231",
            "768a74558f184477bb0ca30670407178f179b0a1",
            "f061f598036f6b08608c5ebb59f95dbd9600101c"
        ],
        "matched": [
            "af618bc44fe6054957f65d77000a460c14b41f30"
        ]
    },
    {
        "repo_name": "acrontum/filesystem-template",
        "CVE_ID": "CVE-2022-21186",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The package @acrontum/filesystem-template before 0.0.2 are vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.",
        "URL": "https://github.com/acrontum/filesystem-template/pull/14/commits/baeb727b60991ad82d9e63ac660883793abc0acc",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "baeb727b60991ad82d9e63ac660883793abc0acc",
        "inducing_commit_hash_pyszz": [
            "6555a09a7effb6645c67f222189f79b5dec34478"
        ],
        "inducing_commit_hash_pd": [
            "6555a09a7effb6645c67f222189f79b5dec34478",
            "84ea6cbcda7adcf5a1a188fe6082fa2f4d6f6978"
        ],
        "matched": [
            "6555a09a7effb6645c67f222189f79b5dec34478"
        ]
    },
    {
        "repo_name": "actions/runner",
        "CVE_ID": "CVE-2022-39321",
        "Problem_Type": "CWE-78",
        "Description": "GitHub Actions Runner is the application that runs a job from a GitHub Actions workflow. The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered in versions prior to 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4 that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use container actions, job containers, or service containers alongside untrusted user inputs in environment variables may be vulnerable. The Actions Runner has been patched, both on `github.com` and hotfixes for GHES and GHAE customers in versions 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4. GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions. As a workaround, users may consider removing any container actions, job containers, or service containers from their jobs until they are able to upgrade their runner versions.",
        "URL": "https://github.com/actions/runner/pull/2107",
        "Tag": "['Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "96f4f5e76e5b033ee874429f2df541a343ade3c8",
        "inducing_commit_hash_pyszz": [
            "8dc5ca220812447475485490f2103f97f9ea110b"
        ],
        "inducing_commit_hash_pd": [
            "8dc5ca220812447475485490f2103f97f9ea110b",
            "01fd04464d931699c6989f7c366a5ff3e155fe56"
        ],
        "matched": [
            "8dc5ca220812447475485490f2103f97f9ea110b"
        ]
    },
    {
        "repo_name": "actions/runner",
        "CVE_ID": "CVE-2022-39321",
        "Problem_Type": "CWE-78",
        "Description": "GitHub Actions Runner is the application that runs a job from a GitHub Actions workflow. The actions runner invokes the docker cli directly in order to run job containers, service containers, or container actions. A bug in the logic for how the environment is encoded into these docker commands was discovered in versions prior to 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4 that allows an input to escape the environment variable and modify that docker command invocation directly. Jobs that use container actions, job containers, or service containers alongside untrusted user inputs in environment variables may be vulnerable. The Actions Runner has been patched, both on `github.com` and hotfixes for GHES and GHAE customers in versions 2.296.2, 2.293.1, 2.289.4, 2.285.2, and 2.283.4. GHES and GHAE customers may want to patch their instance in order to have their runners automatically upgrade to these new runner versions. As a workaround, users may consider removing any container actions, job containers, or service containers from their jobs until they are able to upgrade their runner versions.",
        "URL": "https://github.com/actions/runner/pull/2108",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed191b78ae33fb3dbc23b0135a9c4e355163dd31",
        "inducing_commit_hash_pyszz": [
            "5e0c2ef8165ef645e165286e90ce460c1aa17b3c"
        ],
        "inducing_commit_hash_pd": [
            "5e0c2ef8165ef645e165286e90ce460c1aa17b3c",
            "95459dea5f9a131ec084e2e2b53e8c87f61db81e",
            "01fd04464d931699c6989f7c366a5ff3e155fe56"
        ],
        "matched": [
            "5e0c2ef8165ef645e165286e90ce460c1aa17b3c"
        ]
    },
    {
        "repo_name": "activeadmin/activeadmin",
        "CVE_ID": "CVE-2023-50448",
        "Problem_Type": "CWE-1236",
        "Description": "In ActiveAdmin (aka Active Admin) before 2.12.0, a concurrency issue allows a malicious actor to access potentially private data (that belongs to another user) by making CSV export requests at certain specific times.",
        "URL": "https://github.com/activeadmin/activeadmin/pull/7336",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "43d3a4a1a61713683fde7ce84e8ee9534f6c96ed",
        "inducing_commit_hash_pyszz": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ],
        "inducing_commit_hash_pd": [
            "bc791b3e3cf8084e4d9644650cbc7570b97a801a",
            "69f213476129baf55a615d40456fc752bfdfe814",
            "0af41dfdcab1f3974814d27d0b6f32929a0c682d",
            "d00792fbf26fe4f49b0c14147c8fd0c5451b8a14",
            "e9a38801e00ba36609e2961e76783445cab73070",
            "f495d16f3f400e549da6119f4b8213d62bb80c65",
            "11383fd42a5953bbe417b18270cc00dfe8609ad5",
            "d3b25b06318e5b256bf3f71d6b2ed69573896c4a",
            "7bcbd62b5373181b72aac41ce162d5a5df6b1f69",
            "4d14a073d89a9faf8577bd6c19664eb8a0ed0a58",
            "3260bf00067a8223914ce8eaffca107912f6d6d5",
            "cb3959290fa5e65211585df78e2c7bea06eaf881"
        ],
        "matched": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ]
    },
    {
        "repo_name": "activeadmin/activeadmin",
        "CVE_ID": "CVE-2023-51763",
        "Problem_Type": "CWE-1236",
        "Description": "csv_builder.rb in ActiveAdmin (aka Active Admin) before 3.2.0 allows CSV injection.",
        "URL": "https://github.com/activeadmin/activeadmin/pull/8161",
        "Tag": "['Patch']",
        "fix_commit_hash": "697be2b183491beadc8f0b7d8b5bfb44f2387909",
        "inducing_commit_hash_pyszz": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ],
        "inducing_commit_hash_pd": [
            "3fb4c51445567b574f98d5330e9b8848147e36c4",
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ],
        "matched": [
            "f495d16f3f400e549da6119f4b8213d62bb80c65"
        ]
    },
    {
        "repo_name": "adaltas/node-printf",
        "CVE_ID": "CVE-2021-23354",
        "Problem_Type": "CWE-1333",
        "Description": "The package printf before 0.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex string /\\%(?:\\(([\\w_.]+)\\)|([1-9]\\d*)\\$)?([0 +\\-\\]*)(\\*|\\d+)?(\\.)?(\\*|\\d+)?[hlL]?([\\%bscdeEfFgGioOuxX])/g in lib/printf.js. The vulnerable regular expression has cubic worst-case time complexity.",
        "URL": "https://github.com/adaltas/node-printf/pull/32",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8502e7c9b0b22555696a2d8ef67722086413a68",
        "inducing_commit_hash_pyszz": [
            "1456b115685791329c6fa6ca4237b7965f10cf82"
        ],
        "inducing_commit_hash_pd": [
            "1456b115685791329c6fa6ca4237b7965f10cf82"
        ],
        "matched": [
            "1456b115685791329c6fa6ca4237b7965f10cf82"
        ]
    },
    {
        "repo_name": "adamghill/django-unicorn",
        "CVE_ID": "CVE-2021-42053",
        "Problem_Type": "CWE-79",
        "Description": "The Unicorn framework through 0.35.3 for Django allows XSS via component.name.",
        "URL": "https://github.com/adamghill/django-unicorn/pull/288/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa5b9835d946bd9893ef02e556859e3ea62cc5e2",
        "inducing_commit_hash_pyszz": [
            "c38e2a8bbb3ec6a8cdba30813282d9159c90f0d2"
        ],
        "inducing_commit_hash_pd": [
            "f91564c3c0d09c37422c7e5a507177f0847e5bbb",
            "c38e2a8bbb3ec6a8cdba30813282d9159c90f0d2"
        ],
        "matched": [
            "c38e2a8bbb3ec6a8cdba30813282d9159c90f0d2"
        ]
    },
    {
        "repo_name": "AEB-labs/cruddl",
        "CVE_ID": "CVE-2022-36084",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "cruddl is software for creating a GraphQL API for a database, using the GraphQL SDL to model a schema. If cruddl starting with version 1.1.0 and prior to versions 2.7.0 and 3.0.2 is used to generate a schema that uses `@flexSearchFulltext`, users of that schema may be able to inject arbitrary AQL queries that will be forwarded to and executed by ArangoDB. Schemas that do not use `@flexSearchFulltext` are not affected. The attacker needs to have `READ` permission to at least one root entity type that has `@flexSearchFulltext` enabled. The issue has been fixed in version 3.0.2 and in version 2.7.0 of cruddl. As a workaround, users can temporarily remove `@flexSearchFulltext` from their schemas.",
        "URL": "https://github.com/AEB-labs/cruddl/pull/253",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e98fcb5bfd52c5d984d2ddad3c17dd392e192879",
        "inducing_commit_hash_pyszz": [
            "efb4d62f097aa90e179d2c2eaa8888a28944a772"
        ],
        "inducing_commit_hash_pd": [
            "0bdc8bd727cac6907eb1e820f3ff08caae1a7e29",
            "d9391cd2083133098596e48068d0c60084dfe76d"
        ],
        "matched": [
            "efb4d62f097aa90e179d2c2eaa8888a28944a772"
        ]
    },
    {
        "repo_name": "ahorner/text-helpers",
        "CVE_ID": "CVE-2020-36624",
        "Problem_Type": "CWE-1022",
        "Description": "A vulnerability was found in ahorner text-helpers up to 1.0.x. It has been declared as critical. This vulnerability affects unknown code of the file lib/text_helpers/translation.rb. The manipulation of the argument link leads to use of web link to untrusted target with window.opener access. The attack can be initiated remotely. Upgrading to version 1.1.0 is able to address this issue. The name of the patch is 184b60ded0e43c985788582aca2d1e746f9405a3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216520.",
        "URL": "https://github.com/ahorner/text-helpers/pull/19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "184b60ded0e43c985788582aca2d1e746f9405a3",
        "inducing_commit_hash_pyszz": [
            "db96a7371f29e61bf6b1dd1dc9c5b8f0cea66662"
        ],
        "inducing_commit_hash_pd": [
            "db96a7371f29e61bf6b1dd1dc9c5b8f0cea66662",
            "a2d4c182ba2923d3800ad0d230a786c6d440b362",
            "0f66a6997f56f21575ead42cea93a613cc84d14a"
        ],
        "matched": [
            "db96a7371f29e61bf6b1dd1dc9c5b8f0cea66662"
        ]
    },
    {
        "repo_name": "aimhubio/aim",
        "CVE_ID": "CVE-2021-43775",
        "Problem_Type": "CWE-22",
        "Description": "Aim is an open-source, self-hosted machine learning experiment tracking tool. Versions of Aim prior to 3.1.0 are vulnerable to a path traversal attack. By manipulating variables that reference files with \u00c2\u201cdot-dot-slash (../)\u00c2\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. The vulnerability issue is resolved in Aim v3.1.0.",
        "URL": "https://github.com/aimhubio/aim/pull/1003",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ],
        "matched": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ]
    },
    {
        "repo_name": "aimhubio/aim",
        "CVE_ID": "CVE-2021-43775",
        "Problem_Type": "CWE-22",
        "Description": "Aim is an open-source, self-hosted machine learning experiment tracking tool. Versions of Aim prior to 3.1.0 are vulnerable to a path traversal attack. By manipulating variables that reference files with \u00c2\u201cdot-dot-slash (../)\u00c2\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. The vulnerability issue is resolved in Aim v3.1.0.",
        "URL": "https://github.com/aimhubio/aim/pull/1003/commits/f01266a1a479ef11d7d6c539e7dd89e9d5639738",
        "Tag": "['Patch']",
        "fix_commit_hash": "b9e53df5e32d14bbd3a2c738e2db7187fb531e93",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ],
        "matched": [
            "587810efebbc26d16b3ee8816b22ebe2521ee3b6"
        ]
    },
    {
        "repo_name": "aio-libs/aiohttp-session",
        "CVE_ID": "CVE-2018-1000814",
        "Problem_Type": "CWE-613",
        "Description": "aio-libs aiohttp-session version 2.6.0 and earlier contains a Other/Unknown vulnerability in EncryptedCookieStorage and NaClCookieStorage that can result in Non-expiring sessions / Infinite lifespan. This attack appear to be exploitable via Recreation of a cookie post-expiry with the same value.",
        "URL": "https://github.com/aio-libs/aiohttp-session/pull/331",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1b356f01bbab57d041c9a75bacd72fbbf8524728",
        "inducing_commit_hash_pyszz": [
            "9c06ec32471720af3ae6380d0f4cdaa4f597c9d8"
        ],
        "inducing_commit_hash_pd": [
            "70d4d8eb606e38746f31da8fd51e58b4c8256a07",
            "9c06ec32471720af3ae6380d0f4cdaa4f597c9d8"
        ],
        "matched": [
            "9c06ec32471720af3ae6380d0f4cdaa4f597c9d8"
        ]
    },
    {
        "repo_name": "aio-libs/aiohttp",
        "CVE_ID": "CVE-2024-23334",
        "Problem_Type": "CWE-22",
        "Description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. When using aiohttp as a web server and configuring static routes, it is necessary to specify the root path for static files. Additionally, the option 'follow_symlinks' can be used to determine whether to follow symbolic links outside the static root directory. When 'follow_symlinks' is set to True, there is no validation to check if reading a file is within the root directory. This can lead to directory traversal vulnerabilities, resulting in unauthorized access to arbitrary files on the system, even when symlinks are not present.  Disabling follow_symlinks and using a reverse proxy are encouraged mitigations.  Version 3.9.2 fixes this issue.",
        "URL": "https://github.com/aio-libs/aiohttp/pull/8079",
        "Tag": "['Patch']",
        "fix_commit_hash": "1c335944d6a8b1298baf179b7c0b3069f10c514b",
        "inducing_commit_hash_pyszz": [
            "1ae3ae665ba20d1bfb0d0a5b7179e1104b0931d8"
        ],
        "inducing_commit_hash_pd": [
            "1ae3ae665ba20d1bfb0d0a5b7179e1104b0931d8",
            "ee69c4026ae035bd0a488cbe718eaae5d49fc0e1",
            "48a704d955e9ff04c7a969d615da524ae92125d5",
            "8d65873f33e53c4fcb1f2ef0bc242285b0eeab6f"
        ],
        "matched": [
            "1ae3ae665ba20d1bfb0d0a5b7179e1104b0931d8"
        ]
    },
    {
        "repo_name": "aio-libs/aiohttp",
        "CVE_ID": "CVE-2024-23829",
        "Problem_Type": "CWE-444",
        "Description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. Security-sensitive parts of the Python HTTP parser retained minor differences in allowable character sets, that must trigger error handling to robustly match frame boundaries of proxies in order to protect against injection of additional requests. Additionally, validation could trigger exceptions that were not handled consistently with processing of other malformed input.  Being more lenient than internet standards require could, depending on deployment environment, assist in request smuggling. The unhandled exception could cause excessive resource consumption on the application server and/or its logging facilities. This vulnerability exists due to an incomplete fix for CVE-2023-47627. Version 3.9.2 fixes this vulnerability.",
        "URL": "https://github.com/aio-libs/aiohttp/pull/8074",
        "Tag": "['Patch']",
        "fix_commit_hash": "33ccdfb0a12690af5bb49bda2319ec0907fa7827",
        "inducing_commit_hash_pyszz": [
            "493f06797654c383242f0e8007f6e06b818a1fbc"
        ],
        "inducing_commit_hash_pd": [
            "c13f8c623658a2a21053bac3fbdf8cf57ecfb745",
            "493f06797654c383242f0e8007f6e06b818a1fbc",
            "bd5f92437173aae77cb128a1ebb8bf58effd13b5",
            "441c10eaf7ac9ded20aed376715b53dbac9cb3f1",
            "2b813f5316c8637f288839af968cf60bfe8a55d4",
            "454092d178cd3719c6241365c1a7dec5f6e325ed",
            "312f747de91f20fa33af03fd368f857fbd32f36a",
            "3be8a68d750fd9902106e747d11a0622b8650f2c",
            "6ab76b084bf5012b7185046162ed92bedcf073b5"
        ],
        "matched": [
            "493f06797654c383242f0e8007f6e06b818a1fbc"
        ]
    },
    {
        "repo_name": "Airtable/airtable.js",
        "CVE_ID": "CVE-2022-46155",
        "Problem_Type": "CWE-312",
        "Description": "Airtable.js is the JavaScript client for Airtable. Prior to version 0.11.6, Airtable.js had a misconfigured build script in its source package. When the build script is run, it would bundle environment variables into the build target of a transpiled bundle. Specifically, the AIRTABLE_API_KEY and AIRTABLE_ENDPOINT_URL environment variables are inserted during Browserify builds due to being referenced in Airtable.js code. This only affects copies of Airtable.js built from its source, not those installed via npm or yarn. Airtable API keys set in users\u00c2\u2019 environments via the AIRTABLE_API_KEY environment variable may be bundled into local copies of Airtable.js source code if all of the following conditions are met: 1) the user has cloned the Airtable.js source onto their machine, 2) the user runs the `npm prepare` script, and 3) the user' has the AIRTABLE_API_KEY environment variable set. If these conditions are met, a user\u00c2\u2019s local build of Airtable.js would be modified to include the value of the AIRTABLE_API_KEY environment variable, which could then be accidentally shipped in the bundled code. Users who do not meet all three of these conditions are not impacted by this issue. Users should upgrade to Airtable.js version 0.11.6 or higher; or, as a workaround unset the AIRTABLE_API_KEY environment variable in their shell and/or remove it from your .bashrc, .zshrc, or other shell configuration files. Users should also regenerate any Airtable API keys they use, as the keysy may be present in bundled code.",
        "URL": "https://github.com/Airtable/airtable.js/pull/330/commits/b468d8fe48d75e3d5fe46d0ea7770f4658951ed0",
        "Tag": "['Patch']",
        "fix_commit_hash": "b468d8fe48d75e3d5fe46d0ea7770f4658951ed0",
        "inducing_commit_hash_pyszz": [
            "da36c281123f0f92869c408ff0642f2c0fea9cc8"
        ],
        "inducing_commit_hash_pd": [
            "8cebd6c4a9a635533ed0de24e3689b64a181f10c",
            "80040f7dac3d007d0eb666bbcb7d5376cab5c256",
            "da36c281123f0f92869c408ff0642f2c0fea9cc8",
            "169285225f6dcbb24dbe5c50e7ca926fbb4a4269",
            "d92e9962cae11dd8acaa1afbe07e0aebd93d74de",
            "962821ccb76f8609ba2d6b36a19f4a862be16b27",
            "be2e5d54c98a0ee5c99e52d511bd4e68b4cb6227",
            "292503ebc6587124b7718d62cea5c8380c75bd40",
            "dc078372439e395aec29b797ced601b5836667a5",
            "1995e0181f2ed0a3dc277b0a49be4e5c5dcfd20f"
        ],
        "matched": [
            "da36c281123f0f92869c408ff0642f2c0fea9cc8"
        ]
    },
    {
        "repo_name": "ai/nanoid",
        "CVE_ID": "CVE-2021-23566",
        "Problem_Type": "CWE-704",
        "Description": "The package nanoid from 3.0.0 and before 3.1.31 are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.",
        "URL": "https://github.com/ai/nanoid/pull/328",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b7bd9332bc49b6330c7ddb08e5c661833db2575",
        "inducing_commit_hash_pyszz": [
            "c66da356960db2504ba9bf310e54d5cfd8f77431"
        ],
        "inducing_commit_hash_pd": [
            "1c4fe7e93c31ed75abc5c28e6fdf30351c6793f2",
            "c66da356960db2504ba9bf310e54d5cfd8f77431"
        ],
        "matched": [
            "c66da356960db2504ba9bf310e54d5cfd8f77431"
        ]
    },
    {
        "repo_name": "AkashRajpurohit/clipper",
        "CVE_ID": "CVE-2021-28134",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Clipper before 1.0.5 allows remote command execution. A remote attacker may send a crafted IPC message to the exposed vulnerable ipcRenderer IPC interface, which invokes the dangerous openExternal API.",
        "URL": "https://github.com/AkashRajpurohit/clipper/pull/14/commits/28f1492a12234cf1e6af85c78bf22ee2f5090d19",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01743af56dab4004b0cabba843c3007145bdea14",
        "inducing_commit_hash_pyszz": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "inducing_commit_hash_pd": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "matched": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ]
    },
    {
        "repo_name": "AkashRajpurohit/clipper",
        "CVE_ID": "CVE-2021-28134",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Clipper before 1.0.5 allows remote command execution. A remote attacker may send a crafted IPC message to the exposed vulnerable ipcRenderer IPC interface, which invokes the dangerous openExternal API.",
        "URL": "https://github.com/AkashRajpurohit/clipper/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "01743af56dab4004b0cabba843c3007145bdea14",
        "inducing_commit_hash_pyszz": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "inducing_commit_hash_pd": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ],
        "matched": [
            "f132ba19db651b45a8dd9ab4f59dd212d5246634"
        ]
    },
    {
        "repo_name": "alexcrichton/bzip2-rs",
        "CVE_ID": "CVE-2023-22895",
        "Problem_Type": "CWE-190",
        "Description": "The bzip2 crate before 0.4.4 for Rust allow attackers to cause a denial of service via a large file that triggers an integer overflow in mem.rs. NOTE: this is unrelated to the https://crates.io/crates/bzip2-rs product.",
        "URL": "https://github.com/alexcrichton/bzip2-rs/pull/86",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90c9c182cd5a5ebc75810aebd89b347a7bdf590b",
        "inducing_commit_hash_pyszz": [
            "e5c4e87735ce4a4c830d90e618c26612b8f12c45"
        ],
        "inducing_commit_hash_pd": [
            "e5c4e87735ce4a4c830d90e618c26612b8f12c45"
        ],
        "matched": [
            "e5c4e87735ce4a4c830d90e618c26612b8f12c45"
        ]
    },
    {
        "repo_name": "alibaba/nacos",
        "CVE_ID": "CVE-2021-29441",
        "Problem_Type": "CWE-290",
        "Description": "Nacos is a platform designed for dynamic service discovery and configuration and service management. In Nacos before version 1.4.1, when configured to use authentication (-Dnacos.core.auth.enabled=true) Nacos uses the AuthFilter servlet filter to enforce authentication. This filter has a backdoor that enables Nacos servers to bypass this filter and therefore skip authentication checks. This mechanism relies on the user-agent HTTP header so it can be easily spoofed. This issue may allow any user to carry out any administrative tasks on the Nacos server.",
        "URL": "https://github.com/alibaba/nacos/pull/4703",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cc0be6ae1cee1f2bcd2b19886380a15004eae47",
        "inducing_commit_hash_pyszz": [
            "9734deeefc1639b28fe71f5109bc0464f06ea759"
        ],
        "inducing_commit_hash_pd": [
            "952ee8a3c126877fa46c0267fdabf14d28d281dc",
            "9734deeefc1639b28fe71f5109bc0464f06ea759",
            "1fb1f5f3e37e2b4fafd4ac572b5d3b6d106aada1"
        ],
        "matched": [
            "9734deeefc1639b28fe71f5109bc0464f06ea759"
        ]
    },
    {
        "repo_name": "alibaba/one-java-agent",
        "CVE_ID": "CVE-2022-25842",
        "Problem_Type": "CWE-22",
        "Description": "All versions of package com.alibaba.oneagent:one-java-agent-plugin are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) using a specially crafted archive that holds directory traversal filenames (e.g. ../../evil.exe). The attacker can overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim\u00c2\u2019s machine.",
        "URL": "https://github.com/alibaba/one-java-agent/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e0149bb36488fede2a12cb1ab3c2095e56dd7571",
        "inducing_commit_hash_pyszz": [
            "4d1edcc07f019eb77681fc34170cdaf840157dab"
        ],
        "inducing_commit_hash_pd": [
            "c4c6f3d5ad450a71da0171de20bc7943e80ae1fd",
            "15d91ebfd9df814141c98378497209b930ff9c21",
            "4d1edcc07f019eb77681fc34170cdaf840157dab"
        ],
        "matched": [
            "4d1edcc07f019eb77681fc34170cdaf840157dab"
        ]
    },
    {
        "repo_name": "allegro/bigflow",
        "CVE_ID": "CVE-2023-25392",
        "Problem_Type": "CWE-295",
        "Description": "Allegro Tech BigFlow <1.6 is vulnerable to Missing SSL Certificate Validation.",
        "URL": "https://github.com/allegro/bigflow/pull/357",
        "Tag": "['Patch']",
        "fix_commit_hash": "fab2660b7d5ed98319776dede095d1bf21c88154",
        "inducing_commit_hash_pyszz": [
            "3f26b1e44125edd38b8beb8f1ca877458d36cb41"
        ],
        "inducing_commit_hash_pd": [
            "d390f0aa6bafcb22a924606558400b7bd2ac774d",
            "997a2417cdc3b16d6761de909b87adfb0d3898a1",
            "2710eed8bafcb469fdea7fa3b81f6eb51df77a20",
            "ffb3d61fae88b033a0d7b6fc03b6bbd6705114cf",
            "cb2cf6d794e53bce34022b1e6225b749a7878bb3",
            "3a3cdee3aa864573a1e9d828bfda3c9fa1a667ad",
            "2b359400252e41bf479605d61f34fedc906bd4e6",
            "461532eb29ea613caf9d4ca6ffd53bf300cc249e",
            "74a43eeb175bcd6ac346fa5a5801fdbe406f3c6a",
            "07973c357c10c3cb663ae477c1f285dcb6027f1b",
            "2c8460a5c6c57e95ac681a76c7c67416a0280ced",
            "3f26b1e44125edd38b8beb8f1ca877458d36cb41",
            "0e42834e411cefd34f55015113e011b9245f6488",
            "a3671657ac030b8ccd025284a5314abf5e0197b4",
            "8b762f81f5c390e317650a9e2dcda5eaf64c9866",
            "19d11e71c342f91feeecff3366c007b42f05e42c",
            "ef573884aad2834664b79d3d0816f9cf7cc51d4c",
            "7766d39fe36c0ac1c7168e6ddc5431d7d3f3e1f4",
            "3448ba0e3c093107bd4c4bef9b651d3df549c7b8"
        ],
        "matched": [
            "3f26b1e44125edd38b8beb8f1ca877458d36cb41"
        ]
    },
    {
        "repo_name": "alliedmodders/amxmodx",
        "CVE_ID": "CVE-2020-36639",
        "Problem_Type": "CWE-22",
        "Description": "A vulnerability has been found in AlliedModders AMX Mod X on Windows and classified as critical. This vulnerability affects the function cmdVoteMap of the file plugins/adminvote.sma of the component Console Command Handler. The manipulation of the argument amx_votemap leads to path traversal. The patch is identified as a5f2b5539f6d61050b68df8b22ebb343a2862681. It is recommended to apply a patch to fix this issue. VDB-217354 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/alliedmodders/amxmodx/pull/823",
        "Tag": "['Patch']",
        "fix_commit_hash": "a5f2b5539f6d61050b68df8b22ebb343a2862681",
        "inducing_commit_hash_pyszz": [
            "ddf3b6df323f95026c948826a3d34f714ce89d51"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "ddf3b6df323f95026c948826a3d34f714ce89d51"
        ]
    },
    {
        "repo_name": "amro/gibbon",
        "CVE_ID": "CVE-2022-27311",
        "Problem_Type": "CWE-918",
        "Description": "Gibbon v3.4.4 and below allows attackers to execute a Server-Side Request Forgery (SSRF) via a crafted URL.",
        "URL": "https://github.com/amro/gibbon/pull/321",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6933225393d7d261072e0c708365c3750d799381",
        "inducing_commit_hash_pyszz": [
            "b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b"
        ],
        "inducing_commit_hash_pd": [
            "b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b"
        ],
        "matched": [
            "b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b"
        ]
    },
    {
        "repo_name": "angelozerr/lsp4xml",
        "CVE_ID": "CVE-2019-18212",
        "Problem_Type": "CWE-22",
        "Description": "XMLLanguageService.java in XML Language Server (aka lsp4xml) before 0.9.1, as used in Red Hat XML Language Support (aka vscode-xml) before 0.9.1 for Visual Studio and other products, allows a remote attacker to write to arbitrary files via Directory Traversal.",
        "URL": "https://github.com/angelozerr/lsp4xml/pull/567",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3af46f73eefdda66386cb61bf6b7125009d4ecc",
        "inducing_commit_hash_pyszz": [
            "6b37900dc3e45e072612136b4b5c9d1afb959ca2"
        ],
        "inducing_commit_hash_pd": [
            "0796608e831b0a699f44ae3b58528828f06e8dc1",
            "b8e5a7a51bf6147e02da91eb489faa51ce49c14d",
            "6b37900dc3e45e072612136b4b5c9d1afb959ca2",
            "1725db27540ee1655efe94d05278e51ca78108df"
        ],
        "matched": [
            "6b37900dc3e45e072612136b4b5c9d1afb959ca2"
        ]
    },
    {
        "repo_name": "angelozerr/lsp4xml",
        "CVE_ID": "CVE-2019-18213",
        "Problem_Type": "CWE-611",
        "Description": "XML Language Server (aka lsp4xml) before 0.9.1, as used in Red Hat XML Language Support (aka vscode-xml) before 0.9.1 for Visual Studio and other products, allows XXE via a crafted XML document, with resultant SSRF (as well as SMB connection initiation that can lead to NetNTLM challenge/response capture for password cracking). This occurs in extensions/contentmodel/participants/diagnostics/LSPXMLParserConfiguration.java.",
        "URL": "https://github.com/angelozerr/lsp4xml/pull/566",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d172c4daff4c0229493c62812a40be8357584f7b",
        "inducing_commit_hash_pyszz": [
            "ca6bb86c6d3a1f35d86bbf6809d1faa688662a75"
        ],
        "inducing_commit_hash_pd": [
            "ca6bb86c6d3a1f35d86bbf6809d1faa688662a75",
            "0c410432da0fa31b80ef12bc50817e127a375e80",
            "85bf167f68f79d8456f9e3b78bae99a7df6fd395",
            "a293d26d9f8978f290de8f21b28e593d1e47bab6",
            "67b93acb9fa7bd175bc49d6a8f9d62c56bf88700",
            "add7a056ff004dd193cd57e5095fbce8c47231de",
            "66c73310d63c74da10d0d1ba9e1980e7cf62ec78"
        ],
        "matched": [
            "ca6bb86c6d3a1f35d86bbf6809d1faa688662a75"
        ]
    },
    {
        "repo_name": "ansible/ansible-modules-extras",
        "CVE_ID": "CVE-2016-3096",
        "Problem_Type": "CWE-59",
        "Description": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
        "URL": "https://github.com/ansible/ansible-modules-extras/pull/1941/commits/8c6fe646ee79f5e55361b885b7efed5bec72d4a4",
        "Tag": "['Patch']",
        "fix_commit_hash": "7c3999a92a1cd856ff9bc8913a93ff1aee8bffc3",
        "inducing_commit_hash_pyszz": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "inducing_commit_hash_pd": [
            "4446e4642ec652eaa4169c3fa10771d1c778a8f9",
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "matched": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ]
    },
    {
        "repo_name": "ansible/ansible-modules-extras",
        "CVE_ID": "CVE-2016-3096",
        "Problem_Type": "CWE-59",
        "Description": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
        "URL": "https://github.com/ansible/ansible-modules-extras/pull/1941",
        "Tag": "['Patch']",
        "fix_commit_hash": "7c3999a92a1cd856ff9bc8913a93ff1aee8bffc3",
        "inducing_commit_hash_pyszz": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "inducing_commit_hash_pd": [
            "4446e4642ec652eaa4169c3fa10771d1c778a8f9",
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ],
        "matched": [
            "fd0c21df27da5c952ef71b69fadc1d74cb052eea"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2018-16859",
        "Problem_Type": "CWE-532",
        "Description": "Execution of Ansible playbooks on Windows platforms with PowerShell ScriptBlock logging and Module logging enabled can allow for 'become' passwords to appear in EventLogs in plaintext. A local user with administrator privileges on the machine can view these logs and discover the plaintext password. Ansible Engine 2.8 and older are believed to be vulnerable.",
        "URL": "https://github.com/ansible/ansible/pull/49142",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8c1f701e6e9df29fe991f98265e2dd76acca4b8c",
        "inducing_commit_hash_pyszz": [
            "2af36412f9a5bb5ad0085cbfe34b71626b197555"
        ],
        "inducing_commit_hash_pd": [
            "8bf1c53b21ee30d426d9cfe1e87461ddc040670a",
            "e972287c359654d65294fa89002a1f900a3a870e",
            "e7d8ebf08038c672a6f9397cc9b9a66465af5547",
            "6373f2b0455ad023aef0f567d9c6469c12ba7f85",
            "b004a6373a743c950bf8afc9fc4625451a7eeb9e",
            "e87cf4a3cc2d74695b226e6ff073da342f72abf2",
            "f0134079e3aaff3a6c8d31ff55cd3d01c82f2bc8",
            "0ee46cb0df007dc2e417666de244afd54d619ed3",
            "36ad934156bd55adb337fc885b68bd661a92f5fa"
        ],
        "matched": [
            "2af36412f9a5bb5ad0085cbfe34b71626b197555"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2018-16876",
        "Problem_Type": "CWE-200",
        "Description": "ansible before versions 2.5.14, 2.6.11, 2.7.5 is vulnerable to a information disclosure flaw in vvv+ mode with no_log on that can lead to leakage of sensible data.",
        "URL": "https://github.com/ansible/ansible/pull/49569",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba4c2ebeac9ee801bfedff05f504c71da0dd2bc2",
        "inducing_commit_hash_pyszz": [
            "673c55f2efce52c155872c80b0bff160e4a7b7b7"
        ],
        "inducing_commit_hash_pd": [
            "673c55f2efce52c155872c80b0bff160e4a7b7b7",
            "1fe67f9f436595003f7951dd88159731e6d82498",
            "9f0be5a5569495a705b4cca94b48a6a8c7437896"
        ],
        "matched": [
            "673c55f2efce52c155872c80b0bff160e4a7b7b7"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-10156",
        "Problem_Type": "CWE-200",
        "Description": "A flaw was discovered in the way Ansible templating was implemented in versions before 2.6.18, 2.7.12 and 2.8.2, causing the possibility of information disclosure through unexpected variable substitution. By taking advantage of unintended variable substitution the content of any variable may be disclosed.",
        "URL": "https://github.com/ansible/ansible/pull/57188",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b9b0b230150eceb442c34c917d9e852d5e8b7371",
        "inducing_commit_hash_pyszz": [
            "c54d79bc131c96e039a8981a7ad4e061cd83d744"
        ],
        "inducing_commit_hash_pd": [
            "62d79568be16084718bda2d890b2b4e1d10cc41d",
            "50f2313b47eed5eb338dc28afcb0ef9cdb34e339",
            "b3e85b76d7f5c109ca932942abd1e3ccbb8ebe8c",
            "ad91793428736f7bb1b9e3e89f82de944cdab2fb",
            "039706a23904fb86bbd770357e6033ccf5dd6f1d",
            "dc48d27dd2c49e95a719d7f7596f0b68e0ddef7f",
            "c54d79bc131c96e039a8981a7ad4e061cd83d744",
            "dd46f953f6c88bc159c532b17e9b5c7e34f216bc"
        ],
        "matched": [
            "c54d79bc131c96e039a8981a7ad4e061cd83d744"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-14846",
        "Problem_Type": "CWE-532",
        "Description": "In Ansible, all Ansible Engine versions up to ansible-engine 2.8.5, ansible-engine 2.7.13, ansible-engine 2.6.19, were logging at the DEBUG level which lead to a disclosure of credentials if a plugin used a library that logged credentials at the DEBUG level. This flaw does not affect Ansible modules, as those are executed in a separate process.",
        "URL": "https://github.com/ansible/ansible/pull/63366",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cb0f535a8b254a2daf69cd067e842fabb2993034",
        "inducing_commit_hash_pyszz": [
            "0089eb81027b325551d5efef900cde841c3c093e"
        ],
        "inducing_commit_hash_pd": [
            "0089eb81027b325551d5efef900cde841c3c093e"
        ],
        "matched": [
            "0089eb81027b325551d5efef900cde841c3c093e"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2019-3828",
        "Problem_Type": "CWE-22",
        "Description": "Ansible fetch module before versions 2.5.15, 2.6.14, 2.7.8 has a path traversal vulnerability which allows copying and overwriting files outside of the specified destination in the local ansible controller host, by not restricting an absolute path.",
        "URL": "https://github.com/ansible/ansible/pull/52133",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b34d141eede8731e63cbb0312efce31559c44022",
        "inducing_commit_hash_pyszz": [
            "3518a05db6ea2616888dba02863f51b395616647"
        ],
        "inducing_commit_hash_pd": [
            "5766689dd5f0760c5f96173eacb2bce169f17b81"
        ],
        "matched": [
            "3518a05db6ea2616888dba02863f51b395616647"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-10685",
        "Problem_Type": "CWE-459",
        "Description": "A flaw was found in Ansible Engine affecting Ansible Engine versions 2.7.x before 2.7.17 and 2.8.x before 2.8.11 and 2.9.x before 2.9.7 as well as Ansible Tower before and including versions 3.4.5 and 3.5.5 and 3.6.3 when using modules which decrypts vault files such as assemble, script, unarchive, win_copy, aws_s3 or copy modules. The temporary directory is created in /tmp leaves the s ts unencrypted. On Operating Systems which /tmp is not a tmpfs but part of the root partition, the directory is only cleared on boot and the decryp emains when the host is switched off. The system will be vulnerable when the system is not running. So decrypted data must be cleared as soon as possible and the data which normally is encrypted ble.",
        "URL": "https://github.com/ansible/ansible/pull/68433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6452a82452f3a721233b50f62419598206442fd9",
        "inducing_commit_hash_pyszz": [
            "f787be359773cb57f0c3b40bc4e2c0256d06f32c"
        ],
        "inducing_commit_hash_pd": [
            "cdf6e3e4bf44fdab62c2e4ccd3f5fd67ea554548",
            "f787be359773cb57f0c3b40bc4e2c0256d06f32c"
        ],
        "matched": [
            "f787be359773cb57f0c3b40bc4e2c0256d06f32c"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-10691",
        "Problem_Type": "CWE-22",
        "Description": "An archive traversal flaw was found in all ansible-engine versions 2.9.x prior to 2.9.7, when running ansible-galaxy collection install. When extracting a collection .tar.gz file, the directory is created without sanitizing the filename. An attacker could take advantage to overwrite any file within the system.",
        "URL": "https://github.com/ansible/ansible/pull/68596",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a20a52701402a12f91396549df04ac55809f68e9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b6791e6ae3891951fc38518fdb52d53219987498",
            "97f011cf94853fa41e7b1540db1526048c7f71eb"
        ],
        "matched": [
            "b6791e6ae3891951fc38518fdb52d53219987498"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2020-14332",
        "Problem_Type": "CWE-117",
        "Description": "A flaw was found in the Ansible Engine when using module_args. Tasks executed with check mode (--check-mode) do not properly neutralize sensitive data exposed in the event data. This flaw allows unauthorized users to read this data. The highest threat from this vulnerability is to confidentiality.",
        "URL": "https://github.com/ansible/ansible/pull/71033",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "991714b9d1e878a4c2fda67ffd829724fa7ac67e",
        "inducing_commit_hash_pyszz": [
            "80940a6b1c7b24cc4641625a007bd70921ecb584"
        ],
        "inducing_commit_hash_pd": [
            "80940a6b1c7b24cc4641625a007bd70921ecb584"
        ],
        "matched": [
            "80940a6b1c7b24cc4641625a007bd70921ecb584"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2021-20228",
        "Problem_Type": "CWE-200",
        "Description": "A flaw was found in the Ansible Engine 2.9.18, where sensitive info is not masked by default and is not protected by the no_log feature when using the sub-option feature of the basic.py module. This flaw allows an attacker to obtain sensitive information. The highest threat from this vulnerability is to confidentiality.",
        "URL": "https://github.com/ansible/ansible/pull/73487",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0cdc410dce6658e93c06fa27e0100ddbb11e7015",
        "inducing_commit_hash_pyszz": [
            "3b0e9ded91b6e2cabd77e13e0469b55d7b8de642"
        ],
        "inducing_commit_hash_pd": [
            "305c88700de7fc17de80b2f58fb6d44180573e61",
            "d34a26e30729c39c83dba4a46203c5c100a3eaeb",
            "3b0e9ded91b6e2cabd77e13e0469b55d7b8de642",
            "6e5055e7868414ce1aeab48756177350c4dd6ba0",
            "97a34cf008501088ae012f24e4712e2bc6dd6d4c"
        ],
        "matched": [
            "3b0e9ded91b6e2cabd77e13e0469b55d7b8de642"
        ]
    },
    {
        "repo_name": "ansible/ansible",
        "CVE_ID": "CVE-2024-0690",
        "Problem_Type": "CWE-116",
        "Description": "An information disclosure flaw was found in ansible-core due to a failure to respect the ANSIBLE_NO_LOG configuration in some scenarios. Information is still included in the output in certain tasks, such as loop items. Depending on the task, this issue may include sensitive information, such as decrypted secret values.",
        "URL": "https://github.com/ansible/ansible/pull/82565",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "6935c8e303440addd3871ecf8e04bde61080b032",
        "inducing_commit_hash_pyszz": [
            "df1001577f68a319a2594de0bb993ec4e91c2068"
        ],
        "inducing_commit_hash_pd": [
            "43153c58310d02223f2cb0964f4255ba1ac4ed53",
            "37a918438b2363a66c5d7a7bb1320b68fd4460c7"
        ],
        "matched": [
            "df1001577f68a319a2594de0bb993ec4e91c2068"
        ]
    },
    {
        "repo_name": "ant-design/ant-design-pro",
        "CVE_ID": "CVE-2019-18350",
        "Problem_Type": "CWE-79",
        "Description": "In Ant Design Pro 4.0.0, reflected XSS in the user/login redirect GET parameter affects the authorization component, leading to execution of JavaScript code in the login after-action script.",
        "URL": "https://github.com/ant-design/ant-design-pro/pull/5461",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "840034ca90a66ebe7835934cffcb85654e86f593",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ad5db1c268100735b5d99624aa75a5cd1be56e2c"
        ],
        "matched": [
            "ad5db1c268100735b5d99624aa75a5cd1be56e2c"
        ]
    },
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/redis/pull/3322",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53cc8d7ce66b971d540341d279aa7b8843bcf482",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "antirez/redis",
        "CVE_ID": "CVE-2013-7458",
        "Problem_Type": "CWE-200",
        "Description": "linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.",
        "URL": "https://github.com/antirez/redis/pull/1418",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "53cc8d7ce66b971d540341d279aa7b8843bcf482",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "apache/activemq-artemis",
        "CVE_ID": "CVE-2021-4040",
        "Problem_Type": "CWE-787",
        "Description": "A flaw was found in AMQ Broker. This issue can cause a partial interruption to the availability of AMQ Broker via an Out of memory (OOM) condition. This flaw allows an attacker to partially disrupt availability to the broker through a sustained attack of maliciously crafted messages. The highest threat from this vulnerability is system availability.",
        "URL": "https://github.com/apache/activemq-artemis/pull/3871/commits",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "72a4fff1673477d78a85c415d48a2c74afda81fa",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "8ecd255f981e5d806173cf86f6fac9c4c7c25167",
            "bac96047f5752647fb0ebf01bacbcfb36f715e06"
        ],
        "matched": [
            "8ecd255f981e5d806173cf86f6fac9c4c7c25167"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-27949",
        "Problem_Type": "CWE-200",
        "Description": "A vulnerability in UI of Apache Airflow allows an attacker to view unmasked secrets in rendered template values for tasks which were not executed (for example when they were depending on past and previous instances of the task failed). This issue affects Apache Airflow prior to 2.3.1.",
        "URL": "https://github.com/apache/airflow/pull/22754",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ce8ea6691820140a0e2d9a5dad5254bc05a5a270",
        "inducing_commit_hash_pyszz": [
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06"
        ],
        "inducing_commit_hash_pd": [
            "ccbaf578aee5fd04580eb07d27fbbd688a2f3080",
            "944dcfbb918050274fd3a1cc51d8fdf460ea2429",
            "866a601b76e219b3c043e1dbbc8fb22300866351"
        ],
        "matched": [
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-38649",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pinot Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Apache Airflow Pinot Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Apache Airflow Pinot Provider is installed (Apache Airflow Pinot Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pinot Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.",
        "URL": "https://github.com/apache/airflow/pull/27641",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d4fd5c6eacab0b88f8660f9d780174434393f1a",
        "inducing_commit_hash_pyszz": [
            "813cd431204b71f4e7c27f2bee9fafcc910da4d0"
        ],
        "inducing_commit_hash_pd": [
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132"
        ],
        "matched": [
            "813cd431204b71f4e7c27f2bee9fafcc910da4d0"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40127",
        "Problem_Type": "CWE-94",
        "Description": "A vulnerability in Example Dags of Apache Airflow allows an attacker with UI access who can trigger DAGs, to execute arbitrary commands via manually provided run_id parameter. This issue affects Apache Airflow Apache Airflow versions prior to 2.4.0.",
        "URL": "https://github.com/apache/airflow/pull/25960",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "372e699c2d1e11f7087b5340454d0a0a6a56fbf5",
        "inducing_commit_hash_pyszz": [
            "28b3056192f55251d88856d20a2439b86800bc77"
        ],
        "inducing_commit_hash_pd": [
            "b63b42429ffea52ec9c9a0ead7dbc258ea4c2900"
        ],
        "matched": [
            "28b3056192f55251d88856d20a2439b86800bc77"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40189",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pig Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Pig Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Pig Provider is installed (Pig Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pig Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.",
        "URL": "https://github.com/apache/airflow/pull/27644",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "be8a62e596a0dc0f935114a9d585007b497312a2",
        "inducing_commit_hash_pyszz": [
            "3e7e42f028279a628d9e15d1ae4b6005593f8afb"
        ],
        "inducing_commit_hash_pd": [
            "2037303eef93fd36ab13746b045d1c1fee6aa143",
            "3e7e42f028279a628d9e15d1ae4b6005593f8afb",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "4bde99f1323d72f6c84c1548079d5e98fc0a2a9a"
        ],
        "matched": [
            "3e7e42f028279a628d9e15d1ae4b6005593f8afb"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40604",
        "Problem_Type": "CWE-134",
        "Description": "In Apache Airflow 2.3.0 through 2.3.4, part of a url was unnecessarily formatted, allowing for possible information extraction.",
        "URL": "https://github.com/apache/airflow/pull/26337",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "18386026c28939fa6d91d198c5489c295a05dcd2",
        "inducing_commit_hash_pyszz": [
            "9b3ed1f652fcdf6eaf672e5d15646a0512b852f4"
        ],
        "inducing_commit_hash_pd": [
            "9b3ed1f652fcdf6eaf672e5d15646a0512b852f4",
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68"
        ],
        "matched": [
            "9b3ed1f652fcdf6eaf672e5d15646a0512b852f4"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40754",
        "Problem_Type": "CWE-601",
        "Description": "In Apache Airflow 2.3.0 through 2.3.4, there was an open redirect in the webserver's `/confirm` endpoint.",
        "URL": "https://github.com/apache/airflow/pull/26409",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "56e7555c42f013f789a4b718676ff09b4a9d5135",
        "inducing_commit_hash_pyszz": [
            "df31902533e94b428e1fa19e5014047f0bae6fcc"
        ],
        "inducing_commit_hash_pd": [
            "df31902533e94b428e1fa19e5014047f0bae6fcc"
        ],
        "matched": [
            "df31902533e94b428e1fa19e5014047f0bae6fcc"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-40954",
        "Problem_Type": "CWE-78",
        "Description": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Spark Provider, Apache Airflow allows an attacker to read arbtrary files in the task execution context, without write access to DAG files. This issue affects Spark Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Spark Provider is installed (Spark Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Spark Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version that has lower version of the Spark Provider installed).",
        "URL": "https://github.com/apache/airflow/pull/27646",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "93589288156d56aff4b1f822b77695e3c58e4568",
        "inducing_commit_hash_pyszz": [
            "f5ad26dcdd7bcb724992528dce71056965b94d26"
        ],
        "inducing_commit_hash_pd": [
            "64100d2a2e0b9dafbd2f0b355d414781d98f41c9",
            "d06ab68f2c83ad5dce3cae1c5aa9a9a9f32cf934",
            "399ddb139652fee1bcefe2be09831e71bf5fa832",
            "b113432e7253811f55b373ab73c98079c724ead9",
            "39d90579843ac2627cd3d46f784304adacf372ed",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "3e6babe8ed8f8f281b67aa3f4e03bf3cfc1bcbaa",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "f5ad26dcdd7bcb724992528dce71056965b94d26",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "1f1b46dc011d2988edb66cf9aeaec9dd30c1b0e8",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "f5ad26dcdd7bcb724992528dce71056965b94d26"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-41672",
        "Problem_Type": "CWE-613",
        "Description": "In Apache Airflow, prior to version 2.4.1, deactivating a user wouldn't prevent an already authenticated user from being able to continue using the UI or API.",
        "URL": "https://github.com/apache/airflow/pull/26635",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "59707cdf7eacb698ca375b5220af30a39ca1018c",
        "inducing_commit_hash_pyszz": [
            "1edef28b315809c8367b29f3f1a83984dc6566c4"
        ],
        "inducing_commit_hash_pd": [
            "1edef28b315809c8367b29f3f1a83984dc6566c4",
            "23628534640b8cba4e37a008aec8c6eec6e086b1"
        ],
        "matched": [
            "1edef28b315809c8367b29f3f1a83984dc6566c4"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-43985",
        "Problem_Type": "CWE-601",
        "Description": "In Apache Airflow versions prior to 2.4.2, there was an open redirect in the webserver's `/confirm` endpoint.",
        "URL": "https://github.com/apache/airflow/pull/27143",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "68cb2daa410a72bcfb548587747afc9c5b946d11",
        "inducing_commit_hash_pyszz": [
            "65297673a318660fba76797e50d0c06804dfcafc"
        ],
        "inducing_commit_hash_pd": [
            "5c2bb7b0b0e717b11f093910b443243330ad93ca",
            "65297673a318660fba76797e50d0c06804dfcafc",
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06",
            "178dee9a5ed0cde3d7a7d4a47daeae85408fcd67",
            "a3dfd04ce4224e80c7b32351a744980e72bc10aa"
        ],
        "matched": [
            "65297673a318660fba76797e50d0c06804dfcafc"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-46421",
        "Problem_Type": "CWE-77",
        "Description": "Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in Apache Software Foundation Apache Airflow Hive Provider.This issue affects Apache Airflow Hive Provider: before 5.0.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/28101",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5f8481c799ea6bd742a5ccc194b2ff8dbe01eab5",
        "inducing_commit_hash_pyszz": [
            "9953a047c4b0471ceb6effc669dce8d03c2f935b"
        ],
        "inducing_commit_hash_pd": [
            "9953a047c4b0471ceb6effc669dce8d03c2f935b",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b"
        ],
        "matched": [
            "9953a047c4b0471ceb6effc669dce8d03c2f935b"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2022-46651",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an unauthorized actor to gain access to sensitive information in Connection edit view. This vulnerability is considered low since it requires someone with access to Connection resources specifically updating the connection to exploit it. Users should upgrade to version 2.6.3 or later which has removed the vulnerability.\n",
        "URL": "https://github.com/apache/airflow/pull/32309",
        "Tag": "['Patch']",
        "fix_commit_hash": "d01248382fe45a5f5a7fdeed4082a80c5f814ad8",
        "inducing_commit_hash_pyszz": [
            "208fba009980f66ccda3b238929c6cc90214eda4"
        ],
        "inducing_commit_hash_pd": [
            "208fba009980f66ccda3b238929c6cc90214eda4",
            "1dfae80412377eef0a38637535d6a1d3393cc4fe"
        ],
        "matched": [
            "208fba009980f66ccda3b238929c6cc90214eda4"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-22884",
        "Problem_Type": "CWE-77",
        "Description": "Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in Apache Software Foundation Apache Airflow, Apache Software Foundation Apache Airflow MySQL Provider.This issue affects Apache Airflow: before 2.5.1; Apache Airflow MySQL Provider: before 4.0.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/28811",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "45dd0c484e16ff56800cc9c047f56b4a909d2d0d",
        "inducing_commit_hash_pyszz": [
            "b39468d2878554ba60863656364b4a95eda30685"
        ],
        "inducing_commit_hash_pd": [
            "55ab5db82c4c4bd55b992b43a0f2d1d3febfb715",
            "4b031d39e12110f337151cda6693e2541bf71c2c",
            "057f3ae3a4afedf6d462ecf58b01dd6304d3e135",
            "b39468d2878554ba60863656364b4a95eda30685",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "059eda05f82fefce4410f44f761f945a27d83daf"
        ],
        "matched": [
            "b39468d2878554ba60863656364b4a95eda30685"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-22887",
        "Problem_Type": "CWE-22",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an attacker to perform unauthorized file access outside the intended directory structure by manipulating the run_id parameter. This vulnerability is considered low since it requires an authenticated user to exploit it. It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32293",
        "Tag": "['Patch']",
        "fix_commit_hash": "05bd90f563649f2e9c8f0c85cf5838315a665a02",
        "inducing_commit_hash_pyszz": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ],
        "inducing_commit_hash_pd": [
            "451c7cbc42a83a180c4362693508ed33dd1d1dab",
            "6970b233964ee254bbb343ed8bdc906c2f7bd974",
            "311140616daafe496310d642e4164bc53fbd2ad2",
            "71c64de96248694017897fdb3d9d241e7c980825",
            "1a854465b5b67e29082bb4c3e3e198cfbd67c845",
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b",
            "1a1f352479d6dbff21d73d3c51b1e5d5188e00e3"
        ],
        "matched": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-22888",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an attacker to cause a service disruption by manipulating the run_id parameter. This vulnerability is considered low since it requires an authenticated user to exploit it. It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32293",
        "Tag": "['Patch']",
        "fix_commit_hash": "05bd90f563649f2e9c8f0c85cf5838315a665a02",
        "inducing_commit_hash_pyszz": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ],
        "inducing_commit_hash_pd": [
            "451c7cbc42a83a180c4362693508ed33dd1d1dab",
            "6970b233964ee254bbb343ed8bdc906c2f7bd974",
            "311140616daafe496310d642e4164bc53fbd2ad2",
            "71c64de96248694017897fdb3d9d241e7c980825",
            "1a854465b5b67e29082bb4c3e3e198cfbd67c845",
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b",
            "1a1f352479d6dbff21d73d3c51b1e5d5188e00e3"
        ],
        "matched": [
            "1189fb43e97cb39ff771ffabd17d60cf440a9bb7"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25691",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Google Provider.\n\nThis issue affects Apache Airflow Google Provider versions before 8.10.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29497",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "5e6f8eb4d5fdcaa713022ee46b1ca9bd2e3ab44e",
        "inducing_commit_hash_pyszz": [
            "1f3260354988b304cf31d5e1d945ce91798bed48"
        ],
        "inducing_commit_hash_pd": [
            "828d1cba4d9b85a166debdd8a8dfe363935c22cd",
            "1f3260354988b304cf31d5e1d945ce91798bed48",
            "373c6aa4a208284b5ff72987e4bd8f4e2ada1a1b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "dfecb609c4a9d168390b259d2ff2a0ea3ac9d982",
            "fc440dc3c84ec7c5d3f39038090b214496f95c6a",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "1f3260354988b304cf31d5e1d945ce91798bed48"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25692",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Google Provider.\n\nThis issue affects Apache Airflow Google Provider versions before 8.10.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29499",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "32c571e5926983903ac8b9017c36f14137a797a5",
        "inducing_commit_hash_pyszz": [
            "5d4abbd58c33e7dfa8505e307d43420459d3df55"
        ],
        "inducing_commit_hash_pd": [
            "dfecb609c4a9d168390b259d2ff2a0ea3ac9d982",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "5d4abbd58c33e7dfa8505e307d43420459d3df55"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25693",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Sqoop Provider.\n\nThis issue affects Apache Airflow Sqoop Provider versions before 3.1.1.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29500",
        "Tag": "['Patch']",
        "fix_commit_hash": "655ffb835eb4c5343c3f2b4d37b352248f2768ef",
        "inducing_commit_hash_pyszz": [
            "1d531555ecd594ee7ec2c5d3fc87f8d4bcc2c27e"
        ],
        "inducing_commit_hash_pd": [
            "a9ac2b040b64de1aa5d9c2b9def33334e36a8d22",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132"
        ],
        "matched": [
            "1d531555ecd594ee7ec2c5d3fc87f8d4bcc2c27e"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25695",
        "Problem_Type": "CWE-209",
        "Description": "Generation of Error Message Containing Sensitive Information vulnerability in Apache Software Foundation Apache Airflow.This issue affects Apache Airflow: before 2.5.2.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29501",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "cf814550275bd04326f095cc28f93663daf3404b",
        "inducing_commit_hash_pyszz": [
            "eb5fea7b647e0f4b2338f86eeff6a90e1d6043bc"
        ],
        "inducing_commit_hash_pd": [
            "eb5fea7b647e0f4b2338f86eeff6a90e1d6043bc",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "eb5fea7b647e0f4b2338f86eeff6a90e1d6043bc"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25696",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in the Apache Airflow Hive Provider.\n\nThis issue affects Apache Airflow Hive Provider versions before 5.1.3.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29502",
        "Tag": "['Patch']",
        "fix_commit_hash": "1cb127b9fd22a7dc8e0b82cab8acb7cd4c317c9c",
        "inducing_commit_hash_pyszz": [
            "10796cb7ce52c8ac2f68024e531fdda779547bdf"
        ],
        "inducing_commit_hash_pd": [
            "10796cb7ce52c8ac2f68024e531fdda779547bdf"
        ],
        "matched": [
            "10796cb7ce52c8ac2f68024e531fdda779547bdf"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25754",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Privilege Context Switching Error vulnerability in Apache Software Foundation Apache Airflow.This issue affects Apache Airflow: before 2.6.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29506",
        "Tag": "['Patch']",
        "fix_commit_hash": "18347d36e67894604436f3ef47d273532683b473",
        "inducing_commit_hash_pyszz": [
            "fe46a934fc298ec3ac74e6c40ca7e1872d2482f9"
        ],
        "inducing_commit_hash_pd": [
            "bda39188bd127d0dd933cdff6c7e8d11ec6bf41b",
            "6c6b77a87891ee81ed384124e309dff72a85c02f",
            "b0669b532a7be9aa34a4390951deaa25897c62e6",
            "fe46a934fc298ec3ac74e6c40ca7e1872d2482f9"
        ],
        "matched": [
            "fe46a934fc298ec3ac74e6c40ca7e1872d2482f9"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-25956",
        "Problem_Type": "CWE-209",
        "Description": "Generation of Error Message Containing Sensitive Information vulnerability in the Apache Airflow AWS Provider.\n\nThis issue affects Apache Airflow AWS Provider versions before 7.2.1.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29587",
        "Tag": "['Patch']",
        "fix_commit_hash": "46d45e09cb5607ae583929f3eba1923a64631f48",
        "inducing_commit_hash_pyszz": [
            "9ad6d1202d0466d67b920ce8b316fd0e7b68ed88"
        ],
        "inducing_commit_hash_pd": [
            "432977be0cd1e95f623fa5edda2a227798fa2939"
        ],
        "matched": [
            "9ad6d1202d0466d67b920ce8b316fd0e7b68ed88"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-27604",
        "Problem_Type": "CWE-20",
        "Description": "Apache Airflow Sqoop Provider, versions before 4.0.0, is affected by a vulnerability that allows an attacker pass parameters with the connections, which makes it possible to implement RCE attacks via \u00c2\u2018sqoop import --connect\u00c2\u2019, obtain airflow server permissions, etc. The attacker needs to be logged in and have authorization (permissions) to create/edit connections.\n\n It is recommended to upgrade to a version that is not affected.\nThis issue was reported independently by happyhacking-k, And Xie Jianming and LiuHui of Caiji Sec Team also reported it.",
        "URL": "https://github.com/apache/airflow/pull/33039",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "59f5f58e2bfcc8c12b0b44d6c6ce5cfed60b8867",
        "inducing_commit_hash_pyszz": [
            "ddcd30e7c7f5daeab5f74fb3224a4d5e33cec95d"
        ],
        "inducing_commit_hash_pd": [
            "ddcd30e7c7f5daeab5f74fb3224a4d5e33cec95d",
            "655ffb835eb4c5343c3f2b4d37b352248f2768ef",
            "06acf40a4337759797f666d5bb27a5a393b74fed",
            "0481b9a95786a62de4776a735ae80e746583ef2b",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "82eb20e9f525c09b7d8b4eea896dedcfb6b04f28",
            "1d531555ecd594ee7ec2c5d3fc87f8d4bcc2c27e",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "ddcd30e7c7f5daeab5f74fb3224a4d5e33cec95d"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-28707",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Drill Provider.This issue affects Apache Airflow Drill Provider: before 2.3.2.\n\n",
        "URL": "https://github.com/apache/airflow/pull/30215",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "63d9b24aad0b4b9397682ddac1ea5824354789b3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "8808b641942e1b81c21db054fd6d36e2031cfab8"
        ],
        "matched": [
            "8808b641942e1b81c21db054fd6d36e2031cfab8"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-29247",
        "Problem_Type": "CWE-79",
        "Description": "Task instance details page in the UI is vulnerable to a stored XSS.This issue affects Apache Airflow: before 2.6.0.\n\n\n",
        "URL": "https://github.com/apache/airflow/pull/30779",
        "Tag": "['Patch']",
        "fix_commit_hash": "9c936208f46735269bec98a2038bd065e5581591",
        "inducing_commit_hash_pyszz": [
            "56a03710a607376a01cb201ec81eb9d87d7418fe"
        ],
        "inducing_commit_hash_pd": [
            "c920b1bd5c880e1dcb2ed7b6c0e2aa14fbd6b71b",
            "0db38ad1a2cf403eb546f027f2e5673610626f47"
        ],
        "matched": [
            "56a03710a607376a01cb201ec81eb9d87d7418fe"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-29247",
        "Problem_Type": "CWE-79",
        "Description": "Task instance details page in the UI is vulnerable to a stored XSS.This issue affects Apache Airflow: before 2.6.0.\n\n\n",
        "URL": "https://github.com/apache/airflow/pull/30447",
        "Tag": "['Patch']",
        "fix_commit_hash": "46c85ec11d224c133da6c45c1186c9aa498a7e75",
        "inducing_commit_hash_pyszz": [
            "324aca410bbbddb22336746338ea8a60ad0b3989"
        ],
        "inducing_commit_hash_pd": [
            "dd386c81f50fe2a93cf0bff0c3da2c66f2dc6e6a",
            "324aca410bbbddb22336746338ea8a60ad0b3989"
        ],
        "matched": [
            "324aca410bbbddb22336746338ea8a60ad0b3989"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-34395",
        "Problem_Type": "CWE-88",
        "Description": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') vulnerability in Apache Software Foundation Apache Airflow ODBC Provider.\nIn OdbcHook, A privilege escalation vulnerability exists in a system due to controllable ODBC driver parameters that allow the loading of arbitrary dynamic-link libraries, resulting in command execution.\nStarting version 4.0.0 driver can be set only from the hook constructor.\nThis issue affects Apache Airflow ODBC Provider: before 4.0.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/31713",
        "Tag": "['Patch']",
        "fix_commit_hash": "2844dad1c762f5c7dd1271866d3661bf66657300",
        "inducing_commit_hash_pyszz": [
            "2a819b11fb8dfba7b3c9b500d07467b455724506"
        ],
        "inducing_commit_hash_pd": [
            "9276310a43d17a9e9e38c2cb83686a15656896b2",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "2a819b11fb8dfba7b3c9b500d07467b455724506"
        ],
        "matched": [
            "2a819b11fb8dfba7b3c9b500d07467b455724506"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-35798",
        "Problem_Type": "CWE-20",
        "Description": "Input Validation vulnerability in Apache Software Foundation Apache Airflow ODBC Provider, Apache Software Foundation Apache Airflow MSSQL Provider.This\u00c2\u00a0vulnerability is considered low since it requires DAG code to use `get_sqlalchemy_connection` and someone with access to connection resources specifically\u00c2\u00a0updating the connection to exploit it.\n\nThis issue affects Apache Airflow ODBC Provider: before 4.0.0; Apache Airflow MSSQL Provider: before 3.4.1.\n\nIt is recommended to\u00c2\u00a0upgrade to a version that is not affected\n\n",
        "URL": "https://github.com/apache/airflow/pull/31984",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b6836986846058e9e5fa271fb7b22ae721020787",
        "inducing_commit_hash_pyszz": [
            "df5a54d21d6991d6cae05c38e1562da2196e76aa"
        ],
        "inducing_commit_hash_pd": [
            "df5a54d21d6991d6cae05c38e1562da2196e76aa",
            "2a819b11fb8dfba7b3c9b500d07467b455724506",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "fdd9b6f65b608c516b8a062b058972d9a45ec9e3"
        ],
        "matched": [
            "df5a54d21d6991d6cae05c38e1562da2196e76aa"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-35908",
        "Problem_Type": "CWE-863",
        "Description": "Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows unauthorized read access to a DAG through the URL.\u00c2\u00a0It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32014",
        "Tag": "['Patch']",
        "fix_commit_hash": "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db",
        "inducing_commit_hash_pyszz": [
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ],
        "inducing_commit_hash_pd": [
            "e2f19505bf3622935480e80bee55bf5b6d80097b"
        ],
        "matched": [
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-36543",
        "Problem_Type": "CWE-1333",
        "Description": "Apache Airflow, versions before 2.6.3, has a vulnerability where an authenticated user can use crafted input to make the current request hang.\u00c2\u00a0It is recommended to upgrade to a version that is not affected",
        "URL": "https://github.com/apache/airflow/pull/32060",
        "Tag": "['Patch']",
        "fix_commit_hash": "116e607ddcb32480e57c342f48226545ac6fc315",
        "inducing_commit_hash_pyszz": [
            "1dccaad46b901189c1928cef8419f1ea1160d550"
        ],
        "inducing_commit_hash_pd": [
            "1dccaad46b901189c1928cef8419f1ea1160d550",
            "6970b233964ee254bbb343ed8bdc906c2f7bd974",
            "d67ac5932dabbf06ae733fc57b48491a8029b8c2"
        ],
        "matched": [
            "1dccaad46b901189c1928cef8419f1ea1160d550"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-37379",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, in versions prior to 2.7.0, contains a security vulnerability that can be exploited by an authenticated user possessing Connection edit privileges. This vulnerability allows the user to access connection information and exploit the test connection feature by sending many requests, leading to a denial of service (DoS) condition on the server. Furthermore, malicious actors can leverage this vulnerability to establish harmful connections with the server.\n\nUsers of Apache Airflow are strongly advised to upgrade to version 2.7.0 or newer to mitigate the risk associated with this vulnerability. Additionally, administrators are encouraged to review and adjust user permissions to restrict access to sensitive functionalities, reducing the attack surface.\n\n",
        "URL": "https://github.com/apache/airflow/pull/32052",
        "Tag": "['Patch']",
        "fix_commit_hash": "e4c3ecf8ceaefa17525b495e4bcb5b2f41309603",
        "inducing_commit_hash_pyszz": [
            "d2e5b097e6251e31fb4c9bb5bf16dc9c77b56f75"
        ],
        "inducing_commit_hash_pd": [
            "ecbb366e63f893d6adcedb1942ca02981c6ec536",
            "d2e5b097e6251e31fb4c9bb5bf16dc9c77b56f75"
        ],
        "matched": [
            "d2e5b097e6251e31fb4c9bb5bf16dc9c77b56f75"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39441",
        "Problem_Type": "CWE-295",
        "Description": "Apache Airflow SMTP Provider before 1.3.0, Apache Airflow IMAP Provider before 3.3.0, and\u00c2\u00a0Apache Airflow before 2.7.0 are affected by the\u00c2\u00a0Validation of OpenSSL Certificate vulnerability.\n\nThe default SSL context with SSL library did not check a server's X.509\u00c2\u00a0certificate.\u00c2\u00a0 Instead, the code accepted any certificate, which could\u00c2\u00a0result in the disclosure of mail server credentials or mail contents\u00c2\u00a0when the client connects to an attacker in a MITM position.\n\nUsers are strongly advised to upgrade to Apache Airflow version 2.7.0 or newer, Apache Airflow IMAP Provider version 3.3.0 or newer, and Apache Airflow SMTP Provider version 1.3.0 or newer to mitigate the risk associated with this vulnerability",
        "URL": "https://github.com/apache/airflow/pull/33075",
        "Tag": "['Patch']",
        "fix_commit_hash": "e20325db38fdfdd9db423a345b13d18aab6fe578",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3fac5c35409ccfde771ce08ea8daeaac056b2c10"
        ],
        "matched": [
            "3fac5c35409ccfde771ce08ea8daeaac056b2c10"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39441",
        "Problem_Type": "CWE-295",
        "Description": "Apache Airflow SMTP Provider before 1.3.0, Apache Airflow IMAP Provider before 3.3.0, and\u00c2\u00a0Apache Airflow before 2.7.0 are affected by the\u00c2\u00a0Validation of OpenSSL Certificate vulnerability.\n\nThe default SSL context with SSL library did not check a server's X.509\u00c2\u00a0certificate.\u00c2\u00a0 Instead, the code accepted any certificate, which could\u00c2\u00a0result in the disclosure of mail server credentials or mail contents\u00c2\u00a0when the client connects to an attacker in a MITM position.\n\nUsers are strongly advised to upgrade to Apache Airflow version 2.7.0 or newer, Apache Airflow IMAP Provider version 3.3.0 or newer, and Apache Airflow SMTP Provider version 1.3.0 or newer to mitigate the risk associated with this vulnerability",
        "URL": "https://github.com/apache/airflow/pull/33108",
        "Tag": "['Patch']",
        "fix_commit_hash": "52ca7bfc988f4c9b608f544bc3e9524fd6564639",
        "inducing_commit_hash_pyszz": [
            "032cf7cdbce34ceb0e9380f86e07a6c077470396"
        ],
        "inducing_commit_hash_pd": [
            "44c43363f326d7c04411ad796ce58d30bce64fd7",
            "25a5f553c306549d3d1f0f71f3eee53c72447e41",
            "06acf40a4337759797f666d5bb27a5a393b74fed",
            "2a34dc9e8470285b0ed2db71109ef4265e29688b",
            "bfcae349b88fd959e32bfacd027a5be976fe2132"
        ],
        "matched": [
            "032cf7cdbce34ceb0e9380f86e07a6c077470396"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39441",
        "Problem_Type": "CWE-295",
        "Description": "Apache Airflow SMTP Provider before 1.3.0, Apache Airflow IMAP Provider before 3.3.0, and\u00c2\u00a0Apache Airflow before 2.7.0 are affected by the\u00c2\u00a0Validation of OpenSSL Certificate vulnerability.\n\nThe default SSL context with SSL library did not check a server's X.509\u00c2\u00a0certificate.\u00c2\u00a0 Instead, the code accepted any certificate, which could\u00c2\u00a0result in the disclosure of mail server credentials or mail contents\u00c2\u00a0when the client connects to an attacker in a MITM position.\n\nUsers are strongly advised to upgrade to Apache Airflow version 2.7.0 or newer, Apache Airflow IMAP Provider version 3.3.0 or newer, and Apache Airflow SMTP Provider version 1.3.0 or newer to mitigate the risk associated with this vulnerability",
        "URL": "https://github.com/apache/airflow/pull/33070",
        "Tag": "['Patch']",
        "fix_commit_hash": "120efc186556b1e9498f90ad436c74e5f4e138e9",
        "inducing_commit_hash_pyszz": [
            "88aa174047e673d0dbe2742b24210731d6a5378f"
        ],
        "inducing_commit_hash_pd": [
            "51e38173f9e50957ebe0879bcafe39eb00bc5ead",
            "88aa174047e673d0dbe2742b24210731d6a5378f"
        ],
        "matched": [
            "88aa174047e673d0dbe2742b24210731d6a5378f"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39508",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Execution with Unnecessary Privileges, : Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Software Foundation Apache Airflow.The \"Run Task\" feature enables authenticated user to bypass some of the restrictions put in place. It allows to execute code in the webserver context as well as allows to bypas limitation of access the user has to certain DAGs. The \"Run Task\" feature is considered dangerous and it has been removed entirely in Airflow 2.6.0\n\nThis issue affects Apache Airflow: before 2.6.0.\n\n",
        "URL": "https://github.com/apache/airflow/pull/29706",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "101d59c4b88ab979d305b8d96f612c27c8a44aa8",
        "inducing_commit_hash_pyszz": [
            "7dd19731f232d99d2947128c29e393b8ce013741"
        ],
        "inducing_commit_hash_pd": [
            "9c592cbe4300f64be5698d0fc7a79e067b5b6832",
            "1edef28b315809c8367b29f3f1a83984dc6566c4",
            "9510043546d1ac8ac56b67bafa537e4b940d68a4",
            "4c1fcee6ba1559fcb53836ac7fcccd68b1891d93",
            "1e8ac47589967f2a7284faeab0f65b01bfd8202d",
            "aeabef7ba4b4a7f2ca30b72da25aa32c8a86bc8b",
            "49431c9587ef13ff3ff2ff2b8e74d4d2952afe78",
            "51d61a9ec2ee66a7f1b45901a2bb732786341cf4",
            "f74d0ab38e00b83b49e20d410736e2a8c42de095",
            "bfcae349b88fd959e32bfacd027a5be976fe2132",
            "476d0f6e3d2059f56532cda36cdc51aa86bafb37",
            "24d0ecf4ee6dbfd2339847443d4b12033efe9c0f",
            "2bb26a38070a4b949bfb210ef1d5644e016e373a",
            "b333b24a04a752fd25ec48f76dce04a4bb5ed566",
            "4d0fd8ef6adc35f683c7561f05688a65fd7451f4",
            "22b49d334ef0008be7bd3d8481b55b8ab5d71c80",
            "a36cfe049a2c5948b24fde7a878fe19cabede5f7",
            "c6b27e309cbc29c73604969c88c8e8b437af583f",
            "944dcfbb918050274fd3a1cc51d8fdf460ea2429",
            "e29d33b89f7deea6eafb03006c37b60692781e61",
            "411c686800fd5cc5175fdb27a94a20f08a56c001",
            "ffa33e44affdfc9e8a53119a9a6461626d431546",
            "26175ee5d931b8454d61ccbbd5dd585f7288c97b",
            "3d3cc41678297ac113287760ed5fe9968a96f1d9",
            "c030729dcbe35a2a4869e46b57a761c8376ede8d",
            "9b63df8946308ccd7bf7e7ca02766bf09316cf93",
            "b4e9c678d7375401bb548302a2074a215aec5dc0",
            "4cb06219dc6b2c9fb888446165605e63aa16bdaa",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b",
            "3182ba2f402656bfc7d7777f1678161ec5a9cf79",
            "67e8bdd691ded0e88760b3d59b9c58ba43fa9453",
            "88292837ba219c99f94bf3e03c5befda470c83b4",
            "10c9cb5318fd8a9e41a7b4338e5052c8feece7ae",
            "d12dc188d97f83d29bb8bba8b7b10c452f4c159a",
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68",
            "f360414774f1ecb2e0f4e53ebdd623c7435f9a78",
            "2400de2c5ece644cadb870baeea28907fa4dcf58",
            "dbed51e702bf8177800183d2c4f595073aa2339d",
            "72679bef3abee141dd20f75d6ff977bd3978ecc8",
            "1047940ca4363b04044c4963b9c88f7632746407",
            "7dd19731f232d99d2947128c29e393b8ce013741",
            "8d31ca21a74a918a934912ecd47287b7a51193e2"
        ],
        "matched": [
            "7dd19731f232d99d2947128c29e393b8ce013741"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-39553",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Drill Provider.\n\nApache Airflow Drill Provider is affected by a vulnerability that allows an attacker to pass in malicious parameters when establishing a connection with DrillHook giving an opportunity to read files on the Airflow server.\nThis issue affects Apache Airflow Drill Provider: before 2.4.3.\nIt is recommended to upgrade to a version that is not affected.\n\n",
        "URL": "https://github.com/apache/airflow/pull/33074",
        "Tag": "['Patch']",
        "fix_commit_hash": "394a727ac2c18d58978bf186a7a92923460ec110",
        "inducing_commit_hash_pyszz": [
            "63d9b24aad0b4b9397682ddac1ea5824354789b3"
        ],
        "inducing_commit_hash_pd": [
            "63d9b24aad0b4b9397682ddac1ea5824354789b3",
            "8808b641942e1b81c21db054fd6d36e2031cfab8",
            "433e0296ad1a5ff1c545aa477fe08000089a6e1e"
        ],
        "matched": [
            "63d9b24aad0b4b9397682ddac1ea5824354789b3"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-40611",
        "Problem_Type": "CWE-863",
        "Description": "Apache Airflow, versions before 2.7.1, is affected by a vulnerability that allows\u00c2\u00a0authenticated and DAG-view authorized Users to modify some DAG run detail values when submitting notes. This could have them alter details such as configuration parameters, start date, etc.\n\nUsers should upgrade to version 2.7.1 or later which has removed the vulnerability.\n",
        "URL": "https://github.com/apache/airflow/pull/33413",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b7a46c970d638028a4a7643ad000dcee951fb9ef",
        "inducing_commit_hash_pyszz": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ],
        "inducing_commit_hash_pd": [
            "866a601b76e219b3c043e1dbbc8fb22300866351",
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1",
            "ac92b17964e698726f687986ded462144a50b831",
            "75d8ff96b4e7736b177c3bb8e949653d6a501736",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-41267",
        "Problem_Type": "CWE-829",
        "Description": "In the Apache Airflow HDFS Provider, versions prior to 4.1.1, a documentation\u00c2\u00a0info pointed users to an install incorrect pip package. As this package name was unclaimed, in theory, an attacker could claim this package and provide code that would be executed when this package was installed. The Airflow team has since taken ownership of the package (neutralizing the risk), and fixed the doc strings in version 4.1.1\n",
        "URL": "https://github.com/apache/airflow/pull/33813",
        "Tag": "['Patch']",
        "fix_commit_hash": "dfa70b942348ba51be7594499ff54030375e4d89",
        "inducing_commit_hash_pyszz": [
            "9a8c2044bd0dab209c1e4cbf11d59297664dab08"
        ],
        "inducing_commit_hash_pd": [
            "9a8c2044bd0dab209c1e4cbf11d59297664dab08",
            "8c37b74a208a808d905c1b86d081d69d7a1aa900"
        ],
        "matched": [
            "9a8c2044bd0dab209c1e4cbf11d59297664dab08"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42663",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.7.2, has a vulnerability that allows an authorized user who has access to read specific DAGs only, to read information about task instances in other DAGs.\nUsers of Apache Airflow are advised to upgrade to version 2.7.2 or newer to mitigate the risk associated with this vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/34315",
        "Tag": "['Patch']",
        "fix_commit_hash": "3df1af4c45705d67598753a96debf5619bbfee04",
        "inducing_commit_hash_pyszz": [
            "5772d4d150518e2986df986f07b0394a0f4458e2"
        ],
        "inducing_commit_hash_pd": [
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68",
            "5772d4d150518e2986df986f07b0394a0f4458e2"
        ],
        "matched": [
            "5772d4d150518e2986df986f07b0394a0f4458e2"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42780",
        "Problem_Type": "CWE-200",
        "Description": "Apache Airflow, versions prior to 2.7.2, contains a security vulnerability that allows authenticated users of Airflow to list warnings for all DAGs, even if the user had no permission to see those DAGs. It would reveal the dag_ids and the stack-traces of import errors for those DAGs with import errors.\nUsers of Apache Airflow are advised to upgrade to version 2.7.2 or newer to mitigate the risk associated with this vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/34355",
        "Tag": "['Patch']",
        "fix_commit_hash": "3570bbfbea69e2965f91b9964ce28bc268c68129",
        "inducing_commit_hash_pyszz": [
            "e35ffaa457eee569d4bc81be16d0db26e0f3e1b3"
        ],
        "inducing_commit_hash_pd": [
            "e35ffaa457eee569d4bc81be16d0db26e0f3e1b3"
        ],
        "matched": [
            "e35ffaa457eee569d4bc81be16d0db26e0f3e1b3"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42781",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Apache Airflow, versions before 2.7.3, has a vulnerability that allows an authorized user who has access to read specific DAGs only, to read information about task instances in other DAGs.\u00c2\u00a0 This is a different issue than CVE-2023-42663 but leading to similar outcome.\nUsers of Apache Airflow are advised to upgrade to version 2.7.3 or newer to mitigate the risk associated with this vulnerability.",
        "URL": "https://github.com/apache/airflow/pull/34939",
        "Tag": "['Patch']",
        "fix_commit_hash": "33ec72948f74f56f2adb5e2d388e60e88e8a3fa3",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "e2f19505bf3622935480e80bee55bf5b6d80097b"
        ],
        "matched": [
            "e2f19505bf3622935480e80bee55bf5b6d80097b"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-42792",
        "Problem_Type": "CWE-668",
        "Description": "Apache Airflow, in versions prior to 2.7.2, contains a security vulnerability that allows an authenticated user with limited access to some DAGs, to craft a request that could give the user write access to various DAG resources for DAGs that the user had no access to, thus, enabling the user to clear DAGs they shouldn't.\n\nUsers of Apache Airflow are strongly advised to upgrade to version 2.7.2 or newer to mitigate the risk associated with this vulnerability.\n",
        "URL": "https://github.com/apache/airflow/pull/34366",
        "Tag": "['Patch']",
        "fix_commit_hash": "4f1b500c47813c54349b7d3e48df0a444fb4826c",
        "inducing_commit_hash_pyszz": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ],
        "inducing_commit_hash_pd": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db",
            "e2f19505bf3622935480e80bee55bf5b6d80097b",
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ],
        "matched": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-45348",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "\nApache Airflow, versions 2.7.0 and 2.7.1, is affected by a vulnerability that allows an authenticated user to retrieve sensitive configuration information when the \"expose_config\" option is set to \"non-sensitive-only\". The `expose_config` option is False by default.\nIt is recommended to upgrade to a version that is not affected.",
        "URL": "https://github.com/apache/airflow/pull/34712",
        "Tag": "['Patch']",
        "fix_commit_hash": "f044589b685855a8fce8f5376bea2564c5a001f7",
        "inducing_commit_hash_pyszz": [
            "4a525e85e31b26d413c986c86d181114bb37bd06"
        ],
        "inducing_commit_hash_pd": [
            "cab342ee010bfd048006ca458c760b37470b6ea5",
            "4a525e85e31b26d413c986c86d181114bb37bd06"
        ],
        "matched": [
            "4a525e85e31b26d413c986c86d181114bb37bd06"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-46215",
        "Problem_Type": "CWE-532",
        "Description": "Insertion of Sensitive Information into Log File vulnerability in Apache Airflow Celery provider, Apache Airflow.\n\nSensitive information logged as clear text when rediss, amqp, rpc protocols are used as Celery result backend\nNote: the\u00c2\u00a0vulnerability is about the information exposed in the logs not about accessing the logs.\n\nThis issue affects Apache Airflow Celery provider: from 3.3.0 through 3.4.0; Apache Airflow: from 1.10.0 through 2.6.3.\n\nUsers are recommended to upgrade Airflow Celery provider to version 3.4.1\u00c2\u00a0and Apache Airlfow to version 2.7.0 which fixes the issue.\n\n",
        "URL": "https://github.com/apache/airflow/pull/34954",
        "Tag": "['Patch']",
        "fix_commit_hash": "dd59e3e63e0db349f40f8d1c91e7f6ef252caa4b",
        "inducing_commit_hash_pyszz": [
            "471fdacd853a5bcb190e1ffc017a4e650097ed69"
        ],
        "inducing_commit_hash_pd": [
            "ee38382efa54565c4b389eaeb536f0d45e12d498",
            "4e8f9cc8d02b29c325b8a5a76b4837671bdf5f68"
        ],
        "matched": [
            "471fdacd853a5bcb190e1ffc017a4e650097ed69"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-46288",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Airflow.This issue affects Apache Airflow from 2.4.0 to 2.7.0.\n\nSensitive configuration information has been exposed to authenticated users with the ability to read configuration via Airflow REST API for configuration even when the expose_config\u00c2\u00a0option is set to non-sensitive-only. The expose_config option is False by default. It is recommended to upgrade to a version that is not affected if you set expose_config\u00c2\u00a0to non-sensitive-only\u00c2\u00a0configuration. This is a different error than CVE-2023-45348\u00c2\u00a0which allows authenticated user to retrieve individual configuration values in 2.7.* by specially crafting their request (solved in 2.7.2).\n\nUsers are recommended to upgrade to version 2.7.2, which fixes the issue and additionally fixes\u00c2\u00a0CVE-2023-45348.\n\n",
        "URL": "https://github.com/apache/airflow/pull/32261",
        "Tag": "['Patch']",
        "fix_commit_hash": "4a525e85e31b26d413c986c86d181114bb37bd06",
        "inducing_commit_hash_pyszz": [
            "ab74d1ba98f0f1d601206164d2b9529681bed4b3"
        ],
        "inducing_commit_hash_pd": [
            "0fdc03b76499dab8a58aeaebcba3dcda0df94a5a",
            "ab74d1ba98f0f1d601206164d2b9529681bed4b3"
        ],
        "matched": [
            "ab74d1ba98f0f1d601206164d2b9529681bed4b3"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-47037",
        "Problem_Type": "CWE-863",
        "Description": "We failed to apply\u00c2\u00a0CVE-2023-40611 in 2.7.1 and this vulnerability was marked as fixed then.\u00c2\u00a0\n\nApache Airflow, versions before 2.7.3, is affected by a vulnerability that allows authenticated and DAG-view authorized Users to modify some DAG run detail values when submitting notes. This could have them alter details such as configuration parameters, start date, etc.\u00c2\u00a0\n\nUsers should upgrade to version 2.7.3 or later which has removed the vulnerability.\n\n",
        "URL": "https://github.com/apache/airflow/pull/33413",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b7a46c970d638028a4a7643ad000dcee951fb9ef",
        "inducing_commit_hash_pyszz": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ],
        "inducing_commit_hash_pd": [
            "866a601b76e219b3c043e1dbbc8fb22300866351",
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1",
            "ac92b17964e698726f687986ded462144a50b831",
            "75d8ff96b4e7736b177c3bb8e949653d6a501736",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "5cb8ef80a0bd84651fb660c552563766d8ec0ea1"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-47265",
        "Problem_Type": "CWE-79",
        "Description": "Apache Airflow, versions 2.6.0 through 2.7.3 has a stored XSS vulnerability that allows a DAG author to add an unbounded and not-sanitized javascript in the parameter description field of the DAG.\u00c2\u00a0This Javascript can be executed on the client side of any of the user who looks at the tasks in the browser sandbox. While this issue does not allow to exit the browser sandbox or manipulation of the server-side data - more than the DAG author already has, it allows to modify what the user looking at the DAG details sees in the browser - which opens up all kinds of possibilities of misleading other users.\n\nUsers of Apache Airflow are recommended to upgrade to version 2.8.0 or newer to mitigate the risk associated with this vulnerability\n",
        "URL": "https://github.com/apache/airflow/pull/35460",
        "Tag": "['Patch']",
        "fix_commit_hash": "0b995602e6e5894ee31625a4dd0e6aa255d2a651",
        "inducing_commit_hash_pyszz": [
            "2e52d65639f3a07f57d33aad6cce072dc6548a96"
        ],
        "inducing_commit_hash_pd": [
            "8069b500e8487675df0472b4a5df9081dcfa9d6c",
            "da6931561f59a64f6489c56a5675c2cc6e6a2bca",
            "e2455d870056391eed13e32e2d0ed571cc7089b4",
            "9c6f83bb6f3e3b57ae0abbe9eb0582fcde265702",
            "deb953d9b3c1cf450aee9dfe92f81e9ffa768f06",
            "88363b543f6f963247c332e9d7830bc782ed6e2d",
            "5e470c1fc422a05815a595cdf2544ebc586405cc",
            "2e52d65639f3a07f57d33aad6cce072dc6548a96",
            "01a819a42daa7990c30ab9776208b3dcb9f3a28b"
        ],
        "matched": [
            "2e52d65639f3a07f57d33aad6cce072dc6548a96"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-48291",
        "Problem_Type": "CWE-668",
        "Description": "Apache Airflow, in versions prior to 2.8.0, contains a security vulnerability that allows an authenticated user with limited access to some DAGs, to craft a request that could give the user write access to various DAG resources for DAGs that the user had no access to, thus, enabling the user to clear DAGs they shouldn't.\n\nThis is a missing fix for CVE-2023-42792 in Apache Airflow 2.7.2\u00c2\u00a0\n\nUsers of Apache Airflow are strongly advised to upgrade to version 2.8.0 or newer to mitigate the risk associated with this vulnerability.",
        "URL": "https://github.com/apache/airflow/pull/34366",
        "Tag": "['Patch']",
        "fix_commit_hash": "4f1b500c47813c54349b7d3e48df0a444fb4826c",
        "inducing_commit_hash_pyszz": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ],
        "inducing_commit_hash_pd": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db",
            "e2f19505bf3622935480e80bee55bf5b6d80097b",
            "dd623016aececfa7e0644e7da901902a7a629f44"
        ],
        "matched": [
            "ac65b82eeeeaa670e09a83c7da65cbac7e89f8db"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-49920",
        "Problem_Type": "CWE-352",
        "Description": "Apache Airflow, version 2.7.0 through 2.7.3, has a vulnerability that allows an attacker to trigger a DAG in a GET request without CSRF validation.\u00c2\u00a0As a result, it was possible for a malicious website opened in the same browser - by the user who also had Airflow UI opened - to trigger the execution of DAGs without the user's consent.\nUsers are advised to upgrade to version 2.8.0 or later which is not affected",
        "URL": "https://github.com/apache/airflow/pull/36026",
        "Tag": "['Patch']",
        "fix_commit_hash": "f5d802791fa5f6b13b635f06a1ea2eccc22a9ba7",
        "inducing_commit_hash_pyszz": [
            "c0362923fd8250328eab6e60f0cf7e855bfd352e"
        ],
        "inducing_commit_hash_pd": [
            "c0362923fd8250328eab6e60f0cf7e855bfd352e",
            "3bcaf3dd7e71993e1a89cf9367bf7c540cc88e75",
            "05bd90f563649f2e9c8f0c85cf5838315a665a02"
        ],
        "matched": [
            "c0362923fd8250328eab6e60f0cf7e855bfd352e"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-50783",
        "Problem_Type": "CWE-284",
        "Description": "Apache Airflow, versions before 2.8.0, is affected by a vulnerability that allows an authenticated user without the variable edit permission, to update a variable.\nThis flaw compromises the integrity of variable management, potentially leading to unauthorized data modification.\nUsers are recommended to upgrade to 2.8.0, which fixes this issue",
        "URL": "https://github.com/apache/airflow/pull/33932",
        "Tag": "['Patch']",
        "fix_commit_hash": "0e1c106d7cd0703125528a691088e42e17c99929",
        "inducing_commit_hash_pyszz": [
            "1b4c6bed94580eab656cc476e99a4980813b11ca"
        ],
        "inducing_commit_hash_pd": [
            "c030729dcbe35a2a4869e46b57a761c8376ede8d",
            "4a344f13d26ecbb627bb9968895b290bfd86e4da",
            "1b4c6bed94580eab656cc476e99a4980813b11ca",
            "d2cbf92290ac6b43930acdc58999f5a48640de49"
        ],
        "matched": [
            "1b4c6bed94580eab656cc476e99a4980813b11ca"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-51702",
        "Problem_Type": "CWE-532",
        "Description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
        "URL": "https://github.com/apache/airflow/pull/29498",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "b5296b74361bfe2449033eca5f732c4a4377f6bb",
        "inducing_commit_hash_pyszz": [
            "3d2c96e3f5d238955bccba190726d0fba860eb7a"
        ],
        "inducing_commit_hash_pd": [
            "971039454a3684d0ea7261dfe91f34ac4b62af72",
            "3d2c96e3f5d238955bccba190726d0fba860eb7a",
            "246d778e6b8042850ef8510bd25c52b1198030f1"
        ],
        "matched": [
            "3d2c96e3f5d238955bccba190726d0fba860eb7a"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-51702",
        "Problem_Type": "CWE-532",
        "Description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
        "URL": "https://github.com/apache/airflow/pull/30110",
        "Tag": "['Patch']",
        "fix_commit_hash": "274d9c3508179ae8b0f705d9787e8200be7718e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "ec5b4feb59816e4a13f779ad83d51206bf5ee0d9"
        ],
        "matched": [
            "ec5b4feb59816e4a13f779ad83d51206bf5ee0d9"
        ]
    },
    {
        "repo_name": "apache/airflow",
        "CVE_ID": "CVE-2023-51702",
        "Problem_Type": "CWE-532",
        "Description": "Since version 5.2.0, when using deferrable mode with the path of a Kubernetes configuration file for authentication, the Airflow worker serializes this configuration file as a dictionary and sends it to the triggerer by storing it in metadata without any encryption. Additionally, if used with an Airflow version between 2.3.0 and 2.6.0, the configuration dictionary will be logged as plain text in the triggerer service without masking. This allows anyone with access to the metadata or triggerer log to obtain the configuration file and use it to access the Kubernetes cluster.\n\nThis behavior was changed in version 7.0.0, which stopped serializing the file contents and started providing the file path instead to read the contents into the trigger. Users are recommended to upgrade to version 7.0.0, which fixes this issue.",
        "URL": "https://github.com/apache/airflow/pull/36492",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "8fb55f2127be379bf25ed5fd6d2933417e8da439",
        "inducing_commit_hash_pyszz": [
            "5da4afe908df22d3bb812d531ac437066dd5b816"
        ],
        "inducing_commit_hash_pd": [
            "a1b99fe5364977739b7d8f22a880eeb9d781958b",
            "ec5b4feb59816e4a13f779ad83d51206bf5ee0d9",
            "5da4afe908df22d3bb812d531ac437066dd5b816",
            "fc0e5a4d42ee882ca5bc20ea65be38b2c739644d",
            "f9e9d23457cba5d3e18b5bdb7b65ecc63735b65b"
        ],
        "matched": [
            "5da4afe908df22d3bb812d531ac437066dd5b816"
        ]
    },
    {
        "repo_name": "apache/brpc",
        "CVE_ID": "CVE-2024-23452",
        "Problem_Type": "CWE-444",
        "Description": "Request smuggling vulnerability in HTTP server in Apache bRPC 0.9.5~1.7.0 on all platforms allows attacker to smuggle request.\n\nVulnerability Cause Description:\n\nThe http_parser does not comply with the RFC-7230 HTTP 1.1 specification.\n\nAttack\u00c2\u00a0scenario:\nIf a message is received with both a Transfer-Encoding and a Content-Length header field, such a message might indicate an attempt to perform request smuggling or response splitting.\nOne particular attack scenario is that a bRPC made http server on the backend receiving requests in one persistent connection from frontend server that uses TE to parse request with the logic that 'chunk' is contained in the TE field. in that case an attacker can smuggle a request into the connection to the backend server.\u00c2\u00a0\n\nSolution:\nYou can choose one solution from below:\n1. Upgrade bRPC to version 1.8.0, which fixes this issue. Download link:  https://github.com/apache/brpc/releases/tag/1.8.0\n 2. Apply this patch:\u00c2\u00a0 https://github.com/apache/brpc/pull/2518 \n\n",
        "URL": "https://github.com/apache/brpc/pull/2518",
        "Tag": "['Patch']",
        "fix_commit_hash": "09b960026089d5efe22416b8cb7ec777663ca1e0",
        "inducing_commit_hash_pyszz": [
            "68432abe28f6cd64fbf7045127e7436c7062f1d0"
        ],
        "inducing_commit_hash_pd": [
            "68432abe28f6cd64fbf7045127e7436c7062f1d0",
            "308b3c81e12d2068b540488044d4a862cf256da8",
            "be19c28e502579a508bdd47f2b2c9c1f00cefa54",
            "29ac770af8244fd1aaaf92134bf2133a246e2837",
            "79981559623c8fca93ae8c32fc9dc62131acef09",
            "691b8a159425a5344c2feb9cb5bdbfa34b7f1687"
        ],
        "matched": [
            "68432abe28f6cd64fbf7045127e7436c7062f1d0"
        ]
    },
    {
        "repo_name": "apache/dolphinscheduler",
        "CVE_ID": "CVE-2023-49068",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache DolphinScheduler.This issue affects Apache DolphinScheduler: before 3.2.1.\n\nUsers are recommended to upgrade to version 3.2.1, which fixes the issue. At the time of disclosure of this advisory, this version has not yet been released. In the mean time, we recommend you make sure the logs are only available to trusted operators.\n\n",
        "URL": "https://github.com/apache/dolphinscheduler/pull/15192",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7308888c703fbe227887d2426273100582096134",
        "inducing_commit_hash_pyszz": [
            "8ae401e3d74a76ac8ce64f3f92427934309387dd"
        ],
        "inducing_commit_hash_pd": [
            "8d12dc0702622783a48f178e7028cbc7ef5b82e1"
        ],
        "matched": [
            "8ae401e3d74a76ac8ce64f3f92427934309387dd"
        ]
    },
    {
        "repo_name": "apache/dolphinscheduler",
        "CVE_ID": "CVE-2023-49299",
        "Problem_Type": "CWE-20",
        "Description": "Improper Input Validation vulnerability in Apache DolphinScheduler. An\u00c2\u00a0authenticated user can cause arbitrary, unsandboxed javascript to be executed on the server.This issue affects Apache DolphinScheduler: until 3.1.9.\n\nUsers are recommended to upgrade to version 3.1.9, which fixes the issue.\n\n",
        "URL": "https://github.com/apache/dolphinscheduler/pull/15228",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b5eddc0ce85d379080a51bf2162477f7d8c1b7d2",
        "inducing_commit_hash_pyszz": [
            "a55612e4f718fb35401b7393d2eb2862f725b37b"
        ],
        "inducing_commit_hash_pd": [
            "cf91544b99e158c9e97360c7234fd24bc488151a",
            "a55612e4f718fb35401b7393d2eb2862f725b37b",
            "b49b91c45d1c9e1ed1906b49d1fef63d753ca1ac",
            "2e1768aae6100bb05804c29c974bfaa274e2636f",
            "e34c65d5a676ad4ff9b8eca5c5446d578b0b39b3",
            "8d12dc0702622783a48f178e7028cbc7ef5b82e1"
        ],
        "matched": [
            "a55612e4f718fb35401b7393d2eb2862f725b37b"
        ]
    },
    {
        "repo_name": "apache/dolphinscheduler",
        "CVE_ID": "CVE-2023-49620",
        "Problem_Type": "CWE-862",
        "Description": "Before DolphinScheduler version 3.1.0, the login user could delete UDF function in the resource center unauthorized (which almost used in sql task), with\u00c2\u00a0unauthorized\u00c2\u00a0access vulnerability (IDOR), but after version 3.1.0 we fixed this issue. We mark this cve as moderate level because it still requires user login to operate, please upgrade to version 3.1.0 to avoid this\u00c2\u00a0vulnerability",
        "URL": "https://github.com/apache/dolphinscheduler/pull/10307",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "a4948f58e671ab263060da1de255af3ecd2530ac",
        "inducing_commit_hash_pyszz": [
            "7ac8ea493cf6f458097c695baa500dd0c22b3bb8"
        ],
        "inducing_commit_hash_pd": [
            "a409306601891c08d76f7bbfdc842012db1af537",
            "676a952bcbeba1790b03954915ec352cd920b6d1",
            "7ac8ea493cf6f458097c695baa500dd0c22b3bb8",
            "403a4a20f2a6e12f1448c0950ae58c37c3213806",
            "ae32da326287191df63f9a08493d60edb80853b2",
            "ba039dc252a2ddfe316297a2955f0ea9f966432a",
            "15ae4dfa742f2ccbe71b45f384d14221a4c38d88",
            "0344b21dbc32c8ff98801e536c03191d1b1f5f3d",
            "f5675170311ccc3cc8e6f88e74c956220297e8cd",
            "ef4ec213e3851f82e0fd5d3010973c4e3816d543",
            "070424fc7825d0452827482a8d4815cb543d0b65",
            "0fc419ed8f073217f5ee4e42b9f6e18cfda2eb32",
            "c7e80e42d79f56e237d296d430386860724588ff",
            "3f9dcd5d4489197b22027d752e2c0bd0d453c30c",
            "503be5f4007cc05bdcab268eb6f63c5cd72344fb",
            "0afb780718f47c28364019d53e3b2e154a9d0603",
            "9ae29a756f0aeed894c80f5e495d786ccf03f41f",
            "58b55d40142521c4d7485bc1b0aa050e31888567",
            "0e3cafec1d0a6529c6bb5371429a9b51bd60fd5a",
            "53ab6f7b92f531984037023a4808d41fe3a42fc3",
            "dc6c18902a864cb5a00f57d6fc9a9d91fbd3bbe8",
            "fe9967b00566f88c68993a290a54d2b991840527",
            "996790ce9ea48bd96aed6687d31afe931fc70893",
            "081adf4aaa7a11a4068acf123985fb5550138ec9",
            "38c965ddc990b68b9f3d4948fa5091af58a49a4b",
            "a53195fa15f2a8e66db60bb1f2143ddab36adb4e",
            "733acdfd76c10cd1948da7a96e222bbbfd62b777",
            "fe521723392f9f699afc763ba9c1ddb06f846f5a",
            "2b519f31e919e5ccf8d58b747e27594eb2d7306d",
            "b5636b043ff8cd3927c7e98b1347f23d26927b88",
            "701b535ae6a9fdd7c67797528fb9ff8f650db514",
            "fb422af73217e0ec699a6a9e1504b09eaf5f9d7e"
        ],
        "matched": [
            "7ac8ea493cf6f458097c695baa500dd0c22b3bb8"
        ]
    },
    {
        "repo_name": "apache/incubator-nuttx-apps",
        "CVE_ID": "CVE-2021-34125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Yuneec Mantis Q and PX4-Autopilot v 1.11.3 and below allow attacker to gain access to sensitive information via various nuttx commands.",
        "URL": "https://github.com/apache/incubator-nuttx-apps/pull/647/commits/2fc1157f8585acc39f13a31612ebf890f41e76ca",
        "Tag": "['Patch']",
        "fix_commit_hash": "6f4b1339986345fda940c611c2df6936aedf8014",
        "inducing_commit_hash_pyszz": [
            "08ff009855bc94c9449c984fdefacc72da400314"
        ],
        "inducing_commit_hash_pd": [
            "08ff009855bc94c9449c984fdefacc72da400314"
        ],
        "matched": [
            "08ff009855bc94c9449c984fdefacc72da400314"
        ]
    },
    {
        "repo_name": "apache/incubator-nuttx",
        "CVE_ID": "CVE-2021-34125",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue discovered in Yuneec Mantis Q and PX4-Autopilot v 1.11.3 and below allow attacker to gain access to sensitive information via various nuttx commands.",
        "URL": "https://github.com/apache/incubator-nuttx/pull/3292/commits/016873788280ca815ba886195535bbe601de6e48",
        "Tag": "['Patch']",
        "fix_commit_hash": "4bb624b8a16b35f7908d2af7a89331dd1349eff2",
        "inducing_commit_hash_pyszz": [
            "342cbe58ddda1483b9876a7260a8b3493d7452d0"
        ],
        "inducing_commit_hash_pd": [
            "6f94e4e9e7b8868930ce93b65330fedbee3af2c9",
            "6c25f3d142c1eb0ca0f4a97516bdfbb949794d74",
            "422888733b39e1a39b3050001455cfee875f23a4",
            "51b19d5f3885f647b874e0f37c1e0136b7dbb323",
            "9ea6d9aec5443b355570c5c78d5a9154076c0968",
            "0188bc49cebbcd8b57df28d2d827753556b88e16",
            "8491cd65bca944709fd3b6fc85e0927cb579c917",
            "be5c20cdae1b86231e7ee3445544bc51a8fc823d",
            "5bb3fbd69b2fcd6608acce5071c4cc927c01335f",
            "1185ff1fc6414067ae42ef64ef27b69d50c96751",
            "90f38af8dce11db13b85dffacddc44e305c730ac",
            "a7a258e05e351c5abe6ca816c5fed2c9830adaa6",
            "342cbe58ddda1483b9876a7260a8b3493d7452d0",
            "21e0daede1e5de0120e3841143ca1dff28de1635"
        ],
        "matched": [
            "342cbe58ddda1483b9876a7260a8b3493d7452d0"
        ]
    },
    {
        "repo_name": "apache/incubator-superset",
        "CVE_ID": "CVE-2018-8021",
        "Problem_Type": "CWE-502",
        "Description": "Versions of Superset prior to 0.23 used an unsafe load method from the pickle library to deserialize data leading to possible remote code execution. Note Superset 0.23 was released prior to any Superset release under the Apache Software Foundation.",
        "URL": "https://github.com/apache/incubator-superset/pull/4243",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2c72a7ae4fc0a8bac1f037a79efa90e1c5549710",
        "inducing_commit_hash_pyszz": [
            "2ab6a411f4b9fa75bc86b83f4aa4e3707e90e002"
        ],
        "inducing_commit_hash_pd": [
            "11a8e3591d281a8cde6fb0ab57ed54ec97035e23",
            "2969cc9993325acc730b794f9d0d0b07fe1a60ec",
            "73cd2ea3b17574f8fef1112aa5e5b39f843882f6",
            "ac577806071c415eda071aad466322e37eb5b81b"
        ],
        "matched": [
            "2ab6a411f4b9fa75bc86b83f4aa4e3707e90e002"
        ]
    },
    {
        "repo_name": "apache/submarine",
        "CVE_ID": "CVE-2023-46302",
        "Problem_Type": "CWE-502",
        "Description": "Apache Software Foundation Apache Submarine has a bug when serializing against yaml. The bug is caused by snakeyaml  https://nvd.nist.gov/vuln/detail/CVE-2022-1471 .\n\nApache Submarine uses JAXRS to define REST endpoints.  In order to\nhandle YAML requests (using application/yaml content-type), it defines\na YamlEntityProvider entity provider that will process all incoming\nYAML requests.  In order to unmarshal the request, the readFrom method\nis invoked, passing the entityStream containing the user-supplied data in `submarine-server/server-core/src/main/java/org/apache/submarine/server/utils/YamlUtils.java`.\n \nWe have now fixed this issue in the new version by replacing to `jackson-dataformat-yaml`.\nThis issue affects Apache Submarine: from 0.7.0 before 0.8.0.\u00c2\u00a0Users are recommended to upgrade to version 0.8.0, which fixes this issue.\nIf using the version smaller than 0.8.0  and not want to upgrade, you can try cherry-pick PR  https://github.com/apache/submarine/pull/1054  and rebuild the submart-server image to fix this.\n\n",
        "URL": "https://github.com/apache/submarine/pull/1054",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "1845140883b4bd3228385a556982cbadc19595b6",
        "inducing_commit_hash_pyszz": [
            "bc4bf08864ccd0a966f05c79936790f8ba1ff104"
        ],
        "inducing_commit_hash_pd": [
            "1a58d0a596cf73265faf577f2456e10431338642",
            "d3b59cd90808117469d786d03466fbb2ae6c0416",
            "bc4bf08864ccd0a966f05c79936790f8ba1ff104",
            "3d2a3e67530d2836ae9be8e5f9549bb30dcc53ca",
            "206efd9f6c2995f52059423ceb1e96e18786e76e",
            "02c070a41d4af0027249e5ddf09642d0e0d492fe",
            "48cdf7bbc82af714a5a5485c92d7da4f2fba3891",
            "b2c7e81f0123b736fc16cc498886c6062e68a4fb",
            "b08a6b6dd2b3d585f6768d3d1b3c680435c371f6"
        ],
        "matched": [
            "bc4bf08864ccd0a966f05c79936790f8ba1ff104"
        ]
    },
    {
        "repo_name": "apache/superset",
        "CVE_ID": "CVE-2023-36387",
        "Problem_Type": "CWE-863",
        "Description": "An improper default REST API permission for Gamma users in Apache Superset up to and including 2.1.0 allows for an authenticated Gamma user to test database connections.\n",
        "URL": "https://github.com/apache/superset/pull/24185",
        "Tag": "['Patch']",
        "fix_commit_hash": "8fab3dbff419165dbd55b197c6e9ed04fe227296",
        "inducing_commit_hash_pyszz": [
            "790ac5ef870815978f56ce81b806d43c18421940"
        ],
        "inducing_commit_hash_pd": [
            "790ac5ef870815978f56ce81b806d43c18421940",
            "31f406a526b1ca8e7a72b8f8429c148636426ef9"
        ],
        "matched": [
            "790ac5ef870815978f56ce81b806d43c18421940"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3251",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c4e4379a615b2a3252c6febfdb72afd9db5ee6ac",
        "inducing_commit_hash_pyszz": [
            "03d110c25d1a0e4f10af3a422452d7cae1495614"
        ],
        "inducing_commit_hash_pd": [
            "a1651345d11f228dfb392cc79169760e80d25f06",
            "c385cc39ffe785787d9fbf60e4faff72fc58d2dd",
            "4fb3b6eb3286793a6996aef6e106beb1b7df719f",
            "65477944357bdb8bef778dda91ff1319271d9172",
            "03d110c25d1a0e4f10af3a422452d7cae1495614",
            "bf34e291c82e9f7b8adc782f735a292829e09186",
            "dc6e42c63d553c58689df4d50a4de4657dba8660",
            "af76977adb9f3c0296a232688bbcb5a1421a6768",
            "70599abf90c5f67d9d6c4e320cba3289f1b3df5e"
        ],
        "matched": [
            "03d110c25d1a0e4f10af3a422452d7cae1495614"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3231",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "44af6e5ba6d323354da0dd00f35aa7920d477805",
        "inducing_commit_hash_pyszz": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "inducing_commit_hash_pd": [
            "65477944357bdb8bef778dda91ff1319271d9172",
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "matched": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3201",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe9c1276aba6768e78b72a486c07e7b853214b09",
        "inducing_commit_hash_pyszz": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "inducing_commit_hash_pd": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ],
        "matched": [
            "08512deb11a610ae7084ce678b19bd637e30b3e1"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8004",
        "Problem_Type": "CWE-444",
        "Description": "There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3192",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "08512deb11a610ae7084ce678b19bd637e30b3e1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "a1651345d11f228dfb392cc79169760e80d25f06",
            "65477944357bdb8bef778dda91ff1319271d9172",
            "c10495e5db9e636be3d18cb47c41dfd12b4f0ec4"
        ],
        "matched": [
            "a1651345d11f228dfb392cc79169760e80d25f06"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8022",
        "Problem_Type": "CWE-20",
        "Description": "A carefully crafted invalid TLS handshake can cause Apache Traffic Server (ATS) to segfault. This affects version 6.2.2. To resolve this issue users running 6.2.2 should upgrade to 6.2.3 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/2147",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2a112d0eda562c705c2621d1b6fbc5bf3218fc75",
        "inducing_commit_hash_pyszz": [
            "c128363e2ce3ad435769221466627f7fbff86cb8"
        ],
        "inducing_commit_hash_pd": [
            "a1651345d11f228dfb392cc79169760e80d25f06",
            "2b48fd327bb3e8a5ae66f5acad9169a08e740ecb",
            "a48fe23bd03fdb6965fce99254689a95b022cd89",
            "c128363e2ce3ad435769221466627f7fbff86cb8",
            "01a15380d56d1024217bb393c4c2c28a81b9e7a7"
        ],
        "matched": [
            "c128363e2ce3ad435769221466627f7fbff86cb8"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2018-8040",
        "Problem_Type": "CWE-668",
        "Description": "Pages that are rendered using the ESI plugin can have access to the cookie header when the plugin is configured not to allow access. This affects Apache Traffic Server (ATS) versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3. To resolve this issue users running 6.x should upgrade to 6.2.3 or later versions and 7.x users should upgrade to 7.1.4 or later versions.",
        "URL": "https://github.com/apache/trafficserver/pull/3926",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f4a5b7a3eb4904d59913d4b38e54a4caeecceae",
        "inducing_commit_hash_pyszz": [
            "7773395bc218b26890f01e0ef12b576a13416fdb"
        ],
        "inducing_commit_hash_pd": [
            "7773395bc218b26890f01e0ef12b576a13416fdb"
        ],
        "matched": [
            "7773395bc218b26890f01e0ef12b576a13416fdb"
        ]
    },
    {
        "repo_name": "apache/trafficserver",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/apache/trafficserver/pull/10564",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "b28ad74f117307e8de206f1de70c3fa716f90682",
        "inducing_commit_hash_pyszz": [
            "6550d81849b66a1f52c73bdce15b2c03d93cac29"
        ],
        "inducing_commit_hash_pd": [
            "edccb98c97f15abce60ddb795e8429ce940c1414",
            "0d2ad23921061c4117104b64d15bc17cae79c9fe",
            "6550d81849b66a1f52c73bdce15b2c03d93cac29",
            "5cd7b75d0f50f8da50119a4044314cc187905ae7",
            "46422dfaf007eccbda03183557805902ac853cef",
            "f2ebbcee400c3c91aa789382d7f7243797ed733c",
            "4810f98e746c2ac0f777bca0351b31f82fc0594d",
            "ef0f0e1ae1b9574695050ec370c6f40ccba6c25c",
            "490495431f1f11e9e52cff12df54d51115cef2c0",
            "2aae7251b793c9db3cb3ddd71f666e872522732f",
            "9c05e64df3e9eb00f786a42e29bfbdb4ffa76ec1",
            "e6291181b4eb6bc98b57fa1cd86ec07fd2d59928",
            "0e6e5c151cde5f06c15e295f663a98b2b7d37a6d",
            "11041d9368de4e68a6447d23d1fa9d04c7bbc7c7",
            "d430efe76ba0726ae64e8da9b8853c986d18af40",
            "50441b39e6631389ef95c4133f06bbf94544879c",
            "7bef8ca0b8a80efda417616d995a89c2b8eed119",
            "0ecd3fb1223019a37715f3b4db957fe8ca6cda13",
            "22733a32b81346cd758b69377c61d3569a63c13a",
            "693b3cb465d2867379a80e882899aca8ea98f389",
            "d91a8ca17bb17b08ce7f040b868e3c286a7bb0a6",
            "f2b45853cba1c49024e3985c3aa09b777dda7360",
            "cbbdd53cc2836df415bb3970edd7bf17b65e30eb",
            "83d1f110debd9d3ebbc827ee1138e69544b95559",
            "9c09dbc118f7ce22ce6a89ac88c7532f83ee23b0",
            "4208ecb8719add76aa46ab2005ff9424531e2e73",
            "91f1bb7b54827f80bd5b976e83e25bc86e4e3a3b",
            "aa5ead6edc46e46baa3832f512951ebe9ca83463",
            "923932fc5144a14ee334477dabf418545af1ae2c",
            "3db54378720e6f4c66e265c28b7c0d445afe5849",
            "adf9151d85b68ba5472eb29fa77f2a3dc184dec7",
            "0c53eaec1348cb71f2e9e8319c6803b53620a325",
            "07fb9130cdd458965a8631ff7cd2f1376d6ac689",
            "16172a4e79865d1201a51e85aeb72df8b0609986"
        ],
        "matched": [
            "6550d81849b66a1f52c73bdce15b2c03d93cac29"
        ]
    },
    {
        "repo_name": "apereo/cas",
        "CVE_ID": "CVE-2020-7226",
        "Problem_Type": "CWE-770",
        "Description": "CiphertextHeader.java in Cryptacular 1.2.3, as used in Apereo CAS and other products, allows attackers to trigger excessive memory allocation during a decode operation, because the nonce array length associated with \"new byte\" may depend on untrusted input within the header of encoded data.",
        "URL": "https://github.com/apereo/cas/pull/4685",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0def99e37feb0d403b7eb2299c864bbf1ecf8d7c",
        "inducing_commit_hash_pyszz": [
            "70a074905ad24e6cca5f048f23a11a6b4dd905e0"
        ],
        "inducing_commit_hash_pd": [
            "a22072e7f258f547be12d8fc4637388f883383de"
        ],
        "matched": [
            "70a074905ad24e6cca5f048f23a11a6b4dd905e0"
        ]
    },
    {
        "repo_name": "apolloconfig/apollo",
        "CVE_ID": "CVE-2023-25570",
        "Problem_Type": "CWE-306",
        "Description": "Apollo is a configuration management system. Prior to version 2.1.0, there are potential security issues if users expose apollo-configservice to the internet, which is not recommended. This is because there is no authentication feature enabled for the built-in eureka service. Malicious hackers may access eureka directly to mock apollo-configservice and apollo-adminservice. Login authentication for eureka was added in version 2.1.0. As a workaround, avoid exposing apollo-configservice to the internet.",
        "URL": "https://github.com/apolloconfig/apollo/pull/4663",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7df79bf8df6960433ed4ff782a54e3dfc74632bd",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "52f0084e9135e8641f5c0f3a89a164285645555d",
            "0be1e7037f59a8cec12ecb9e1eb340bc7957c43a"
        ],
        "matched": [
            "52f0084e9135e8641f5c0f3a89a164285645555d"
        ]
    },
    {
        "repo_name": "apollographql/router",
        "CVE_ID": "CVE-2023-45812",
        "Problem_Type": "CWE-754",
        "Description": "The Apollo Router is a configurable, high-performance graph router written in Rust to run a federated supergraph that uses Apollo Federation. Affected versions are subject to a Denial-of-Service (DoS) type vulnerability which causes the Router to panic and terminate when a multi-part response is sent. When users send queries to the router that uses the `@defer` or Subscriptions, the Router will panic. To be vulnerable, users of Router must have a coprocessor with `coprocessor.supergraph.response` configured in their `router.yaml` and also to support either `@defer` or Subscriptions. Apollo Router version 1.33.0 has a fix for this vulnerability which was introduced in PR #4014. Users are advised to upgrade. Users unable to upgrade should avoid using the coprocessor supergraph response or disable defer and subscriptions support and continue to use the coprocessor supergraph response.",
        "URL": "https://github.com/apollographql/router/pull/4014",
        "Tag": "['Patch']",
        "fix_commit_hash": "b917b8c117b46a2d508428c0856f4927dfcfc341",
        "inducing_commit_hash_pyszz": [
            "cf19df6b744043f3b60f55b86a75a3b26d0fd610"
        ],
        "inducing_commit_hash_pd": [
            "cf19df6b744043f3b60f55b86a75a3b26d0fd610"
        ],
        "matched": [
            "cf19df6b744043f3b60f55b86a75a3b26d0fd610"
        ]
    },
    {
        "repo_name": "apple/swift-nio",
        "CVE_ID": "CVE-2023-31136",
        "Problem_Type": "CWE-522",
        "Description": "PostgresNIO is a Swift client for PostgreSQL. Any user of PostgresNIO prior to version 1.14.2 connecting to servers with TLS enabled is vulnerable to a man-in-the-middle attacker injecting false responses to the client's first few queries, despite the use of TLS certificate verification and encryption. The vulnerability is addressed in PostgresNIO versions starting from 1.14.2. There are no known workarounds for unpatched users.",
        "URL": "https://github.com/apple/swift-nio/pull/2419",
        "Tag": "['Patch']",
        "fix_commit_hash": "546eaa261ec5028b9cc5c7fa883fba9dd5881a3b",
        "inducing_commit_hash_pyszz": [
            "1f94a6e62057745b490e89752a257e2812cd5f26"
        ],
        "inducing_commit_hash_pd": [
            "1f94a6e62057745b490e89752a257e2812cd5f26"
        ],
        "matched": [
            "1f94a6e62057745b490e89752a257e2812cd5f26"
        ]
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2018-20552",
        "Problem_Type": "CWE-125",
        "Description": "Tcpreplay before 4.3.1 has a heap-based buffer over-read in packet2tree in tree.c.",
        "URL": "https://github.com/appneta/tcpreplay/pull/532/commits/6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "inducing_commit_hash_pyszz": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "inducing_commit_hash_pd": [
            "68f67b1a3a4d319543692afb5bd5b191ec984287",
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "matched": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ]
    },
    {
        "repo_name": "appneta/tcpreplay",
        "CVE_ID": "CVE-2018-20553",
        "Problem_Type": "CWE-125",
        "Description": "Tcpreplay before 4.3.1 has a heap-based buffer over-read in get_l2len in common/get.c.",
        "URL": "https://github.com/appneta/tcpreplay/pull/532/commits/6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6b830a1640ca20528032c89a4fdd8291a4d2d8b2",
        "inducing_commit_hash_pyszz": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "inducing_commit_hash_pd": [
            "68f67b1a3a4d319543692afb5bd5b191ec984287",
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ],
        "matched": [
            "0f594b0948dc1216bfe29fec58b0a8e54f21890b"
        ]
    },
    {
        "repo_name": "appsmithorg/appsmith",
        "CVE_ID": "CVE-2022-38298",
        "Problem_Type": "CWE-918",
        "Description": "Appsmith v1.7.11 was discovered to allow attackers to execute an authenticated Server-Side Request Forgery (SSRF) via redirecting incoming requests to the AWS internal metadata endpoint.",
        "URL": "https://github.com/appsmithorg/appsmith/pull/15782",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0967b516b69a6e9438a19f8f6953cf1d7d2d9aa6",
        "inducing_commit_hash_pyszz": [
            "d7411be855570e5dcae2e1d47b9571f0b81b8c05"
        ],
        "inducing_commit_hash_pd": [
            "71a8936e107baa5f8030359381cb31fd047363ed",
            "d7411be855570e5dcae2e1d47b9571f0b81b8c05"
        ],
        "matched": [
            "d7411be855570e5dcae2e1d47b9571f0b81b8c05"
        ]
    },
    {
        "repo_name": "appsmithorg/appsmith",
        "CVE_ID": "CVE-2022-38299",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue in the Elasticsearch plugin of Appsmith v1.7.11 allows attackers to connect disallowed hosts to the AWS/GCP internal metadata endpoint.",
        "URL": "https://github.com/appsmithorg/appsmith/pull/15834",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c1dbca67796f635711ff84ea9f8b4365039efa39",
        "inducing_commit_hash_pyszz": [
            "5c1ad6403e12a97a3c6ad8945bd02bd48445b88d"
        ],
        "inducing_commit_hash_pd": [
            "828339605657c978388415c011e21295ab19a503",
            "e6b77a129961251a6a19a03f6d4e1a73027c4614",
            "91e308665bb28fcf34e931a11fba7713db832e87",
            "52bfd258248c8c8b3ab9597a2d5eb0d5291551e7",
            "5c1ad6403e12a97a3c6ad8945bd02bd48445b88d",
            "6df4dafead811b3a9484fe8fbd152cd1c642d00b",
            "217e36aaa992ed5599d177a28161673e1cc496fa",
            "eeaa26a7ccb907dc7814dfb3aee9135b467c5f9a",
            "fa1a0549fffa0577389548ef4d3c979492caa8ce",
            "0bb99dd087d100cf51643f32f31f39ce3ae06e29",
            "a00c144e85d51af9e5b1c5e691fcd28bf5b967a0",
            "470f2fafcdfd7502910e32a02fd67db85a0cf136",
            "247e5d7ea4ad40f49c880a740414d19aa65588e0"
        ],
        "matched": [
            "5c1ad6403e12a97a3c6ad8945bd02bd48445b88d"
        ]
    },
    {
        "repo_name": "ardatan/graphql-tools",
        "CVE_ID": "CVE-2021-23326",
        "Problem_Type": "CWE-78",
        "Description": "This affects the package @graphql-tools/git-loader before 6.2.6. The use of exec and execSync in packages/loaders/git/src/load-git.ts allows arbitrary command injection.",
        "URL": "https://github.com/ardatan/graphql-tools/pull/2470",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a966beee8ca8b2f4adfe93318b96e4a5c501eac",
        "inducing_commit_hash_pyszz": [
            "df6e0aed3294b76e3774f0f290870904cf8695f5"
        ],
        "inducing_commit_hash_pd": [
            "df6e0aed3294b76e3774f0f290870904cf8695f5",
            "ae7c968deb2e6f51024a385abfc6455c0db5a5df",
            "479892bd7b7caa3e7ff843c2a589a24d32d48aeb"
        ],
        "matched": [
            "df6e0aed3294b76e3774f0f290870904cf8695f5"
        ]
    },
    {
        "repo_name": "arendst/Tasmota",
        "CVE_ID": "CVE-2022-43294",
        "Problem_Type": "CWE-787",
        "Description": "Tasmota before commit 066878da4d4762a9b6cb169fdf353e804d735cfd was discovered to contain a stack overflow via the ClientPortPtr parameter at lib/libesp32/rtsp/CRtspSession.cpp.",
        "URL": "https://github.com/arendst/Tasmota/pull/16802/commits/066878da4d4762a9b6cb169fdf353e804d735cfd",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "066878da4d4762a9b6cb169fdf353e804d735cfd",
        "inducing_commit_hash_pyszz": [
            "d092879f710f77123e67743b97016375d93e8962"
        ],
        "inducing_commit_hash_pd": [
            "d092879f710f77123e67743b97016375d93e8962"
        ],
        "matched": [
            "d092879f710f77123e67743b97016375d93e8962"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2020-11576",
        "Problem_Type": "CWE-203",
        "Description": "Fixed in v1.5.1, Argo version v1.5.0 was vulnerable to a user-enumeration vulnerability which allowed attackers to determine the usernames of valid (non-SSO) accounts because /api/v1/session returned 401 for an existing username and 404 otherwise.",
        "URL": "https://github.com/argoproj/argo-cd/pull/3215",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c2be618276369c0a9e60a49d9b8151f0136fde7",
        "inducing_commit_hash_pyszz": [
            "fdf7566bb7488fed194858f383a3424a8a770c51"
        ],
        "inducing_commit_hash_pd": [
            "fa4b76161211727b63b1abda66a587aa5fd048ba",
            "cbf9585d8451b550bf4359c71072aa01b2b9b87f",
            "0f2a88102dcd3212161454f8d431445e1cdee538",
            "20adad76ef811773c06231b0dd38a733d956cb34",
            "19906ded5b6cb1ac3144156c1a37bf7c82958ca2",
            "dc8a2f5d6228b6b6cd139bdcd7c99ef5fdc98adf",
            "7b6b945cbf46af11cef182a92d7fe72fcb1354d3",
            "abf6888dd505a1a79444155b316cf53169b6f343",
            "5cedfb8ead830e4cdea73e83b9d17e0f618c9529",
            "dc662da3d605bd7189ce6c06b0dbc1661d4bf2fb",
            "b2b5eea3431b076bc185a5c8af4683c6f2c3838a",
            "173ecd9397a6a91c85931675874b0a9550be1346",
            "fdf7566bb7488fed194858f383a3424a8a770c51",
            "00134d2faf736927c010c691862a5cd5601f490b",
            "0479fcdf82b1719fd97767ea74509063e9308b0a",
            "4f6b686ed7a49103e2bdd08b2baefd7811887ba2",
            "66b4f3a685782f423b3b09456c13d85a58cbc879",
            "0ea0404044f69c7f70ff3c7e61ea0eef0f611df5",
            "48ef2e919e52ccf1f13a5816a0bd09246d542f45",
            "212ca9e37ee93366a6f95c54593fe572b5413c8b",
            "416969730235593181ab88dc0d6efb80ff0e7902",
            "d715ac9e53dfaa7dbe6377bcc65cb77481158b00",
            "134469c5f0c7d08d68c3bbe1d4a5d03f7244d4d1",
            "eb7f942acbad6ae2b88130e42215e9359f352353",
            "456ae3ab841ffb48e5f45c1a25ee36f15e45c02d",
            "7d86b51246503f9a082359efffb5649bf8b046f3",
            "4296a87e6b5f498a55a47e1af4d0fed7f3c2493b",
            "60fedf09850060c4337ecfdd2d21ab148ffbd3f2",
            "09067585faf419e51a549a9c4c38192b41c598c3",
            "6bc98f91b146ab56cd9cbdd66d756cb281730c59",
            "7fd326eb21d4c1de01dfb38b2565688d0abe4a90",
            "ac938fe8a3af46f7aac07d607bfdd0a375e74103",
            "062b13e92a2ae38408a5b2a007accb46ab84ca8d",
            "670921df902855b209094b59f32ce3e051a847fd",
            "f8a4d662f2f86db193092addbda1ab3972a0194b",
            "5be6db4689856aa5e5d9d7aecaf1c9c1594d3651",
            "5953080c96b3de29844039faa0cc61ec25b28907",
            "66f64fbf151fa450a7023958b967231d30899cb3"
        ],
        "matched": [
            "fdf7566bb7488fed194858f383a3424a8a770c51"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2021-23347",
        "Problem_Type": "CWE-79",
        "Description": "The package github.com/argoproj/argo-cd/cmd before 1.7.13, from 1.8.0 and before 1.8.6 are vulnerable to Cross-site Scripting (XSS) the SSO provider connected to Argo CD would have to send back a malicious error message containing JavaScript to the user.",
        "URL": "https://github.com/argoproj/argo-cd/pull/5563",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e896c0e4b46974288f61f612701c34d171e05456",
        "inducing_commit_hash_pyszz": [
            "dc662da3d605bd7189ce6c06b0dbc1661d4bf2fb"
        ],
        "inducing_commit_hash_pd": [
            "5c7a3329f390e61f63b2f0565c364cdfa7d48d41"
        ],
        "matched": [
            "dc662da3d605bd7189ce6c06b0dbc1661d4bf2fb"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2023-25163",
        "Problem_Type": "CWE-532",
        "Description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v2.6.0-rc1 have an output sanitization bug which leaks repository access credentials in error messages. These error messages are visible to the user, and they are logged. The error message is visible when a user attempts to create or update an Application via the Argo CD API (and therefor the UI or CLI). The user must have `applications, create` or `applications, update` RBAC access to reach the code which may produce the error. The user is not guaranteed to be able to trigger the error message. They may attempt to spam the API with requests to trigger a rate limit error from the upstream repository. If the user has `repositories, update` access, they may edit an existing repository to introduce a URL typo or otherwise force an error message. But if they have that level of access, they are probably intended to have access to the credentials anyway. A patch for this vulnerability has been released in version 2.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "URL": "https://github.com/argoproj/argo-cd/pull/12320",
        "Tag": "['Patch']",
        "fix_commit_hash": "17167fc2e7e28a5b25151c8a269ea17477038aba",
        "inducing_commit_hash_pyszz": [
            "5515b8ce9ddd2133c4b49c01d771122e5738ee39"
        ],
        "inducing_commit_hash_pd": [
            "c6fa942e945977afe2ae78c86670d5bb667b609e"
        ],
        "matched": [
            "5515b8ce9ddd2133c4b49c01d771122e5738ee39"
        ]
    },
    {
        "repo_name": "argoproj/argo-cd",
        "CVE_ID": "CVE-2023-40029",
        "Problem_Type": "CWE-532",
        "Description": "Argo CD is a declarative continuous deployment for Kubernetes. Argo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in`kubectl.kubernetes.io/last-applied-configuration` annotation. pull request #7139 introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the `kubectl.kubernetes.io/last-applied-configuration` annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have `clusters, get` RBAC access. **Note:** In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive. The bug has been patched in versions 2.8.3, 2.7.14, and 2.6.15. Users are advised to upgrade. Users unable to upgrade should update/deploy cluster secret with `server-side-apply` flag which does not use or rely on `kubectl.kubernetes.io/last-applied-configuration` annotation. Note: annotation for existing secrets will require manual removal.\n\n",
        "URL": "https://github.com/argoproj/argo-cd/pull/7139",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "7122b83fc346ec2729227405a2f9c2aa84b0bf80",
        "inducing_commit_hash_pyszz": [
            "49a854a738c8a4da91bf8fee3bdd2bd3dddb77aa"
        ],
        "inducing_commit_hash_pd": [
            "58ac345f2bd4054a12b4991a8909c56a035867d9",
            "10d05cdb60fe65770809e58eee400b5d92764228",
            "49a854a738c8a4da91bf8fee3bdd2bd3dddb77aa",
            "12ec99ad01a945e045225e5c239f8ee203e8139a"
        ],
        "matched": [
            "49a854a738c8a4da91bf8fee3bdd2bd3dddb77aa"
        ]
    },
    {
        "repo_name": "argoproj/argo-events",
        "CVE_ID": "CVE-2022-31054",
        "Problem_Type": "CWE-787",
        "Description": "Argo Events is an event-driven workflow automation framework for Kubernetes. Prior to version 1.7.1, several `HandleRoute` endpoints make use of the deprecated `ioutil.ReadAll()`. `ioutil.ReadAll()` reads all the data into memory. As such, an attacker who sends a large request to the Argo Events server will be able to crash it and cause denial of service. A patch for this vulnerability has been released in Argo Events version 1.7.1.",
        "URL": "https://github.com/argoproj/argo-events/pull/1966",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "143f8beb81e87af523dd15a6de850c5e6a0e8f59",
        "inducing_commit_hash_pyszz": [
            "c70a1d11cd2818f6164bbcfef510d9ba10ef7cdc"
        ],
        "inducing_commit_hash_pd": [
            "22de2c470487dcd3f6e2255727e522b305df2d4c",
            "28a5c2be7638580cde71598e8a9f58edf3283857",
            "d3673d8ef952e3442377c193f1f3508d114b7fb5",
            "fdc8eef12c488cc9854313289cc004bcbdd85f47",
            "c16a1c597ff03b58d460307f50baede16fd059d4",
            "21cb5b5d0780549bd2837f408683c6fa6335f2da",
            "9d4a5c52dcd332a4fa462f739fc28d7e134ad6b7",
            "3cf92547cce01a26dc58e5634837936fcea901e2",
            "6939b1b46b7e3e997091a48124c99791f1011458",
            "89897386b74f62c61baf0d5dc320dab6ead67428",
            "af1f8557caaed0f081bac3a9172c51c793f65ffb",
            "8f96b097242b8380de84c9ee670923746e962f61",
            "38d6adc939e6ddbbae99eafc3f65da83040185c3",
            "fcf4944fc0b4f899eb4c20bb15fb3b68c763c102",
            "92968e2d987800eb053d7bd0249f02bfee948a90",
            "b5e5d8e8b3186660e3f456ed3c36919a10d96acf",
            "849a9ffb74cc402d20dedf0b57380bda4f09bb71",
            "f493709fe2427ee0bd35159d2137bbc004ceacfb",
            "6a9358204a065cf902b289d2f7cccad11c3c362c",
            "feeaf5d0420f6949ccaf1904a8dcd58c65a176ac",
            "0019098f333aa964c4380b6dd5a69afb12a1dcdf",
            "b839fd052e19aa80d538190a532ebb206ed527ad",
            "f02d2cd7bdac456bb8ba6b3de4a97831c403c7af",
            "d6e6aed65b1f538f3148ec01ec95820924d26e29",
            "1cf98ab45ad1ae189da7a89fd453252f0e8e890b",
            "4ba0855140e3d5397736132767aac2255b0f1da9",
            "12ae7b2e80f84faa0bafa476512473c59bbcb5be",
            "93cd06d67d3a80c009d28ca426dfa74936edba4b",
            "58cc0930603dfd4a685eb904e17610bbc2ca8637",
            "145fd9a940833c6e5b398994305d85847215d957",
            "feed8019901222470e02c693ee7216f59ecb9a50",
            "2f027680621e8d7696a917764fd12519c757025e",
            "f91e05905ae55094912ff1153b80fd3736db7727",
            "88dc8b117f49504085c3b9d14dda5a1e2d46411d",
            "28e23ce27180b0e457034548da635e198ab0ca83",
            "160657f18961af7006567947f82b2b06c0808921",
            "2363cc1f448ebc689b6cde967ca90b6a5461cef7",
            "c70a1d11cd2818f6164bbcfef510d9ba10ef7cdc",
            "437cb88b1b840cd7402c048c6b5ac0e927caf3e8",
            "099ed605dd80db9f3b607c7987d945b428068095",
            "6b7b466bbff7e22227e33dd955ad4e5cd3755f02"
        ],
        "matched": [
            "c70a1d11cd2818f6164bbcfef510d9ba10ef7cdc"
        ]
    },
    {
        "repo_name": "argoproj/argo-workflows",
        "CVE_ID": "CVE-2022-29164",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. In affected versions an attacker can create a workflow which produces a HTML artifact containing an HTML file that contains a script which uses XHR calls to interact with the Argo Server API. The attacker emails the deep-link to the artifact to their victim. The victim opens the link, the script starts running. As the script has access to the Argo Server API (as the victim), so may read information about the victim\u00c2\u2019s workflows, or create and delete workflows. Note the attacker must be an insider: they must have access to the same cluster as the victim and must already be able to run their own workflows. The attacker must have an understanding of the victim\u00c2\u2019s system. We have seen no evidence of this in the wild. We urge all users to upgrade to the fixed versions.",
        "URL": "https://github.com/argoproj/argo-workflows/pull/8585",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "87470e1c2bf703a9110e97bb755614ce8757fdcc",
        "inducing_commit_hash_pyszz": [
            "3d892d9b481c5eefeb309b462b3f166a31335bc4"
        ],
        "inducing_commit_hash_pd": [
            "284adfe16aeb11536a1c98f1956fdeb76dac4f1c",
            "3d892d9b481c5eefeb309b462b3f166a31335bc4"
        ],
        "matched": [
            "3d892d9b481c5eefeb309b462b3f166a31335bc4"
        ]
    },
    {
        "repo_name": "ariabuckles/simple-markdown",
        "CVE_ID": "CVE-2019-25102",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability, which was classified as problematic, was found in simple-markdown 0.6.0. Affected is an unknown function of the file simple-markdown.js. The manipulation with the input <<<<<<<<<<:/:/:/:/:/:/:/:/:/:/ leads to inefficient regular expression complexity. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 0.6.1 is able to address this issue. The patch is identified as 015a719bf5cdc561feea05500ecb3274ef609cd2. It is recommended to upgrade the affected component. VDB-220638 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/ariabuckles/simple-markdown/pull/73",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "015a719bf5cdc561feea05500ecb3274ef609cd2",
        "inducing_commit_hash_pyszz": [
            "90ef64a857169e68e7a9fde396b57b061372f396"
        ],
        "inducing_commit_hash_pd": [
            "90ef64a857169e68e7a9fde396b57b061372f396"
        ],
        "matched": [
            "90ef64a857169e68e7a9fde396b57b061372f396"
        ]
    },
    {
        "repo_name": "arvidn/libtorrent",
        "CVE_ID": "CVE-2016-7164",
        "Problem_Type": "CWE-20",
        "Description": "The construct function in puff.cpp in Libtorrent 1.1.0 allows remote torrent trackers to cause a denial of service (segmentation fault and crash) via a crafted GZIP response.",
        "URL": "https://github.com/arvidn/libtorrent/pull/1022",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "debf3c6e3688aab8394fe5c47737625faffe6f9e",
        "inducing_commit_hash_pyszz": [
            "a1f59f6cf197e08e6c2b658762996f944d5f2ca8"
        ],
        "inducing_commit_hash_pd": [
            "a1f59f6cf197e08e6c2b658762996f944d5f2ca8",
            "43c41ddfb1c0ae9503c66e152afc0bf8361c59df",
            "c0b0f3d1087061434823598ad5c4be7e9dec055e",
            "2910a4a10cd3208c446bd82c1702f2da1054ae5b",
            "f9c9d0ad0d19ad96a5aee38c0b346d2651af06ee"
        ],
        "matched": [
            "a1f59f6cf197e08e6c2b658762996f944d5f2ca8"
        ]
    },
    {
        "repo_name": "Asymmetric-InfoSec/Power-Response",
        "CVE_ID": "CVE-2019-15519",
        "Problem_Type": "CWE-22",
        "Description": "Power-Response before 2019-02-02 allows directory traversal (up to the application's main directory) via a plugin.",
        "URL": "https://github.com/Asymmetric-InfoSec/Power-Response/pull/156",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fc65f0630fe3935a6cdcdf84ff271893f30a0f2a",
        "inducing_commit_hash_pyszz": [
            "d6c3a454d96852b4b5cfa16d39d9223d128e5315"
        ],
        "inducing_commit_hash_pd": [
            "d6c3a454d96852b4b5cfa16d39d9223d128e5315"
        ],
        "matched": [
            "d6c3a454d96852b4b5cfa16d39d9223d128e5315"
        ]
    },
    {
        "repo_name": "auth0/node-auth0",
        "CVE_ID": "CVE-2020-15125",
        "Problem_Type": "CWE-209",
        "Description": "In auth0 (npm package) versions before 2.27.1, a DenyList of specific keys that should be sanitized from the request object contained in the error object is used. The key for Authorization header is not sanitized and in certain cases the Authorization header value can be logged exposing a bearer token. You are affected by this vulnerability if you are using the auth0 npm package, and you are using a Machine to Machine application authorized to use Auth0's management API",
        "URL": "https://github.com/auth0/node-auth0/pull/507/commits/62ca61b3348ec8e74d7d00358661af1a8bc98a3c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "62ca61b3348ec8e74d7d00358661af1a8bc98a3c",
        "inducing_commit_hash_pyszz": [
            "a186023560ab5509e486b53b5db6aad690407ad8"
        ],
        "inducing_commit_hash_pd": [
            "a186023560ab5509e486b53b5db6aad690407ad8"
        ],
        "matched": [
            "a186023560ab5509e486b53b5db6aad690407ad8"
        ]
    },
    {
        "repo_name": "autovance/ftp-srv",
        "CVE_ID": "CVE-2020-26299",
        "Problem_Type": "CWE-22",
        "Description": "ftp-srv is an open-source FTP server designed to be simple yet configurable. In ftp-srv before version 4.4.0 there is a path-traversal vulnerability. Clients of FTP servers utilizing ftp-srv hosted on Windows machines can escape the FTP user's defined root folder using the expected FTP commands, for example, CWD and UPDR. When windows separators exist within the path (`\\`), `path.resolve` leaves the upper pointers intact and allows the user to move beyond the root folder defined for that user. We did not take that into account when creating the path resolve function. The issue is patched in version 4.4.0 (commit 457b859450a37cba10ff3c431eb4aa67771122e3).",
        "URL": "https://github.com/autovance/ftp-srv/pull/224",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "457b859450a37cba10ff3c431eb4aa67771122e3",
        "inducing_commit_hash_pyszz": [
            "c0e132b70e3b92c4008622db93ccb0babaff56d0"
        ],
        "inducing_commit_hash_pd": [
            "c0e132b70e3b92c4008622db93ccb0babaff56d0",
            "0b9167e1e44f41306925879a234f3d914a8b13f7",
            "185e473edc1efef86fc898d89957d87ee69d6afe",
            "c9b437157910c5a9ddb94ea1f3eff7a3a256c6c8",
            "7fb43a5790c4e15c24173b66524efec008142ef8",
            "87a2138cb37049b2e475be332acb1febcda6b5aa"
        ],
        "matched": [
            "c0e132b70e3b92c4008622db93ccb0babaff56d0"
        ]
    },
    {
        "repo_name": "aws-amplify/aws-sdk-android",
        "CVE_ID": "CVE-2022-4725",
        "Problem_Type": "CWE-918",
        "Description": "A vulnerability was found in AWS SDK 2.59.0. It has been rated as critical. This issue affects the function XpathUtils of the file aws-android-sdk-core/src/main/java/com/amazonaws/util/XpathUtils.java of the component XML Parser. The manipulation leads to server-side request forgery. Upgrading to version 2.59.1 is able to address this issue. The name of the patch is c3e6d69422e1f0c80fe53f2d757b8df97619af2b. It is recommended to upgrade the affected component. The identifier VDB-216737 was assigned to this vulnerability.",
        "URL": "https://github.com/aws-amplify/aws-sdk-android/pull/3100",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3e6d69422e1f0c80fe53f2d757b8df97619af2b",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1d353ec1e168347942a456849623ecae5799ae5d"
        ],
        "matched": [
            "1d353ec1e168347942a456849623ecae5799ae5d"
        ]
    },
    {
        "repo_name": "awslabs/aws-dataall",
        "CVE_ID": "CVE-2023-36467",
        "Problem_Type": "CWE-94",
        "Description": "AWS data.all is an open source development framework to help users build a data marketplace on Amazon Web Services. data.all versions 1.2.0 through 1.5.1 do not prevent remote code execution when a user injects Python commands into the \u00c2\u2018Template\u00c2\u2019 field when configuring a data pipeline. The issue can only be triggered by authenticated users. A fix for this issue is available in data.all version 1.5.2 and later. There is no recommended work around.",
        "URL": "https://github.com/awslabs/aws-dataall/pull/472",
        "Tag": "['Patch']",
        "fix_commit_hash": "b59cf9ee9bfa3db63960f874d885aa6bf76077a3",
        "inducing_commit_hash_pyszz": [
            "31d790fccec6ab98949b55f4eded12b44e0792dc"
        ],
        "inducing_commit_hash_pd": [
            "490273490fabafeba5e0a8e7521c0be3cc042421",
            "aa966b56d470f4c89bfdd20896d3e04e3fcf7744",
            "3f836afd000b20d9ee1c6d1f3724cf8b331663cc",
            "5a4007cf5b7816f1b1f17853a3a5c0608c778f2b",
            "f100e05f7bccdef2bd9bd5e6bce2cd62f3131dd5",
            "2f4d87974f4ca141abdc75102019b9801dddb01d",
            "219553f5b9e5b23ad4d5c1971e1787fea50db9cd",
            "71eb85fc85ea0f9d9cc8ce318cefd8135344ce5f",
            "a206637c948b9d259f9d19cecf7ed071f673de52"
        ],
        "matched": [
            "31d790fccec6ab98949b55f4eded12b44e0792dc"
        ]
    },
    {
        "repo_name": "awslabs/sockeye",
        "CVE_ID": "CVE-2021-43811",
        "Problem_Type": "CWE-94",
        "Description": "Sockeye is an open-source sequence-to-sequence framework for Neural Machine Translation built on PyTorch. Sockeye uses YAML to store model and data configurations on disk. Versions below 2.3.24 use unsafe YAML loading, which can be made to execute arbitrary code embedded in config files. An attacker can add malicious code to the config file of a trained model and attempt to convince users to download and run it. If users run the model, the embedded code will run locally. The issue is fixed in version 2.3.24.",
        "URL": "https://github.com/awslabs/sockeye/pull/964",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "35dd717a80ae1f04128d79bd0bcf340e2e9d1427",
        "inducing_commit_hash_pyszz": [
            "565cc71d42ef983eb17d07f3c7befce67c1331ce"
        ],
        "inducing_commit_hash_pd": [
            "565cc71d42ef983eb17d07f3c7befce67c1331ce",
            "2d458b2a2a4b05b3437a1895209675969bf6befd"
        ],
        "matched": [
            "565cc71d42ef983eb17d07f3c7befce67c1331ce"
        ]
    },
    {
        "repo_name": "aws/aws-sdk-js",
        "CVE_ID": "CVE-2020-28472",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects the package @aws-sdk/shared-ini-file-loader before 1.0.0-rc.9; the package aws-sdk before 2.814.0. If an attacker submits a malicious INI file to an application that parses it with loadSharedConfigFiles , they will pollute the prototype on the application. This can be exploited further depending on the context.",
        "URL": "https://github.com/aws/aws-sdk-js/pull/3585/commits/7d72aff2a941173733fcb6741b104cd83d3bc611",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dd83d672170e8cc0c52a20df29a43e7663e5336a",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "515fcbcbcc4b01a05ace7b98c1284387f70cb541"
        ],
        "matched": [
            "515fcbcbcc4b01a05ace7b98c1284387f70cb541"
        ]
    },
    {
        "repo_name": "Azure/azure-cli",
        "CVE_ID": "CVE-2022-39327",
        "Problem_Type": "CWE-78",
        "Description": "Azure CLI is the command-line interface for Microsoft Azure. In versions previous to 2.40.0, Azure CLI contains a vulnerability for potential code injection. Critical scenarios are where a hosting machine runs an Azure CLI command where parameter values have been provided by an external source. The vulnerability is only applicable when the Azure CLI command is run on a Windows machine and with any version of PowerShell and when the parameter value contains the `&` or `|` symbols. If any of these prerequisites are not met, this vulnerability is not applicable. Users should upgrade to version 2.40.0 or greater to receive a a mitigation for the vulnerability.",
        "URL": "https://github.com/Azure/azure-cli/pull/24015",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f309cf7e55dc102c0f3b34baeca08eb897ea0e5",
        "inducing_commit_hash_pyszz": [
            "a55f924c39b80a71f46210ad83a43e7e9093d336"
        ],
        "inducing_commit_hash_pd": [
            "a55f924c39b80a71f46210ad83a43e7e9093d336"
        ],
        "matched": [
            "a55f924c39b80a71f46210ad83a43e7e9093d336"
        ]
    },
    {
        "repo_name": "bagisto/bagisto",
        "CVE_ID": "CVE-2023-36236",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting vulnerability in webkil Bagisto v.1.5.0 and before allows an attacker to execute arbitrary code via a crafted SVG file uplad.",
        "URL": "https://github.com/bagisto/bagisto/pull/4764/commits/7bbf0c4bb565fc2601f031f9bbcdfa06e24dbd45",
        "Tag": "['Patch']",
        "fix_commit_hash": "7bbf0c4bb565fc2601f031f9bbcdfa06e24dbd45",
        "inducing_commit_hash_pyszz": [
            "b37fe3d7a174d4429c73bfb1d5bc9864af9aaf80"
        ],
        "inducing_commit_hash_pd": [
            "f9b51f83676bf8460317d2e110c994b5a45a6e8d",
            "ceccbf9db2aee098704ebefc2ed0071ddfe1472d",
            "b37fe3d7a174d4429c73bfb1d5bc9864af9aaf80"
        ],
        "matched": [
            "b37fe3d7a174d4429c73bfb1d5bc9864af9aaf80"
        ]
    },
    {
        "repo_name": "bcit-ci/CodeIgniter",
        "CVE_ID": "CVE-2016-10131",
        "Problem_Type": "CWE-74",
        "Description": "system/libraries/Email.php in CodeIgniter before 3.1.3 allows remote attackers to execute arbitrary code by leveraging control over the email->from field to insert sendmail command-line arguments.",
        "URL": "https://github.com/bcit-ci/CodeIgniter/pull/4966",
        "Tag": "['Patch']",
        "fix_commit_hash": "d9367b6acf96cbc407147bd4422c2cbb941ccaa1",
        "inducing_commit_hash_pyszz": [
            "8db01f13809a92bac7bc95b02893175d7654d627"
        ],
        "inducing_commit_hash_pd": [
            "e9d2dc85b9cb255aae235635576972e4b7dbd5a8",
            "8db01f13809a92bac7bc95b02893175d7654d627",
            "58dfc089bf5b0ca35c2ff244e5bfdff726f9adcd",
            "d261b1e89c3d4d5191036d5a5660ef6764e593a0"
        ],
        "matched": [
            "8db01f13809a92bac7bc95b02893175d7654d627"
        ]
    },
    {
        "repo_name": "bigbluebutton/bigbluebutton",
        "CVE_ID": "CVE-2020-12443",
        "Problem_Type": "CWE-22",
        "Description": "BigBlueButton before 2.2.6 allows remote attackers to read arbitrary files because the presfilename (lowercase) value can be a .pdf filename while the presFilename (mixed case) value has a ../ sequence. This can be leveraged for privilege escalation via a directory traversal to bigbluebutton.properties. NOTE: this issue exists because of an ineffective mitigation to CVE-2020-12112 in which there was an attempted fix within an NGINX configuration file, without considering that the relevant part of NGINX is case-insensitive.",
        "URL": "https://github.com/bigbluebutton/bigbluebutton/pull/9259/commits/b21ca8355a57286a1e6df96984b3a4c57679a463",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b21ca8355a57286a1e6df96984b3a4c57679a463",
        "inducing_commit_hash_pyszz": [
            "dbd86eb096c8436d6e3dce162e3472a5b8414d6b"
        ],
        "inducing_commit_hash_pd": [
            "dbd86eb096c8436d6e3dce162e3472a5b8414d6b",
            "cb152bf864ec6d491b38608ad311a12f40502c08",
            "b6e31375961ef2a6a1dcce184eceb648912e322e"
        ],
        "matched": [
            "dbd86eb096c8436d6e3dce162e3472a5b8414d6b"
        ]
    },
    {
        "repo_name": "bigbluebutton/greenlight",
        "CVE_ID": "CVE-2020-26163",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "BigBlueButton Greenlight before 2.5.6 allows HTTP header (Host and Origin) attacks, which can result in Account Takeover if a victim follows a spoofed password-reset link.",
        "URL": "https://github.com/bigbluebutton/greenlight/pull/1543",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6fc402e40ba998b2b5d94e09df7c693407d54a3e",
        "inducing_commit_hash_pyszz": [
            "8b2c47253659cf348b04840cea67857978af64cb"
        ],
        "inducing_commit_hash_pd": [
            "01b8dbbd0e344e3df4a3ff4ff87ca467a8377634"
        ],
        "matched": [
            "8b2c47253659cf348b04840cea67857978af64cb"
        ]
    },
    {
        "repo_name": "bigbluebutton/greenlight",
        "CVE_ID": "CVE-2020-27642",
        "Problem_Type": "CWE-79",
        "Description": "A cross-site scripting (XSS) vulnerability exists in the 'merge account' functionality in admins.js in BigBlueButton Greenlight 2.7.6.",
        "URL": "https://github.com/bigbluebutton/greenlight/pull/2214",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7c57f4b93ab9bdcc01b2bc41646f3aea0f2ef4c7",
        "inducing_commit_hash_pyszz": [
            "005c738e4d774e71b5692926663bd5ab893e4749"
        ],
        "inducing_commit_hash_pd": [
            "005c738e4d774e71b5692926663bd5ab893e4749"
        ],
        "matched": [
            "005c738e4d774e71b5692926663bd5ab893e4749"
        ]
    },
    {
        "repo_name": "bigbluebutton/greenlight",
        "CVE_ID": "CVE-2022-31039",
        "Problem_Type": "CWE-863",
        "Description": "Greenlight is a simple front-end interface for your BigBlueButton server. In affected versions an attacker can view any room's settings even though they are not authorized to do so. Only the room owner and administrator should be able to view a room's settings. This issue has been patched in release version 2.12.6.",
        "URL": "https://github.com/bigbluebutton/greenlight/pull/3508",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cbc407111efe1ea7c0adf6f7b5e03044af5b115c",
        "inducing_commit_hash_pyszz": [
            "09de6b6739dbc3e5fd7190d556a1c2f1bf5c3809"
        ],
        "inducing_commit_hash_pd": [
            "60cf5f7440f3a5c21adc6fede3aab59a73428ec3"
        ],
        "matched": [
            "09de6b6739dbc3e5fd7190d556a1c2f1bf5c3809"
        ]
    },
    {
        "repo_name": "binance-chain/tss-lib",
        "CVE_ID": "CVE-2020-12118",
        "Problem_Type": "CWE-276",
        "Description": "The keygen protocol implementation in Binance tss-lib before 1.2.0 allows attackers to generate crafted h1 and h2 parameters in order to compromise a signing round or obtain sensitive information from other parties.",
        "URL": "https://github.com/binance-chain/tss-lib/pull/89",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c66e035bc1d25ceb1fd4dbf08a8f1a3bae3c4402",
        "inducing_commit_hash_pyszz": [
            "ff66cb6821225b1e2df5f5556681989497f5d123"
        ],
        "inducing_commit_hash_pd": [
            "ff66cb6821225b1e2df5f5556681989497f5d123"
        ],
        "matched": [
            "ff66cb6821225b1e2df5f5556681989497f5d123"
        ]
    },
    {
        "repo_name": "bitcoin/bitcoin",
        "CVE_ID": "CVE-2021-3401",
        "Problem_Type": "CWE-88",
        "Description": "Bitcoin Core before 0.19.0 might allow remote attackers to execute arbitrary code when another application unsafely passes the -platformpluginpath argument to the bitcoin-qt program, as demonstrated by an x-scheme-handler/bitcoin handler for a .desktop file or a web browser. NOTE: the discoverer states \"I believe that this vulnerability cannot actually be exploited.\"",
        "URL": "https://github.com/bitcoin/bitcoin/pull/16578",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a2714a5c69f0b0506689af04c3e785f71ee0915d",
        "inducing_commit_hash_pyszz": [
            "7e4bd19785ff9120b7242ff9f15231868aaf7db4"
        ],
        "inducing_commit_hash_pd": [
            "17780d6f35a3951f649c3b7766b9283d9c18e39f",
            "7e4bd19785ff9120b7242ff9f15231868aaf7db4",
            "ca20b65cc04825bb317f1a59d02c77912f6bf097",
            "202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
            "099e4b9ad3d9967051d5c3d45c6315d1b30fea05"
        ],
        "matched": [
            "7e4bd19785ff9120b7242ff9f15231868aaf7db4"
        ]
    },
    {
        "repo_name": "bitwarden/clients",
        "CVE_ID": "CVE-2023-38840",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Bitwarden Desktop 2023.7.0 and below allows an attacker with local access to obtain sensitive information via the Bitwarden.exe process.",
        "URL": "https://github.com/bitwarden/clients/pull/5813",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "61d5b2df9c43c048c772c4d72c1c64a047a9b432",
        "inducing_commit_hash_pyszz": [
            "df59f99ec649c1f4a75456e1e5a3c0f98de0e9c1"
        ],
        "inducing_commit_hash_pd": [
            "60878cd4ed9b1989860a918b62ce72529232560f",
            "193434461dbd9c48fe5dcbad95693470aec422ac",
            "8c905f8746fb9b4eaf7cfd1fe5b68c457b1d1442",
            "92809488a519e47351716c8a51a4b991a022c328",
            "2011131bb20a967fdcc54be73bed9b2ccb63565c"
        ],
        "matched": [
            "df59f99ec649c1f4a75456e1e5a3c0f98de0e9c1"
        ]
    },
    {
        "repo_name": "blackducksoftware/hub-rest-api-python",
        "CVE_ID": "CVE-2020-27589",
        "Problem_Type": "CWE-295",
        "Description": "Synopsys hub-rest-api-python (aka blackduck on PyPI) version 0.0.25 - 0.0.52 does not validate SSL certificates in certain cases.",
        "URL": "https://github.com/blackducksoftware/hub-rest-api-python/pull/113/commits/273b27d0de1004389dd8cf43c40b1197c787e7cd",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "273b27d0de1004389dd8cf43c40b1197c787e7cd",
        "inducing_commit_hash_pyszz": [
            "42e2e81b6be1017ed4d5719b5aace264293b75d8"
        ],
        "inducing_commit_hash_pd": [
            "42e2e81b6be1017ed4d5719b5aace264293b75d8",
            "1fdd3f80dea5ab30c7f1ead0b7f3d0439cb9e4bb",
            "8f3b5162ea5582637ce0b6b6c4120526d807c70f",
            "054b6a2c364ff1ac0f766553a608a935016cccf0"
        ],
        "matched": [
            "42e2e81b6be1017ed4d5719b5aace264293b75d8"
        ]
    },
    {
        "repo_name": "BlogoText/blogotext",
        "CVE_ID": "CVE-2017-14957",
        "Problem_Type": "CWE-79",
        "Description": "Stored XSS vulnerability via a comment in inc/conv.php in BlogoText before 3.7.6 allows an unauthenticated attacker to inject JavaScript. If the victim is an administrator, an attacker can (for example) change global settings or create/delete posts. It is also possible to execute JavaScript against unauthenticated users of the blog.",
        "URL": "https://github.com/BlogoText/blogotext/pull/320/commits/1a283cc8ad2cda37e0a6aff8f4558b98ecbfd9c2",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "54819de7b6e8563bc63cd5e95946393b5396995a",
        "inducing_commit_hash_pyszz": [
            "fc1b95de2cb553f36950a0bbfd4beb859b2b15bc"
        ],
        "inducing_commit_hash_pd": [
            "d80a4bdc44303a5849250164c055e54fb41305f5",
            "47f0866db86953ec2a0c6bd6d15416a8f3049ab0",
            "fc1b95de2cb553f36950a0bbfd4beb859b2b15bc",
            "d1b8e209bdeebd89b1aea4ea6fcd6d33d29d3113"
        ],
        "matched": [
            "fc1b95de2cb553f36950a0bbfd4beb859b2b15bc"
        ]
    },
    {
        "repo_name": "bmeck/node-cookiejar",
        "CVE_ID": "CVE-2022-25901",
        "Problem_Type": "CWE-1333",
        "Description": "Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the Cookie.parse function, which uses an insecure regular expression.\n\n",
        "URL": "https://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eaa00021caf6ae09449dde826108153b578348e5",
        "inducing_commit_hash_pyszz": [
            "a9a320c3c49d65df491f5721969cfbf9e128d9af"
        ],
        "inducing_commit_hash_pd": [
            "a9a320c3c49d65df491f5721969cfbf9e128d9af"
        ],
        "matched": [
            "a9a320c3c49d65df491f5721969cfbf9e128d9af"
        ]
    },
    {
        "repo_name": "bonitasoft/bonita-connector-webservice",
        "CVE_ID": "CVE-2020-36640",
        "Problem_Type": "CWE-611",
        "Description": "A vulnerability, which was classified as problematic, was found in bonitasoft bonita-connector-webservice up to 1.3.0. This affects the function TransformerConfigurationException of the file src/main/java/org/bonitasoft/connectors/ws/SecureWSConnector.java. The manipulation leads to xml external entity reference. Upgrading to version 1.3.1 is able to address this issue. The patch is named a12ad691c05af19e9061d7949b6b828ce48815d5. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217443.",
        "URL": "https://github.com/bonitasoft/bonita-connector-webservice/pull/17",
        "Tag": "['Patch']",
        "fix_commit_hash": "a12ad691c05af19e9061d7949b6b828ce48815d5",
        "inducing_commit_hash_pyszz": [
            "7dc59b935d7341dd5014737e454d1f60fabc4f47"
        ],
        "inducing_commit_hash_pd": [
            "ca86fbdc51e12b722ada81fc87493bb8accf9699",
            "e9e6447ea66508a38fbe270c7b0b45796ed6feae",
            "8fd1e925c2208e47d242a1e586126b0cd4b4226e",
            "7dc59b935d7341dd5014737e454d1f60fabc4f47",
            "24c938e90a523b91b1347c47f308e01dce8c9698",
            "4315cf7648e8318252e21d661f27d15013719829"
        ],
        "matched": [
            "7dc59b935d7341dd5014737e454d1f60fabc4f47"
        ]
    },
    {
        "repo_name": "braintree/sanitize-url",
        "CVE_ID": "CVE-2021-23648",
        "Problem_Type": "CWE-79",
        "Description": "The package @braintree/sanitize-url before 6.0.0 are vulnerable to Cross-site Scripting (XSS) due to improper sanitization in sanitizeUrl function.",
        "URL": "https://github.com/braintree/sanitize-url/pull/40",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8f7371cebfbd4283d96f94f3256c4fc772eb1c7b",
        "inducing_commit_hash_pyszz": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "inducing_commit_hash_pd": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "matched": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ]
    },
    {
        "repo_name": "braintree/sanitize-url",
        "CVE_ID": "CVE-2021-23648",
        "Problem_Type": "CWE-79",
        "Description": "The package @braintree/sanitize-url before 6.0.0 are vulnerable to Cross-site Scripting (XSS) due to improper sanitization in sanitizeUrl function.",
        "URL": "https://github.com/braintree/sanitize-url/pull/40/commits/e5afda45d9833682b705f73fc2c1265d34832183",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5afda45d9833682b705f73fc2c1265d34832183",
        "inducing_commit_hash_pyszz": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "inducing_commit_hash_pd": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ],
        "matched": [
            "5d8e711c47d5eb7da0e71091ea3566d7e464b330"
        ]
    },
    {
        "repo_name": "brave/brave-core",
        "CVE_ID": "CVE-2023-52263",
        "Problem_Type": "CWE-601",
        "Description": "Brave Browser before 1.59.40 does not properly restrict the schema for WebUI factory and redirect. This is related to browser/brave_content_browser_client.cc and browser/ui/webui/brave_web_ui_controller_factory.cc.",
        "URL": "https://github.com/brave/brave-core/pull/19820/commits/9da202f7f4bc80b6975909b684bbc0764a31c4e9",
        "Tag": "['Patch']",
        "fix_commit_hash": "9da202f7f4bc80b6975909b684bbc0764a31c4e9",
        "inducing_commit_hash_pyszz": [
            "b9c495302067d721fefd6157efb103c7efcd2489"
        ],
        "inducing_commit_hash_pd": [
            "b9c495302067d721fefd6157efb103c7efcd2489"
        ],
        "matched": [
            "b9c495302067d721fefd6157efb103c7efcd2489"
        ]
    },
    {
        "repo_name": "brix/crypto-js",
        "CVE_ID": "CVE-2020-36732",
        "Problem_Type": "CWE-330",
        "Description": "The crypto-js package before 3.2.1 for Node.js generates random numbers by concatenating the string \"0.\" with an integer, which makes the output more predictable than necessary.",
        "URL": "https://github.com/brix/crypto-js/pull/257/commits/e4ac157d8b75b962d6538fc0b996e5d4d5a9466b",
        "Tag": "['Patch']",
        "fix_commit_hash": "e4ac157d8b75b962d6538fc0b996e5d4d5a9466b",
        "inducing_commit_hash_pyszz": [
            "b405ff597fb3ac76a7bdfbc72dca10ba1079b1d5"
        ],
        "inducing_commit_hash_pd": [
            "b405ff597fb3ac76a7bdfbc72dca10ba1079b1d5"
        ],
        "matched": [
            "b405ff597fb3ac76a7bdfbc72dca10ba1079b1d5"
        ]
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0493",
        "Problem_Type": "CWE-74",
        "Description": "Improper Neutralization of Equivalent Special Elements in GitHub repository btcpayserver/btcpayserver prior to 1.7.5.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4545/commits/02070d65836cd24627929b3403efbae8de56039a",
        "Tag": "['Patch']",
        "fix_commit_hash": "a3203e57755ca2e6ff9d049e3e3672cdfff16ea0",
        "inducing_commit_hash_pyszz": [
            "a9ad0fde9e49166d9f8db0c622dc4d5af9316998"
        ],
        "inducing_commit_hash_pd": [
            "3f6212e799798f84480f888b7dee903b3a39230c",
            "fc8a5ff95f5087a6b4d1232f861eaa143c1bc242",
            "51c486c15a58279f38134ddeb42db2167e8e8eb8",
            "cadcb586a795743abb4fe66561c498a6181f4c51",
            "273bc78db337c82dd46ea56a754f6d4d8e760c79",
            "f8e6b51e9d1b1391a64ce95d73868faf0280bec2",
            "a8adac9c5a231aa65c823e303744bfd3e8e29f3c",
            "c46a69e1bd1ba84599967f0cb1fd34b9ee28b8ef",
            "defb9120fd5be75323c98d6a8c714b09e5e68f90",
            "e8291eb00e87aa2d1b8bd5de37b0b85969c796b1",
            "b7b2f16925abffdac7d64dac99067b7953e1c6ac",
            "022cd666ebbd3d47d9e083ac8c4650cd0b527499",
            "c3f73c0de3821d0abfb455e0e2197eb48543013a",
            "a9ad0fde9e49166d9f8db0c622dc4d5af9316998",
            "8e5a9251d6beebef06f9f54c1e91f48540a5cccc",
            "48ac996d77a2ef5df167752afc21ef52c212b9f0",
            "2d4aa52fa59775795968610f75e2412d538fea3d",
            "c71e671311b2cacaf1c99f177dbfc84d02e41e34",
            "7a787fc94536d22bbbde9271201f8b65d6e79732",
            "a9e08dd5877036dc12fad9ca62a613d83dd81c8e",
            "06db29dd437e84bc07f996bffa18fafbe5323863",
            "2abc35058bee8b7c22866e3547bcf7bb09eabce6"
        ],
        "matched": [
            "a9ad0fde9e49166d9f8db0c622dc4d5af9316998"
        ]
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0748",
        "Problem_Type": "CWE-601",
        "Description": "Open Redirect in GitHub repository btcpayserver/btcpayserver prior to 1.7.6.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4575/commits/c2cfa17e9619046b43987627b8429541d2834109",
        "Tag": "['Patch']",
        "fix_commit_hash": "f2ced20c420c827f5c2ebf1fb405b35056687914",
        "inducing_commit_hash_pyszz": [
            "5c8ca15ee2fe27764a0a75fac7bba50c1610d016"
        ],
        "inducing_commit_hash_pd": [
            "f1a222fbb3e68fe25c8c614b7722ccb2bacf0bc6",
            "b9fdd5453892a6af044ec9882efa74f28ae11801",
            "a3203e57755ca2e6ff9d049e3e3672cdfff16ea0",
            "2e6246e385fccf606ecd3171644f8410b3ec61e2",
            "300d84c5d8de24f841b46a3bd6c0029ccd058fda",
            "181d4d5ea438adde018db7a07e402439a6675d69",
            "39beacf88448b7bb8f527337ffebf8d7dab886b1"
        ],
        "matched": [
            "5c8ca15ee2fe27764a0a75fac7bba50c1610d016"
        ]
    },
    {
        "repo_name": "btcpayserver/btcpayserver",
        "CVE_ID": "CVE-2023-0879",
        "Problem_Type": "CWE-79",
        "Description": "Cross-site Scripting (XSS) - Stored in GitHub repository btcpayserver/btcpayserver prior to 1.7.12.\n\n",
        "URL": "https://github.com/btcpayserver/btcpayserver/pull/4635/commits/f2f3b245c4d8980d8e54e4708c796df82332c3d7",
        "Tag": "['Patch']",
        "fix_commit_hash": "fea27b900c0a9be2b8ae0079b8445499361cad88",
        "inducing_commit_hash_pyszz": [
            "4df2f1f756dcb1013a469bacad7c6550823792b7"
        ],
        "inducing_commit_hash_pd": [
            "f9f1a22e3b790308fd60da780603cb41cba4904e",
            "6972e8a3dbd854b14f134a2c6bb6918063182e42",
            "5faa756f1c0bb19bf31dff801ce68f4b13d3fd0e",
            "17f3b4125b108828cfc882fa079f2b3060c0fd76",
            "4df2f1f756dcb1013a469bacad7c6550823792b7",
            "a4ee1e98055b54af11355facf309739ec00c8f81"
        ],
        "matched": [
            "4df2f1f756dcb1013a469bacad7c6550823792b7"
        ]
    },
    {
        "repo_name": "BuilderIO/qwik",
        "CVE_ID": "CVE-2023-1283",
        "Problem_Type": "CWE-94",
        "Description": "Code Injection in GitHub repository builderio/qwik prior to 0.21.0.\n\n",
        "URL": "https://github.com/BuilderIO/qwik/pull/3249/commits/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66",
        "Tag": "['Patch']",
        "fix_commit_hash": "014ad5bfba4c966893460f7b1e5e4e4e0b69c139",
        "inducing_commit_hash_pyszz": [
            "d046926d89f75ef28d4b72f885f386091708a1ea"
        ],
        "inducing_commit_hash_pd": [
            "d046926d89f75ef28d4b72f885f386091708a1ea",
            "f665a275a8790b228565a7cf6eb4657ce4cbbe5a",
            "5597152b5f3ae8e03a3fa9a229b689ef9157ba0b",
            "ebd890c868d665448e0d912be42f74b404e7bd30",
            "3ac5665141208ccfac04f0d0a670415885d89d1d",
            "6c6299013ddf2cb262de1acfeeb644f93a97b83c"
        ],
        "matched": [
            "d046926d89f75ef28d4b72f885f386091708a1ea"
        ]
    },
    {
        "repo_name": "BuilderIO/qwik",
        "CVE_ID": "CVE-2023-2307",
        "Problem_Type": "CWE-352",
        "Description": "Cross-Site Request Forgery (CSRF) in GitHub repository builderio/qwik prior to 0.104.0.\n\n",
        "URL": "https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57",
        "Tag": "['Patch']",
        "fix_commit_hash": "f434d335277418f5bd8dd90fae5cb089e1230cb8",
        "inducing_commit_hash_pyszz": [
            "f00017ae38db5b7ac902c498610b35d5a2b0e1b9"
        ],
        "inducing_commit_hash_pd": [
            "f00017ae38db5b7ac902c498610b35d5a2b0e1b9"
        ],
        "matched": [
            "f00017ae38db5b7ac902c498610b35d5a2b0e1b9"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasm-micro-runtime",
        "CVE_ID": "CVE-2023-52284",
        "Problem_Type": "CWE-415",
        "Description": "Bytecode Alliance wasm-micro-runtime (aka WebAssembly Micro Runtime or WAMR) before 1.3.0 can have an \"double free or corruption\" error for a valid WebAssembly module because push_pop_frame_ref_offset is mishandled.",
        "URL": "https://github.com/bytecodealliance/wasm-micro-runtime/pull/2590",
        "Tag": "['Patch']",
        "fix_commit_hash": "6382162711a9cfaedc63de9065b0bc6eda8123f3",
        "inducing_commit_hash_pyszz": [
            "6415e1b0063010acb8bc6d3e8f36e5e2ccc71249"
        ],
        "inducing_commit_hash_pd": [
            "03d45f1d62dbcfdff1cb0893318ab5d4298f726a",
            "6415e1b0063010acb8bc6d3e8f36e5e2ccc71249",
            "a0bb761beb665646fefea53aca5766e93d9dd89a",
            "7a287fd1a90836bb3de86eba9889cd689bd493ab",
            "752826a667b359002a25ec8b7ebe1942fbfe2710"
        ],
        "matched": [
            "6415e1b0063010acb8bc6d3e8f36e5e2ccc71249"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasmtime",
        "CVE_ID": "CVE-2022-31104",
        "Problem_Type": "CWE-682",
        "Description": "Wasmtime is a standalone runtime for WebAssembly. In affected versions wasmtime's implementation of the SIMD proposal for WebAssembly on x86_64 contained two distinct bugs in the instruction lowerings implemented in Cranelift. The aarch64 implementation of the simd proposal is not affected. The bugs were presented in the `i8x16.swizzle` and `select` WebAssembly instructions. The `select` instruction is only affected when the inputs are of `v128` type. The correspondingly affected Cranelift instructions were `swizzle` and `select`. The `swizzle` instruction lowering in Cranelift erroneously overwrote the mask input register which could corrupt a constant value, for example. This means that future uses of the same constant may see a different value than the constant itself. The `select` instruction lowering in Cranelift wasn't correctly implemented for vector types that are 128-bits wide. When the condition was 0 the wrong instruction was used to move the correct input to the output of the instruction meaning that only the low 32 bits were moved and the upper 96 bits of the result were left as whatever the register previously contained (instead of the input being moved from). The `select` instruction worked correctly if the condition was nonzero, however. This bug in Wasmtime's implementation of these instructions on x86_64 represents an incorrect implementation of the specified semantics of these instructions according to the WebAssembly specification. The impact of this is benign for hosts running WebAssembly but represents possible vulnerabilities within the execution of a guest program. For example a WebAssembly program could take unintended branches or materialize incorrect values internally which runs the risk of exposing the program itself to other related vulnerabilities which can occur from miscompilations. We have released Wasmtime 0.38.1 and cranelift-codegen (and other associated cranelift crates) 0.85.1 which contain the corrected implementations of these two instructions in Cranelift. If upgrading is not an option for you at this time, you can avoid the vulnerability by disabling the Wasm simd proposal. Additionally the bug is only present on x86_64 hosts. Other aarch64 hosts are not affected. Note that s390x hosts don't yet implement the simd proposal and are not affected.",
        "URL": "https://github.com/bytecodealliance/wasmtime/pull/4318",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dc2fe0ac6790d5e7c3eff5da984ecc9722fb2e4d",
        "inducing_commit_hash_pyszz": [
            "e3eb098c99a08285e9ead0a86c9d5877625a5dba"
        ],
        "inducing_commit_hash_pd": [
            "e3eb098c99a08285e9ead0a86c9d5877625a5dba",
            "f50d905152954335a1e351aec3fc309b0ab1e4d5"
        ],
        "matched": [
            "e3eb098c99a08285e9ead0a86c9d5877625a5dba"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasmtime",
        "CVE_ID": "CVE-2022-31104",
        "Problem_Type": "CWE-682",
        "Description": "Wasmtime is a standalone runtime for WebAssembly. In affected versions wasmtime's implementation of the SIMD proposal for WebAssembly on x86_64 contained two distinct bugs in the instruction lowerings implemented in Cranelift. The aarch64 implementation of the simd proposal is not affected. The bugs were presented in the `i8x16.swizzle` and `select` WebAssembly instructions. The `select` instruction is only affected when the inputs are of `v128` type. The correspondingly affected Cranelift instructions were `swizzle` and `select`. The `swizzle` instruction lowering in Cranelift erroneously overwrote the mask input register which could corrupt a constant value, for example. This means that future uses of the same constant may see a different value than the constant itself. The `select` instruction lowering in Cranelift wasn't correctly implemented for vector types that are 128-bits wide. When the condition was 0 the wrong instruction was used to move the correct input to the output of the instruction meaning that only the low 32 bits were moved and the upper 96 bits of the result were left as whatever the register previously contained (instead of the input being moved from). The `select` instruction worked correctly if the condition was nonzero, however. This bug in Wasmtime's implementation of these instructions on x86_64 represents an incorrect implementation of the specified semantics of these instructions according to the WebAssembly specification. The impact of this is benign for hosts running WebAssembly but represents possible vulnerabilities within the execution of a guest program. For example a WebAssembly program could take unintended branches or materialize incorrect values internally which runs the risk of exposing the program itself to other related vulnerabilities which can occur from miscompilations. We have released Wasmtime 0.38.1 and cranelift-codegen (and other associated cranelift crates) 0.85.1 which contain the corrected implementations of these two instructions in Cranelift. If upgrading is not an option for you at this time, you can avoid the vulnerability by disabling the Wasm simd proposal. Additionally the bug is only present on x86_64 hosts. Other aarch64 hosts are not affected. Note that s390x hosts don't yet implement the simd proposal and are not affected.",
        "URL": "https://github.com/bytecodealliance/wasmtime/pull/4317",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8bb07523e22df1ab3cbd265c77e836bf84186eb7",
        "inducing_commit_hash_pyszz": [
            "24f145cd1e27a346b64f3d66db63a582435bcd5f"
        ],
        "inducing_commit_hash_pd": [
            "7bd96c8e2f148b33e61feed0320a98c4deec0426",
            "a0318f36f0289bcb76175035f5d5e781bd6ce80e",
            "ead8a835c4ea27c0e7d30deb88c83a853b3b0f03",
            "f87c61176acd0ca977261423b4663ef456b2e720",
            "24f145cd1e27a346b64f3d66db63a582435bcd5f"
        ],
        "matched": [
            "24f145cd1e27a346b64f3d66db63a582435bcd5f"
        ]
    },
    {
        "repo_name": "bytecodealliance/wasmtime",
        "CVE_ID": "CVE-2023-41880",
        "Problem_Type": "CWE-193",
        "Description": "Wasmtime is a standalone runtime for WebAssembly. Wasmtime versions from 10.0.0 to versions 10.02, 11.0.2, and 12.0.1 contain a miscompilation of the WebAssembly `i64x2.shr_s` instruction on x86_64 platforms when the shift amount is a constant value that is larger than 32. Only x86_64 is affected so all other targets are not affected by this. The miscompilation results in the instruction producing an incorrect result, namely the low 32-bits of the second lane of the vector are derived from the low 32-bits of the second lane of the input vector instead of the high 32-bits. The primary impact of this issue is that any WebAssembly program using the `i64x2.shr_s` with a constant shift amount larger than 32 may produce an incorrect result.\n\nThis issue is not an escape from the WebAssembly sandbox. Execution of WebAssembly guest programs will still behave correctly with respect to memory sandboxing and isolation from the host. Wasmtime considers non-spec-compliant behavior as a security issue nonetheless.\n\nThis issue was discovered through fuzzing of Wasmtime's code generator Cranelift.\n\nWasmtime versions 10.0.2, 11.0.2, and 12.0.2 are all patched to no longer have this miscompilation. This issue only affects x86_64 hosts and the only workaround is to either scan for this pattern in wasm modules which is nontrivial or to disable the SIMD proposal for WebAssembly. Users prior to 10.0.0 are unaffected by this vulnerability.",
        "URL": "https://github.com/bytecodealliance/wasmtime/pull/6372",
        "Tag": "['Patch', 'Product']",
        "fix_commit_hash": "fe99d461f7fece31d0149b61398c05c08413787c",
        "inducing_commit_hash_pyszz": [
            "c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794"
        ],
        "inducing_commit_hash_pd": [
            "cae3b26623e98044c4cc96a18ef2bd50edf01da4",
            "3bfbb3226e35c09f50ea936f7d603397a1bb5f86",
            "c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794",
            "f04decc4a13c2bd119ee4cd0248eb6dbcc7e6261",
            "7454f1f3af05ff27bbe3c1392a0957ac1d4e0fab",
            "b077854b57b3aa25295e37ad55a21300e7768c7c",
            "e8881b2cc0cfaf960ab7e1094aaddeb02a73a702",
            "795b0aaf9ac5b9005c6f2d41ee76f71f1caad853",
            "c26a65a854733735207f641bb7ff23ba574a1f6f",
            "a0318f36f0289bcb76175035f5d5e781bd6ce80e",
            "87b63174b113094b862f4beb52f3d9d3a444f355",
            "dc86e7a6dcf95358ccc90e443c7dd2c3d751f76b"
        ],
        "matched": [
            "c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794"
        ]
    },
    {
        "repo_name": "Cacti/cacti",
        "CVE_ID": "CVE-2020-14424",
        "Problem_Type": "CWE-79",
        "Description": "Cacti before 1.2.18 allows remote attackers to trigger XSS via template import for the midwinter theme.",
        "URL": "https://github.com/Cacti/cacti/pull/4261",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d12800ab479ad95a091bc577f28fd99ec95eb64c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "6896a1ecdda6a8b247942f40947ac8029a55396f"
        ],
        "matched": [
            "6896a1ecdda6a8b247942f40947ac8029a55396f"
        ]
    },
    {
        "repo_name": "caddyserver/caddy",
        "CVE_ID": "CVE-2022-29718",
        "Problem_Type": "CWE-601",
        "Description": "Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.",
        "URL": "https://github.com/caddyserver/caddy/pull/4499",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3fe2c73dd04f7769a9d9673236cb94b79ac45659",
        "inducing_commit_hash_pyszz": [
            "e7457b43e4703080ae8713ada798ce3e20b83690"
        ],
        "inducing_commit_hash_pd": [
            "e7457b43e4703080ae8713ada798ce3e20b83690"
        ],
        "matched": [
            "e7457b43e4703080ae8713ada798ce3e20b83690"
        ]
    },
    {
        "repo_name": "canonical/cloud-init",
        "CVE_ID": "CVE-2020-8631",
        "Problem_Type": "CWE-330",
        "Description": "cloud-init through 19.4 relies on Mersenne Twister for a random password, which makes it easier for attackers to predict passwords, because rand_str in cloudinit/util.py calls the random.choice function.",
        "URL": "https://github.com/canonical/cloud-init/pull/204",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e2f7356effc9e9cccc5ae945846279804eedc46",
        "inducing_commit_hash_pyszz": [
            "a456f4fdc26eba06ee98ffe2eeeafc6e15a39e88"
        ],
        "inducing_commit_hash_pd": [
            "a456f4fdc26eba06ee98ffe2eeeafc6e15a39e88"
        ],
        "matched": [
            "a456f4fdc26eba06ee98ffe2eeeafc6e15a39e88"
        ]
    },
    {
        "repo_name": "canonical/cloud-init",
        "CVE_ID": "CVE-2020-8632",
        "Problem_Type": "CWE-521",
        "Description": "In cloud-init through 19.4, rand_user_password in cloudinit/config/cc_set_passwords.py has a small default pwlen value, which makes it easier for attackers to guess passwords.",
        "URL": "https://github.com/canonical/cloud-init/pull/189",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "42788bf24a1a0a5421a2d00a7f59b59e38ba1a14",
        "inducing_commit_hash_pyszz": [
            "818ac2e096ecf14f11f4adb9de0155e3e2f8a93f"
        ],
        "inducing_commit_hash_pd": [
            "818ac2e096ecf14f11f4adb9de0155e3e2f8a93f"
        ],
        "matched": [
            "818ac2e096ecf14f11f4adb9de0155e3e2f8a93f"
        ]
    },
    {
        "repo_name": "canonical/subiquity",
        "CVE_ID": "CVE-2023-5182",
        "Problem_Type": "CWE-532",
        "Description": "Sensitive data could be exposed in logs of subiquity version 23.09.1 and earlier. An attacker in the adm group could use this information to find hashed passwords and possibly escalate their privilege.",
        "URL": "https://github.com/canonical/subiquity/pull/1820/commits/62e126896fb063808767d74d00886001e38eaa1c",
        "Tag": "['Patch']",
        "fix_commit_hash": "62e126896fb063808767d74d00886001e38eaa1c",
        "inducing_commit_hash_pyszz": [
            "b7349241a984597fad43490a47fd71d9a1cb0804"
        ],
        "inducing_commit_hash_pd": [
            "b7349241a984597fad43490a47fd71d9a1cb0804"
        ],
        "matched": [
            "b7349241a984597fad43490a47fd71d9a1cb0804"
        ]
    },
    {
        "repo_name": "caolan/forms",
        "CVE_ID": "CVE-2021-23388",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package forms before 1.2.1, from 1.3.0 and before 1.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via email validation.",
        "URL": "https://github.com/caolan/forms/pull/214/commits/d4bd5b5febfe49c1f585f162e04ec810f8dc47a0",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d4bd5b5febfe49c1f585f162e04ec810f8dc47a0",
        "inducing_commit_hash_pyszz": [
            "eff0c5597c27ae4bc5675d07e78485b18a3b8b88"
        ],
        "inducing_commit_hash_pd": [
            "c7f1b194effcf2e9c2947e08cde8835867861d12",
            "72aada4b7429d1fdf51b734d213fcc0fe5561611",
            "eff0c5597c27ae4bc5675d07e78485b18a3b8b88"
        ],
        "matched": [
            "eff0c5597c27ae4bc5675d07e78485b18a3b8b88"
        ]
    },
    {
        "repo_name": "CapsAdmin/pac3",
        "CVE_ID": "CVE-2022-4881",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in CapsAdmin PAC3. It has been rated as problematic. Affected by this issue is some unknown functionality of the file lua/pac3/core/shared/http.lua. The manipulation of the argument url leads to cross site scripting. The attack may be launched remotely. The patch is identified as 8fc9e12dfa21d757be6eb4194c763e848b299ac0. It is recommended to apply a patch to fix this issue. VDB-217646 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/CapsAdmin/pac3/pull/1210",
        "Tag": "['Patch']",
        "fix_commit_hash": "67d934925607bc61764871ce2b719e1b03f98078",
        "inducing_commit_hash_pyszz": [
            "888e0b199a2272413cc86c4660651163fa060306"
        ],
        "inducing_commit_hash_pd": [
            "01aa879f155bbdf6673548e99c4d27f6159c0038",
            "888e0b199a2272413cc86c4660651163fa060306"
        ],
        "matched": [
            "888e0b199a2272413cc86c4660651163fa060306"
        ]
    },
    {
        "repo_name": "caronc/apprise",
        "CVE_ID": "CVE-2021-39229",
        "Problem_Type": "CWE-400",
        "Description": "Apprise is an open source library which allows you to send a notification to almost all of the most popular notification services available. In affected versions users who use Apprise granting them access to the IFTTT plugin (which just comes out of the box) are subject to a denial of service attack on an inefficient regular expression. The vulnerable regular expression is [here](https://github.com/caronc/apprise/blob/0007eade20934ddef0aba38b8f1aad980cfff253/apprise/plugins/NotifyIFTTT.py#L356-L359). The problem has been patched in release version 0.9.5.1. Users who are unable to upgrade are advised to remove `apprise/plugins/NotifyIFTTT.py` to eliminate the service.",
        "URL": "https://github.com/caronc/apprise/pull/436",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e20fce630d55e4ca9b0a1e325a5fea6997489831",
        "inducing_commit_hash_pyszz": [
            "6d9069e106038f4e309c02e3a2358add366b9e22"
        ],
        "inducing_commit_hash_pd": [
            "6d9069e106038f4e309c02e3a2358add366b9e22"
        ],
        "matched": [
            "6d9069e106038f4e309c02e3a2358add366b9e22"
        ]
    },
    {
        "repo_name": "casdoor/casdoor",
        "CVE_ID": "CVE-2022-24124",
        "Problem_Type": "CWE-89",
        "Description": "The query API in Casdoor before 1.13.1 has a SQL injection vulnerability related to the field and value parameters, as demonstrated by api/get-organizations.",
        "URL": "https://github.com/casdoor/casdoor/pull/442",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5ec0c7a89005819960d8fe07f5ddda13d1371b8c",
        "inducing_commit_hash_pyszz": [
            "9b6131890c2b7e4e65449c7a7f75a1221b14d0b9"
        ],
        "inducing_commit_hash_pd": [
            "a093f3af5a52e63c2123b7ccb34926689654d03d",
            "9b6131890c2b7e4e65449c7a7f75a1221b14d0b9",
            "10a85f23861c32b0911d6c33896f214229d511b8",
            "ff22bf507f36479fa4e5daf1a6576cbfbcc30b6e",
            "ba1646a0c399c1c07cf39a1ee8a74b5f5cee6272"
        ],
        "matched": [
            "9b6131890c2b7e4e65449c7a7f75a1221b14d0b9"
        ]
    },
    {
        "repo_name": "ceph/ceph-iscsi-cli",
        "CVE_ID": "CVE-2018-14649",
        "Problem_Type": "CWE-77",
        "Description": "It was found that ceph-isci-cli package as shipped by Red Hat Ceph Storage 2 and 3 is using python-werkzeug in debug shell mode. This is done by setting debug=True in file /usr/bin/rbd-target-api provided by ceph-isci-cli package. This allows unauthenticated attackers to access this debug shell and escalate privileges. Once an attacker has successfully connected to this debug shell they will be able to execute arbitrary commands remotely. These commands will run with the same privileges as of user executing the application which is using python-werkzeug with debug shell mode enabled. In - Red Hat Ceph Storage 2 and 3, ceph-isci-cli package runs python-werkzeug library with root level permissions.",
        "URL": "https://github.com/ceph/ceph-iscsi-cli/pull/121/commits/c3812075e30c76a800a961e7291087d357403f6b",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "c3812075e30c76a800a961e7291087d357403f6b",
        "inducing_commit_hash_pyszz": [
            "568fee49c8f89bf9e83756998fba48c8f2dde898"
        ],
        "inducing_commit_hash_pd": [
            "568fee49c8f89bf9e83756998fba48c8f2dde898"
        ],
        "matched": [
            "568fee49c8f89bf9e83756998fba48c8f2dde898"
        ]
    },
    {
        "repo_name": "cgriego/active_attr",
        "CVE_ID": "CVE-2021-4250",
        "Problem_Type": "CWE-404",
        "Description": "A vulnerability classified as problematic has been found in cgriego active_attr up to 0.15.2. This affects the function call of the file lib/active_attr/typecasting/boolean_typecaster.rb of the component Regex Handler. The manipulation of the argument value leads to denial of service. The exploit has been disclosed to the public and may be used. Upgrading to version 0.15.3 is able to address this issue. The name of the patch is dab95e5843b01525444b82bd7b336ef1d79377df. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216207.",
        "URL": "https://github.com/cgriego/active_attr/pull/185",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dab95e5843b01525444b82bd7b336ef1d79377df",
        "inducing_commit_hash_pyszz": [
            "a72f71b7781093f41757b6099298663d9822b43b"
        ],
        "inducing_commit_hash_pd": [
            "a72f71b7781093f41757b6099298663d9822b43b"
        ],
        "matched": [
            "a72f71b7781093f41757b6099298663d9822b43b"
        ]
    },
    {
        "repo_name": "ChainSafe/lodestar",
        "CVE_ID": "CVE-2022-29219",
        "Problem_Type": "CWE-190",
        "Description": "Lodestar is a TypeScript implementation of the Ethereum Consensus specification. Prior to version 0.36.0, there is a possible consensus split given maliciously-crafted `AttesterSlashing` or `ProposerSlashing` being included on-chain. Because the developers represent `uint64` values as native javascript `number`s, there is an issue when those variables with large (greater than 2^53) `uint64` values are included on chain. In those cases, Lodestar may view valid_`AttesterSlashing` or `ProposerSlashing` as invalid, due to rounding errors in large `number` values. This causes a consensus split, where Lodestar nodes are forked away from the main network. Similarly, Lodestar may consider invalid `ProposerSlashing` as valid, thus including in proposed blocks that will be considered invalid by the network. Version 0.36.0 contains a fix for this issue. As a workaround, use `BigInt` to represent `Slot` and `Epoch` values in `AttesterSlashing` and `ProposerSlashing` objects. `BigInt` is too slow to be used in all `Slot` and `Epoch` cases, so one may carefully use `BigInt` just where necessary for consensus.",
        "URL": "https://github.com/ChainSafe/lodestar/pull/3977",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e8f60b6a4cd28d475ef1b5acf0f2608a5865c992",
        "inducing_commit_hash_pyszz": [
            "7f46f05b4ba4d2110cf96a64276b47bdcde50d33"
        ],
        "inducing_commit_hash_pd": [
            "fbd16b63170b2ab8f063c171e05bb7be594ab063",
            "f0f46706b561dc5ed13af1f667f296731473abf4",
            "aa5ccb7c30e8253de02b14bb85e706b838d299bf",
            "7e1fb2f76bd6935e9ee6c0a66de32ed30a2c4aa8",
            "3d1fd18660e4645d4a21efea10cf9a8244b57d1c",
            "dc1e87e9b9b89b3de540904cffb3bda6fb49b7ec",
            "6d991057ea7218a1462eb9d7674b97da32dceb32",
            "a5bacf7b5d80a49d80c548aabbb3b460bd5bcaee",
            "e363db6d16e06afc09e52d612f51096358da111a",
            "9d0ecec6617acfd8676d0c783dd467801d11c70a",
            "c57624690bec05e24d1eb37f697e37e555ab7204",
            "6b65c80a294fe000d1c1c9befac87f398f6cc737",
            "34b2e1bf25e0baffd49aae024eada9fa7f8a72c0",
            "14422d70d2ba8185755a4213c37f55d303e79594",
            "1d0fd8d78d8822d958b68f510d274103b318756d",
            "f9d7db5f46beb432179d7a98b644a0dab86415e4",
            "a7bd5fb895c7e9626579e81112aeb17a99b08677",
            "df2cb2713fa6affceecdce4a2ce7e3a45acc67dc",
            "d8816b55afac7617be14d10c0126389d180edc96",
            "f1bcb4d1c3ec96ff9af2f644050bd885418740a7",
            "7f46f05b4ba4d2110cf96a64276b47bdcde50d33",
            "7579f7fbc3957924df8be5e697149a34bfc3b2f8"
        ],
        "matched": [
            "7f46f05b4ba4d2110cf96a64276b47bdcde50d33"
        ]
    },
    {
        "repo_name": "chansen/p5-http-tiny",
        "CVE_ID": "CVE-2023-31486",
        "Problem_Type": "CWE-295",
        "Description": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
        "URL": "https://github.com/chansen/p5-http-tiny/pull/153",
        "Tag": "['Patch']",
        "fix_commit_hash": "77f557ef84698efeb6eed04e4a9704eaf85b741d",
        "inducing_commit_hash_pyszz": [
            "02e188abccd2fa8f037e564fc6f8e9d81471c0eb"
        ],
        "inducing_commit_hash_pd": [
            "c753a31ef389eb6e35925cf8e02d560ac0ef0a98",
            "541cee60ead8f87a2f96bc2feb8a2f8392d59c50",
            "02e188abccd2fa8f037e564fc6f8e9d81471c0eb",
            "750a167a129320c0f8b2fe921e2595a4e8710ed8",
            "c5b58fb507b4275bcbccac27c2e39a78cf845fa6",
            "e637cfd00b54b56bf436be74abd83f456919b000",
            "5378322d46c98f422720ccd8e1765f4602d2fb0e",
            "293d20c3358cc7d9913fdc00cd7f46fcfd52cd21",
            "a1beb4ec5b9cdc8a86aff5898a0266f8dff588ae"
        ],
        "matched": [
            "02e188abccd2fa8f037e564fc6f8e9d81471c0eb"
        ]
    },
    {
        "repo_name": "chanzuckerberg/idseq-web",
        "CVE_ID": "CVE-2019-15568",
        "Problem_Type": "CWE-89",
        "Description": "idseq-web before 2019-07-01 in Infectious Disease Sequencing Platform IDseq allows SQL injection via tax_levels.",
        "URL": "https://github.com/chanzuckerberg/idseq-web/pull/2372",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5e0901a9bd161312cf8bb57004830ac32921f976",
        "inducing_commit_hash_pyszz": [
            "55b54e586a82c83e7ce2a0b500e017aea8583390"
        ],
        "inducing_commit_hash_pd": [
            "55b54e586a82c83e7ce2a0b500e017aea8583390",
            "a44899f13bcce65aab2cc9d2e4a8026d9705fa65"
        ],
        "matched": [
            "55b54e586a82c83e7ce2a0b500e017aea8583390"
        ]
    },
    {
        "repo_name": "chartjs/Chart.js",
        "CVE_ID": "CVE-2020-7746",
        "Problem_Type": "CWE-1321",
        "Description": "This affects the package chart.js before 2.9.4. The options parameter is not properly sanitized when it is processed. When the options are processed, the existing options (or the defaults options) are deeply merged with provided options. However, during this operation, the keys of the object being set are not checked, leading to a prototype pollution.",
        "URL": "https://github.com/chartjs/Chart.js/pull/7920",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d92605aa6c29add400c4c551413fc2306c15e8d",
        "inducing_commit_hash_pyszz": [
            "d6a5ea0d3629f8687ccd12637f221bd3c68451d1"
        ],
        "inducing_commit_hash_pd": [
            "d6a5ea0d3629f8687ccd12637f221bd3c68451d1",
            "889ecd560bba46a81a29ca29d02f0691aaadc8d2",
            "0697d0de9073c456565c9deeb20cb36d85e858c9",
            "16bcd6adc579cb3deae16ea915680bc219924cdc"
        ],
        "matched": [
            "d6a5ea0d3629f8687ccd12637f221bd3c68451d1"
        ]
    },
    {
        "repo_name": "chbrown/rfc6902",
        "CVE_ID": "CVE-2021-4245",
        "Problem_Type": "CWE-1321",
        "Description": "A vulnerability classified as problematic has been found in chbrown rfc6902. This affects an unknown part of the file pointer.ts. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The exploit has been disclosed to the public and may be used. The name of the patch is c006ce9faa43d31edb34924f1df7b79c137096cf. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215883.",
        "URL": "https://github.com/chbrown/rfc6902/pull/76",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b3fa8360e1d1751a23015b2b37622ede16c6d43",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "chipsalliance/rocket-chip",
        "CVE_ID": "CVE-2022-34632",
        "Problem_Type": "CWE-327",
        "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.",
        "URL": "https://github.com/chipsalliance/rocket-chip/pull/2950/commits/4f8114374d8824dfdec03f576a8cd68bebce4e56",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4f8114374d8824dfdec03f576a8cd68bebce4e56",
        "inducing_commit_hash_pyszz": [
            "185cac830746df9a22465e3267e6d47e01567bc3"
        ],
        "inducing_commit_hash_pd": [
            "185cac830746df9a22465e3267e6d47e01567bc3"
        ],
        "matched": [
            "185cac830746df9a22465e3267e6d47e01567bc3"
        ]
    },
    {
        "repo_name": "chipsalliance/rocket-chip",
        "CVE_ID": "CVE-2022-34632",
        "Problem_Type": "CWE-327",
        "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.",
        "URL": "https://github.com/chipsalliance/rocket-chip/pull/2950#issuecomment-1106745660",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4ecc497ccb72ff56a3bbeb07244a5545de8770d9",
        "inducing_commit_hash_pyszz": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ],
        "inducing_commit_hash_pd": [
            "9949347569beae5ee1a60071b03fb49acf2bd52c",
            "049fc8dc24b947e68072f38e78ac036a1a8648f0",
            "e80340198a621c40bd5007ad71229b9df8d967c4",
            "832e56d3c7b6aa3db6659478a373a9c8e4f31b6e",
            "b48744896186dfdbb898065126173a44e587fbd0",
            "9fea4c83da18d2b204968c10deac8bfd49f75c2f",
            "42a58abafe25263a1679b5f98cfddfcfa2d956d1",
            "661f8e635b0d67a851cc953d0d93b71af959b32b",
            "b5f8ae2a928bcd43abfb6d180445b17a18ce9330",
            "185cac830746df9a22465e3267e6d47e01567bc3",
            "e5e77a0fcc5e11e467cb098cab8f0a59ae3a6bc9",
            "f428f8b8686b4bc949c5b46859a9957c4cb1bdf6",
            "dee8934d7724ae1741a8b8f16f36ae178861046c",
            "e8b0aaacba124234b6ab191bb6936cf73d7fbdd2",
            "7ae44d4905745de24f57a107cf4731c2d65ab7eb",
            "a0e5a20b60b17fa3fff2dd26e37aad8b227a7817",
            "b5ff43609275176480311c90b60d4ba7a3dfbcc2",
            "9aa724706e1163c277326371a706a65719dc9c35",
            "1bc5e01f665dae5b75854ac5601354580d0c78d8",
            "9ade0e41cc343e996a1161b67007eaa16f549d9f",
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40",
            "d345788be93832e0523e6a147029032c17f2d24b",
            "4c62a179f4e5085b65d1096ff4cca2bf198fedfe",
            "e203b8b3787780471ed68c3315998e973bbe0d83",
            "12da135df51ed89467d6a509cf5a2b3816116d2d",
            "c921fc34a9f65e2fe10e43ff8d2f2bdcd9ead715",
            "a59fc3bdaa9bd208fbad18d662842efda29ae3a4",
            "c3018812b56f8bfe245fb0a3681c2e22395b47d9",
            "27bbecf359489261d208c6fb6daabf3b212f0267",
            "4c595d175c2c3d3dfa721a78a4a2a9fab009621b",
            "335e2c8a1ebef0182d81ec7d46f08d4ec94b475c",
            "63b76488fd69e84623f4c173b48959c9b36c6b12",
            "53a162c826fd4298766ba2b67154937e27231e3e",
            "29bc361d6c298fec7f3d9c3fe9573937a3890d85",
            "04a108710bfbe4b401587485744ff00d8cbf5077",
            "fcfedefc09db3397edec730c64bc5043d35f7e09",
            "e8c8d2af7141102adf8ccc65b929e740ce7ce189",
            "a50a1f7d50a74ad65f4d61f143cdc103f1769878",
            "2b24881d24c2f8cd06b7248db2bf9479455f4adc",
            "52d6b0b1a55249bd12ba2fb747c4b78e4cdfa121",
            "c06e2d16e4791bdd4bb36e661d36bec21c627c89",
            "edc804f3fd78bc4f8f80efa1e75a549d63e446ad",
            "6181de4cc952fed21f7754ebbfc70c5153a1ca60",
            "daefbd0228a1b4c0c0f954d51b4b6cf0621ae336",
            "c61b2a65618db72dffd2be9c8a0477117329bc70",
            "058396aefe4103046406be63e1a4c0178c4d13b3",
            "84576650b57133b28bd4e2d3a57cb2d512dae5a5",
            "f4524e4c91e708e80e6d6df36941b71169748687",
            "3e10eabd87ab4066dce4322c4346e50425ef0847",
            "cc447c8110e1fb8674fda9aec510aed3fe88b3a0"
        ],
        "matched": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ]
    },
    {
        "repo_name": "chipsalliance/rocket-chip",
        "CVE_ID": "CVE-2022-34632",
        "Problem_Type": "CWE-327",
        "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.",
        "URL": "https://github.com/chipsalliance/rocket-chip/pull/2950#issuecomment-1107055607",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4ecc497ccb72ff56a3bbeb07244a5545de8770d9",
        "inducing_commit_hash_pyszz": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ],
        "inducing_commit_hash_pd": [
            "9949347569beae5ee1a60071b03fb49acf2bd52c",
            "049fc8dc24b947e68072f38e78ac036a1a8648f0",
            "e80340198a621c40bd5007ad71229b9df8d967c4",
            "832e56d3c7b6aa3db6659478a373a9c8e4f31b6e",
            "b48744896186dfdbb898065126173a44e587fbd0",
            "9fea4c83da18d2b204968c10deac8bfd49f75c2f",
            "42a58abafe25263a1679b5f98cfddfcfa2d956d1",
            "661f8e635b0d67a851cc953d0d93b71af959b32b",
            "b5f8ae2a928bcd43abfb6d180445b17a18ce9330",
            "185cac830746df9a22465e3267e6d47e01567bc3",
            "e5e77a0fcc5e11e467cb098cab8f0a59ae3a6bc9",
            "f428f8b8686b4bc949c5b46859a9957c4cb1bdf6",
            "dee8934d7724ae1741a8b8f16f36ae178861046c",
            "e8b0aaacba124234b6ab191bb6936cf73d7fbdd2",
            "7ae44d4905745de24f57a107cf4731c2d65ab7eb",
            "a0e5a20b60b17fa3fff2dd26e37aad8b227a7817",
            "b5ff43609275176480311c90b60d4ba7a3dfbcc2",
            "9aa724706e1163c277326371a706a65719dc9c35",
            "1bc5e01f665dae5b75854ac5601354580d0c78d8",
            "9ade0e41cc343e996a1161b67007eaa16f549d9f",
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40",
            "d345788be93832e0523e6a147029032c17f2d24b",
            "4c62a179f4e5085b65d1096ff4cca2bf198fedfe",
            "e203b8b3787780471ed68c3315998e973bbe0d83",
            "12da135df51ed89467d6a509cf5a2b3816116d2d",
            "c921fc34a9f65e2fe10e43ff8d2f2bdcd9ead715",
            "a59fc3bdaa9bd208fbad18d662842efda29ae3a4",
            "c3018812b56f8bfe245fb0a3681c2e22395b47d9",
            "27bbecf359489261d208c6fb6daabf3b212f0267",
            "4c595d175c2c3d3dfa721a78a4a2a9fab009621b",
            "335e2c8a1ebef0182d81ec7d46f08d4ec94b475c",
            "63b76488fd69e84623f4c173b48959c9b36c6b12",
            "53a162c826fd4298766ba2b67154937e27231e3e",
            "29bc361d6c298fec7f3d9c3fe9573937a3890d85",
            "04a108710bfbe4b401587485744ff00d8cbf5077",
            "fcfedefc09db3397edec730c64bc5043d35f7e09",
            "e8c8d2af7141102adf8ccc65b929e740ce7ce189",
            "a50a1f7d50a74ad65f4d61f143cdc103f1769878",
            "2b24881d24c2f8cd06b7248db2bf9479455f4adc",
            "52d6b0b1a55249bd12ba2fb747c4b78e4cdfa121",
            "c06e2d16e4791bdd4bb36e661d36bec21c627c89",
            "edc804f3fd78bc4f8f80efa1e75a549d63e446ad",
            "6181de4cc952fed21f7754ebbfc70c5153a1ca60",
            "daefbd0228a1b4c0c0f954d51b4b6cf0621ae336",
            "c61b2a65618db72dffd2be9c8a0477117329bc70",
            "058396aefe4103046406be63e1a4c0178c4d13b3",
            "84576650b57133b28bd4e2d3a57cb2d512dae5a5",
            "f4524e4c91e708e80e6d6df36941b71169748687",
            "3e10eabd87ab4066dce4322c4346e50425ef0847",
            "cc447c8110e1fb8674fda9aec510aed3fe88b3a0"
        ],
        "matched": [
            "06a2a037ca56072492ee5ddfaf9dc46f0365bc40"
        ]
    },
    {
        "repo_name": "chjj/marked",
        "CVE_ID": "CVE-2016-10531",
        "Problem_Type": "CWE-79",
        "Description": "marked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.",
        "URL": "https://github.com/chjj/marked/pull/592/commits/2cff85979be8e7a026a9aca35542c470cf5da523",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2cff85979be8e7a026a9aca35542c470cf5da523",
        "inducing_commit_hash_pyszz": [
            "613bf6ac63e9a1e4071f4b304050dc084d6b3ccb"
        ],
        "inducing_commit_hash_pd": [
            "613bf6ac63e9a1e4071f4b304050dc084d6b3ccb"
        ],
        "matched": [
            "613bf6ac63e9a1e4071f4b304050dc084d6b3ccb"
        ]
    },
    {
        "repo_name": "cilium/cilium",
        "CVE_ID": "CVE-2023-41332",
        "Problem_Type": "CWE-755",
        "Description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. In Cilium clusters where Cilium's Layer 7 proxy has been disabled, creating workloads with `policy.cilium.io/proxy-visibility` annotations (in Cilium >= v1.13) or `io.cilium.proxy-visibility` annotations (in Cilium <= v1.12) causes the Cilium agent to segfault on the node to which the workload is assigned. Existing traffic on the affected node will continue to flow, but the Cilium agent on the node will not able to process changes to workloads running on the node. This will also prevent workloads from being able to start on the affected node. The denial of service will be limited to the node on which the workload is scheduled, however an attacker may be able to schedule workloads on the node of their choosing, which could lead to targeted attacks. This issue has been resolved in Cilium versions 1.14.2, 1.13.7, and 1.12.14. Users unable to upgrade can avoid this denial of service attack by enabling the Layer 7 proxy.\n\n",
        "URL": "https://github.com/cilium/cilium/pull/27597",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch']",
        "fix_commit_hash": "3f23ba713082afc12903f6e127e41d507cd71977",
        "inducing_commit_hash_pyszz": [
            "be2306d404be851b31385bc1474d9ebe6dd8a1fd"
        ],
        "inducing_commit_hash_pd": [
            "be2306d404be851b31385bc1474d9ebe6dd8a1fd",
            "ea404cf458aeed02bbaad27326838b9b135ec892"
        ],
        "matched": [
            "be2306d404be851b31385bc1474d9ebe6dd8a1fd"
        ]
    },
    {
        "repo_name": "cilium/cilium",
        "CVE_ID": "CVE-2023-41333",
        "Problem_Type": "CWE-306",
        "Description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An attacker with the ability to create or modify CiliumNetworkPolicy objects in a particular namespace is able to affect traffic on an entire Cilium cluster, potentially bypassing policy enforcement in other namespaces. By using a crafted `endpointSelector` that uses the `DoesNotExist` operator on the `reserved:init` label, the attacker can create policies that bypass namespace restrictions and affect the entire Cilium cluster. This includes potentially allowing or denying all traffic. This attack requires API server access, as described in the Kubernetes API Server Attacker section of the Cilium Threat Model. This issue has been resolved in Cilium versions 1.14.2, 1.13.7, and 1.12.14. As a workaround an admission webhook can be used to prevent the use of `endpointSelectors` that use the `DoesNotExist` operator on the `reserved:init` label in CiliumNetworkPolicies.\n",
        "URL": "https://github.com/cilium/cilium/pull/28007",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "642768d631d4e5d1a07a74f3a904e0f8fc1a1c6f",
        "inducing_commit_hash_pyszz": [
            "b667f010fb814df3e056f18c39933e02e4b93bfb"
        ],
        "inducing_commit_hash_pd": [
            "8e25d64386426ea97fa7b3a35f77d074ef4a7546"
        ],
        "matched": [
            "b667f010fb814df3e056f18c39933e02e4b93bfb"
        ]
    },
    {
        "repo_name": "cloudflare/lua-resty-json",
        "CVE_ID": "CVE-2023-3040",
        "Problem_Type": "CWE-125",
        "Description": "A debug function in the lua-resty-json package, up to commit id 3ef9492bd3a44d9e51301d6adc3cd1789c8f534a (merged in PR #14) contained an out of bounds access bug that could have allowed an attacker to launch a DoS if the function was used to parse untrusted input data. It is important to note that because this debug function was only used in tests and demos, it was not exploitable in a normal environment.\n",
        "URL": "https://github.com/cloudflare/lua-resty-json/pull/14",
        "Tag": "['Patch']",
        "fix_commit_hash": "424bcdd7af825d57911f8d78708dadf5d71094a4",
        "inducing_commit_hash_pyszz": [
            "0a93a67d14d1f58f56c1a7b315970794cac3a599"
        ],
        "inducing_commit_hash_pd": [
            "0a93a67d14d1f58f56c1a7b315970794cac3a599"
        ],
        "matched": [
            "0a93a67d14d1f58f56c1a7b315970794cac3a599"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7078",
        "Problem_Type": "CWE-918",
        "Description": "Sending specially crafted HTTP requests to Miniflare's server could result in arbitrary HTTP and WebSocket requests being sent from the server. If Miniflare was configured to listen on external network interfaces (as was the default in wrangler\u00c2\u00a0until 3.19.0), an attacker on the local network could access other local servers.\n\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4532",
        "Tag": "['Patch']",
        "fix_commit_hash": "311ffbd5064f8301ac6f0311bbe5630897923b93",
        "inducing_commit_hash_pyszz": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ],
        "inducing_commit_hash_pd": [
            "d282e9c6de4042ce39a6f34230b8759c07684c91",
            "a3ce6fc2aa24976932a694e79b436b5f7a428c02",
            "3ac91e839d59166be081a3ec4cb32d7422373fb0",
            "7fbe1937b311f36077c92814207bbb15ef3878d6",
            "9e632cddeace54aa8fbc9695621002889c3daa03"
        ],
        "matched": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7079",
        "Problem_Type": "CWE-287",
        "Description": "Sending specially crafted HTTP requests and inspector messages to Wrangler's dev server could result in any file on the user's computer being accessible over the local network. An attacker that could trick any user on the local network into opening a malicious website could also read any file.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4532",
        "Tag": "['Patch']",
        "fix_commit_hash": "311ffbd5064f8301ac6f0311bbe5630897923b93",
        "inducing_commit_hash_pyszz": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ],
        "inducing_commit_hash_pd": [
            "d282e9c6de4042ce39a6f34230b8759c07684c91",
            "a3ce6fc2aa24976932a694e79b436b5f7a428c02",
            "3ac91e839d59166be081a3ec4cb32d7422373fb0",
            "7fbe1937b311f36077c92814207bbb15ef3878d6",
            "9e632cddeace54aa8fbc9695621002889c3daa03"
        ],
        "matched": [
            "7fbe1937b311f36077c92814207bbb15ef3878d6"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7079",
        "Problem_Type": "CWE-287",
        "Description": "Sending specially crafted HTTP requests and inspector messages to Wrangler's dev server could result in any file on the user's computer being accessible over the local network. An attacker that could trick any user on the local network into opening a malicious website could also read any file.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4535",
        "Tag": "['Patch']",
        "fix_commit_hash": "29df8e17545bf3926b6d61678b596be809d40c6d",
        "inducing_commit_hash_pyszz": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ],
        "inducing_commit_hash_pd": [
            "eebad0d9e593237b4db61047c94e2ec5b47a7b3c",
            "310281a48a1de2997b1c055711f4ad47f3aa29e1"
        ],
        "matched": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7080",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The V8 inspector intentionally allows arbitrary code execution within the Workers sandbox for debugging. wrangler dev would previously start an inspector server listening on all network interfaces. This would allow an attacker on the local network to connect to the inspector and run arbitrary code. Additionally, the inspector server did not validate Origin/Host headers, granting an attacker that can trick any user on the local network into opening a malicious website the ability to run code. If wrangler dev --remote was being used, an attacker could access production resources if they were bound to the worker.\n\nThis issue was fixed in wrangler@3.19.0 and wrangler@2.20.2. Whilst wrangler dev's inspector server listens on local interfaces by default as of wrangler@3.16.0, an  SSRF vulnerability in miniflare https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-fwvg-2739-22v7 \u00c2\u00a0(CVE-2023-7078) allowed access from the local network until wrangler@3.18.0. wrangler@3.19.0 and wrangler@2.20.2 introduced validation for the Origin/Host headers.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4437",
        "Tag": "['Patch']",
        "fix_commit_hash": "05b1bbd2f5b8e60268e30c276067c3a3ae1239cf",
        "inducing_commit_hash_pyszz": [
            "6ccc4fa672204ec671a1c99db04b4acbd52d5f20"
        ],
        "inducing_commit_hash_pd": [
            "eebad0d9e593237b4db61047c94e2ec5b47a7b3c",
            "6ccc4fa672204ec671a1c99db04b4acbd52d5f20",
            "ebc1aa579a4e884cf2b1889a5245b5ad86716144",
            "88f15f61cad2a69c07e26203cc84ddb2da42deb3",
            "5fd080c88ee7991cde107f8723f06ea2fd2c651d"
        ],
        "matched": [
            "6ccc4fa672204ec671a1c99db04b4acbd52d5f20"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7080",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The V8 inspector intentionally allows arbitrary code execution within the Workers sandbox for debugging. wrangler dev would previously start an inspector server listening on all network interfaces. This would allow an attacker on the local network to connect to the inspector and run arbitrary code. Additionally, the inspector server did not validate Origin/Host headers, granting an attacker that can trick any user on the local network into opening a malicious website the ability to run code. If wrangler dev --remote was being used, an attacker could access production resources if they were bound to the worker.\n\nThis issue was fixed in wrangler@3.19.0 and wrangler@2.20.2. Whilst wrangler dev's inspector server listens on local interfaces by default as of wrangler@3.16.0, an  SSRF vulnerability in miniflare https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-fwvg-2739-22v7 \u00c2\u00a0(CVE-2023-7078) allowed access from the local network until wrangler@3.18.0. wrangler@3.19.0 and wrangler@2.20.2 introduced validation for the Origin/Host headers.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4535",
        "Tag": "['Patch']",
        "fix_commit_hash": "29df8e17545bf3926b6d61678b596be809d40c6d",
        "inducing_commit_hash_pyszz": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ],
        "inducing_commit_hash_pd": [
            "eebad0d9e593237b4db61047c94e2ec5b47a7b3c",
            "310281a48a1de2997b1c055711f4ad47f3aa29e1"
        ],
        "matched": [
            "d99087433814e4f1fb98cd61b03b6e2f606b1a15"
        ]
    },
    {
        "repo_name": "cloudflare/workers-sdk",
        "CVE_ID": "CVE-2023-7080",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The V8 inspector intentionally allows arbitrary code execution within the Workers sandbox for debugging. wrangler dev would previously start an inspector server listening on all network interfaces. This would allow an attacker on the local network to connect to the inspector and run arbitrary code. Additionally, the inspector server did not validate Origin/Host headers, granting an attacker that can trick any user on the local network into opening a malicious website the ability to run code. If wrangler dev --remote was being used, an attacker could access production resources if they were bound to the worker.\n\nThis issue was fixed in wrangler@3.19.0 and wrangler@2.20.2. Whilst wrangler dev's inspector server listens on local interfaces by default as of wrangler@3.16.0, an  SSRF vulnerability in miniflare https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-fwvg-2739-22v7 \u00c2\u00a0(CVE-2023-7078) allowed access from the local network until wrangler@3.18.0. wrangler@3.19.0 and wrangler@2.20.2 introduced validation for the Origin/Host headers.\n",
        "URL": "https://github.com/cloudflare/workers-sdk/pull/4550",
        "Tag": "['Patch']",
        "fix_commit_hash": "63708a94fb7a055bf15fa963f2d598b47b11d3c0",
        "inducing_commit_hash_pyszz": [
            "311ffbd5064f8301ac6f0311bbe5630897923b93"
        ],
        "inducing_commit_hash_pd": [
            "9a1c65c820a08974bfbc167e0d7511b2b15f4fa9",
            "29df8e17545bf3926b6d61678b596be809d40c6d",
            "311ffbd5064f8301ac6f0311bbe5630897923b93"
        ],
        "matched": [
            "311ffbd5064f8301ac6f0311bbe5630897923b93"
        ]
    },
    {
        "repo_name": "ClusterLabs/libqb",
        "CVE_ID": "CVE-2023-39976",
        "Problem_Type": "CWE-120",
        "Description": "log_blackbox.c in libqb before 2.0.8 allows a buffer overflow via long log messages because the header size is not considered.",
        "URL": "https://github.com/ClusterLabs/libqb/pull/490",
        "Tag": "['Patch']",
        "fix_commit_hash": "1bbaa929b77113532785c408dd1b41cd0521ffc8",
        "inducing_commit_hash_pyszz": [
            "0ec02f9ac589e9e21e447f4406ec104ade01ef73"
        ],
        "inducing_commit_hash_pd": [
            "951c9826f8a744f92329496350aaeaf10070c82b",
            "0ec02f9ac589e9e21e447f4406ec104ade01ef73"
        ],
        "matched": [
            "0ec02f9ac589e9e21e447f4406ec104ade01ef73"
        ]
    },
    {
        "repo_name": "codex-team/editor.js",
        "CVE_ID": "CVE-2022-23474",
        "Problem_Type": "CWE-79",
        "Description": "Editor.js is a block-style editor with clean JSON output. Versions prior to 2.26.0 are vulnerable to Code Injection via pasted input. The processHTML method passes pasted input into wrapper\u00c2\u2019s innerHTML. This issue is patched in version 2.26.0.",
        "URL": "https://github.com/codex-team/editor.js/pull/2100",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f659015be6de8e6f0c322c5ff4d1a4532d2f29a2",
        "inducing_commit_hash_pyszz": [
            "6c0555a3229a16641709cdc83ec248af87f3c77a"
        ],
        "inducing_commit_hash_pd": [
            "29db87525b1b4bdd2c884005b357ab14f46a1ed6",
            "ff91466b148eb58f935c4449bf700a627a785d79",
            "61242ab6a62a3b14efdf5921fdc2c475b3625eaf",
            "581289c03e83b149e633fb4f4573d278ace7450f",
            "ac93017c706f091fd3014c3edb248db4e03f55dd",
            "cb86bf446b12b6f32b3e59cb05b0cf294dcf12c6",
            "577da8fa22b85e80bac3e59c2fc3ef8101455451",
            "6c0555a3229a16641709cdc83ec248af87f3c77a",
            "63eeec0f3b3e05025c6f2875a1eb2a4c03a24c8c",
            "bcdfcdadbc444921aee62b38516329cda3c96a70",
            "be6f9b78f265c3d553c799c99e59c9916bf29e17",
            "669c11eaa5ef8dd2e5df721c4eaa590e38c9c392",
            "a88dc8e30ba64dd854aaaf769a37074dff01449d",
            "a67e699991d0326f3a5d0f6b723607d49adf80bf",
            "4cfcb656a81dc9ae6daf0841ac094f68c4368e15"
        ],
        "matched": [
            "6c0555a3229a16641709cdc83ec248af87f3c77a"
        ]
    },
    {
        "repo_name": "Codiad/Codiad",
        "CVE_ID": "CVE-2017-11366",
        "Problem_Type": "CWE-78",
        "Description": "components/filemanager/class.filemanager.php in Codiad before 2.8.4 is vulnerable to remote command execution because shell commands can be embedded in parameter values, as demonstrated by search_file_type.",
        "URL": "https://github.com/Codiad/Codiad/pull/1013/commits/b3645b4c6718cef6de7003f41aafe7bfcc0395d1",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3645b4c6718cef6de7003f41aafe7bfcc0395d1",
        "inducing_commit_hash_pyszz": [
            "a4bcfdfc3952a6f2ea1a78638e349243678d1f70"
        ],
        "inducing_commit_hash_pd": [
            "40a9dc37e21889bfd54af4785f48d50fa9e5880e",
            "26484e06f552ebf9b1f87413a747e2c038f2cc4d"
        ],
        "matched": [
            "a4bcfdfc3952a6f2ea1a78638e349243678d1f70"
        ]
    },
    {
        "repo_name": "Cog-Creators/Red-DiscordBot",
        "CVE_ID": "CVE-2020-15140",
        "Problem_Type": "CWE-74",
        "Description": "In Red Discord Bot before version 3.3.11, a RCE exploit has been discovered in the Trivia module: this exploit allows Discord users with specifically crafted usernames to inject code into the Trivia module's leaderboard command. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information. This critical exploit has been fixed on version 3.3.11.",
        "URL": "https://github.com/Cog-Creators/Red-DiscordBot/pull/4175/commits/9ab536235bafc2b42c3c17d7ce26f1cc64482a81",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c9e4c18f179509d3cd9a9d003a9ae071c5011396",
        "inducing_commit_hash_pyszz": [
            "897adbf5ac15e43463761694c603707f6721783d"
        ],
        "inducing_commit_hash_pd": [
            "897adbf5ac15e43463761694c603707f6721783d"
        ],
        "matched": [
            "897adbf5ac15e43463761694c603707f6721783d"
        ]
    },
    {
        "repo_name": "Cog-Creators/Red-DiscordBot",
        "CVE_ID": "CVE-2020-15147",
        "Problem_Type": "CWE-74",
        "Description": "Red Discord Bot before versions 3.3.12 and 3.4 has a Remote Code Execution vulnerability in the Streams module. This exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information. As a workaround, unloading the Trivia module with `unload streams` can render this exploit not accessible. It is highly recommended updating to 3.3.12 or 3.4 to completely patch this issue.",
        "URL": "https://github.com/Cog-Creators/Red-DiscordBot/pull/4183/commits/e269ea0d3bc88417163c18431b1df38a9be92bfc",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bf581b9f9711f89aafe838815e719a54b6b45924",
        "inducing_commit_hash_pyszz": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "inducing_commit_hash_pd": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "matched": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ]
    },
    {
        "repo_name": "Cog-Creators/Red-DiscordBot",
        "CVE_ID": "CVE-2020-15147",
        "Problem_Type": "CWE-74",
        "Description": "Red Discord Bot before versions 3.3.12 and 3.4 has a Remote Code Execution vulnerability in the Streams module. This exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information. As a workaround, unloading the Trivia module with `unload streams` can render this exploit not accessible. It is highly recommended updating to 3.3.12 or 3.4 to completely patch this issue.",
        "URL": "https://github.com/Cog-Creators/Red-DiscordBot/pull/4183",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bf581b9f9711f89aafe838815e719a54b6b45924",
        "inducing_commit_hash_pyszz": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "inducing_commit_hash_pd": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ],
        "matched": [
            "a1b03be27e987592e7ad50983abe761fe729fd07"
        ]
    },
    {
        "repo_name": "combust/mleap",
        "CVE_ID": "CVE-2023-5245",
        "Problem_Type": "CWE-22",
        "Description": "FileUtil.extract() enumerates all zip file entries and extracts each file without validating whether file paths in the archive are outside the intended directory.\n\nWhen creating an instance of TensorflowModel using the saved_model format and an exported tensorflow model, the apply() function invokes the vulnerable implementation of FileUtil.extract().\n\nArbitrary file creation can directly lead to code execution\n\n",
        "URL": "https://github.com/combust/mleap/pull/866#issuecomment-1738032225",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "35bf420cf3db3a23e287c342b6b310172610f8a9",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "9f18e651a5a2ca9a3ecd000375d7e37a13e68f2a"
        ],
        "matched": [
            "9f18e651a5a2ca9a3ecd000375d7e37a13e68f2a"
        ]
    },
    {
        "repo_name": "cometbft/cometbft",
        "CVE_ID": "CVE-2023-34450",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. An internal modification made in versions 0.34.28 and 0.37.1 to the way struct `PeerState` is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places. The first is via logs, setting the `consensus` logging module to \"debug\" level (should not happen in production), and setting the log output format to JSON. The second is via RPC `dump_consensus_state`.\n\nCase 1, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.\n\nIn case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.\n\nThe theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one `PeerState` struct. If `dump_consensus_state` is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different `PeerState` structs) and the chain will progress again. Then, the same process can be repeated.\n\nAs the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with two nodes decreases. Only the first `PeerState` struct will deadlock, and not the others (RPC `dump_consensus_state` accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).\n\nThis regression was fixed in versions 0.34.29 and 0.37.2. Some workarounds are available. For case 1 (hitting the deadlock via logs), either don't set the log output to \"json\", leave at \"plain\", or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher. For case 2 (hitting the deadlock via RPC `dump_consensus_state`), do not expose `dump_consensus_state` RPC endpoint to the public internet (e.g., via rules in one's nginx setup).",
        "URL": "https://github.com/cometbft/cometbft/pull/524",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "587bc0b18d281f9949174c2ae9b57a65c3e356bb",
        "inducing_commit_hash_pyszz": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ],
        "inducing_commit_hash_pd": [
            "d2c05bc5b9d1a909e3e4a23732a9fdee0c7543ea",
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ],
        "matched": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ]
    },
    {
        "repo_name": "cometbft/cometbft",
        "CVE_ID": "CVE-2023-34450",
        "Problem_Type": "CWE-401",
        "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. An internal modification made in versions 0.34.28 and 0.37.1 to the way struct `PeerState` is serialized to JSON introduced a deadlock when new function MarshallJSON is called. This function can be called from two places. The first is via logs, setting the `consensus` logging module to \"debug\" level (should not happen in production), and setting the log output format to JSON. The second is via RPC `dump_consensus_state`.\n\nCase 1, which should not be hit in production, will eventually hit the deadlock in most goroutines, effectively halting the node.\n\nIn case 2, only the data structures related to the first peer will be deadlocked, together with the thread(s) dealing with the RPC request(s). This means that only one of the channels of communication to the node's peers will be blocked. Eventually the peer will timeout and excluded from the list (typically after 2 minutes). The goroutines involved in the deadlock will not be garbage collected, but they will not interfere with the system after the peer is excluded.\n\nThe theoretical worst case for case 2, is a network with only two validator nodes. In this case, each of the nodes only has one `PeerState` struct. If `dump_consensus_state` is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different `PeerState` structs) and the chain will progress again. Then, the same process can be repeated.\n\nAs the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with two nodes decreases. Only the first `PeerState` struct will deadlock, and not the others (RPC `dump_consensus_state` accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that \"for\" loop to never be reached).\n\nThis regression was fixed in versions 0.34.29 and 0.37.2. Some workarounds are available. For case 1 (hitting the deadlock via logs), either don't set the log output to \"json\", leave at \"plain\", or don't set the consensus logging module to \"debug\", leave it at \"info\" or higher. For case 2 (hitting the deadlock via RPC `dump_consensus_state`), do not expose `dump_consensus_state` RPC endpoint to the public internet (e.g., via rules in one's nginx setup).",
        "URL": "https://github.com/cometbft/cometbft/pull/865",
        "Tag": "['Patch']",
        "fix_commit_hash": "f6ea09171a2bf9f695f59b65f5c51e4a8c168015",
        "inducing_commit_hash_pyszz": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ],
        "inducing_commit_hash_pd": [
            "88cbf477e789882dbc43bb3e92935ce24a0e118a"
        ],
        "matched": [
            "56c9e0da7e2790604ddbbd973e60a5a030d9fc48"
        ]
    },
    {
        "repo_name": "CompassionCH/compassion-switzerland",
        "CVE_ID": "CVE-2019-15564",
        "Problem_Type": "CWE-89",
        "Description": "The Compassion Switzerland addons 10.01.4 for Odoo allow SQL injection in models/partner_compassion.py.",
        "URL": "https://github.com/CompassionCH/compassion-switzerland/pull/897",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "668d7b9f7b5946fee4add6e2abce2b40e652ef7a",
        "inducing_commit_hash_pyszz": [
            "0307c40a306a5f934f29f6bfeaac88abc24c56a4"
        ],
        "inducing_commit_hash_pd": [
            "0307c40a306a5f934f29f6bfeaac88abc24c56a4"
        ],
        "matched": [
            "0307c40a306a5f934f29f6bfeaac88abc24c56a4"
        ]
    },
    {
        "repo_name": "containerbuildsystem/osbs-client",
        "CVE_ID": "CVE-2019-10135",
        "Problem_Type": "CWE-502",
        "Description": "A flaw was found in the yaml.load() function in the osbs-client versions since 0.46 before 0.56.1. Insecure use of the yaml.load() function allowed the user to load any suspicious object for code execution via the parsing of malicious YAML files.",
        "URL": "https://github.com/containerbuildsystem/osbs-client/pull/865",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dee8ff1ea3a17bc93ead059b9567ae0ff965592c",
        "inducing_commit_hash_pyszz": [
            "43fcd4c62d3b5a6db1c8b6f9efd179ee30227970"
        ],
        "inducing_commit_hash_pd": [
            "903024e73e9781a8c092d95611f825edbbd24ebc",
            "43fcd4c62d3b5a6db1c8b6f9efd179ee30227970"
        ],
        "matched": [
            "43fcd4c62d3b5a6db1c8b6f9efd179ee30227970"
        ]
    },
    {
        "repo_name": "containous/traefik",
        "CVE_ID": "CVE-2019-12452",
        "Problem_Type": "CWE-522",
        "Description": "types/types.go in Containous Traefik 1.7.x through 1.7.11, when the --api flag is used and the API is publicly reachable and exposed without sufficient access control (which is contrary to the API documentation), allows remote authenticated users to discover password hashes by reading the Basic HTTP Authentication or Digest HTTP Authentication section, or discover a key by reading the ClientTLS section. These can be found in the JSON response to a /api request.",
        "URL": "https://github.com/containous/traefik/pull/4918",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "51287d9316b7506f0bab8ffcf6db517b38566390",
        "inducing_commit_hash_pyszz": [
            "a953d3ad893a3ffe39edf2c8860498e7ad5e45f6"
        ],
        "inducing_commit_hash_pd": [
            "a953d3ad893a3ffe39edf2c8860498e7ad5e45f6"
        ],
        "matched": [
            "a953d3ad893a3ffe39edf2c8860498e7ad5e45f6"
        ]
    },
    {
        "repo_name": "containous/traefik",
        "CVE_ID": "CVE-2020-15129",
        "Problem_Type": "CWE-601",
        "Description": "In Traefik before versions 1.7.26, 2.2.8, and 2.3.0-rc3, there exists a potential open redirect vulnerability in Traefik's handling of the \"X-Forwarded-Prefix\" header. The Traefik API dashboard component doesn't validate that the value of the header \"X-Forwarded-Prefix\" is a site relative path and will redirect to any header provided URI. Successful exploitation of an open redirect can be used to entice victims to disclose sensitive information. Active Exploitation of this issue is unlikely as it would require active header injection, however the Traefik team addressed this issue nonetheless to prevent abuse in e.g. cache poisoning scenarios.",
        "URL": "https://github.com/containous/traefik/pull/7109",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e63db782c11c7b8bfce30be4c902e7ef8f9f33d2",
        "inducing_commit_hash_pyszz": [
            "b385ffaee7f0de1073955a123d8397853c563f0b"
        ],
        "inducing_commit_hash_pd": [
            "9ebe3c38b2083ce1b58d921d7f8c6f7ff5a4559f",
            "9c651ae913fc8b7ca0f5732ee16b9e68260705c0"
        ],
        "matched": [
            "b385ffaee7f0de1073955a123d8397853c563f0b"
        ]
    },
    {
        "repo_name": "containous/traefik",
        "CVE_ID": "CVE-2020-9321",
        "Problem_Type": "CWE-295",
        "Description": "configurationwatcher.go in Traefik 2.x before 2.1.4 and TraefikEE 2.0.0 mishandles the purging of certificate contents from providers before logging.",
        "URL": "https://github.com/containous/traefik/pull/6281",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b498c7bcbb255af649a4842511a585929ca14d3f",
        "inducing_commit_hash_pyszz": [
            "51486b18fa8f0e06f05c1d32f8272cc0dcdd6d38"
        ],
        "inducing_commit_hash_pd": [
            "424e2a9439f8f3b00d7f9f19ed1df3b6d3c8c570"
        ],
        "matched": [
            "51486b18fa8f0e06f05c1d32f8272cc0dcdd6d38"
        ]
    },
    {
        "repo_name": "containrrr/shoutrrr",
        "CVE_ID": "CVE-2022-25891",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package github.com/containrrr/shoutrrr/pkg/util before 0.6.0 are vulnerable to Denial of Service (DoS) via the util.PartitionMessage function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.",
        "URL": "https://github.com/containrrr/shoutrrr/pull/242",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6a27056f9d7522a8b493216195cb7634bf4b5c42",
        "inducing_commit_hash_pyszz": [
            "17f842b5b665f922774b867402598bfc438572ee"
        ],
        "inducing_commit_hash_pd": [
            "87324a2a0627ad74b8bd2850e0c711afa5c56d22",
            "8d401466680c0dbe416efca2d6253e2f965bab1a",
            "80c2c2162f213e55384e0192f937dfe3cda7ad53",
            "6083d9f71520f9641a6c0d95801763c9412b2215",
            "9ef6db2fc5f5163db48f6e9b71b415df08c15730",
            "2e825c7a428eb9543d5f27e19eb6abf4cdc2a618",
            "5afd1add67015042d85d223c20d6b199cd7e19a6",
            "e19ba77b42fe64ec77cf972fcb59d93fb9318aea",
            "17f842b5b665f922774b867402598bfc438572ee"
        ],
        "matched": [
            "17f842b5b665f922774b867402598bfc438572ee"
        ]
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2022-35926",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. Because of insufficient validation of IPv6 neighbor discovery options in Contiki-NG, attackers can send neighbor solicitation packets that trigger an out-of-bounds read. The problem exists in the module os/net/ipv6/uip-nd6.c, where memory read operations from the main packet buffer, <code>uip_buf</code>, are not checked if they go out of bounds. In particular, this problem can occur when attempting to read the 2-byte option header and the Source Link-Layer Address Option (SLLAO). This attack requires ipv6 be enabled for the network. The problem has been patched in the develop branch of Contiki-NG. The upcoming 4.8 release of Contiki-NG will include the patch.Users unable to upgrade may apply the patch in Contiki-NG PR #1654.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/1654/commits/a4597001d50a04f4b9c78f323ba731e2f979802c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a4597001d50a04f4b9c78f323ba731e2f979802c",
        "inducing_commit_hash_pyszz": [
            "e9e31e9fd11070d04cec5e37fd47c3c145bb82df"
        ],
        "inducing_commit_hash_pd": [
            "5c30aed81444c600a20154f0d2ae733ce95fd666",
            "e9e31e9fd11070d04cec5e37fd47c3c145bb82df",
            "fd3d6c44d0875896742174015c902a535f8cd200"
        ],
        "matched": [
            "e9e31e9fd11070d04cec5e37fd47c3c145bb82df"
        ]
    },
    {
        "repo_name": "contiki-ng/contiki-ng",
        "CVE_ID": "CVE-2023-34100",
        "Problem_Type": "CWE-125",
        "Description": "Contiki-NG is an open-source, cross-platform operating system for IoT devices. When reading the TCP MSS option value from an incoming packet, the Contiki-NG OS does not verify that certain buffer indices to read from are within the bounds of the IPv6 packet buffer, uip_buf. In particular, there is a 2-byte buffer read in the module os/net/ipv6/uip6.c. The buffer is indexed using 'UIP_IPTCPH_LEN + 2 + c' and 'UIP_IPTCPH_LEN + 3 + c', but the uip_buf buffer may not have enough data, resulting in a 2-byte read out of bounds. The problem has been patched in the \"develop\" branch of Contiki-NG, and is expected to be included in release 4.9. Users are advised to watch for the 4.9 release and to upgrade when it becomes available. There are no workarounds for this vulnerability aside from manually patching with the diff in commit `cde4e9839`.",
        "URL": "https://github.com/contiki-ng/contiki-ng/pull/2434/commits/cde4e98398a2f5b994972c8459342af3ba93b98e",
        "Tag": "['Patch']",
        "fix_commit_hash": "cde4e98398a2f5b994972c8459342af3ba93b98e",
        "inducing_commit_hash_pyszz": [
            "8456c544d8a4cf9d1cf78cc7a8757dd35eed314c"
        ],
        "inducing_commit_hash_pd": [
            "8456c544d8a4cf9d1cf78cc7a8757dd35eed314c",
            "72b4d38ab35e199709ddedd34f93342af2724040",
            "ea32ab0f12ec1b5dd717d01d6526c49eb4514809",
            "2e8264010ba5635182a3d415b0d5cc45d6b96c64"
        ],
        "matched": [
            "8456c544d8a4cf9d1cf78cc7a8757dd35eed314c"
        ]
    },
    {
        "repo_name": "coreos/coreos-installer",
        "CVE_ID": "CVE-2021-20319",
        "Problem_Type": "CWE-347",
        "Description": "An improper signature verification vulnerability was found in coreos-installer. A specially crafted gzip installation image can bypass the image signature verification and as a consequence can lead to the installation of unsigned content. An attacker able to modify the original installation image can write arbitrary data, and achieve full access to the node being installed.",
        "URL": "https://github.com/coreos/coreos-installer/pull/659/commits/ad243c6f0eff2835b2da56ca5f7f33af76253c89",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ad243c6f0eff2835b2da56ca5f7f33af76253c89",
        "inducing_commit_hash_pyszz": [
            "20f277601f0df9600c72c85e8ba2609814c55731"
        ],
        "inducing_commit_hash_pd": [
            "20f277601f0df9600c72c85e8ba2609814c55731",
            "596e65780ec627ff119d9256b5b18013e99e8211"
        ],
        "matched": [
            "20f277601f0df9600c72c85e8ba2609814c55731"
        ]
    },
    {
        "repo_name": "cortexproject/cortex",
        "CVE_ID": "CVE-2021-31232",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The Alertmanager in CNCF Cortex before 1.8.1 has a local file disclosure vulnerability when -experimental.alertmanager.enable-api is used. The HTTP basic auth password_file can be used as an attack vector to send any file content via a webhook. The alertmanager templates can be used as an attack vector to send any file content because the alertmanager can load any text file specified in the templates list.",
        "URL": "https://github.com/cortexproject/cortex/pull/4129/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5fc0350f7c74e496fba86e5d29837e4e019d7458",
        "inducing_commit_hash_pyszz": [
            "206c9cd4bf9cbc96b812e81cdca1c16b4e7bc4c7"
        ],
        "inducing_commit_hash_pd": [
            "f485bc89b3895f95082499b8320636849c274ccf",
            "56fafbe79924606a121c3b5e6a990193c3a5a319",
            "48d7f25d2d0fab873967c7e678f2c067f9e42e99",
            "04ec41354a342d5cd861b1652e3320f5bfa39911",
            "41c303a6bf067eec9ff3b110bafabda2e39bd4f1",
            "206c9cd4bf9cbc96b812e81cdca1c16b4e7bc4c7"
        ],
        "matched": [
            "206c9cd4bf9cbc96b812e81cdca1c16b4e7bc4c7"
        ]
    },
    {
        "repo_name": "cortexproject/cortex",
        "CVE_ID": "CVE-2021-36157",
        "Problem_Type": "CWE-22",
        "Description": "An issue was discovered in Grafana Cortex through 1.9.0. The header value X-Scope-OrgID is used to construct file paths for rules files, and if crafted to conduct directory traversal such as ae ../../sensitive/path/in/deployment pathname, then Cortex will attempt to parse a rules file at that location and include some of the contents in the error message. (Other Cortex API requests can also be sent a malicious OrgID header, e.g., tricking the ingester into writing metrics to a different location, but the effect is nuisance rather than information disclosure.)",
        "URL": "https://github.com/cortexproject/cortex/pull/4375",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d9e1f81f40c607b9e97c2fc6db70ae54679917c4",
        "inducing_commit_hash_pyszz": [
            "04a6011b17def800bc6329d589c57d7a3599972b"
        ],
        "inducing_commit_hash_pd": [
            "b7a062f0be3da86d4e12fa6a0d374897855290d6",
            "04a6011b17def800bc6329d589c57d7a3599972b"
        ],
        "matched": [
            "04a6011b17def800bc6329d589c57d7a3599972b"
        ]
    },
    {
        "repo_name": "cosmos/ethermint",
        "CVE_ID": "CVE-2021-25835",
        "Problem_Type": "CWE-294",
        "Description": "Cosmos Network Ethermint <= v0.4.0 is affected by a cross-chain transaction replay vulnerability in the EVM module. Since ethermint uses the same chainIDEpoch and signature schemes with ethereum for compatibility, a verified signature in ethereum is still valid in ethermint with the same msg content and chainIDEpoch, which enables \"cross-chain transaction replay\" attack.",
        "URL": "https://github.com/cosmos/ethermint/pull/692",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d7bdbd7488644f0aaeee5cdcdc119c863f199f72",
        "inducing_commit_hash_pyszz": [
            "cb96bc4ea337f153245d744725fc44a9207677b4"
        ],
        "inducing_commit_hash_pd": [
            "7f648d2c55a3420c47df9722f57dd9d4c238bdac",
            "4501bbccdc8c99532372698d4f48bc66f7de2843",
            "cb96bc4ea337f153245d744725fc44a9207677b4"
        ],
        "matched": [
            "cb96bc4ea337f153245d744725fc44a9207677b4"
        ]
    },
    {
        "repo_name": "crossbario/autobahn-python",
        "CVE_ID": "CVE-2020-35678",
        "Problem_Type": "CWE-601",
        "Description": "Autobahn|Python before 20.12.3 allows redirect header injection.",
        "URL": "https://github.com/crossbario/autobahn-python/pull/1439",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f7b7ad5c1066bdcc551775b73da15dca5c111623",
        "inducing_commit_hash_pyszz": [
            "09a15133fe72451ae5f4a21cbd5178fee3c540c1"
        ],
        "inducing_commit_hash_pd": [
            "09a15133fe72451ae5f4a21cbd5178fee3c540c1"
        ],
        "matched": [
            "09a15133fe72451ae5f4a21cbd5178fee3c540c1"
        ]
    },
    {
        "repo_name": "crypto-org-chain/cronos",
        "CVE_ID": "CVE-2021-43839",
        "Problem_Type": "CWE-670",
        "Description": "Cronos is a commercial implementation of a blockchain. In Cronos nodes running versions before v0.6.5, it is possible to take transaction fees from Cosmos SDK's FeeCollector for the current block by sending a custom crafted MsgEthereumTx. This problem has been patched in Cronos v0.6.5. There are no tested workarounds. All validator node operators are recommended to upgrade to Cronos v0.6.5 at their earliest possible convenience.",
        "URL": "https://github.com/crypto-org-chain/cronos/pull/270",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "150ef237b37ac28c8136e1c0f494932860b9ebe8",
        "inducing_commit_hash_pyszz": [
            "10cda16653c64a7048acd232166a0a7489c6d584"
        ],
        "inducing_commit_hash_pd": [
            "10cda16653c64a7048acd232166a0a7489c6d584"
        ],
        "matched": [
            "10cda16653c64a7048acd232166a0a7489c6d584"
        ]
    },
    {
        "repo_name": "ctripcorp/apollo",
        "CVE_ID": "CVE-2020-15170",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "apollo-adminservice before version 1.7.1 does not implement access controls. If users expose apollo-adminservice to internet(which is not recommended), there are potential security issues since apollo-adminservice is designed to work in intranet and it doesn't have access control built-in. Malicious hackers may access apollo-adminservice apis directly to access/edit the application's configurations. To fix the potential issue without upgrading, simply follow the advice that do not expose apollo-adminservice to internet.",
        "URL": "https://github.com/ctripcorp/apollo/pull/3233/commits/ae9ba6cfd32ed80469f162e5e3583e2477862ddf",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6ff6ddd47f9be87ad77a6a169cc46996cc5d89dd",
        "inducing_commit_hash_pyszz": [
            "04c94da1997f3d1500ee3b4b57602f91687b70f7"
        ],
        "inducing_commit_hash_pd": [
            "847b949bdf9f1d0b909605ea7fb917d920ffbaf0",
            "d9275527670ec22ae1aae2b8d1e298b6ebd65462",
            "7ccb24471d3956d69fd22353d4908684ca0201db",
            "04c94da1997f3d1500ee3b4b57602f91687b70f7",
            "b2b9dcd0a214056d8c1e2ca3791941f19f73904e",
            "32aac0bd066a0f9a38253646ad2a195ca7d2ff35",
            "42edb9da963df986538edcda4ff58d474fb3abed",
            "a81d7287014ab8bfc327040a66ac8a5d5510b7e9",
            "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
            "7f6ed42bef207b514dcaf9fae8a0fc8554ca1b35",
            "72923ce6eaf47a51d41ad3656795cf83b28430e1"
        ],
        "matched": [
            "04c94da1997f3d1500ee3b4b57602f91687b70f7"
        ]
    },
    {
        "repo_name": "cuberite/cuberite",
        "CVE_ID": "CVE-2019-15516",
        "Problem_Type": "CWE-22",
        "Description": "Cuberite before 2019-06-11 allows webadmin directory traversal via ....// because the protection mechanism simply removes one ../ substring.",
        "URL": "https://github.com/cuberite/cuberite/pull/4341",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "85006d10f5b4f8fb2e95be479d0b7c28a42d1d46",
        "inducing_commit_hash_pyszz": [
            "af8c96026d458481543ead176bd15651857826bd"
        ],
        "inducing_commit_hash_pd": [
            "af8c96026d458481543ead176bd15651857826bd",
            "017235e15ccdfca901d63793c5544626e730ec48"
        ],
        "matched": [
            "af8c96026d458481543ead176bd15651857826bd"
        ]
    },
    {
        "repo_name": "curl/curl",
        "CVE_ID": "CVE-2018-1000005",
        "Problem_Type": "CWE-125",
        "Description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
        "URL": "https://github.com/curl/curl/pull/2231",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f1e5a4fa7bc77ea82d11bb258cc3b7207a2db342",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "cyface/django-termsandconditions",
        "CVE_ID": "CVE-2022-4589",
        "Problem_Type": "CWE-601",
        "Description": "A vulnerability has been found in cyface Terms and Conditions Module up to 2.0.9 and classified as problematic. Affected by this vulnerability is the function returnTo of the file termsandconditions/views.py. The manipulation leads to open redirect. The attack can be launched remotely. Upgrading to version 2.0.10 is able to address this issue. The name of the patch is 03396a1c2e0af95e12a45c5faef7e47a4b513e1a. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216175.",
        "URL": "https://github.com/cyface/django-termsandconditions/pull/239",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "03396a1c2e0af95e12a45c5faef7e47a4b513e1a",
        "inducing_commit_hash_pyszz": [
            "0a0f7ac5ded705d4083a0ffa0db4909557412d04"
        ],
        "inducing_commit_hash_pd": [
            "9b42f29f8174f11ee727d04d8396046d1b3e9d0e",
            "0a0f7ac5ded705d4083a0ffa0db4909557412d04"
        ],
        "matched": [
            "0a0f7ac5ded705d4083a0ffa0db4909557412d04"
        ]
    },
    {
        "repo_name": "DaSchTour/matomo-mediawiki-extension",
        "CVE_ID": "CVE-2017-20175",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in DaSchTour matomo-mediawiki-extension up to 2.4.2 on MediaWiki. This affects an unknown part of the file Piwik.hooks.php of the component Username Handler. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 2.4.3 is able to address this issue. The patch is named 681324e4f518a8af4bd1f93867074c728eb9923d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-220203.",
        "URL": "https://github.com/DaSchTour/matomo-mediawiki-extension/pull/17",
        "Tag": "['Exploit', 'Patch']",
        "fix_commit_hash": "681324e4f518a8af4bd1f93867074c728eb9923d",
        "inducing_commit_hash_pyszz": [
            "011b327d430fcf2cca1eb3180b56b74af8274beb"
        ],
        "inducing_commit_hash_pd": [
            "011b327d430fcf2cca1eb3180b56b74af8274beb",
            "ad2591c52963ceb02bfdb2001ee75ba7a1e581eb"
        ],
        "matched": [
            "011b327d430fcf2cca1eb3180b56b74af8274beb"
        ]
    },
    {
        "repo_name": "DataDog/guarddog",
        "CVE_ID": "CVE-2022-23531",
        "Problem_Type": "CWE-22",
        "Description": "GuardDog is a CLI tool to identify malicious PyPI packages. Versions prior to 0.1.5 are vulnerable to Relative Path Traversal when scanning a specially-crafted local PyPI package. Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed due to a path traversal vulnerability when extracting the .tar.gz file of the package being scanned, which exists by design in the tarfile.TarFile.extractall function. This issue is patched in version 0.1.5.",
        "URL": "https://github.com/DataDog/guarddog/pull/89/commits/a56aff58264cb6b7855d71b00dc10c39a5dbd306",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "98af5c8c1e9c15fa888c900252e76116b0ec25d1",
        "inducing_commit_hash_pyszz": [
            "1c517ffafcf8907b159146ae51d897cd3bcddbfe"
        ],
        "inducing_commit_hash_pd": [
            "ec34524ef25033eaf463779bc1c241dd7edaf63d",
            "fb5e142bd03c563ada77828ba2293e6c8db01386",
            "d18e306832423705326a65f69ec298528c90e9fd",
            "1c517ffafcf8907b159146ae51d897cd3bcddbfe",
            "0a79b79ed7fb2f5b4e16e355eb5b2f6c845b5c06",
            "b36c5fa25c64032899dcc376247c44bf7db1d0bb"
        ],
        "matched": [
            "1c517ffafcf8907b159146ae51d897cd3bcddbfe"
        ]
    },
    {
        "repo_name": "datahub-project/datahub",
        "CVE_ID": "CVE-2024-22409",
        "Problem_Type": "CWE-276",
        "Description": "DataHub is an open-source metadata platform. In affected versions a low privileged user could remove a user, edit group members, or edit another user's profile information. The default privileges gave too many broad permissions to low privileged users. These have been constrained in PR #9067 to prevent abuse. This issue can result in privilege escalation for lower privileged users up to admin privileges, potentially, if a group with admin privileges exists. May not impact instances that have modified default privileges. This issue has been addressed in datahub version 0.12.1. Users are advised to upgrade.",
        "URL": "https://github.com/datahub-project/datahub/pull/9067",
        "Tag": "['Patch']",
        "fix_commit_hash": "582eebe739ef7f8fc7651a78eee9306143360b68",
        "inducing_commit_hash_pyszz": [
            "80f0fdee98688619d43adaf2d37b20a538cde8e2"
        ],
        "inducing_commit_hash_pd": [
            "43deb7080af17486f66a7b1249af17035e595494",
            "944be9a1da17b06ebc3ec6accd985c3ad57f52f8",
            "7fef9a514aa8ca7224d524d3d6b9c51917425521",
            "ea92b86e6ab4cbb18742fb8db6bc11fae8970cdb",
            "ccb09a69669e24624afbeca486220aa106dabfb7",
            "73cd2f995d2cec182ed399621dbb672f3c058ebf",
            "902929293d3745489d5cfca89e0fc9863dfce3c5",
            "f49666a230a87f82858ba5bea7e2ed087b1947d5",
            "fdee7a787bdd90dd0825b54e4737649b15b738c8",
            "80f0fdee98688619d43adaf2d37b20a538cde8e2",
            "0ff7bea0430655673055d15bf45691b22791256b",
            "df69e762895b39d3d06d40e7a7965a057f76d32a",
            "8002fd8eb6493582af4c2d7aa4c7520258fb34d8",
            "2ef26e8b740cc2392a933468fe689c9c7f075f04",
            "e12d910648267701e5146355e71f2658e83719f7"
        ],
        "matched": [
            "80f0fdee98688619d43adaf2d37b20a538cde8e2"
        ]
    },
    {
        "repo_name": "debug-js/debug",
        "CVE_ID": "CVE-2017-20165",
        "Problem_Type": "CWE-1333",
        "Description": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The identifier of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability.",
        "URL": "https://github.com/debug-js/debug/pull/504",
        "Tag": "['Patch']",
        "fix_commit_hash": "c38a0166c266a679c8de012d4eaccec3f944e685",
        "inducing_commit_hash_pyszz": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ],
        "inducing_commit_hash_pd": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ],
        "matched": [
            "e502a7df95e1438b07d49275998ba32bcd9b40e3"
        ]
    },
    {
        "repo_name": "deis/workflow-manager",
        "CVE_ID": "CVE-2016-15036",
        "Problem_Type": "CWE-362",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Deis Workflow Manager up to 2.3.2. It has been classified as problematic. This affects an unknown part. The manipulation leads to race condition. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 2.3.3 is able to address this issue. The patch is named 31fe3bccbdde134a185752e53380330d16053f7f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-248847. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/deis/workflow-manager/pull/94",
        "Tag": "['Patch']",
        "fix_commit_hash": "31fe3bccbdde134a185752e53380330d16053f7f",
        "inducing_commit_hash_pyszz": [
            "16c821d05dd0d514b97d52a3e74decdf41c18a00"
        ],
        "inducing_commit_hash_pd": [
            "84206b2cac6e5065b6c0bda84a269f1582a06b66"
        ],
        "matched": [
            "16c821d05dd0d514b97d52a3e74decdf41c18a00"
        ]
    },
    {
        "repo_name": "denoland/deno",
        "CVE_ID": "CVE-2023-26103",
        "Problem_Type": "CWE-1333",
        "Description": "Versions of the package deno before 1.31.0 are vulnerable to Regular Expression Denial of Service (ReDoS) due to the upgradeWebSocket function, which contains regexes in the form of /s*,s*/, used for splitting the Connection/Upgrade header. A specially crafted Connection/Upgrade header can be used to significantly slow down a web socket server.\n\n",
        "URL": "https://github.com/denoland/deno/pull/17722",
        "Tag": "['Patch']",
        "fix_commit_hash": "cf06a7c7e672880e1b38598fe445e2c50b4a9d06",
        "inducing_commit_hash_pyszz": [
            "6268703487da02d66552d1e1a42858aa273def90"
        ],
        "inducing_commit_hash_pd": [
            "6268703487da02d66552d1e1a42858aa273def90",
            "74c7559d2029539eb6ab7459c06061c00b3e0c1a"
        ],
        "matched": [
            "6268703487da02d66552d1e1a42858aa273def90"
        ]
    },
    {
        "repo_name": "denosaurs/emoji",
        "CVE_ID": "CVE-2023-30858",
        "Problem_Type": "CWE-1333",
        "Description": "The Denosaurs emoji package provides emojis for dinosaurs. Starting in version 0.1.0 and prior to version 0.3.0, the reTrimSpace regex has 2nd degree polynomial inefficiency, leading to a delayed response given a big payload. The issue has been patched in 0.3.0. As a workaround, avoid using the `replace`, `unemojify`, or `strip` functions.",
        "URL": "https://github.com/denosaurs/emoji/pull/11",
        "Tag": "['Patch']",
        "fix_commit_hash": "a61ec134727eb9c7ede85ebad89e0d20074ead7c",
        "inducing_commit_hash_pyszz": [
            "a0cb846f6a0a8e8256ff787e56ea6531d0a93d88"
        ],
        "inducing_commit_hash_pd": [
            "9352224eafb390f1b336593d8e1253b07daff5f6",
            "e8d11b0e85fd6c92f92ad654e892fc21892cddbc",
            "a0cb846f6a0a8e8256ff787e56ea6531d0a93d88"
        ],
        "matched": [
            "a0cb846f6a0a8e8256ff787e56ea6531d0a93d88"
        ]
    },
    {
        "repo_name": "dexidp/dex",
        "CVE_ID": "CVE-2024-23656",
        "Problem_Type": "CWE-326",
        "Description": "Dex is an identity service that uses OpenID Connect to drive authentication for other apps. Dex 2.37.0 serves HTTPS with insecure TLS 1.0 and TLS 1.1. `cmd/dex/serve.go` line 425 seemingly sets TLS 1.2 as minimum version, but the whole `tlsConfig` is ignored after `TLS cert reloader` was introduced in v2.37.0. Configured cipher suites are not respected either. This issue is fixed in Dex 2.38.0.",
        "URL": "https://github.com/dexidp/dex/pull/2964",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "074ee4f964144116b71b3fbff5fa44b542fd94d0",
        "inducing_commit_hash_pyszz": [
            "9cffca70f2e6cbe58db47603637404918c5f4716"
        ],
        "inducing_commit_hash_pd": [
            "f0186ff2651e83c8097d79b96ee9cc71c2dbaf38",
            "d9487e553bf5bc9347f76a96eebf37fbca3bd6cc",
            "50086e68638ab4995dfd2a3cd36a7274515d4083",
            "42dfd3ecec40b551d903edeb524b3f9277abe1a5",
            "46f48b33a10426405a78d3dc9d60ade74e0436b2",
            "9cffca70f2e6cbe58db47603637404918c5f4716",
            "59f8b02d473782f56a62005ef30e58851116ce8e"
        ],
        "matched": [
            "9cffca70f2e6cbe58db47603637404918c5f4716"
        ]
    },
    {
        "repo_name": "dfinity/candid",
        "CVE_ID": "CVE-2023-6245",
        "Problem_Type": "CWE-835",
        "Description": "The Candid library causes a Denial of Service while \nparsing a specially crafted payload with 'empty' data type. For example,\n if the payload is `record { * ; empty }` and the canister interface expects `record { * }` then the Rust candid decoder treats empty as an extra field required by the type.  The problem with the type empty is that the candid Rust library wrongly categorizes empty as a recoverable error when skipping the field and thus causing an infinite decoding loop.\n\n\nCanisters using affected versions of candid\n are exposed to denial of service by causing the decoding to run \nindefinitely until the canister traps due to reaching maximum \ninstruction limit per execution round. Repeated exposure to the payload \nwill result in degraded performance of the canister. Note: Canisters written in Motoko are unaffected.\n\n\n\n",
        "URL": "https://github.com/dfinity/candid/pull/478",
        "Tag": "['Patch']",
        "fix_commit_hash": "b233dbc2d2bcc79c9fc574dd5968269df680b073",
        "inducing_commit_hash_pyszz": [
            "a8322be53bfced317bdf4ffff5dbc428d24dc612"
        ],
        "inducing_commit_hash_pd": [
            "a8322be53bfced317bdf4ffff5dbc428d24dc612",
            "ea2c72f57e4b1cde99fad3b61308c0e979a65e3a",
            "3dc90282aac93aa76cc68ed7099f585dfa4525f7"
        ],
        "matched": [
            "a8322be53bfced317bdf4ffff5dbc428d24dc612"
        ]
    },
    {
        "repo_name": "dgraph-io/dgraph",
        "CVE_ID": "CVE-2023-31135",
        "Problem_Type": "CWE-326",
        "Description": "Dgraph is an open source distributed GraphQL database. Existing Dgraph audit logs are vulnerable to brute force attacks due to nonce collisions. The first 12 bytes come from a baseIv which is initialized when an audit log is created. The last 4 bytes come from the length of the log line being encrypted. This is problematic because two log lines will often have the same length, so due to these collisions we are reusing the same nonce many times. All audit logs generated by versions of Dgraph <v23.0.0 are affected. Attackers must have access to the system the logs are stored on. Dgraph users should upgrade to v23.0.0. Users unable to upgrade should store existing audit logs in a secure location and for extra security, encrypt using an external tool like `gpg`.",
        "URL": "https://github.com/dgraph-io/dgraph/pull/8323",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "9e723adfd3ddc2a1c9feda6c352ea35acc923bfd",
        "inducing_commit_hash_pyszz": [
            "6770abb62baaa67b824c8d5b9c12e80edeff45fe"
        ],
        "inducing_commit_hash_pd": [
            "be9ce74e8c7dac0b0fa856e447a5fa6736022f50",
            "f893f96f389218fe26bc638828d7fa57c61afec8",
            "b85ff4ef5547a12572a8cb1730721d84ffbc468d",
            "4e4842624d26bb24caa08019d7be834bc59e282b",
            "a43743c773362c4261f7766a41f9f15a88ee100a",
            "e0af8b163e888642cf075fe3e9f1ffb62a8395b4",
            "2f053bf9002a2e842e71db994057caf51d7176eb"
        ],
        "matched": [
            "6770abb62baaa67b824c8d5b9c12e80edeff45fe"
        ]
    },
    {
        "repo_name": "dhis2/dhis2-core",
        "CVE_ID": "CVE-2021-39179",
        "Problem_Type": "CWE-89",
        "Description": "DHIS 2 is an information system for data capture, management, validation, analytics and visualization. A SQL Injection vulnerability in the Tracker component in DHIS2 Server allows authenticated remote attackers to execute arbitrary SQL commands via unspecified vectors. This vulnerability affects the `/api/trackedEntityInstances` and `/api/trackedEntityInstances/query` API endpoints in all DHIS2 versions 2.34, 2.35, and 2.36. It also affects versions 2.32 and 2.33 which have reached _end of support_ - exceptional security updates have been added to the latest *end of support* builds for these versions. Versions 2.31 and older are unaffected. The system is vulnerable to attack only from users that are logged in to DHIS2, and there is no known way of exploiting the vulnerability without first being logged in as a DHIS2 user. The vulnerability is not exposed to a non-malicious user - the vulnerability requires a conscious attack to be exploited. A successful exploit of this vulnerability could allow the malicious user to read, edit and delete data in the DHIS2 instance. There are no known exploits of the security vulnerabilities addressed by these patch releases. Security patches are available in DHIS2 versions 2.32-EOS, 2.33-EOS, 2.34.7, 2.35.7, and 2.36.4. There is no straightforward known workaround for DHIS2 instances using the Tracker functionality other than upgrading the affected DHIS2 server to one of the patches in which this vulnerability has been fixed. For implementations which do NOT use Tracker functionality, it may be possible to block all network access to POST to the `/api/trackedEntityInstances`, and `/api/trackedEntityInstances/query` endpoints as a temporary workaround while waiting to upgrade.",
        "URL": "https://github.com/dhis2/dhis2-core/pull/8771",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "16674ac75127b0e83691c6b1c9ce745e67ab58b6",
        "inducing_commit_hash_pyszz": [
            "0e50dc49af9cf60f26745d83972e69807413b09c"
        ],
        "inducing_commit_hash_pd": [
            "0e50dc49af9cf60f26745d83972e69807413b09c",
            "0888f55a0f2272e80a7044dc959f93679636f74f"
        ],
        "matched": [
            "0e50dc49af9cf60f26745d83972e69807413b09c"
        ]
    },
    {
        "repo_name": "dhis2/dhis2-core",
        "CVE_ID": "CVE-2022-24848",
        "Problem_Type": "CWE-89",
        "Description": "DHIS2 is an information system for data capture, management, validation, analytics and visualization. A SQL injection security vulnerability affects the `/api/programs/orgUnits?programs=` API endpoint in DHIS2 versions prior to 2.36.10.1 and 2.37.6.1. The system is vulnerable to attack only from users that are logged in to DHIS2, and there is no known way of exploiting the vulnerability without first being logged in as a DHIS2 user. The vulnerability is not exposed to a non-malicious user and requires a conscious attack to be exploited. A successful exploit of this vulnerability could allow the malicious user to read, edit and delete data in the DHIS2 instance's database. Security patches are now available for DHIS2 versions 2.36.10.1 and 2.37.6.1. One may apply mitigations at the web proxy level as a workaround. More information about these mitigations is available in the GitHub Security Advisory.",
        "URL": "https://github.com/dhis2/dhis2-core/pull/10953",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9a16b53d63ff2fba2740ad2aad59693006e728e0",
        "inducing_commit_hash_pyszz": [
            "0194e8f4a613218929ed537a92a1e72502b27010"
        ],
        "inducing_commit_hash_pd": [
            "0194e8f4a613218929ed537a92a1e72502b27010"
        ],
        "matched": [
            "0194e8f4a613218929ed537a92a1e72502b27010"
        ]
    },
    {
        "repo_name": "dilab/resumable.php",
        "CVE_ID": "CVE-2023-52086",
        "Problem_Type": "CWE-434",
        "Description": "resumable.php (aka PHP backend for resumable.js) 0.1.4 before 3c6dbf5 allows arbitrary file upload anywhere in the filesystem via ../ in multipart/form-data content to upload.php. (File overwrite hasn't been possible with the code available in GitHub in recent years, however.)",
        "URL": "https://github.com/dilab/resumable.php/pull/39/commits/d3552efd403e2d87407934477eee642836cab3b4",
        "Tag": "['Patch']",
        "fix_commit_hash": "d3552efd403e2d87407934477eee642836cab3b4",
        "inducing_commit_hash_pyszz": [
            "8679f55545ae96cd7eea8f12d4bbfff83cf0073c"
        ],
        "inducing_commit_hash_pd": [
            "43e884aa6f33c5be6e81172deae7b860cab372c7",
            "899daa875ebbf1e7d5680b1c6e16efa3f63ded5f",
            "8679f55545ae96cd7eea8f12d4bbfff83cf0073c",
            "6f2302a52fdca8898aa28dba1bdfe3bc84193324",
            "c65f46874b9013f9f4df474587af4f7199d3e795",
            "9a286b646cb40ec924044bed9e5cdd5d21eeaa45"
        ],
        "matched": [
            "8679f55545ae96cd7eea8f12d4bbfff83cf0073c"
        ]
    },
    {
        "repo_name": "dilab/resumable.php",
        "CVE_ID": "CVE-2023-52086",
        "Problem_Type": "CWE-434",
        "Description": "resumable.php (aka PHP backend for resumable.js) 0.1.4 before 3c6dbf5 allows arbitrary file upload anywhere in the filesystem via ../ in multipart/form-data content to upload.php. (File overwrite hasn't been possible with the code available in GitHub in recent years, however.)",
        "URL": "https://github.com/dilab/resumable.php/pull/27/commits/3e3c94d0302bb399a7611b4738a5a4dd0832a926",
        "Tag": "['Patch']",
        "fix_commit_hash": "3e3c94d0302bb399a7611b4738a5a4dd0832a926",
        "inducing_commit_hash_pyszz": [
            "b8f5a7a7ab68968d6670dd059d99993c88590d34"
        ],
        "inducing_commit_hash_pd": [
            "b8f5a7a7ab68968d6670dd059d99993c88590d34"
        ],
        "matched": [
            "b8f5a7a7ab68968d6670dd059d99993c88590d34"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2022-24814",
        "Problem_Type": "CWE-79",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. Prior to version 9.7.0, unauthorized JavaScript (JS) can be executed by inserting an iframe into the rich text html interface that links to a file uploaded HTML file that loads another uploaded JS file in its script tag. This satisfies the regular content security policy header, which in turn allows the file to run any arbitrary JS. This issue was resolved in version 9.7.0. As a workaround, disable the live embed in the what-you-see-is-what-you-get by adding `{ \"media_live_embeds\": false }` to the _Options Overrides_ option of the Rich Text HTML interface.",
        "URL": "https://github.com/directus/directus/pull/12020",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a8df6d96531fea4ee747594d0b047d2a676714be",
        "inducing_commit_hash_pyszz": [
            "ec86d5412d45136915d9b622b4a890dd26932b10"
        ],
        "inducing_commit_hash_pd": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0",
            "29b0fb9b8b68cc6ab3d42a368817d6d34f94f730",
            "7833160348967e0b5d61d29965bac3fb4d25a519",
            "ec86d5412d45136915d9b622b4a890dd26932b10"
        ],
        "matched": [
            "ec86d5412d45136915d9b622b4a890dd26932b10"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2022-26969",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Directus before 9.7.0, the default settings of CORS_ORIGIN and CORS_ENABLED are true.",
        "URL": "https://github.com/directus/directus/pull/12022",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "826404bcbe769f9bcd526baec41e696237b78ebb",
        "inducing_commit_hash_pyszz": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0"
        ],
        "inducing_commit_hash_pd": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0",
            "606f81dd0bc4b50235c0cf3f5f7761691986e5fa",
            "7830453cfc8bc053c6f64fe2f13de5b098244329"
        ],
        "matched": [
            "b24b1dfc28ea393a95e218107f657fa4239b7fd0"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-27474",
        "Problem_Type": "CWE-79",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. Instances relying on an allow-listed reset URL are vulnerable to an HTML injection attack through the use of query parameters in the reset URL. An attacker could exploit this to email users urls to the servers domain but which may contain malicious code. The problem has been resolved and released under version 9.23.0. People relying on a custom password reset URL should upgrade to 9.23.0 or later, or remove the custom reset url from the configured allow list. Users are advised to upgrade. Users unable to upgrade may disable the custom reset URL allow list as a workaround.",
        "URL": "https://github.com/directus/directus/pull/17120",
        "Tag": "['Patch']",
        "fix_commit_hash": "0f9f0d8fc42a269aa2573efd67dd22b069b4fa83",
        "inducing_commit_hash_pyszz": [
            "e259fb496c77a4859fb1523e6e588d970b5ecc1f"
        ],
        "inducing_commit_hash_pd": [
            "7dfc5dc6afa342909179b2835c7fccb4f300a045",
            "e259fb496c77a4859fb1523e6e588d970b5ecc1f"
        ],
        "matched": [
            "e259fb496c77a4859fb1523e6e588d970b5ecc1f"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-27481",
        "Problem_Type": "CWE-200",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. In versions prior to 9.16.0 users with read access to the `password` field in `directus_users` can extract the argon2 password hashes by brute forcing the export functionality combined with a `_starts_with` filter. This allows the user to enumerate the password hashes. Accounts cannot be taken over unless the hashes can be reversed which is unlikely with current hardware. This problem has been patched by preventing any hashed/concealed field to be filtered against with the `_starts_with` or other string operator in version 9.16.0. Users are advised to upgrade. Users unable to upgrade may mitigate this issue by ensuring that no user has `read` access to the `password` field in `directus_users`.",
        "URL": "https://github.com/directus/directus/pull/15010",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3586409a0bcea70cb5e5d27c9e1d1629e4c720e9",
        "inducing_commit_hash_pyszz": [
            "62a19b40d5894e937b1522693b789ac5bf5667a7"
        ],
        "inducing_commit_hash_pd": [
            "92e1ee77bd34118dce69e91c44d9cfcfbd208f37",
            "bf72917a4ce7b47e76cdda095291f62e644a4706",
            "62a19b40d5894e937b1522693b789ac5bf5667a7",
            "9e93342af0a6b0689a6d23ea144a02eb1940d372",
            "246c55266b78ae063408dbc1b04d1797bd85e476",
            "f90c31b798940163da641fbc8659d29222585e13",
            "b2d8b2319ad4777de7b406a85b9f8ed15f8ec756",
            "3dedf1cb3f814a13333d47d7fdba794ae7abede5",
            "933537240046e257d38b41692bffa2ad07c81831"
        ],
        "matched": [
            "62a19b40d5894e937b1522693b789ac5bf5667a7"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-27481",
        "Problem_Type": "CWE-200",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. In versions prior to 9.16.0 users with read access to the `password` field in `directus_users` can extract the argon2 password hashes by brute forcing the export functionality combined with a `_starts_with` filter. This allows the user to enumerate the password hashes. Accounts cannot be taken over unless the hashes can be reversed which is unlikely with current hardware. This problem has been patched by preventing any hashed/concealed field to be filtered against with the `_starts_with` or other string operator in version 9.16.0. Users are advised to upgrade. Users unable to upgrade may mitigate this issue by ensuring that no user has `read` access to the `password` field in `directus_users`.",
        "URL": "https://github.com/directus/directus/pull/14829",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "3dedf1cb3f814a13333d47d7fdba794ae7abede5",
        "inducing_commit_hash_pyszz": [
            "b62456fca8b901eaf5a785706299463670288b48"
        ],
        "inducing_commit_hash_pd": [
            "92e1ee77bd34118dce69e91c44d9cfcfbd208f37",
            "79b7fc9d4cc0469507ce6df208357527aa51f0c9"
        ],
        "matched": [
            "b62456fca8b901eaf5a785706299463670288b48"
        ]
    },
    {
        "repo_name": "directus/directus",
        "CVE_ID": "CVE-2023-38503",
        "Problem_Type": "CWE-863",
        "Description": "Directus is a real-time API and App dashboard for managing SQL database content. Starting in version 10.3.0 and prior to version 10.5.0, the permission filters (i.e. `user_created IS $CURRENT_USER`) are not properly checked when using GraphQL subscription resulting in unauthorized users getting event on their subscription which they should not be receiving according to the permissions. This can be any collection but out-of-the box the `directus_users` collection is configured with such a permissions filter allowing you to get updates for other users when changes happen. Version 10.5.0 contains a patch. As a workaround, disable GraphQL subscriptions.",
        "URL": "https://github.com/directus/directus/pull/19155",
        "Tag": "['Patch']",
        "fix_commit_hash": "4cc55b86ba5ae318577a79f98f2afb6966289996",
        "inducing_commit_hash_pyszz": [
            "9974cb6050b9c1242e88fd220ae82fe24a2730a5"
        ],
        "inducing_commit_hash_pd": [
            "cfddabd9ee87e60d1f478549099da7197e664a1f"
        ],
        "matched": [
            "9974cb6050b9c1242e88fd220ae82fe24a2730a5"
        ]
    },
    {
        "repo_name": "discourse/discourse-assign",
        "CVE_ID": "CVE-2022-24866",
        "Problem_Type": "CWE-200",
        "Description": "Discourse Assign is a plugin for assigning users to a topic in Discourse, an open-source messaging platform. Prior to version 1.0.1, the UserBookmarkSerializer serialized the whole User / Group object, which leaked some private information. The data was only being serialized to people who could view assignment info, which is limited to staff by default. For the vast majority of sites, this data was only leaked to trusted staff member, but for sites with assign features enabled publicly, the data was accessible to more people than just staff. Version 1.0.1 contains a patch. There are currently no known workarounds.",
        "URL": "https://github.com/discourse/discourse-assign/pull/320",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "de36236dbc26744f5b21b7b59a5f7be093b3186c",
        "inducing_commit_hash_pyszz": [
            "1a1dffc5e85eb9fe93b81e20d2a9379e9f008a5f"
        ],
        "inducing_commit_hash_pd": [
            "1a1dffc5e85eb9fe93b81e20d2a9379e9f008a5f",
            "d807491df2d1170dadac7b8c19bbdf49d23dbc6f",
            "c396605d2fc18c6d05743ce3ca750ca8a37ba21b"
        ],
        "matched": [
            "1a1dffc5e85eb9fe93b81e20d2a9379e9f008a5f"
        ]
    },
    {
        "repo_name": "discourse/discourse-calendar",
        "CVE_ID": "CVE-2022-31059",
        "Problem_Type": "CWE-79",
        "Description": "Discourse Calendar is a calendar plugin for Discourse, an open-source messaging app. Prior to version 1.0.1, parsing and rendering of Event names can be susceptible to cross-site scripting (XSS) attacks. This vulnerability only affects sites which have modified or disabled Discourse\u00c2\u2019s default Content Security Policy. This issue is patched in version 1.0.1 of the Discourse Calendar plugin. As a workaround, ensure that the Content Security Policy is enabled, and has not been modified in a way which would make it more vulnerable to XSS attacks.",
        "URL": "https://github.com/discourse/discourse-calendar/pull/280",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2719b9e81994e961bf8c4e12b4556dc9777dd62f",
        "inducing_commit_hash_pyszz": [
            "45712d30b91a21f4bf332da3ccbeae068fecd173"
        ],
        "inducing_commit_hash_pd": [
            "5665832fe75997ae57e959d897cbdf28dcb99743",
            "45712d30b91a21f4bf332da3ccbeae068fecd173",
            "2f45fd7633094c076f39d14229b69a4601499ce5"
        ],
        "matched": [
            "45712d30b91a21f4bf332da3ccbeae068fecd173"
        ]
    },
    {
        "repo_name": "discourse/discourse-chat",
        "CVE_ID": "CVE-2022-36057",
        "Problem_Type": "CWE-79",
        "Description": "Discourse-Chat is an asynchronous messaging plugin for the Discourse open-source discussion platform. Users of Discourse Chat can be affected by admin users inserting HTML into chat titles and descriptions, causing a Cross-Site Scripting (XSS) attack. Version 0.9 contains a patch for this issue.",
        "URL": "https://github.com/discourse/discourse-chat/pull/1205",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5d16780c6faba692006baf0cf07201ea1a433b1a",
        "inducing_commit_hash_pyszz": [
            "44e246b383c6320b0798e6090597b8ba761aee5c"
        ],
        "inducing_commit_hash_pd": [
            "b102d0255bc7a099ca25892a8aab1acdb944030f",
            "791292db2077968cb1bf4f2309eb445d0f3723d3",
            "2a2b62ea91d4e11e96714b8770b9fbe323da5a4b",
            "a3c06974e164e614b8982810d12af89689826db8",
            "f898aa7ff51d457e231c9a4c7098626ee6fcdfe3",
            "472d355dc1b510c82b560bd78a85a77cedab0141",
            "7b44725ebbc01ac17aa7bc7a62e9313a6937b2e0",
            "35154b7c8f93ccb110f0f92d49b2f09a888588a7",
            "0343846dea5c083e13969e97cd0355d56a9fc270",
            "424fc5e1ac4625b997806c01484b357b99b49bc8",
            "58c3a16a8c6be8e66ec2f8ba9c5a39021439212b",
            "ae515c5198d4d44df09f33b461ee2646668f4e0a",
            "3fb370223c05ad90aee0eb4232e261ddb49cd9ac",
            "3541cad4668c636c351d72ce520c2a139f4806b2",
            "4e31929504169cfd2f6b9f128363f932ae296f63",
            "63c914122c8c958a54b8de7634fc6d916c622baa",
            "c0fb68729bc7b3d28cfba02409517503b432f4ef",
            "1389d41a1abbc10c12c2d029a4e087119a051b02",
            "44e246b383c6320b0798e6090597b8ba761aee5c",
            "99ace596225b42e7ee7d9d54195bb75bc9643923"
        ],
        "matched": [
            "44e246b383c6320b0798e6090597b8ba761aee5c"
        ]
    },
    {
        "repo_name": "discourse/discourse-jira",
        "CVE_ID": "CVE-2023-44384",
        "Problem_Type": "CWE-918",
        "Description": "Discourse-jira is a Discourse plugin allows Jira projects, issue types, fields and field options will be synced automatically. An administrator user can make an SSRF attack by setting the Jira URL to an arbitrary location and enabling the `discourse_jira_verbose_log` site setting. A moderator user could manipulate the request path to the Jira API, allowing them to perform arbitrary GET requests using the Jira API credentials, potentially with elevated permissions, used by the application. ",
        "URL": "https://github.com/discourse/discourse-jira/pull/50",
        "Tag": "['Patch']",
        "fix_commit_hash": "8a2d3ad228883199fd5f081cc93d173c88e2e48f",
        "inducing_commit_hash_pyszz": [
            "75a1cd53c5c99f0fee526ca8f655d9dbcb64c431"
        ],
        "inducing_commit_hash_pd": [
            "ed04ef2606a967a7f1af57cbcb47ae0f24d17dbb",
            "9ae23f536423f26266f6b374d52b591aaf5ef501",
            "2562de21fe3c2fac7e0dab2c2a1d9c108273bc96",
            "75a1cd53c5c99f0fee526ca8f655d9dbcb64c431"
        ],
        "matched": [
            "75a1cd53c5c99f0fee526ca8f655d9dbcb64c431"
        ]
    },
    {
        "repo_name": "discourse/discourse-mermaid-theme-component",
        "CVE_ID": "CVE-2022-46180",
        "Problem_Type": "CWE-79",
        "Description": "Discourse Mermaid (discourse-mermaid-theme-component) allows users of Discourse, open-source forum software, to create graphs using the Mermaid syntax. Users of discourse-mermaid-theme-component version 1.0.0 who can create posts are able to inject arbitrary HTML on that post. The issue has been fixed on the `main` branch of the GitHub repository, with 1.1.0 named as a patched version. Admins can update the theme component through the admin UI. As a workaround, admins can temporarily disable discourse-mermaid-theme-component.",
        "URL": "https://github.com/discourse/discourse-mermaid-theme-component/pull/14",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c10bc4a08bf865cee20e5d5dffba535762813f0f",
        "inducing_commit_hash_pyszz": [
            "de76512840fe893f1412ed426978a40b13310352"
        ],
        "inducing_commit_hash_pd": [
            "de76512840fe893f1412ed426978a40b13310352",
            "57b35ac13a441d87207c5c29f2fb91b221fec72c"
        ],
        "matched": [
            "de76512840fe893f1412ed426978a40b13310352"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2019-15515",
        "Problem_Type": "CWE-352",
        "Description": "Discourse 2.3.2 sends the CSRF token in the query string.",
        "URL": "https://github.com/discourse/discourse/pull/8026",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d59746cdc1c5b5aec36829882fb3ae952dc32eb8",
        "inducing_commit_hash_pyszz": [
            "bb3fb37650e05b5087f5630a1ac0f50068b6d8c2"
        ],
        "inducing_commit_hash_pd": [
            "03a7d532cf8f09b12573b21ef013c21100d52728",
            "44391ee8ab7431ca572b6c340d6e770cdadd51b3",
            "84d4c81a26bb585f67809c6f8af25c2a385de754"
        ],
        "matched": [
            "bb3fb37650e05b5087f5630a1ac0f50068b6d8c2"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2020-24327",
        "Problem_Type": "CWE-918",
        "Description": "Server Side Request Forgery (SSRF) vulnerability exists in Discourse 2.3.2 and 2.6 via the email function. When writing an email in an editor, you can upload pictures of remote websites.",
        "URL": "https://github.com/discourse/discourse/pull/10509",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2f043dc89accf920adb3724fd9b2197b29953cdb",
        "inducing_commit_hash_pyszz": [
            "5fc5a7f5ae8c3cf1a89c1a685258e9e942de1508"
        ],
        "inducing_commit_hash_pd": [
            "5fc5a7f5ae8c3cf1a89c1a685258e9e942de1508"
        ],
        "matched": [
            "5fc5a7f5ae8c3cf1a89c1a685258e9e942de1508"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2021-41095",
        "Problem_Type": "CWE-79",
        "Description": "Discourse is an open source discussion platform. There is a cross-site scripting (XSS) vulnerability in versions 2.7.7 and earlier of the `stable` branch, versions 2.8.0.beta6 and earlier of the `beta` branch, and versions 2.8.0.beta6 and earlier of the `tests-passed` branch. Rendering of some error messages that contain user input can be susceptible to XSS attacks. This vulnerability only affects sites which have blocked watched words that contain HTML tags, modified or disabled Discourse's default Content Security Policy. This issue is patched in the latest `stable`, `beta` and `tests-passed` versions of Discourse. As a workaround, avoid modifying or disabling Discourse\u00c2\u2019s default Content Security Policy, and blocking watched words containing HTML tags.",
        "URL": "https://github.com/discourse/discourse/pull/14434/commits/40b776b9d39c41d9273d01eecf8fe03aa39fcb59",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1f57b29147f570178d4317cca9e61449d7c62856",
        "inducing_commit_hash_pyszz": [
            "f331b5eab28be2654db7b8f99ea105b0b58c6a0f"
        ],
        "inducing_commit_hash_pd": [
            "f331b5eab28be2654db7b8f99ea105b0b58c6a0f",
            "f14c6d81f498e94654388df2ff132b18c5156c3d"
        ],
        "matched": [
            "f331b5eab28be2654db7b8f99ea105b0b58c6a0f"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-23548",
        "Problem_Type": "CWE-1333",
        "Description": "Discourse is an option source discussion platform. Prior to version 2.8.14 on the `stable` branch and version 2.9.0.beta16 on the `beta` and `tests-passed` branches, parsing posts can be susceptible to regular expression denial of service (ReDoS) attacks. This issue is patched in versions 2.8.14 and 2.9.0.beta16. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/19737",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "918dd4d63596ac5ea1ae5f9a55d1533e2400db5c",
        "inducing_commit_hash_pyszz": [
            "f8ded9cec9255a297d988b821dc596e133d86d78"
        ],
        "inducing_commit_hash_pd": [
            "f8ded9cec9255a297d988b821dc596e133d86d78",
            "bb93a345eb3e33c51852ea92510293a19598fa61"
        ],
        "matched": [
            "f8ded9cec9255a297d988b821dc596e133d86d78"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-23641",
        "Problem_Type": "CWE-835",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.1 in the `stable` branch, 2.9.0.beta2 in the `beta` branch, and 2.9.0.beta2 in the `tests-passed` branch, users can trigger a Denial of Service attack by posting a streaming URL. Parsing Oneboxes in the background job trigger an infinite loop, which cause memory leaks. This issue is patched in version 2.8.1 of the `stable` branch, 2.9.0.beta2 of the `beta` branch, and 2.9.0.beta2 of the `tests-passed` branch. As a workaround, disable onebox in admin panel completely or specify allow list of domains that will be oneboxed.",
        "URL": "https://github.com/discourse/discourse/pull/15927",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a34075d205a8857e29574ffd82aaece0c467565e",
        "inducing_commit_hash_pyszz": [
            "53abcd825d2abbd2065796c974314f0952b26041"
        ],
        "inducing_commit_hash_pd": [
            "53abcd825d2abbd2065796c974314f0952b26041",
            "68d0916eb53a44e7a5b4e7c9f57277a647dfa45d"
        ],
        "matched": [
            "53abcd825d2abbd2065796c974314f0952b26041"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-24782",
        "Problem_Type": "CWE-200",
        "Description": "Discourse is an open source discussion platform. Versions 2.8.2 and prior in the `stable` branch, 2.9.0.beta3 and prior in the `beta` branch, and 2.9.0.beta3 and prior in the `tests-passed` branch are vulnerable to a data leak. Users can request an export of their own activity. Sometimes, due to category settings, they may have category membership for a secure category. The name of this secure category is shown to the user in the export. The same thing occurs when the user's post has been moved to a secure category. A patch for this issue is available in the `main` branch of Discourse's GitHub repository and is anticipated to be part of future releases.",
        "URL": "https://github.com/discourse/discourse/pull/16273",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9d5737fd28374cc876c070f6c3a931a8071ec356",
        "inducing_commit_hash_pyszz": [
            "26ec4fd25b4d8a7622beb1c361bc4debc5c9eff2"
        ],
        "inducing_commit_hash_pd": [
            "7e0c1fb039dfa2663ae42e60ee85ae5ec1cc2935",
            "26ec4fd25b4d8a7622beb1c361bc4debc5c9eff2",
            "a1dd761bd97e748bff5b21d7347ff2a642409fc2",
            "c5dc729e778e5ec9705dcf761295483822f9cef0",
            "a8560d741f07afb25e0ec23cb45d054154d9fada",
            "4aed861336d61f1428e2310693fdee3090d54cd9"
        ],
        "matched": [
            "26ec4fd25b4d8a7622beb1c361bc4debc5c9eff2"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-31025",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users.",
        "URL": "https://github.com/discourse/discourse/pull/16974",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
        "inducing_commit_hash_pyszz": [
            "36e0e6a322aaf768ac79c539d85f202de01fd231"
        ],
        "inducing_commit_hash_pd": [
            "36e0e6a322aaf768ac79c539d85f202de01fd231",
            "ea05a68df7eee15c9db55c26d55efb21bb17247f",
            "b3d769ff4f013b40059751476193898483d115e9",
            "528cfea079a5555e92b1d546a199e03fd6528790",
            "b2a0d34bb783d251ae61881e5d4b9b9aafdf9c09",
            "13f3de4bf673802eb8ec595d36587b4524773209",
            "355d51afde190b884dbb9b81ebc836a16b48d98c",
            "973a7c9d3a3d6ded8a9aa633e1e8222378c8be2e",
            "dbb3ddc7a62b86ee5744be8c81656d4d2fd2d5e7",
            "1aef6de4b0feb08528f8dec2288503e376318871",
            "dffc3a2f8efe5c230fa660dc055a290ab6ef827d",
            "dde0fcc658ae639d71b36f098269b996c367058f",
            "b58867b6e936a5247304e9f06f827cf5012a92ed",
            "eb9155f3fef34ae7b474bdf3d2655bd1a043cbd3",
            "14f9d40e486c39e74abfacdebbda86db1a8afd70",
            "a78c64db351431bae1e74d03c097c25b23fa4af8"
        ],
        "matched": [
            "36e0e6a322aaf768ac79c539d85f202de01fd231"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-31025",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users.",
        "URL": "https://github.com/discourse/discourse/pull/16984",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0fa0094531efc82d9371f90a02aa804b176d59cf",
        "inducing_commit_hash_pyszz": [
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9"
        ],
        "inducing_commit_hash_pd": [
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
            "fa8cd629f1ad4c64308e3e5c1d93f3ae78b2815a"
        ],
        "matched": [
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-36066",
        "Problem_Type": "CWE-434",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.9 on the `stable` branch and prior to 2.9.0.beta10 on the `beta` and `tests-passed` branches, admins can upload a maliciously crafted Zip or Gzip Tar archive to write files at arbitrary locations and trigger remote code execution. The problem is patched in version 2.8.9 on the `stable` branch and version 2.9.0.beta10 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/18421",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b27d5626d208a22c516a0adfda7554b67b493835",
        "inducing_commit_hash_pyszz": [
            "01bc465db819d5ba0e433a8226c80a9bd38b593d"
        ],
        "inducing_commit_hash_pd": [
            "01bc465db819d5ba0e433a8226c80a9bd38b593d",
            "5357ab332472b1ad63c51e3b8db89e302174624d",
            "10565e4623c7b27760d6a6cc5412b5352fc63bd9",
            "fa66290b61d0e14a5a367c01eb955289ae791068"
        ],
        "matched": [
            "01bc465db819d5ba0e433a8226c80a9bd38b593d"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-36068",
        "Problem_Type": "CWE-862",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.9 on the `stable` branch and prior to 2.9.0.beta10 on the `beta` and `tests-passed` branches, a moderator can create new and edit existing themes by using the API when they should not be able to do so. The problem is patched in version 2.8.9 on the `stable` branch and version 2.9.0.beta10 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/18418",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ae1e536e83940d58f1c79b835c75c249121c46b6",
        "inducing_commit_hash_pyszz": [
            "e51de4cc25757cc03d960eb8ff3393217c706468"
        ],
        "inducing_commit_hash_pd": [
            "39e679d3cb208755231c99d8b5a56f077e9a256f",
            "a3e8c3cd7ba5b8e0ea5d89e6eded3f995ab24aba",
            "bc0b9af576c7a99f4f89be0bf10aa3c9b3697c77",
            "def7348777832f454c92f07c75ced769b5ae1718",
            "e51de4cc25757cc03d960eb8ff3393217c706468"
        ],
        "matched": [
            "e51de4cc25757cc03d960eb8ff3393217c706468"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-39226",
        "Problem_Type": "CWE-770",
        "Description": "Discourse is an open source discussion platform. In versions prior to 2.8.9 on the `stable` branch and prior to 2.9.0.beta10 on the `beta` and `tests-passed` branches, a malicious actor can add large payloads of text into the Location and Website fields of a user profile, which causes issues for other users when loading that profile. A fix to limit the length of user input for these fields is included in version 2.8.9 on the `stable` branch and version 2.9.0.beta10 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/18302",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e69f7d2fd9c977dedbdb17f6813651e2a45bfb71",
        "inducing_commit_hash_pyszz": [
            "5a4c35f62714d2d72bc0ee57a10e08116bdc476a"
        ],
        "inducing_commit_hash_pd": [
            "5a4c35f62714d2d72bc0ee57a10e08116bdc476a",
            "ba148e082df2dfecafa6ee32bf4a64dcf80affc3"
        ],
        "matched": [
            "5a4c35f62714d2d72bc0ee57a10e08116bdc476a"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-39232",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is an open source discussion platform. Starting with version 2.9.0.beta5 and prior to version 2.9.0.beta10, an incomplete quote can generate a JavaScript error which will crash the current page in the browser in some cases. Version 2.9.0.beta10 added a fix and tests to ensure incomplete quotes won't break the app. As a workaround, the quote can be fixed via the rails console.",
        "URL": "https://github.com/discourse/discourse/pull/18311",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "eab33af5bf19827527fe79134d865b5c727f6530",
        "inducing_commit_hash_pyszz": [
            "20740f196cd56f3db776e6439e00b7466f76dcd1"
        ],
        "inducing_commit_hash_pd": [
            "20740f196cd56f3db776e6439e00b7466f76dcd1"
        ],
        "matched": [
            "20740f196cd56f3db776e6439e00b7466f76dcd1"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-39356",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Discourse is a platform for community discussion. Users who receive an invitation link that is not scoped to a single email address can enter any non-admin user's email and gain access to their account when accepting the invitation. All users should upgrade to the latest version. A workaround is temporarily disabling invitations with `SiteSetting.max_invites_per_day = 0` or scope them to individual email addresses.",
        "URL": "https://github.com/discourse/discourse/pull/18817",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "07ef1a80a1461123d602c57e366974aed265a91e",
        "inducing_commit_hash_pyszz": [
            "d600c36036c5c3b53787067682128ae2d86311bf"
        ],
        "inducing_commit_hash_pd": [
            "a842b71a0556c06b38bdda7b848f6b7c33b5f262",
            "51483e1aef1f0d93d00c1d22ae4c8188686ae46a",
            "355d51afde190b884dbb9b81ebc836a16b48d98c",
            "dffc3a2f8efe5c230fa660dc055a290ab6ef827d",
            "534008ba24cc18fb21c1b88d43960b379962c5fb",
            "9969631cef89290b00edcf236df1ddd8fc756bdd",
            "033d6b64374dce833ecb073fbf824428d3a78bcd",
            "ff44515a18bb9132aa6bd22c85d5a6a91f6efb70",
            "1253afdf959051b84d15d37e133dc7875ef520cb",
            "bcd6efa98c6d9fa7d3d5cc46f42174e3ab0abecc",
            "8335c8dc1a30a2be87173e9d844b6890d1d00225",
            "ef68e11137e35cde505e9cee45ea32f88feeee48",
            "c047640ad4547cef87bf2c2a8326e210d0b276dd",
            "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
            "40f6ceb6f2256540806733e16facdbf239a402be",
            "9aa2723d57cf9edaad0873ba64d3d1e5a9d7fdc7",
            "81e5352e013f34a86806248f57c61cec1f51a7b9",
            "0591d5be11051efae50516211384cc24618dd813",
            "3094459cd979e95067e5299e08fc94cf3f8ea0d3",
            "528cfea079a5555e92b1d546a199e03fd6528790",
            "f25eda13fa76a817731457e62b277b423fd2d9c7",
            "ce04db861033c906830fd07ae98b3d0cb375c753",
            "91b6b5eee7a193b9adcff07131c8e1904e29b61a",
            "2d8ebe989a130ba5a21b194d0450a8602c2e2895",
            "7179fbab7734bff42f4c6338ea971a7624df50f8",
            "d0fbb27f3ece024762629257032387a34741ab05",
            "d600c36036c5c3b53787067682128ae2d86311bf",
            "ea05a68df7eee15c9db55c26d55efb21bb17247f",
            "bea7a8a4d1ab28a52540551f8c7fa909be7bc8a0",
            "584c6a2e8bc705072b09a9c4b55126d6f8ed4ad2",
            "88f9bb3dc99eab61108ce1140bbf3153fc054542",
            "115859964d6e3e92d6d933ffe8e1b330b12a3aca",
            "2d904ade6dfb260c85e2437247eafe86c7ade3b9",
            "474ff94df3c6dda7f8b12628c62985c7f9f2db27"
        ],
        "matched": [
            "d600c36036c5c3b53787067682128ae2d86311bf"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2022-46168",
        "Problem_Type": "CWE-359",
        "Description": "Discourse is an option source discussion platform. Prior to version 2.8.14 on the `stable` branch and version 2.9.0.beta15 on the `beta` and `tests-passed` branches, recipients of a group SMTP email could see the email addresses of all other users inside the group SMTP topic. Most of the time this is not an issue as they are likely already familiar with one another's email addresses. This issue is patched in versions 2.8.14 and 2.9.0.beta15. The fix is that someone sending emails out via group SMTP to non-staged users masks those emails with blind carbon copy (BCC). Staged users are ones that have likely only interacted with the group via email, and will likely include other people who were CC'd on the original email to the group. As a workaround, disable group SMTP for any groups that have it enabled.",
        "URL": "https://github.com/discourse/discourse/pull/19724",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7bd83ef6b5bd36a57d64abd3547d4bf4caf8579f",
        "inducing_commit_hash_pyszz": [
            "0f688f45bddaac17b2840ab9eed6b2dec2a7f9cf"
        ],
        "inducing_commit_hash_pd": [
            "87684f7c5e7e48841743d38df8a57ed827715b47",
            "0f688f45bddaac17b2840ab9eed6b2dec2a7f9cf"
        ],
        "matched": [
            "0f688f45bddaac17b2840ab9eed6b2dec2a7f9cf"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23616",
        "Problem_Type": "CWE-400",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches, when submitting a membership request, there is no character limit for the reason provided with the request. This could potentially allow a user to flood the database with a large amount of data. However it is unlikely this could be used as part of a DoS attack, as the paths reading back the reasons are only available to administrators. Starting in version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches, a limit of 280 characters has been introduced for membership requests.",
        "URL": "https://github.com/discourse/discourse/pull/19993",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5745d34c20c31a221039d8913f33064433003ea",
        "inducing_commit_hash_pyszz": [
            "a9613163b54ae5729765a7e3d4ccc23563202cb7"
        ],
        "inducing_commit_hash_pd": [
            "371bbadb92c02a43ae2ea362ead53cf6a4e575de"
        ],
        "matched": [
            "a9613163b54ae5729765a7e3d4ccc23563202cb7"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23620",
        "Problem_Type": "CWE-200",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches, the contents of latest/top routes for restricted tags can be accessed by unauthorized users. This issue is patched in version 3.0.1 on the `stable` branch and 3.1.0.beta2 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20004",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "105fee978d73b0ec23ff814a09d1c0c9ace95164",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ],
        "matched": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23621",
        "Problem_Type": "CWE-1333",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches, a malicious user can cause a regular expression denial of service using a carefully crafted user agent. This issue is patched in version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20002",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "6d92c3cbdac431db99a450f360a3048bb3aaf458",
        "inducing_commit_hash_pyszz": [
            "254f48e5681a8674e7c8a4e1b1a0fe7a501f237e"
        ],
        "inducing_commit_hash_pd": [
            "254f48e5681a8674e7c8a4e1b1a0fe7a501f237e"
        ],
        "matched": [
            "254f48e5681a8674e7c8a4e1b1a0fe7a501f237e"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23622",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, the count of topics displayed for a tag is a count of all regular topics regardless of whether the topic is in a read restricted category or not. As a result, any users can technically poll a sensitive tag to determine if a new topic is created in a category which the user does not have excess to. \n\nIn version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, the count of topics displayed for a tag defaults to only counting regular topics which are not in read restricted categories. Staff users will continue to see a count of all topics regardless of the topic's category read restrictions.",
        "URL": "https://github.com/discourse/discourse/pull/20004",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "105fee978d73b0ec23ff814a09d1c0c9ace95164",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ],
        "matched": [
            "5a003715d366e1d871f9fcb0656dc9e23e9c2259"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-23624",
        "Problem_Type": "CWE-200",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches, someone can use the `exclude_tag param` to filter out topics and deduce which ones were using a specific hidden tag. This affects any Discourse site using hidden tags in public categories. This issue is patched in version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches. As a workaround, secure any categories that are using hidden tags, change any existing hidden tags to not include private data, or remove any hidden tags currently in use.",
        "URL": "https://github.com/discourse/discourse/pull/20006",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f55e0fe7910149c431861c18ce407d1be0d6091a",
        "inducing_commit_hash_pyszz": [
            "e3c724f79fb05c66e3240cb8fd85b24ce8725ca3"
        ],
        "inducing_commit_hash_pd": [
            "64171730827c58df26a7ad75f0e58f17c2add118",
            "e3c724f79fb05c66e3240cb8fd85b24ce8725ca3"
        ],
        "matched": [
            "e3c724f79fb05c66e3240cb8fd85b24ce8725ca3"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-25172",
        "Problem_Type": "CWE-79",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, a maliciously crafted URL can be included in a user's full name field to to carry out cross-site scripting attacks on sites with a disabled or overly permissive CSP (Content Security Policy). Discourse's default CSP prevents this vulnerability. The vulnerability is patched in version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches. As a workaround, enable and/or restore your site's CSP to the default one provided with Discourse.",
        "URL": "https://github.com/discourse/discourse/pull/20008",
        "Tag": "['Patch']",
        "fix_commit_hash": "c186a46910431020e8efc425dec2133e7a99fa9a",
        "inducing_commit_hash_pyszz": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "inducing_commit_hash_pd": [
            "102909edb3376d41398a8ca89d821b2e670bcecc",
            "da9b837da090f1b0e2a960d461a5a79788b301ed",
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "matched": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-25172",
        "Problem_Type": "CWE-79",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, a maliciously crafted URL can be included in a user's full name field to to carry out cross-site scripting attacks on sites with a disabled or overly permissive CSP (Content Security Policy). Discourse's default CSP prevents this vulnerability. The vulnerability is patched in version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches. As a workaround, enable and/or restore your site's CSP to the default one provided with Discourse.",
        "URL": "https://github.com/discourse/discourse/pull/20009",
        "Tag": "['Patch']",
        "fix_commit_hash": "1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
        "inducing_commit_hash_pyszz": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "inducing_commit_hash_pd": [
            "102909edb3376d41398a8ca89d821b2e670bcecc",
            "da9b837da090f1b0e2a960d461a5a79788b301ed",
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ],
        "matched": [
            "13c2a4886f60fba8c92ee8e002c7244887a21677"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28107",
        "Problem_Type": "CWE-770",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches, a user logged as an administrator can request backups multiple times, which will eat up all the connections to the DB. If this is done on a site using multisite, then it can affect the whole cluster. The vulnerability is patched in version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20700",
        "Tag": "['Patch']",
        "fix_commit_hash": "78a3efa7104eed6dd3ed7a06a71e2705337d9e61",
        "inducing_commit_hash_pyszz": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ],
        "inducing_commit_hash_pd": [
            "925a15c9aa8a9d0acff3986310d4ee13bc23625c",
            "578c8e861bf4d5860ae7c2a54bd3c09a833d3910",
            "e7c972ac890ef9f452da5bd091dadc5a6b14925c",
            "0bc1fa8aa4ea5393193cc5c44adbf7eee24cd395",
            "52be5b378208ed70f22fe18466f833916f347c54",
            "cb932d6ee1b3b3571e4d4d9118635e2dbf58f0ef",
            "84d4c81a26bb585f67809c6f8af25c2a385de754",
            "b0c92bb0b925a2406e309de97a320ccbcff9bedd",
            "c94a2bc69b9fcbc39435066a35f0263390a8257c",
            "b981041f6f79585953fded3797c821901e5bb9dd",
            "8626268366117cb94aa606949ea52f84eadd5887",
            "1a8ca68ea3eed9b218c762593aef5c70584c91a7",
            "c8661674d4f471143326333caf2ee6c149234ee6"
        ],
        "matched": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28107",
        "Problem_Type": "CWE-770",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches, a user logged as an administrator can request backups multiple times, which will eat up all the connections to the DB. If this is done on a site using multisite, then it can affect the whole cluster. The vulnerability is patched in version 3.0.2 of the `stable` branch and version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20701",
        "Tag": "['Patch']",
        "fix_commit_hash": "0bd64788d2b4680c04fbef76314a24884d65fed9",
        "inducing_commit_hash_pyszz": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ],
        "inducing_commit_hash_pd": [
            "925a15c9aa8a9d0acff3986310d4ee13bc23625c",
            "578c8e861bf4d5860ae7c2a54bd3c09a833d3910",
            "e7c972ac890ef9f452da5bd091dadc5a6b14925c",
            "0bc1fa8aa4ea5393193cc5c44adbf7eee24cd395",
            "52be5b378208ed70f22fe18466f833916f347c54",
            "cb932d6ee1b3b3571e4d4d9118635e2dbf58f0ef",
            "84d4c81a26bb585f67809c6f8af25c2a385de754",
            "b0c92bb0b925a2406e309de97a320ccbcff9bedd",
            "c94a2bc69b9fcbc39435066a35f0263390a8257c",
            "b981041f6f79585953fded3797c821901e5bb9dd",
            "8626268366117cb94aa606949ea52f84eadd5887",
            "1a8ca68ea3eed9b218c762593aef5c70584c91a7",
            "c8661674d4f471143326333caf2ee6c149234ee6"
        ],
        "matched": [
            "8626268366117cb94aa606949ea52f84eadd5887"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28111",
        "Problem_Type": "CWE-918",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.1.0.beta3 of the `beta` and `tests-passed` branches, attackers are able to bypass Discourse's server-side request forgery (SSRF) protection for private IPv4 addresses by using a IPv4-mapped IPv6 address. The issue is patched in the latest beta and tests-passed version of Discourse. version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20710",
        "Tag": "['Patch']",
        "fix_commit_hash": "5103d249aaecace4780d8271ad1af0fb2a060843",
        "inducing_commit_hash_pyszz": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "inducing_commit_hash_pd": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "matched": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ]
    },
    {
        "repo_name": "discourse/discourse",
        "CVE_ID": "CVE-2023-28112",
        "Problem_Type": "CWE-918",
        "Description": "Discourse is an open-source discussion platform. Prior to version 3.1.0.beta3 of the `beta` and `tests-passed` branches, some user provided URLs were being passed to FastImage without SSRF protection. Insufficient protections could enable attackers to trigger outbound network connections from the Discourse server to private IP addresses. This affects any site running the `tests-passed` or `beta` branches versions 3.1.0.beta2 and prior. This issue is patched in version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
        "URL": "https://github.com/discourse/discourse/pull/20710",
        "Tag": "['Patch']",
        "fix_commit_hash": "5103d249aaecace4780d8271ad1af0fb2a060843",
        "inducing_commit_hash_pyszz": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "inducing_commit_hash_pd": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ],
        "matched": [
            "a373bf2a01488c206e7feb28a9d2361b22ce6e70"
        ]
    },
    {
        "repo_name": "DIYgod/RSSHub",
        "CVE_ID": "CVE-2023-22493",
        "Problem_Type": "CWE-918",
        "Description": "RSSHub is an open source RSS feed generator. RSSHub is vulnerable to Server-Side Request Forgery (SSRF) attacks. This vulnerability allows an attacker to send arbitrary HTTP requests from the server to other servers or resources on the network. An attacker can exploit this vulnerability by sending a request to the affected routes with a malicious URL. An attacker could also use this vulnerability to send requests to internal or any other servers or resources on the network, potentially gain access to sensitive information that would not normally be accessible and amplifying the impact of the attack. The patch for this issue can be found in commit a66cbcf.",
        "URL": "https://github.com/DIYgod/RSSHub/pull/11588",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a66cbcf6eebc700bf97ab097f404f16ab415506a",
        "inducing_commit_hash_pyszz": [
            "7ed6b92f4101ef0b7d52b95f3d74de43bd0abba3"
        ],
        "inducing_commit_hash_pd": [
            "cff988ad9f231ddf3087c912fb245637894e7314",
            "1501116b4626e220f97f2ce0174383405099ebe8",
            "5db837d6dc027a245eee9a5f0b2385f489a3ef3c",
            "7ed6b92f4101ef0b7d52b95f3d74de43bd0abba3",
            "0481bff2846867d0c7f2fee8f6adff34753e2850",
            "b2137fc283f004c9b4693d243983414b6c0c2300"
        ],
        "matched": [
            "7ed6b92f4101ef0b7d52b95f3d74de43bd0abba3"
        ]
    },
    {
        "repo_name": "DMTF/libspdm",
        "CVE_ID": "CVE-2023-32690",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "libspdm is a sample implementation that follows the DMTF SPDM specifications. Prior to versions 2.3.3 and 3.0, following a successful CAPABILITIES response, a libspdm Requester stores the Responder's CTExponent into its context without validation. If the Requester sends a request message that requires a cryptography operation by the Responder, such as CHALLENGE, libspdm will calculate the timeout value using the Responder's unvalidated CTExponent.\n\nA patch is available in version 2.3.3. A workaround is also available. After completion of VCA, the Requester can check the value of the Responder's CTExponent. If it greater than or equal to 64, then the Requester can stop communication with the Responder.",
        "URL": "https://github.com/DMTF/libspdm/pull/2069",
        "Tag": "['Patch']",
        "fix_commit_hash": "e9a62040ba556f64ea2041f506f1e49766b48d14",
        "inducing_commit_hash_pyszz": [
            "c3e88495a289f7e49e84676ab97681acf1671ef8"
        ],
        "inducing_commit_hash_pd": [
            "451002061874c3b606237b3ce3dc94066682ad6e",
            "674374968bb9796ba7cfcac360d466384910af6d",
            "3fecc262b38a779d03914d8181f8b841f1e91dce",
            "c3e88495a289f7e49e84676ab97681acf1671ef8"
        ],
        "matched": [
            "c3e88495a289f7e49e84676ab97681acf1671ef8"
        ]
    },
    {
        "repo_name": "docsifyjs/docsify",
        "CVE_ID": "CVE-2020-7680",
        "Problem_Type": "CWE-79",
        "Description": "docsify prior to 4.11.4 is susceptible to Cross-site Scripting (XSS). Docsify.js uses fragment identifiers (parameters after # sign) to load resources from server-side .md files. Due to lack of validation here, it is possible to provide external URLs after the /#/ (domain.com/#//attacker.com) and render arbitrary JavaScript/HTML inside docsify page.",
        "URL": "https://github.com/docsifyjs/docsify/pull/1128",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "714ef29afe779a6db5c4761ebaacdfc70ee2d8dd",
        "inducing_commit_hash_pyszz": [
            "4a8f2c5bfa7a086e99cc3cb52a75d1564815150a"
        ],
        "inducing_commit_hash_pd": [
            "75c72e917bdacbf70aae124f812edcefc651a5ab",
            "f82f41900eca32c31015fad6f313b55b9bae7a22",
            "0e54ea1177e1819317c1de048e4bce539808e8e4",
            "a39b2147334d2ee81ed9da239c437706f56344f1",
            "049726e11e7a043a5519e6889208962befe39ffd",
            "4a8f2c5bfa7a086e99cc3cb52a75d1564815150a",
            "820abeb0fdb75273e2dc60230136355d0fdd25d6",
            "fd86c727af34eb3eaedbb4476e5adf4572b8d966",
            "94bc4155342d0f81fa8300c91b0679c50fd066ed",
            "615205cfdb7aea8f37a1ec5dd928105eeef56357",
            "b8a4e6ba1b887b4509578d253eff92ba77c1d091",
            "90bba6036770b14b046e199bd73779b925423d2c"
        ],
        "matched": [
            "4a8f2c5bfa7a086e99cc3cb52a75d1564815150a"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3475",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "608e9bbe537aba314b124ceef70f9b606ab7e121",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3476",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1204a4399b37adad4469174e14d554ab43c47918",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3474",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9cfd14b0a07ee2eed354cd59fec0e6cd663bf899",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3477",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "356c8bd5cbfab7a10d2ac1d4c3bf9839222b5b52",
        "inducing_commit_hash_pyszz": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7",
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ],
        "matched": [
            "1c1dbcbc335c6f1904483bec0419fdcc1d602082"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2021-20179",
        "Problem_Type": "CWE-863",
        "Description": "A flaw was found in pki-core. An attacker who has successfully compromised a key could use this flaw to renew the corresponding certificate over and over again, as long as it is not explicitly revoked. The highest threat from this vulnerability is to data confidentiality and integrity.",
        "URL": "https://github.com/dogtagpki/pki/pull/3478",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ba8b7d44901724c24af6d64705ecfab472473f3d",
        "inducing_commit_hash_pyszz": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7"
        ],
        "inducing_commit_hash_pd": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7"
        ],
        "matched": [
            "cb9eb967b5e24f5fde8bbf8ae87aa615b7033db7"
        ]
    },
    {
        "repo_name": "dogtagpki/pki",
        "CVE_ID": "CVE-2022-2414",
        "Problem_Type": "CWE-611",
        "Description": "Access to external entities when parsing XML documents can lead to XML external entity (XXE) attacks. This flaw allows a remote attacker to potentially retrieve the content of arbitrary files by sending specially crafted HTTP requests.",
        "URL": "https://github.com/dogtagpki/pki/pull/4021",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4e893243d72ad766558c10c907841f5f9c047055",
        "inducing_commit_hash_pyszz": [
            "5bb7933dd00f11ec87237d3bad7756989abb59ee"
        ],
        "inducing_commit_hash_pd": [
            "5bb7933dd00f11ec87237d3bad7756989abb59ee"
        ],
        "matched": [
            "5bb7933dd00f11ec87237d3bad7756989abb59ee"
        ]
    },
    {
        "repo_name": "dompdf/dompdf",
        "CVE_ID": "CVE-2022-28368",
        "Problem_Type": "CWE-79",
        "Description": "Dompdf 1.2.1 allows remote code execution via a .php file in the src:url field of an @font-face Cascading Style Sheets (CSS) statement (within an HTML input file).",
        "URL": "https://github.com/dompdf/dompdf/pull/2808",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "4c70e1025bcd9b7694b95dd552499bd83cd6141d",
        "inducing_commit_hash_pyszz": [
            "13c8123b3aff4b223c8c96fa17d7c0c5e0717660"
        ],
        "inducing_commit_hash_pd": [
            "13c8123b3aff4b223c8c96fa17d7c0c5e0717660"
        ],
        "matched": [
            "13c8123b3aff4b223c8c96fa17d7c0c5e0717660"
        ]
    },
    {
        "repo_name": "dpgaspar/Flask-AppBuilder",
        "CVE_ID": "CVE-2022-21659",
        "Problem_Type": "CWE-203",
        "Description": "Flask-AppBuilder is an application development framework, built on top of the Flask web framework. In affected versions there exists a user enumeration vulnerability. This vulnerability allows for a non authenticated user to enumerate existing accounts by timing the response time from the server when you are logging in. Users are advised to upgrade to version 3.4.4 as soon as possible. There are no known workarounds for this issue.",
        "URL": "https://github.com/dpgaspar/Flask-AppBuilder/pull/1775",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e2b744c258ff62ece9d5ac7172c3b4644ff4c2fe",
        "inducing_commit_hash_pyszz": [
            "0cd154d8a24c92840e0bd42bde945d3c3efea557"
        ],
        "inducing_commit_hash_pd": [
            "0cd154d8a24c92840e0bd42bde945d3c3efea557",
            "47887470933fef06f48df5cdd1704119072b3282"
        ],
        "matched": [
            "0cd154d8a24c92840e0bd42bde945d3c3efea557"
        ]
    },
    {
        "repo_name": "dpgaspar/Flask-AppBuilder",
        "CVE_ID": "CVE-2022-24776",
        "Problem_Type": "CWE-601",
        "Description": "Flask-AppBuilder is an application development framework, built on top of the Flask web framework. Flask-AppBuilder contains an open redirect vulnerability when using database authentication login page on versions below 3.4.5. This issue is fixed in version 3.4.5. There are currently no known workarounds.",
        "URL": "https://github.com/dpgaspar/Flask-AppBuilder/pull/1804",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8a18281002d55a50416cf98dad8d75c4c218dbb8",
        "inducing_commit_hash_pyszz": [
            "f12d3a6706f00a9864716427bdb5679b45e7b8e5"
        ],
        "inducing_commit_hash_pd": [
            "c46cac37a7f55b1963984ddc18255888bbc39ab5",
            "009f2c8cebb9913abf5cffbb20e86058df18b7cb",
            "dae4dd47d51e1e2eb5894bce55221c1d26864c3b",
            "6af28521589599b1dbafd6313256229ee9a4fa74",
            "f12d3a6706f00a9864716427bdb5679b45e7b8e5",
            "a9882e71295f4cb6f7c643722a3f2c64ebfacaec",
            "db1816483f7d1a7c035326c773276355e7365a38",
            "e09e629f1f3c2836cc0a1b25f004a9728e700825",
            "772a16c43fbd538b68648d9f51b4cf25b515eb18"
        ],
        "matched": [
            "f12d3a6706f00a9864716427bdb5679b45e7b8e5"
        ]
    },
    {
        "repo_name": "dpgaspar/Flask-AppBuilder",
        "CVE_ID": "CVE-2023-34110",
        "Problem_Type": "CWE-209",
        "Description": "Flask-AppBuilder is an application development framework, built on top of Flask. Prior to version 4.3.2, an authenticated malicious actor with Admin privileges, could by adding a special character on the add, edit User forms trigger a database error, this error is surfaced back to this actor on the UI. On certain database engines this error can include the entire user row including the pbkdf2:sha256 hashed password. This vulnerability has been fixed in version 4.3.2.\n",
        "URL": "https://github.com/dpgaspar/Flask-AppBuilder/pull/2045",
        "Tag": "['Patch']",
        "fix_commit_hash": "ae25ad4c87a9051ebe4a4e8f02aee73232642626",
        "inducing_commit_hash_pyszz": [
            "0d634131d1d76c5ea90d69e24fa40104546def63"
        ],
        "inducing_commit_hash_pd": [
            "6f0d7dd871c8456b71d46364b8c345415ee2eb77",
            "e379f688cda6fe74524d3a4506b50a9f70147a21",
            "9ba9407f13309a2a0bd800bdc582872a39b90585",
            "b4c8bca85b900e98b64f45b774051c99d8154b82",
            "9dd1244bcdced5ca82e1b143da290d99d0d16ccb",
            "292fdb40fc313bb263e849a507f9693bb1593872",
            "db1816483f7d1a7c035326c773276355e7365a38",
            "c12b3370fa427b64105fbf31b29e31c673210a84",
            "51c6ad0208477fdb8cd6a9dd9cdcd3c87412a90e",
            "1a248f965873afa35d5fd15182eca7664e7985b9",
            "e2e97381e03871670940ce8f12c91479bd32560c",
            "b27ef73b4f88b5b2fee677d3b6b348b6e84cab85",
            "32d8df985fdfbf8fe71d75e5ca7f25af92e4a036",
            "d4f46552ae5d5bc370b0080271938c942cfa6b08"
        ],
        "matched": [
            "0d634131d1d76c5ea90d69e24fa40104546def63"
        ]
    },
    {
        "repo_name": "drogonframework/drogon",
        "CVE_ID": "CVE-2022-25297",
        "Problem_Type": "CWE-552",
        "Description": "This affects the package drogonframework/drogon before 1.7.5. The unsafe handling of file names during upload using HttpFile::save() method may enable attackers to write files to arbitrary locations outside the designated target folder.",
        "URL": "https://github.com/drogonframework/drogon/pull/1174",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c785326c63a34aa1799a639ae185bc9453cb447",
        "inducing_commit_hash_pyszz": [
            "f522d2d70efeb5e1e7e027322e4ca1379322de6b"
        ],
        "inducing_commit_hash_pd": [
            "6a3f72f2e58df291ecf6e72bc5a5379c201b46c2",
            "aa26e9a90388b6a6fe5356e2d12b6f6091c82818",
            "f522d2d70efeb5e1e7e027322e4ca1379322de6b",
            "d888816997969435b907bec3881df7f4229f3583",
            "0b5075bfa9e6f124e78bfe042d26d17bce96dda2"
        ],
        "matched": [
            "f522d2d70efeb5e1e7e027322e4ca1379322de6b"
        ]
    },
    {
        "repo_name": "drogonframework/drogon",
        "CVE_ID": "CVE-2022-3959",
        "Problem_Type": "CWE-330",
        "Description": "A vulnerability, which was classified as problematic, has been found in drogon up to 1.8.1. Affected by this issue is some unknown functionality of the component Session Hash Handler. The manipulation leads to small space of random values. The attack may be launched remotely. Upgrading to version 1.8.2 is able to address this issue. The name of the patch is c0d48da99f66aaada17bcd28b07741cac8697647. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-213464.",
        "URL": "https://github.com/drogonframework/drogon/pull/1433",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0d48da99f66aaada17bcd28b07741cac8697647",
        "inducing_commit_hash_pyszz": [
            "b654e35e51907281d6b24d214577f759ff05e96c"
        ],
        "inducing_commit_hash_pd": [
            "5c9799c15ae747b954dbd70ccf680a76a761d9b8",
            "e5fe92c67aab308489de81335902d9d95d05c095",
            "784eb81014adb75bacdf1c24913f03ec842631ba",
            "cfe1681b0f1eacd11cb6684bf7bacb3d330c9df3",
            "be08aba9d1dcb651b3933bbfb7e2f1f926147112",
            "40ffb2d2af70ff532b36b57f2a4cf3cfb44b309d",
            "b654e35e51907281d6b24d214577f759ff05e96c"
        ],
        "matched": [
            "b654e35e51907281d6b24d214577f759ff05e96c"
        ]
    },
    {
        "repo_name": "dromara/hertzbeat",
        "CVE_ID": "CVE-2022-39337",
        "Problem_Type": "CWE-284",
        "Description": "Hertzbeat is an open source, real-time monitoring system with custom-monitoring, high performance cluster, prometheus-like and agentless. Hertzbeat versions 1.20 and prior have a permission bypass vulnerability. System authentication can be bypassed and invoke interfaces without authorization. Version 1.2.1 contains a patch for this issue.",
        "URL": "https://github.com/dromara/hertzbeat/pull/382",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "56628f42205e2d8f2f4ea5879fad8e079d279a7a",
        "inducing_commit_hash_pyszz": [
            "5198378dc6d9f013083447970bbb337272f1ce48"
        ],
        "inducing_commit_hash_pd": [
            "5198378dc6d9f013083447970bbb337272f1ce48"
        ],
        "matched": [
            "5198378dc6d9f013083447970bbb337272f1ce48"
        ]
    },
    {
        "repo_name": "dropbox/merou",
        "CVE_ID": "CVE-2022-4768",
        "Problem_Type": "CWE-74",
        "Description": "A vulnerability was found in Dropbox merou. It has been classified as critical. Affected is the function add_public_key of the file grouper/public_key.py of the component SSH Public Key Handler. The manipulation of the argument public_key_str leads to injection. It is possible to launch the attack remotely. The name of the patch is d93087973afa26bc0a2d0a5eb5c0fde748bdd107. It is recommended to apply a patch to fix this issue. VDB-216906 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/dropbox/merou/pull/673",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
        "inducing_commit_hash_pyszz": [
            "d06926cf5d2efab12b4fea7c2a0884578c7ab725"
        ],
        "inducing_commit_hash_pd": [
            "91c1f8f946ed6aa5cd3061cc903e72c8e0e08641"
        ],
        "matched": [
            "d06926cf5d2efab12b4fea7c2a0884578c7ab725"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-11002",
        "Problem_Type": "CWE-74",
        "Description": "dropwizard-validation before versions 2.0.3 and 1.3.21 has a remote code execution vulnerability. A server-side template injection was identified in the self-validating feature enabling attackers to inject arbitrary Java EL expressions, leading to Remote Code Execution (RCE) vulnerability. If you are using a self-validating bean an upgrade to Dropwizard 1.3.21/2.0.3 or later is strongly recommended. The changes introduced in Dropwizard 1.3.19 and 2.0.2 for CVE-2020-5245 unfortunately did not fix the underlying issue completely. The issue has been fixed in dropwizard-validation 1.3.21 and 2.0.3 or later. We strongly recommend upgrading to one of these versions.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3209",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "74e211514db951a67b0e9ff75b0102704d4b2049",
        "inducing_commit_hash_pyszz": [
            "28479f743a9d0aab6d0e963fc07f3dd98e8c8236"
        ],
        "inducing_commit_hash_pd": [
            "28479f743a9d0aab6d0e963fc07f3dd98e8c8236",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb",
            "98fa28a60b235d9c600fac578227086fc86b42df"
        ],
        "matched": [
            "28479f743a9d0aab6d0e963fc07f3dd98e8c8236"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-11002",
        "Problem_Type": "CWE-74",
        "Description": "dropwizard-validation before versions 2.0.3 and 1.3.21 has a remote code execution vulnerability. A server-side template injection was identified in the self-validating feature enabling attackers to inject arbitrary Java EL expressions, leading to Remote Code Execution (RCE) vulnerability. If you are using a self-validating bean an upgrade to Dropwizard 1.3.21/2.0.3 or later is strongly recommended. The changes introduced in Dropwizard 1.3.19 and 2.0.2 for CVE-2020-5245 unfortunately did not fix the underlying issue completely. The issue has been fixed in dropwizard-validation 1.3.21 and 2.0.3 or later. We strongly recommend upgrading to one of these versions.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3208",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d5a512f7abf965275f2a6b913ac4fe778e424242",
        "inducing_commit_hash_pyszz": [
            "d87d1e4f8e20f6494c0232bf8560c961b46db634"
        ],
        "inducing_commit_hash_pd": [
            "98fa28a60b235d9c600fac578227086fc86b42df",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb",
            "d87d1e4f8e20f6494c0232bf8560c961b46db634"
        ],
        "matched": [
            "d87d1e4f8e20f6494c0232bf8560c961b46db634"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-5245",
        "Problem_Type": "CWE-74",
        "Description": "Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature. The issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3160",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "28479f743a9d0aab6d0e963fc07f3dd98e8c8236",
        "inducing_commit_hash_pyszz": [
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb"
        ],
        "inducing_commit_hash_pd": [
            "98fa28a60b235d9c600fac578227086fc86b42df",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb"
        ],
        "matched": [
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb"
        ]
    },
    {
        "repo_name": "dropwizard/dropwizard",
        "CVE_ID": "CVE-2020-5245",
        "Problem_Type": "CWE-74",
        "Description": "Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature. The issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.",
        "URL": "https://github.com/dropwizard/dropwizard/pull/3157",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d87d1e4f8e20f6494c0232bf8560c961b46db634",
        "inducing_commit_hash_pyszz": [
            "1bb0cfa5c856bcc7be24c7f7a8ce68b8388af8ea"
        ],
        "inducing_commit_hash_pd": [
            "98fa28a60b235d9c600fac578227086fc86b42df",
            "babd4660e6ddc18a24bbcf0294161e24a1e1aecb",
            "1bb0cfa5c856bcc7be24c7f7a8ce68b8388af8ea",
            "89712d2346c3a08e9a986a4e256ceff6b37a3cb5"
        ],
        "matched": [
            "1bb0cfa5c856bcc7be24c7f7a8ce68b8388af8ea"
        ]
    },
    {
        "repo_name": "dutchcoders/transfer.sh",
        "CVE_ID": "CVE-2021-33496",
        "Problem_Type": "CWE-79",
        "Description": "Dutchcoders transfer.sh before 1.2.4 allows XSS via an inline view.",
        "URL": "https://github.com/dutchcoders/transfer.sh/pull/373",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9df18fdc69de2e71f30d8c1e6bfab2fda2e52eb4",
        "inducing_commit_hash_pyszz": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ],
        "inducing_commit_hash_pd": [
            "9ba5c5a8a749de16c8ca038d591319f571be922d",
            "b36711c1eaa26bf3d6350d061a4907a3fe8da517",
            "a90d29700d855505489c4ab533aa70dbf1b1aee3",
            "0c9c6e342475063d8370a7cb4db911d44f216346"
        ],
        "matched": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ]
    },
    {
        "repo_name": "dutchcoders/transfer.sh",
        "CVE_ID": "CVE-2021-33497",
        "Problem_Type": "CWE-22",
        "Description": "Dutchcoders transfer.sh before 1.2.4 allows Directory Traversal for deleting files.",
        "URL": "https://github.com/dutchcoders/transfer.sh/pull/373",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9df18fdc69de2e71f30d8c1e6bfab2fda2e52eb4",
        "inducing_commit_hash_pyszz": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ],
        "inducing_commit_hash_pd": [
            "9ba5c5a8a749de16c8ca038d591319f571be922d",
            "b36711c1eaa26bf3d6350d061a4907a3fe8da517",
            "a90d29700d855505489c4ab533aa70dbf1b1aee3",
            "0c9c6e342475063d8370a7cb4db911d44f216346"
        ],
        "matched": [
            "a90d29700d855505489c4ab533aa70dbf1b1aee3"
        ]
    },
    {
        "repo_name": "ebkalderon/renderdoc-rs",
        "CVE_ID": "CVE-2019-16142",
        "Problem_Type": "CWE-20",
        "Description": "An issue was discovered in the renderdoc crate before 0.5.0 for Rust. Multiple exposed methods take self by immutable reference, which is incompatible with a multi-threaded application.",
        "URL": "https://github.com/ebkalderon/renderdoc-rs/pull/32",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "22351fe532cf480e26a7ad8717d86a023da8f1d6",
        "inducing_commit_hash_pyszz": [
            "db2d5628506ec89027317c9a6ed1038028428965"
        ],
        "inducing_commit_hash_pd": [
            "db2d5628506ec89027317c9a6ed1038028428965",
            "0333df222d2fe611e1f857a1c9a6469ce1e56718"
        ],
        "matched": [
            "db2d5628506ec89027317c9a6ed1038028428965"
        ]
    },
    {
        "repo_name": "eclipse-ee4j/jersey",
        "CVE_ID": "CVE-2021-28168",
        "Problem_Type": "CWE-668",
        "Description": "Eclipse Jersey 2.28 to 2.33 and Eclipse Jersey 3.0.0 to 3.0.1 contains a local information disclosure vulnerability. This is due to the use of the File.createTempFile which creates a file inside of the system temporary directory with the permissions: -rw-r--r--. Thus the contents of this file are viewable by all other users locally on the system. As such, if the contents written is security sensitive, it can be disclosed to other local users.",
        "URL": "https://github.com/eclipse-ee4j/jersey/pull/4712",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f3cadb38dcc5b20e515706fae68dce533ad6c737",
        "inducing_commit_hash_pyszz": [
            "8c60fd2734c333cbca4dc9e0ab7d81306494532a"
        ],
        "inducing_commit_hash_pd": [
            "12a057315292a624ceb31b58bd04eec3cb19a819"
        ],
        "matched": [
            "8c60fd2734c333cbca4dc9e0ab7d81306494532a"
        ]
    },
    {
        "repo_name": "eclipse-ee4j/parsson",
        "CVE_ID": "CVE-2023-4043",
        "Problem_Type": "CWE-834",
        "Description": "In Eclipse Parsson before versions 1.1.4 and 1.0.5, Parsing JSON from untrusted sources can lead malicious actors to exploit the fact that the built-in support for parsing numbers with large scale in Java has a number of edge cases where the input text of a number can lead to much larger processing time than one would expect.\n\n\nTo mitigate the risk, parsson put in place a size limit for the numbers as well as their scale.\n\n\n",
        "URL": "https://github.com/eclipse-ee4j/parsson/pull/100",
        "Tag": "['Patch']",
        "fix_commit_hash": "9dd5ad5f871f7b93654073a3f8ce3e1d9b8d9b31",
        "inducing_commit_hash_pyszz": [
            "d0ec79badd44a940c82842954430762a2199f4e1"
        ],
        "inducing_commit_hash_pd": [
            "bd5c4b23b8ebc16e74ba67c3b425a306ceb362b9",
            "d0ec79badd44a940c82842954430762a2199f4e1",
            "7f2ed19115d65ec984518218d721fb3941a8eb6e"
        ],
        "matched": [
            "d0ec79badd44a940c82842954430762a2199f4e1"
        ]
    },
    {
        "repo_name": "eclipse-pde/eclipse.pde",
        "CVE_ID": "CVE-2023-4218",
        "Problem_Type": "CWE-611",
        "Description": "In Eclipse IDE versions < 2023-09 (4.29) some files with xml content are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review a foreign repository or patch).\n",
        "URL": "https://github.com/eclipse-pde/eclipse.pde/pull/632/",
        "Tag": "['Patch']",
        "fix_commit_hash": "c8754be8f6e23e9c5aebf6bf11b59515e98d262d",
        "inducing_commit_hash_pyszz": [
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7"
        ],
        "inducing_commit_hash_pd": [
            "531b9cdfe7e1fd18eca42231da628159bc09416e",
            "b98dd4669c0a65e589035ec0ef175a3e64d0b1db",
            "3db055f8cf1dc3125a1f2c653e961a0398426cf0",
            "4ddd95fd03846d5463f76e16c9614a8efb8cbdd2",
            "d4a49972c4610da37f102c8755a54e88d73f86b5",
            "34b8e38ef25242a4992f61c8676569a8dcffc7f7",
            "936a67b0beabf2e180f3d0a8c4c959aee5817e08",
            "af1475d7364cae6871f9893fdb94bccb4a54d2d9",
            "b7a1243ac2eda65a22b7d4e9a3693ed71d4e8d77",
            "5355197c4641e4c732aad6680b3855c82015ca2a",
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7",
            "0825ca4eac7477e4ba1b3c64e2e3854f454ff2dd",
            "cd863fb7c4634e1575a626e5ad3322ad3562b556",
            "11373448adb006eee481c1123433ad3ff363f678",
            "3bf3959be37c02d758ea6eb5920fe8846e5876c3",
            "adeec57e5db6b18957c474a81e5eb362b49e3d83",
            "dc6c597f7fb5b5237b2042f58c8485ff850fe816",
            "379b87515bb33f7cde4f3dea6c8d571855c08658",
            "c980fbe8457f5d2e3f0a8a4b6e141438a735a774",
            "0913ae34521df68f96046b687db2d2bac7aeb37d",
            "5767f82c5bf4e85ada790437a9a0b45ff7712abe",
            "191f4b658066895e107293e85a0b8917fc96f591"
        ],
        "matched": [
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7"
        ]
    },
    {
        "repo_name": "eclipse-pde/eclipse.pde",
        "CVE_ID": "CVE-2023-4218",
        "Problem_Type": "CWE-611",
        "Description": "In Eclipse IDE versions < 2023-09 (4.29) some files with xml content are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review a foreign repository or patch).\n",
        "URL": "https://github.com/eclipse-pde/eclipse.pde/pull/667/",
        "Tag": "['Patch']",
        "fix_commit_hash": "7d66ed1cf12e84ab689f701d77e5108c190c2083",
        "inducing_commit_hash_pyszz": [
            "c8754be8f6e23e9c5aebf6bf11b59515e98d262d"
        ],
        "inducing_commit_hash_pd": [
            "2c364765d8b9a58ce79f57c3306b2f6fe7c7387e",
            "52c8c7a61a253773865e493c8fa1fb253cf39181",
            "acb48aaf8c736f5a12d1e9a3e296e5562961d5c3",
            "3db055f8cf1dc3125a1f2c653e961a0398426cf0",
            "e5217a8297fe7f8e78776da2da154d790306710e",
            "1f9254e084b3120f94e2a3f42c0d72dced201de1",
            "2aba9fdd580dc972328e77753b5b2c2877a694d4",
            "34b8e38ef25242a4992f61c8676569a8dcffc7f7",
            "47275134d4ca6c439428e0f5ff6ecec631731028",
            "0b41575786d9e493a07917d1918fe063460428b6",
            "5355197c4641e4c732aad6680b3855c82015ca2a",
            "40dfe90043bfaf39c8dac2fbc72b220162ab1d51",
            "66daaef898fd42e295517ebd6ff785d025405f21",
            "a82abd28e31b02bcebded63bc769cc3a901d0bc7",
            "043752b64774b1e2bda509ecb0f4cdb55c72b255",
            "cd863fb7c4634e1575a626e5ad3322ad3562b556",
            "11373448adb006eee481c1123433ad3ff363f678",
            "bed6ce90e3916e76de844819681e599cafc5537e",
            "adeec57e5db6b18957c474a81e5eb362b49e3d83",
            "094feaaf10f881a20f4cdbb43831d3233f461b2c",
            "7dd409f50ac3da2b432dd990be2e4a8e40c02fe4",
            "0fab6a7eb36b715db39c74abe5a49254fefa4a9f",
            "56610fc586da8959c786fe7d08cb9da88efdeb26",
            "22c05f142881289b22e11436831f244d2db36f29",
            "ca8e5dacb615ebc9275d2205e586e4496bfc0a5a",
            "cc647f6bd81bcdb8a449b706c8d3d71024c43222",
            "0913ae34521df68f96046b687db2d2bac7aeb37d",
            "495c721097fd8703c544a8a69b7c64694d3b871d",
            "c8754be8f6e23e9c5aebf6bf11b59515e98d262d",
            "c07b0cdc28a4206abd133ba23d82ddb0dcfd9767",
            "cbe310c77dc8fcb9d13ac0a840863221b8e21d5d",
            "6f073b67691cd9293efe1e4373ac0872a80cd20d",
            "d27848be3abb2b602c36022a2b3878e143e6fe0f",
            "a2d67302f2d0f1aade9092a9dda4a447fb56c49b",
            "38d8b079e70204db721156832f6fc0ea8f91e99f",
            "65bcec620266f6f603010436b13d1104ff78a067",
            "210a927f015c0fd197ca1381f8083f31f6c87897"
        ],
        "matched": [
            "c8754be8f6e23e9c5aebf6bf11b59515e98d262d"
        ]
    },
    {
        "repo_name": "eclipse-platform/eclipse.platform",
        "CVE_ID": "CVE-2023-4218",
        "Problem_Type": "CWE-611",
        "Description": "In Eclipse IDE versions < 2023-09 (4.29) some files with xml content are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review a foreign repository or patch).\n",
        "URL": "https://github.com/eclipse-platform/eclipse.platform/pull/761",
        "Tag": "['Patch']",
        "fix_commit_hash": "d0ec0a8a6c1d8dbf19151bbb290a48b86edb1c28",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5dc372a0c5002b7f22e5d49eaa1cbf0916455daf"
        ],
        "matched": [
            "5dc372a0c5002b7f22e5d49eaa1cbf0916455daf"
        ]
    },
    {
        "repo_name": "eclipse-rap/org.eclipse.rap",
        "CVE_ID": "CVE-2023-4760",
        "Problem_Type": "CWE-22",
        "Description": "In Eclipse RAP versions from 3.0.0 up to and including 3.25.0, Remote Code Execution is possible on Windows when using the FileUpload component.\n\n\n\n\n\n\nThe reason for this is a not completely secure extraction of the file name in the FileUploadProcessor.stripFileName(String name) method. As soon as this finds a / in the path, everything before it is removed, but potentially \\ (backslashes) coming further back are kept.\n\nFor example, a file name such as /..\\..\\webapps\\shell.war can be used to upload a file to a Tomcat server under Windows, which is then saved as ..\\..\\webapps\\shell.war in its webapps directory and can then be executed.\n\n\n",
        "URL": "https://github.com/eclipse-rap/org.eclipse.rap/pull/141",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "221bb60a5833026d520541292977bcd5c4aa219f",
        "inducing_commit_hash_pyszz": [
            "5c9baadf6a211a8604ae9bdb1c6dce9b55fd5330"
        ],
        "inducing_commit_hash_pd": [
            "574a2f1cea7b7a256a9641534388dbc5bbcfe941",
            "aae43ee30a56dd5571a48b4a10add1bbfcdd4709"
        ],
        "matched": [
            "5c9baadf6a211a8604ae9bdb1c6dce9b55fd5330"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-26049",
        "Problem_Type": "CWE-200",
        "Description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9352",
        "Tag": "['Patch']",
        "fix_commit_hash": "1be1401bafb4c46fae3c234c8e93743a661dcf21",
        "inducing_commit_hash_pyszz": [
            "eef2481b59294b5783f3c4a3ea24f3262252c294"
        ],
        "inducing_commit_hash_pd": [
            "18c97123630b37d9275f00e001f9cd83a21fe90c",
            "fba010d33d2302ec2b7356da16a6bb71a1c11fdf",
            "dea2c340a40d60635ef620b51c3bf83baeb18a4f",
            "8dcd7e44d8e0a9042d5e1103715992774e0ae6fa",
            "c1c241349e76f38588c372723abe85dd13522094",
            "eef2481b59294b5783f3c4a3ea24f3262252c294",
            "318045cd876dd4fb050ee980a601d5e81ba1ab87"
        ],
        "matched": [
            "eef2481b59294b5783f3c4a3ea24f3262252c294"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-26049",
        "Problem_Type": "CWE-200",
        "Description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9339",
        "Tag": "['Patch']",
        "fix_commit_hash": "7b8c2c1bf081c7f408e5da3371c8c3c9802f09fd",
        "inducing_commit_hash_pyszz": [
            "36ef97535303c06eabe7c5fa09dbe2f19a956695"
        ],
        "inducing_commit_hash_pd": [
            "012bfddddc2e9992adfc8ba69d4c98160f1d0f66",
            "18c97123630b37d9275f00e001f9cd83a21fe90c",
            "8dcd7e44d8e0a9042d5e1103715992774e0ae6fa",
            "fba010d33d2302ec2b7356da16a6bb71a1c11fdf",
            "1b1b2509475855012f72ff730b595a004751a53b",
            "c1c241349e76f38588c372723abe85dd13522094",
            "b7a7a53a18bd60c132d0a3e050bfa1125b924d42",
            "715a637c2b84f6af64abcd1605b8ab4760ef1a7f",
            "9fe27eb8e3d1ff96839f5dc33c8645974926967f",
            "254dc887435af950ec224aa97843b458f6e55d88",
            "26169491c9c6bf5a00cca26a357c962691548ff8",
            "eef2481b59294b5783f3c4a3ea24f3262252c294",
            "36ef97535303c06eabe7c5fa09dbe2f19a956695",
            "d37038496efc463591b7de5ed4322844149d7fb3",
            "925d38b9db21508c74a1e7f5beb0ff9f7bede909",
            "318045cd876dd4fb050ee980a601d5e81ba1ab87",
            "eaf22630538d18653c3f4409c9d21936f245a07f"
        ],
        "matched": [
            "36ef97535303c06eabe7c5fa09dbe2f19a956695"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36479",
        "Problem_Type": "CWE-149",
        "Description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.\n",
        "URL": "https://github.com/eclipse/jetty.project/pull/9516",
        "Tag": "['Patch']",
        "fix_commit_hash": "6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c",
        "inducing_commit_hash_pyszz": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5"
        ],
        "inducing_commit_hash_pd": [
            "2ea7843d867b69b61691541cadc8f091b14a7d28",
            "78cd94edb32f6bf250ce856f76cb8d9209b43b1d",
            "877815e1959963f051a1c425405b0a4360f8a9e7",
            "bf2740148a46278580985c4312b0c812b81093d5",
            "ccff4b834627dcb05dfaffd0f3ac1bd37bf85ce6",
            "6deb6a6446c866ca2791073580b0a69f806afebf",
            "767faece5c4692748d1ac8e130b2e4c5faa1ff20",
            "5a0811b328031c4da35c060bbcf33c5bdf3f04c5",
            "76a362d9ad1cdf9a8688e39c04aeeae06e2b81d9",
            "f7f7e0af7545e060f6508c7fe07b858fd58ebc3b",
            "0a32147e89a6ff8377c589ed1dc0f55142f02cdc",
            "b7a7a53a18bd60c132d0a3e050bfa1125b924d42",
            "bca7e75d9f0a1d0af376b4243d3ea3a4ab736e94",
            "5a1263b4bd03533ec8d6b055f4a5cdc051c6d574",
            "3d0300e60df9df6b8c8fd158b5dc80533bf58c62",
            "aea99b14aaff9a41337fab4427170814a53d85dd",
            "04acdb72f041a15267bb79c36d8fc4d517beaadb",
            "b9f45e9426d16c6a075e96df127775d37bd6d331",
            "57604d09558443dd80346f7bc63980481c2dea3c",
            "e7274e3bb128531f15dfd177b1ebef77bc548370",
            "fea8bb794dd85605b2c429ef41a505cc39361dc5",
            "77779ed6d8247536473d8c644cf8d13f78f543ca",
            "36c807c2f31d124b16b6981f66c472766e8a58ae",
            "65202e9abe2c56a05b45140e46c70a94b4119cbb",
            "5309b4b225b60dc021ca7a0b79f228528e489f2f",
            "da627b843fe81fa0fe52a046c1be8595630e9ae7"
        ],
        "matched": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36479",
        "Problem_Type": "CWE-149",
        "Description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.\n",
        "URL": "https://github.com/eclipse/jetty.project/pull/9889",
        "Tag": "['Patch']",
        "fix_commit_hash": "c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c",
        "inducing_commit_hash_pyszz": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ],
        "inducing_commit_hash_pd": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5",
            "da627b843fe81fa0fe52a046c1be8595630e9ae7"
        ],
        "matched": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-36479",
        "Problem_Type": "CWE-149",
        "Description": "Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.\n",
        "URL": "https://github.com/eclipse/jetty.project/pull/9888",
        "Tag": "['Patch']",
        "fix_commit_hash": "ec7e1fd173481e526db4092f558aa2b5aab57580",
        "inducing_commit_hash_pyszz": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ],
        "inducing_commit_hash_pd": [
            "fea8bb794dd85605b2c429ef41a505cc39361dc5",
            "da627b843fe81fa0fe52a046c1be8595630e9ae7"
        ],
        "matched": [
            "73a89427b1cf1a390bbb76bf94c937a2e71b9a45"
        ]
    },
    {
        "repo_name": "eclipse/jetty.project",
        "CVE_ID": "CVE-2023-41900",
        "Problem_Type": "CWE-287",
        "Description": "Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue.",
        "URL": "https://github.com/eclipse/jetty.project/pull/9528",
        "Tag": "['Patch']",
        "fix_commit_hash": "24b7d06fd5ce5468caa3eaa93688879fb2900fda",
        "inducing_commit_hash_pyszz": [
            "58c230e26c7c226738b93ba3cdc508d7db05b507"
        ],
        "inducing_commit_hash_pd": [
            "b8af57153a5469e36f8a4c3786c1e3fd923ec4d3",
            "4bc32e314bd0a81f3f3be02bc71c1bd94258c619",
            "d33b96f4110b0cedd97af021bca28e6d58338d03",
            "cff6bb444a2f7e985febffda3d5b85dea4909d7d",
            "b3912d54feb441671b26a1eb5964306ea4dccbc0",
            "85cdc0d6c4c7dc860959178280f26c23ba400f99",
            "e9f260f4c3d32f0f9318ba3f075775b23fabb299",
            "58c230e26c7c226738b93ba3cdc508d7db05b507",
            "5f2c96dc582031a5dd99269cc65c8c80695a8301"
        ],
        "matched": [
            "58c230e26c7c226738b93ba3cdc508d7db05b507"
        ]
    },
    {
        "repo_name": "eclipse/milo",
        "CVE_ID": "CVE-2022-25897",
        "Problem_Type": "CWE-770",
        "Description": "The package org.eclipse.milo:sdk-server before 0.6.8 are vulnerable to Denial of Service (DoS) when bypassing the limitations for excessive memory consumption by sending multiple CloseSession requests with the deleteSubscription parameter equal to False.",
        "URL": "https://github.com/eclipse/milo/pull/1031",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7038e89a651771615b07342422e61e6e58e76730",
        "inducing_commit_hash_pyszz": [
            "d7ff6a26d586dcf617876727de8061676ff60680"
        ],
        "inducing_commit_hash_pd": [
            "21d3765c436b43e793a8137daf14b9b4df101840",
            "d7ff6a26d586dcf617876727de8061676ff60680",
            "65c2a94976830d366ad99235ec3a4a872cd54f84"
        ],
        "matched": [
            "d7ff6a26d586dcf617876727de8061676ff60680"
        ]
    },
    {
        "repo_name": "eclipse/rdf4j",
        "CVE_ID": "CVE-2018-20227",
        "Problem_Type": "CWE-22",
        "Description": "RDF4J 2.4.2 allows Directory Traversal via ../ in an entry in a ZIP archive.",
        "URL": "https://github.com/eclipse/rdf4j/pull/1211/commits/df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df15a4d7a8f2789c043b27c9eafe1b30316cfa79",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "6a4648c7294ac88b148c50cdb846345361323af4"
        ],
        "matched": [
            "6a4648c7294ac88b148c50cdb846345361323af4"
        ]
    },
    {
        "repo_name": "eclipse/wakaama",
        "CVE_ID": "CVE-2021-41040",
        "Problem_Type": "CWE-125",
        "Description": "In Eclipse Wakaama, ever since its inception until 2021-01-14, the CoAP parsing code does not properly sanitize network-received data.",
        "URL": "https://github.com/eclipse/wakaama/pull/640",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b5bbe367919d6906e1a1a78b2c4b82f1b5e60fc1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "b1691d28c56b28ca1c317e79f365c3c282f8135e"
        ],
        "matched": [
            "b1691d28c56b28ca1c317e79f365c3c282f8135e"
        ]
    },
    {
        "repo_name": "edgexfoundry/edgex-go",
        "CVE_ID": "CVE-2022-31066",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "EdgeX Foundry is an open source project for building a common open framework for Internet of Things edge computing. Prior to version 2.1.1, the /api/v2/config endpoint exposes message bus credentials to local unauthenticated users. In security-enabled mode, message bus credentials are supposed to be kept in the EdgeX secret store and require authentication to access. This vulnerability bypasses the access controls on message bus credentials when running in security-enabled mode. (No credentials are required when running in security-disabled mode.) As a result, attackers could intercept data or inject fake data into the EdgeX message bus. Users should upgrade to EdgeXFoundry Kamakura release (2.2.0) or to the June 2022 EdgeXFoundry LTS Jakarta release (2.1.1) to receive a patch. More information about which go modules, docker containers, and snaps contain patches is available in the GitHub Security Advisory. There are currently no known workarounds for this issue.",
        "URL": "https://github.com/edgexfoundry/edgex-go/pull/4016",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1da00045c508a7d59c26af6ad2625d77986b1a8c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1bd504d4ec96644759bdb98a5e1b7a1cb9062b74"
        ],
        "matched": [
            "1bd504d4ec96644759bdb98a5e1b7a1cb9062b74"
        ]
    },
    {
        "repo_name": "eggjs/egg-scripts",
        "CVE_ID": "CVE-2018-3786",
        "Problem_Type": "CWE-78",
        "Description": "A command injection vulnerability in egg-scripts <v2.8.1 allows arbitrary shell command execution through a maliciously crafted command line argument.",
        "URL": "https://github.com/eggjs/egg-scripts/pull/26",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b98fd03d1e3aaed68004b881f0b3d42fe47341dd",
        "inducing_commit_hash_pyszz": [
            "b5559d54228543b5422047e6f056829df11f8c87"
        ],
        "inducing_commit_hash_pd": [
            "0f7ca502999c06a9cb05d8e5617f6045704511df",
            "b5559d54228543b5422047e6f056829df11f8c87",
            "8eda3d10cfea5757f220fd82b562fd5fef433440"
        ],
        "matched": [
            "b5559d54228543b5422047e6f056829df11f8c87"
        ]
    },
    {
        "repo_name": "eggjs/extend2",
        "CVE_ID": "CVE-2021-23568",
        "Problem_Type": "CWE-1321",
        "Description": "The package extend2 before 1.0.1 are vulnerable to Prototype Pollution via the extend function due to unsafe recursive merge.",
        "URL": "https://github.com/eggjs/extend2/pull/2",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aa332a59116c8398976434b57ea477c6823054f8",
        "inducing_commit_hash_pyszz": [
            "00c66c07b331063a8edde66b046a5fde12a47cdc"
        ],
        "inducing_commit_hash_pd": [
            "5982d1c627c6bff70cf665577e7f23b169ac1e74",
            "00c66c07b331063a8edde66b046a5fde12a47cdc",
            "9fd4c58d81c03e63057c149071e054950b1dd839"
        ],
        "matched": [
            "00c66c07b331063a8edde66b046a5fde12a47cdc"
        ]
    },
    {
        "repo_name": "electron/electron",
        "CVE_ID": "CVE-2022-21718",
        "Problem_Type": "CWE-862",
        "Description": "Electron is a framework for writing cross-platform desktop applications using JavaScript, HTML and CSS. A vulnerability in versions prior to `17.0.0-alpha.6`, `16.0.6`, `15.3.5`, `14.2.4`, and `13.6.6` allows renderers to obtain access to a bluetooth device via the web bluetooth API if the app has not configured a custom `select-bluetooth-device` event handler. This has been patched and Electron versions `17.0.0-alpha.6`, `16.0.6`, `15.3.5`, `14.2.4`, and `13.6.6` contain the fix. Code from the GitHub Security Advisory can be added to the app to work around the issue.",
        "URL": "https://github.com/electron/electron/pull/32240",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ffbaa1d83f6612ae7f7aac03feeca62973cd36ba",
        "inducing_commit_hash_pyszz": [
            "a11f5cbb271091f5354550aa6c5da1164246c80f"
        ],
        "inducing_commit_hash_pd": [
            "a11f5cbb271091f5354550aa6c5da1164246c80f"
        ],
        "matched": [
            "a11f5cbb271091f5354550aa6c5da1164246c80f"
        ]
    },
    {
        "repo_name": "embedchain/embedchain",
        "CVE_ID": "CVE-2024-23731",
        "Problem_Type": "CWE-88",
        "Description": "The OpenAPI loader in Embedchain before 0.1.57 allows attackers to execute arbitrary code, related to the openapi.py yaml.load function argument.",
        "URL": "https://github.com/embedchain/embedchain/pull/1122",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f7696d1dc17e4de5333f468860bb91f7c420e0a4",
        "inducing_commit_hash_pyszz": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ],
        "inducing_commit_hash_pd": [
            "aee5bbb44b507d6f671355777561b8d5ed236b4c",
            "797bb567c6d05e8561bab202eb85efd1b7c5a197"
        ],
        "matched": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ]
    },
    {
        "repo_name": "embedchain/embedchain",
        "CVE_ID": "CVE-2024-23732",
        "Problem_Type": "CWE-1333",
        "Description": "The JSON loader in Embedchain before 0.1.57 allows a ReDoS (regular expression denial of service) via a long string to json.py.",
        "URL": "https://github.com/embedchain/embedchain/pull/1122",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "f7696d1dc17e4de5333f468860bb91f7c420e0a4",
        "inducing_commit_hash_pyszz": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ],
        "inducing_commit_hash_pd": [
            "aee5bbb44b507d6f671355777561b8d5ed236b4c",
            "797bb567c6d05e8561bab202eb85efd1b7c5a197"
        ],
        "matched": [
            "5255a37c93c49531f5c8f4398dd43a3a2cf41e8c"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2020-35470",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Envoy before 1.16.1 logs an incorrect downstream address because it considers only the directly connected peer, not the information in the proxy protocol header. This affects situations with tcp-proxy as the network filter (not HTTP filters).",
        "URL": "https://github.com/envoyproxy/envoy/pull/14131",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "31e225b628a316322a0bcbd237a143eade995d22",
        "inducing_commit_hash_pyszz": [
            "f8bfc6a16ffebf1ecb9cdf8eb1265912118ae7bf"
        ],
        "inducing_commit_hash_pd": [
            "5248a4fb7d4c2a3d1fa151f944d3a63f6b7a06cf",
            "3285c1a6b0647352f3561f42e2591bf29acb4f2d",
            "f8bfc6a16ffebf1ecb9cdf8eb1265912118ae7bf",
            "db2eddaeed36d4e027d8008e67eb37d2c1fd3a4a",
            "741df7aa13ddb15acbc77468579f0c6b58542839",
            "c0a01f95f7f9c9e99124c38931d50136298c7178"
        ],
        "matched": [
            "f8bfc6a16ffebf1ecb9cdf8eb1265912118ae7bf"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2020-35471",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Envoy before 1.16.1 mishandles dropped and truncated datagrams, as demonstrated by a segmentation fault for a UDP packet size larger than 1500.",
        "URL": "https://github.com/envoyproxy/envoy/pull/14122",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1ed6ddfb615307755643f810b078ca7fe9d771fa",
        "inducing_commit_hash_pyszz": [
            "8221eb993e7ab41e7dfd88e5f39c0e946fc3f87e"
        ],
        "inducing_commit_hash_pd": [
            "6c3c2b3dec83966ef6f84a8d767c4b5acc341aca",
            "477fafdaa8423cff1a5c22d58904c22eed9155f3",
            "d173319c99d7764daf1ef0d2e9009a94dba04790",
            "8221eb993e7ab41e7dfd88e5f39c0e946fc3f87e",
            "9ead261f63cf2d1833f2282d98c7071516970945",
            "44a8588219209c4b96fca2e7e9f009138e1f3ca6",
            "57ac960c54389dfa55df1d5c7db2754e3e326ffd"
        ],
        "matched": [
            "8221eb993e7ab41e7dfd88e5f39c0e946fc3f87e"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2021-21378",
        "Problem_Type": "CWE-287",
        "Description": "Envoy is a cloud-native high-performance edge/middle/service proxy. In Envoy version 1.17.0 an attacker can bypass authentication by presenting a JWT token with an issuer that is not in the provider list when Envoy's JWT Authentication filter is configured with the `allow_missing` requirement under `requires_any` due to a mistake in implementation. Envoy's JWT Authentication filter can be configured with the `allow_missing` requirement that will be satisfied if JWT is missing (JwtMissed error) and fail if JWT is presented or invalid. Due to a mistake in implementation, a JwtUnknownIssuer error was mistakenly converted to JwtMissed when `requires_any` was configured. So if `allow_missing` was configured under `requires_any`, an attacker can bypass authentication by presenting a JWT token with an issuer that is not in the provider list. Integrity may be impacted depending on configuration if the JWT token is used to protect against writes or modifications. This regression was introduced on 2020/11/12 in PR 13839 which fixed handling `allow_missing` under RequiresAny in a JwtRequirement (see issue 13458). The AnyVerifier aggregates the children verifiers' results into a final status where JwtMissing is the default error. However, a JwtUnknownIssuer was mistakenly treated the same as a JwtMissing error and the resulting final aggregation was the default JwtMissing. As a result, `allow_missing` would allow a JWT token with an unknown issuer status. This is fixed in version 1.17.1 by PR 15194. The fix works by preferring JwtUnknownIssuer over a JwtMissing error, fixing the accidental conversion and bypass with `allow_missing`. A user could detect whether a bypass occurred if they have Envoy logs enabled with debug verbosity. Users can enable component level debug logs for JWT. The JWT filter logs will indicate that there is a request with a JWT token and a failure that the JWT token is missing.",
        "URL": "https://github.com/envoyproxy/envoy/pull/15194",
        "Tag": "['Patch']",
        "fix_commit_hash": "ea39e3cba652bcc4b11bb0d5c62b017e584d2e5a",
        "inducing_commit_hash_pyszz": [
            "9270506f9f2b6786c21719bed3a97a6e0e71a760"
        ],
        "inducing_commit_hash_pd": [
            "ae5d9c4bd5f56a25149b8e2b3bcb0747b0228670",
            "9270506f9f2b6786c21719bed3a97a6e0e71a760"
        ],
        "matched": [
            "9270506f9f2b6786c21719bed3a97a6e0e71a760"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2022-21657",
        "Problem_Type": "CWE-295",
        "Description": "Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions Envoy does not restrict the set of certificates it accepts from the peer, either as a TLS client or a TLS server, to only those certificates that contain the necessary extendedKeyUsage (id-kp-serverAuth and id-kp-clientAuth, respectively). This means that a peer may present an e-mail certificate (e.g. id-kp-emailProtection), either as a leaf certificate or as a CA in the chain, and it will be accepted for TLS. This is particularly bad when combined with the issue described in pull request #630, in that it allows a Web PKI CA that is intended only for use with S/MIME, and thus exempted from audit or supervision, to issue TLS certificates that will be accepted by Envoy. As a result Envoy will trust upstream certificates that should not be trusted. There are no known workarounds to this issue. Users are advised to upgrade.",
        "URL": "https://github.com/envoyproxy/envoy/pull/630",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6c9e95593282befdc51473a082aa2589d2ce3bf",
        "inducing_commit_hash_pyszz": [
            "13cfaf40ebda10bdbe67079b3820e11cbe684e13"
        ],
        "inducing_commit_hash_pd": [
            "0e16148b83547486383714e412ee4bad4b054099",
            "3285c1a6b0647352f3561f42e2591bf29acb4f2d",
            "f17c288959fdf37d4ec0d9ccd764883437d53a36",
            "8337bb12f2e9eb628315420aca4fd184fab1abc4",
            "13cfaf40ebda10bdbe67079b3820e11cbe684e13",
            "a1aceb85e6c7da06c8972ee67c8a216ab383bd85",
            "1c6da3abe4eef9516edb52bcde464b2059e4237a",
            "88ed42a8ffe2cfa0029653222786eaec2bc1d13f"
        ],
        "matched": [
            "13cfaf40ebda10bdbe67079b3820e11cbe684e13"
        ]
    },
    {
        "repo_name": "envoyproxy/envoy",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/envoyproxy/envoy/pull/30055",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "f737277d9f7841675670a93e6b01415ee26abb8b",
        "inducing_commit_hash_pyszz": [
            "bfec1286b63dfb4c54409f5a6f65876385c5d750"
        ],
        "inducing_commit_hash_pd": [
            "b93886ca040795407efc641f8b41eaf35e7bf1bb",
            "3f1c9d7866a5ce557c7754d06420a5cbb17dfe8c",
            "bfec1286b63dfb4c54409f5a6f65876385c5d750",
            "1a7b32de759939f82af2cf7e83471aff5d57c93d",
            "5ddb5f45f4405dcc43175e5995821da4ac892ccb",
            "4ad03270ea93fed5ad13ed78800617e5b665fd79"
        ],
        "matched": [
            "bfec1286b63dfb4c54409f5a6f65876385c5d750"
        ]
    },
    {
        "repo_name": "eProsima/Fast-DDS",
        "CVE_ID": "CVE-2023-42459",
        "Problem_Type": "CWE-415",
        "Description": "Fast DDS is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group). In affected versions specific DATA submessages can be sent to a discovery locator which may trigger a free error. This can remotely crash any Fast-DDS process. The call to free() could potentially leave the pointer in the attackers control which could lead to a double free. This issue has been addressed in versions 2.12.0, 2.11.3, 2.10.3, and 2.6.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
        "URL": "https://github.com/eProsima/Fast-DDS/pull/3824",
        "Tag": "['Patch']",
        "fix_commit_hash": "47fe5d7636769706fcf71bf7d183c34c64837e37",
        "inducing_commit_hash_pyszz": [
            "f9d722f13fbddaeaf3d4b94acfb6ba2c179318a1"
        ],
        "inducing_commit_hash_pd": [],
        "matched": [
            "f9d722f13fbddaeaf3d4b94acfb6ba2c179318a1"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-24725",
        "Problem_Type": "CWE-78",
        "Description": "Shescape is a shell escape package for JavaScript. An issue in versions 1.4.0 to 1.5.1 allows for exposure of the home directory on Unix systems when using Bash with the `escape` or `escapeAll` functions from the _shescape_ API with the `interpolation` option set to `true`. Other tested shells, Dash and Zsh, are not affected. Depending on how the output of _shescape_ is used, directory traversal may be possible in the application using _shescape_. The issue was patched in version 1.5.1. As a workaround, manually escape all instances of the tilde character (`~`) using `arg.replace(/~/g, \"\\\\~\")`.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/170",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "413810c786687f73824313a45d4fe287e4957d3f",
        "inducing_commit_hash_pyszz": [
            "e0c928aabe97822bddb3da3624ab09e272c46488"
        ],
        "inducing_commit_hash_pd": [
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde"
        ],
        "matched": [
            "e0c928aabe97822bddb3da3624ab09e272c46488"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-31179",
        "Problem_Type": "CWE-74",
        "Description": "Shescape is a simple shell escape package for JavaScript. Versions prior to 1.5.8 were found to be subject to code injection on windows. This impacts users that use Shescape (any API function) to escape arguments for cmd.exe on Windows An attacker can omit all arguments following their input by including a line feed character (`'\\n'`) in the payload. This bug has been patched in [v1.5.8] which you can upgrade to now. No further changes are required. Alternatively, line feed characters (`'\\n'`) can be stripped out manually or the user input can be made the last argument (this only limits the impact).",
        "URL": "https://github.com/ericcornelissen/shescape/pull/332",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "aceea7358f7222984e21260381ebc5ec4543b76f",
        "inducing_commit_hash_pyszz": [
            "10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"
        ],
        "inducing_commit_hash_pd": [
            "021c350500d8947b7ccc31eb78c78602f786c36b",
            "7a4fa93db29f5e19a23ecf9cfb802fc69dbbf7bf",
            "d4f4c3a49a9e2ea38f2541c1dd3cbf09dc183363",
            "ddea281f70b510f07b9cc9d9f0a6bf3c039860c3",
            "b888aafd679972b4c31474377d5a40f41a16b1fe",
            "10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"
        ],
        "matched": [
            "10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-31180",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Shescape is a simple shell escape package for JavaScript. Affected versions were found to have insufficient escaping of white space when interpolating output. This issue only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. The result is that if an attacker is able to include whitespace in their input they can: 1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace. 2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. 3. Invoke arbitrary commands by inserting a line feed character. 4. Invoke arbitrary commands by inserting a carriage return character. Behaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required. Behaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required. The best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations. Alternatively, users may strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/322",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "021c350500d8947b7ccc31eb78c78602f786c36b",
        "inducing_commit_hash_pyszz": [
            "ccbb6c9dea5ea706fff7dac765f9004924399145"
        ],
        "inducing_commit_hash_pd": [
            "ccbb6c9dea5ea706fff7dac765f9004924399145",
            "9fb048682921621b05af1bbbb7acc9a4492d6dd2",
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde"
        ],
        "matched": [
            "ccbb6c9dea5ea706fff7dac765f9004924399145"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-31180",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "Shescape is a simple shell escape package for JavaScript. Affected versions were found to have insufficient escaping of white space when interpolating output. This issue only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. The result is that if an attacker is able to include whitespace in their input they can: 1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace. 2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. 3. Invoke arbitrary commands by inserting a line feed character. 4. Invoke arbitrary commands by inserting a carriage return character. Behaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required. Behaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required. The best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations. Alternatively, users may strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/324",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "994af9269c0b7ad07908b93566462a8889cd4ca6",
        "inducing_commit_hash_pyszz": [
            "3f81f7f406748582660deaf0edde77d240f44ce2"
        ],
        "inducing_commit_hash_pd": [
            "d1f31ccc612cc6bb883958cdec72b386af2894f6",
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde",
            "3f81f7f406748582660deaf0edde77d240f44ce2",
            "b888aafd679972b4c31474377d5a40f41a16b1fe"
        ],
        "matched": [
            "3f81f7f406748582660deaf0edde77d240f44ce2"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2022-36064",
        "Problem_Type": "CWE-1333",
        "Description": "Shescape is a shell escape package for JavaScript. An Inefficient Regular Expression Complexity vulnerability impacts users that use Shescape to escape arguments for the Unix shells `Bash` and `Dash`, or any not-officially-supported Unix shell; and/or using the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. An attacker can cause polynomial backtracking or quadratic runtime in terms of the input string length due to two Regular Expressions in Shescape that are vulnerable to Regular Expression Denial of Service (ReDoS). This bug has been patched in v1.5.10. For `Dash` only, this bug has been patched since v1.5.9. As a workaround, a maximum length can be enforced on input strings to Shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/373",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "efc60194f4b9e34f148f757ed70c040122f38960",
        "inducing_commit_hash_pyszz": [
            "cf0a910e82bff1afec300416c756f3ddb8c7efa3"
        ],
        "inducing_commit_hash_pd": [
            "f50a1ea9ad66885cb186aa58648ac129f51f57c7",
            "aceea7358f7222984e21260381ebc5ec4543b76f",
            "174ef2a46c06f4b4db3b7311552a3cdd80166bc5",
            "9b80120085660a062acf2d1e2b74b7a3d6304003",
            "3f81f7f406748582660deaf0edde77d240f44ce2",
            "fcba4eee83b53dee0e4060f8e84e4ea02d51efde",
            "a64379a62f47aa63d88888fa703ff731a29354e7",
            "d4f4c3a49a9e2ea38f2541c1dd3cbf09dc183363",
            "aac2dcd6a1c57693794b99de64738f3c211fe4ba",
            "b888aafd679972b4c31474377d5a40f41a16b1fe",
            "994af9269c0b7ad07908b93566462a8889cd4ca6",
            "f1ae4b833fe9b57b08749955c786ffa12d3107d4",
            "cb0d066a11619b33d094b7b74a44bb2a3823d6d0",
            "867b336690f81f5768c9c61d955285178ea28a6d",
            "322a5452e1bb647307267c009c44ddea453e34fc",
            "91ade01f6119107a2e181a2fcd2dd4a3c003bc37",
            "cf0a910e82bff1afec300416c756f3ddb8c7efa3",
            "7a4fa93db29f5e19a23ecf9cfb802fc69dbbf7bf",
            "9fb048682921621b05af1bbbb7acc9a4492d6dd2",
            "96e7289beed437eccc0808328f82c564d574f895",
            "d1f31ccc612cc6bb883958cdec72b386af2894f6",
            "51dda2b6472c1c0ae45b742a10d23ec02d00a751"
        ],
        "matched": [
            "cf0a910e82bff1afec300416c756f3ddb8c7efa3"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2023-35931",
        "Problem_Type": "CWE-526",
        "Description": "Shescape is a simple shell escape library for JavaScript. An attacker may be able to get read-only access to environment variables. This bug has been patched in version 1.7.1.\n\n\n",
        "URL": "https://github.com/ericcornelissen/shescape/pull/982",
        "Tag": "['Patch']",
        "fix_commit_hash": "d0fce70f987ac0d8331f93cb45d47e79436173ac",
        "inducing_commit_hash_pyszz": [
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4"
        ],
        "inducing_commit_hash_pd": [
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4",
            "7a4fa93db29f5e19a23ecf9cfb802fc69dbbf7bf",
            "e183cfda431216c87bae4773f32c8bc527c64f58"
        ],
        "matched": [
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4"
        ]
    },
    {
        "repo_name": "ericcornelissen/shescape",
        "CVE_ID": "CVE-2023-40185",
        "Problem_Type": "CWE-150",
        "Description": "shescape is simple shell escape library for JavaScript. This may impact users that use Shescape on Windows in a threaded context. The vulnerability can result in Shescape escaping (or quoting) for the wrong shell, thus allowing attackers to bypass protections depending on the combination of expected and used shell. This bug has been patched in version 1.7.4.",
        "URL": "https://github.com/ericcornelissen/shescape/pull/1142",
        "Tag": "['Patch']",
        "fix_commit_hash": "0b976dab645abf45ffd85e74a8c6e51ee2f42d63",
        "inducing_commit_hash_pyszz": [
            "df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2"
        ],
        "inducing_commit_hash_pd": [
            "e4b6dbc8daeff15668f3c064402e06e7675d0923",
            "132f541fc61e18e011d1c6a28631e2e729da7aa1",
            "72b2baf0e01ff8c61d88c9fc00b88158692c8f84",
            "45ffb7ba3fb41557f043d6bdbdaaa2341884cd4c",
            "862d00e628ace268b32105ebec23f238a6760b3c",
            "a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4",
            "5ec38a436581b1cd77fd1edba89cbf249430d0d8",
            "ab6eaf534d9aa5733f4f2515254fcb4593167bc2",
            "230d6b33d8111d069a3483fc4bf21cc75e20a4cb",
            "ced027a9a382afe17034d69b8bc9ee0d76f023e7",
            "71bb52dfd9a09992f172360ff430b336343fff7a",
            "656d76277b8daf60256ce92d089e0816bb0d6cd9",
            "83752afc29fdf7082382f05b4631df024ed272d2",
            "df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2",
            "e183cfda431216c87bae4773f32c8bc527c64f58",
            "0a9936d198604012bd3ef70815da419333494ca6",
            "e9fe111455bfe8656cfd12113bf203bd7b81cb47",
            "9fb048682921621b05af1bbbb7acc9a4492d6dd2",
            "7599e260d5406395621e6280dd328c2146cced0e",
            "ce70506e71e1b86b992cdcab592ebe2de8535cb2",
            "850448b82e24dc3cfa7e29198c04a3cbbf64b72b",
            "299506e1b256bec72ff5322fdf3c4f261a32e050",
            "a45ba4d80da893c3bcd6560e913d1b284cf942ad"
        ],
        "matched": [
            "df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2"
        ]
    },
    {
        "repo_name": "erikd/libsndfile",
        "CVE_ID": "CVE-2019-3832",
        "Problem_Type": "CWE-125",
        "Description": "It was discovered the fix for CVE-2018-19758 (libsndfile) was not complete and still allows a read beyond the limits of a buffer in wav_write_header() function in wav.c. A local attacker may use this flaw to make the application crash.",
        "URL": "https://github.com/erikd/libsndfile/pull/460",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "6d7ce94c020cc720a6b28719d1a7879181790008",
        "inducing_commit_hash_pyszz": [
            "42132c543358cee9f7c3e9e9b15bb6c1063a608e"
        ],
        "inducing_commit_hash_pd": [
            "42132c543358cee9f7c3e9e9b15bb6c1063a608e"
        ],
        "matched": [
            "42132c543358cee9f7c3e9e9b15bb6c1063a608e"
        ]
    },
    {
        "repo_name": "esphome/esphome",
        "CVE_ID": "CVE-2021-41104",
        "Problem_Type": "CWE-306",
        "Description": "ESPHome is a system to control the ESP8266/ESP32. Anyone with web_server enabled and HTTP basic auth configured on version 2021.9.1 or older is vulnerable to an issue in which `web_server` allows over-the-air (OTA) updates without checking user defined basic auth username & password. This issue is patched in version 2021.9.2. As a workaround, one may disable or remove `web_server`.",
        "URL": "https://github.com/esphome/esphome/pull/2409/commits/207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2234f6aacf8cc653307fed80f3750317a82c4f83",
        "inducing_commit_hash_pyszz": [
            "be965a60eba6bb769e2a5afdbc8eed132f077a59"
        ],
        "inducing_commit_hash_pd": [
            "be965a60eba6bb769e2a5afdbc8eed132f077a59"
        ],
        "matched": [
            "be965a60eba6bb769e2a5afdbc8eed132f077a59"
        ]
    },
    {
        "repo_name": "eteran/edb-debugger",
        "CVE_ID": "CVE-2023-27734",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue found in Eteran edb-debugger v.1.3.0 allows a local attacker to causea denial of service via the collect_symbols function in plugins/BinaryInfo/symbols.cpp.",
        "URL": "https://github.com/eteran/edb-debugger/pull/834/commits/32f325f4016e0090f76934320173581860f090be",
        "Tag": "['Patch']",
        "fix_commit_hash": "4c8246648158fff3ec3e486aeb2f276b3ff56297",
        "inducing_commit_hash_pyszz": [
            "9bb38a871c11b16cb3db5e7e3a12d37a825de0d9"
        ],
        "inducing_commit_hash_pd": [
            "9bb38a871c11b16cb3db5e7e3a12d37a825de0d9",
            "8be6dc4491aa5fd5c0556e00abd334271d3f318b"
        ],
        "matched": [
            "9bb38a871c11b16cb3db5e7e3a12d37a825de0d9"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2018-12018",
        "Problem_Type": "CWE-129",
        "Description": "The GetBlockHeadersMsg handler in the LES protocol implementation in Go Ethereum (aka geth) before 1.8.11 may lead to an access violation because of an integer signedness error for the array index, which allows attackers to launch a Denial of Service attack by sending a packet with a -1 query.Skip value. The vulnerable remote node would be crashed by such an attack immediately, aka the EPoD (Ethereum Packet of Death) issue.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/16891",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a5237a27eaf81946a3edb4fafe13ed6359d119e4",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "9f8d192991c4f68fa14c91366722bbca601da117"
        ],
        "matched": [
            "9f8d192991c4f68fa14c91366722bbca601da117"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2020-26240",
        "Problem_Type": "CWE-682",
        "Description": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. An ethash mining DAG generation flaw in Geth before version 1.9.24 could cause miners to erroneously calculate PoW in an upcoming epoch (estimated early January, 2021). This happened on the ETC chain on 2020-11-06. This issue is relevant only for miners, non-mining nodes are unaffected. This issue is fixed as of 1.9.24",
        "URL": "https://github.com/ethereum/go-ethereum/pull/21793",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d990df909d7839640143344e79356754384dcdd0",
        "inducing_commit_hash_pyszz": [
            "3b00a77de57ab2737a7887521c192ce004c721e3"
        ],
        "inducing_commit_hash_pd": [
            "f3579f6460ed90a29cca77ffcbcd8047427b686b",
            "567d41d9363706b4b13ce0903804e8acf214af49",
            "5c8fa6ae1a42813e7aec477bd68d98f66f85e0b8"
        ],
        "matched": [
            "3b00a77de57ab2737a7887521c192ce004c721e3"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2020-26264",
        "Problem_Type": "CWE-400",
        "Description": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. In Geth before version 1.9.25 a denial-of-service vulnerability can make a LES server crash via malicious GetProofsV2 request from a connected LES client. This vulnerability only concerns users explicitly enabling les server; disabling les prevents the exploit. The vulnerability was patched in version 1.9.25.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/21896",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bddd103a9f0af27ef533f04e06ea429cf76b6d46",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "2ed729d38e90154d1f23ebdf5a9f2808212276d8"
        ],
        "matched": [
            "2ed729d38e90154d1f23ebdf5a9f2808212276d8"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2021-41173",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Go Ethereum is the official Golang implementation of the Ethereum protocol. Prior to version 1.10.9, a vulnerable node is susceptible to crash when processing a maliciously crafted message from a peer. Version v1.10.9 contains patches to the vulnerability. There are no known workarounds aside from upgrading.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/23801",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e40b37718326b8b4873b3b00a0db2e6c6d9ea738",
        "inducing_commit_hash_pyszz": [
            "3501163d4f297346d937a1a4b6d968d79aa484c8"
        ],
        "inducing_commit_hash_pd": [
            "3501163d4f297346d937a1a4b6d968d79aa484c8"
        ],
        "matched": [
            "3501163d4f297346d937a1a4b6d968d79aa484c8"
        ]
    },
    {
        "repo_name": "ethereum/go-ethereum",
        "CVE_ID": "CVE-2022-29177",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Go Ethereum is the official Golang implementation of the Ethereum protocol. Prior to version 1.10.17, a vulnerable node, if configured to use high verbosity logging, can be made to crash when handling specially crafted p2p messages sent from an attacker node. Version 1.10.17 contains a patch that addresses the problem. As a workaround, setting loglevel to default level (`INFO`) makes the node not vulnerable to this attack.",
        "URL": "https://github.com/ethereum/go-ethereum/pull/24507",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "870b4505a05cd8b3604078ed4afcd3012bf72a47",
        "inducing_commit_hash_pyszz": [
            "691cb90284b9b63dc9c80bf0716ba35036ca78fe"
        ],
        "inducing_commit_hash_pd": [
            "7964f30dcbdde00b2960ef6e98320e0a0f9300e2",
            "691cb90284b9b63dc9c80bf0716ba35036ca78fe",
            "9c7281c17ebbdd6a8c10ecc618bcb9121215a21f",
            "5bdc1159433138d92ed6fefb253e3c6ed3a43995"
        ],
        "matched": [
            "691cb90284b9b63dc9c80bf0716ba35036ca78fe"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2018-19535",
        "Problem_Type": "CWE-125",
        "Description": "In Exiv2 0.26 and previous versions, PngChunk::readRawProfile in pngchunk_int.cpp may cause a denial of service (application crash due to a heap-based buffer over-read) via a crafted PNG file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/430",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7d32da890b0739243c318b3611125b297afb74ff",
        "inducing_commit_hash_pyszz": [
            "a6a1c311404534d8ff54327972f13ce4d718e0a0"
        ],
        "inducing_commit_hash_pd": [
            "a6a1c311404534d8ff54327972f13ce4d718e0a0"
        ],
        "matched": [
            "a6a1c311404534d8ff54327972f13ce4d718e0a0"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13110",
        "Problem_Type": "CWE-125",
        "Description": "A CiffDirectory::readDirectory integer overflow and out-of-bounds read in Exiv2 through 0.27.1 allows an attacker to cause a denial of service (SIGSEGV) via a crafted CRW image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/844",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c0ecc2ae36f34462be98623deb85ba1747ae2175",
        "inducing_commit_hash_pyszz": [
            "b3d077dcaefb6747fff8204490f33eba5a144edb"
        ],
        "inducing_commit_hash_pd": [
            "b3d077dcaefb6747fff8204490f33eba5a144edb"
        ],
        "matched": [
            "b3d077dcaefb6747fff8204490f33eba5a144edb"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13113",
        "Problem_Type": "CWE-617",
        "Description": "Exiv2 through 0.27.1 allows an attacker to cause a denial of service (crash due to assertion failure) via an invalid data location in a CRW image file.",
        "URL": "https://github.com/Exiv2/exiv2/pull/842",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7798ae25574425271305fffe85de77bec8df03f1",
        "inducing_commit_hash_pyszz": [
            "00a3ef321b16882f1f6d424a10a753d2712334dd"
        ],
        "inducing_commit_hash_pd": [
            "d3748152a70e6e3c54011f23c9d16b66d5e8dccc",
            "00a3ef321b16882f1f6d424a10a753d2712334dd"
        ],
        "matched": [
            "00a3ef321b16882f1f6d424a10a753d2712334dd"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-13114",
        "Problem_Type": "CWE-476",
        "Description": "http.c in Exiv2 through 0.27.1 allows a malicious http server to cause a denial of service (crash due to a NULL pointer dereference) by returning a crafted response that lacks a space character.",
        "URL": "https://github.com/Exiv2/exiv2/pull/815",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ae20c30805b330275b2aa0303a42e1f2bbd53661",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "d393b0fa7e3bad7e8837a3b3f8a9f46bf79a5399"
        ],
        "matched": [
            "d393b0fa7e3bad7e8837a3b3f8a9f46bf79a5399"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2019-14982",
        "Problem_Type": "CWE-190",
        "Description": "In Exiv2 before v0.27.2, there is an integer overflow vulnerability in the WebPImage::getHeaderOffset function in webpimage.cpp. It can lead to a buffer overflow vulnerability and a crash.",
        "URL": "https://github.com/Exiv2/exiv2/pull/962/commits/e925bc5addd881543fa503470c8a859e112cca62",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e925bc5addd881543fa503470c8a859e112cca62",
        "inducing_commit_hash_pyszz": [
            "85cc2f745de635c45f846c7afe2578592310f2d2"
        ],
        "inducing_commit_hash_pd": [
            "85cc2f745de635c45f846c7afe2578592310f2d2"
        ],
        "matched": [
            "85cc2f745de635c45f846c7afe2578592310f2d2"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-29623",
        "Problem_Type": "CWE-908",
        "Description": "Exiv2 is a C++ library and a command-line utility to read, write, delete and modify Exif, IPTC, XMP and ICC image metadata. A read of uninitialized memory was found in Exiv2 versions v0.27.3 and earlier. Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. The read of uninitialized memory is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to leak a few bytes of stack memory, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.4.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1627",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0f9eb74c44c908e170a64cab590949d53749af8e",
        "inducing_commit_hash_pyszz": [
            "b3f107bd8ce7ae5790a327580f0a8b2c749855ef"
        ],
        "inducing_commit_hash_pd": [
            "b3f107bd8ce7ae5790a327580f0a8b2c749855ef"
        ],
        "matched": [
            "b3f107bd8ce7ae5790a327580f0a8b2c749855ef"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-34335",
        "Problem_Type": "CWE-369",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A floating point exception (FPE) due to an integer divide by zero was found in Exiv2 versions v0.27.4 and earlier. The FPE is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1750",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cdec9dd774cd4b942a7aafb57f640de98f1e19e1",
        "inducing_commit_hash_pyszz": [
            "f4d3adbf91e6dc4e34aee5bac7b7fd9e127a5c00"
        ],
        "inducing_commit_hash_pd": [
            "f4d3adbf91e6dc4e34aee5bac7b7fd9e127a5c00",
            "6e4404da81fd9392e6251ec0a48d3967d090a48f",
            "cff1efe122330771d5d792aebc25a4f1ec705abc"
        ],
        "matched": [
            "f4d3adbf91e6dc4e34aee5bac7b7fd9e127a5c00"
        ]
    },
    {
        "repo_name": "Exiv2/exiv2",
        "CVE_ID": "CVE-2021-37619",
        "Problem_Type": "CWE-125",
        "Description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service by crashing Exiv2, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as insert. The bug is fixed in version v0.27.5.",
        "URL": "https://github.com/Exiv2/exiv2/pull/1752",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "86d0a1d5d9f6dc41013a6690408add974e59167c",
        "inducing_commit_hash_pyszz": [
            "e118d145150649f79bd9e60807ec7c48b8cd433d"
        ],
        "inducing_commit_hash_pd": [
            "18ecd0e8901a9ca775f1a064c3da6d8b944dea53",
            "e118d145150649f79bd9e60807ec7c48b8cd433d"
        ],
        "matched": [
            "e118d145150649f79bd9e60807ec7c48b8cd433d"
        ]
    },
    {
        "repo_name": "exoplatform/chat-application",
        "CVE_ID": "CVE-2022-4902",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability classified as problematic has been found in eXo Chat Application. Affected is an unknown function of the file application/src/main/webapp/vue-app/components/ExoChatMessageComposer.vue of the component Mention Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 3.3.0-20220417 is able to address this issue. The name of the patch is 26bf307d3658d1403cfd5c3ad423ce4c4d1cb2dc. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-220212.",
        "URL": "https://github.com/exoplatform/chat-application/pull/485",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "26bf307d3658d1403cfd5c3ad423ce4c4d1cb2dc",
        "inducing_commit_hash_pyszz": [
            "40f814ff9a2956a23c0e5a68d75203c08d20940b"
        ],
        "inducing_commit_hash_pd": [
            "40f814ff9a2956a23c0e5a68d75203c08d20940b",
            "d217644198dc6ba0a5c6b0d73fb5f19ada4d81dc"
        ],
        "matched": [
            "40f814ff9a2956a23c0e5a68d75203c08d20940b"
        ]
    },
    {
        "repo_name": "expo/expo",
        "CVE_ID": "CVE-2020-24653",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "secure-store in Expo through 2.16.1 on iOS provides the insecure kSecAttrAccessibleAlwaysThisDeviceOnly policy when WHEN_UNLOCKED_THIS_DEVICE_ONLY is used.",
        "URL": "https://github.com/expo/expo/pull/9264",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1d82bf07fae2c96273e9189997e521359cffc1a9",
        "inducing_commit_hash_pyszz": [
            "748878b742713789a0b3ab7296024b9dbd7caf6d"
        ],
        "inducing_commit_hash_pd": [
            "748878b742713789a0b3ab7296024b9dbd7caf6d"
        ],
        "matched": [
            "748878b742713789a0b3ab7296024b9dbd7caf6d"
        ]
    },
    {
        "repo_name": "facade/ignition",
        "CVE_ID": "CVE-2021-43996",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "The Ignition component before 1.16.15, and 2.0.x before 2.0.6, for Laravel has a \"fix variable names\" feature that can lead to incorrect access control.",
        "URL": "https://github.com/facade/ignition/pull/285",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c606a03b164eab2cbeac6b0bf8cfced0f4678989",
        "inducing_commit_hash_pyszz": [
            "02a6e4e23838c76951e1459fe587028162f602b8"
        ],
        "inducing_commit_hash_pd": [
            "22514b03a9a9f5656cb8a60a468d404f24acb9b8",
            "02a6e4e23838c76951e1459fe587028162f602b8"
        ],
        "matched": [
            "02a6e4e23838c76951e1459fe587028162f602b8"
        ]
    },
    {
        "repo_name": "facebook/create-react-app",
        "CVE_ID": "CVE-2021-24033",
        "Problem_Type": "CWE-78",
        "Description": "react-dev-utils prior to v11.0.4 exposes a function, getProcessForPort, where an input argument is concatenated into a command string to be executed. This function is typically used from react-scripts (in Create React App projects), where the usage is safe. Only when this function is manually invoked with user-provided values (ie: by custom code) is there the potential for command injection. If you're consuming it from react-scripts then this issue does not affect you.",
        "URL": "https://github.com/facebook/create-react-app/pull/10644",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f5e415f3a5b66f07dcc60aba1b445fa7cda97268",
        "inducing_commit_hash_pyszz": [
            "be43292445bd6b25ac825586c19fd300d5ea2955"
        ],
        "inducing_commit_hash_pd": [
            "be43292445bd6b25ac825586c19fd300d5ea2955"
        ],
        "matched": [
            "be43292445bd6b25ac825586c19fd300d5ea2955"
        ]
    },
    {
        "repo_name": "facebook/proxygen",
        "CVE_ID": "CVE-2023-44487",
        "Problem_Type": "CWE-400",
        "Description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "URL": "https://github.com/facebook/proxygen/pull/466",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "34a804d4b5a6a49357ac9d809ed546600e5e6be1",
        "inducing_commit_hash_pyszz": [
            "57ea6fffb5b3b1dab068633d916e0e83ae2f4dde"
        ],
        "inducing_commit_hash_pd": [
            "57ea6fffb5b3b1dab068633d916e0e83ae2f4dde",
            "6864e68beeaa00a5f4146f66aed54f72ba7942f7",
            "e230e7f656fd3a4d075c9b32c09c8778257c5647",
            "a52d8cd1617673449fb32e9bd2c879db2079d04c"
        ],
        "matched": [
            "57ea6fffb5b3b1dab068633d916e0e83ae2f4dde"
        ]
    },
    {
        "repo_name": "facebook/zstd",
        "CVE_ID": "CVE-2019-11922",
        "Problem_Type": "CWE-362",
        "Description": "A race condition in the one-pass compression functions of Zstandard prior to version 1.3.8 could allow an attacker to write bytes out of bounds if an output buffer smaller than the recommended size was used.",
        "URL": "https://github.com/facebook/zstd/pull/1404/commits/3e5cdf1b6a85843e991d7d10f6a2567c15580da0",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3e5cdf1b6a85843e991d7d10f6a2567c15580da0",
        "inducing_commit_hash_pyszz": [
            "ced6e6189cf02b2de9bfcd7191f77cf9ff07f345"
        ],
        "inducing_commit_hash_pd": [
            "f4ce8913a33bc82a1bcfaafd3440b0ed69b966a6",
            "d1d210f3fb3675e0f6b79545f3fef309b02339dc",
            "ced6e6189cf02b2de9bfcd7191f77cf9ff07f345",
            "346bffbc681d9b2aab9b041c228a040f71796a35"
        ],
        "matched": [
            "ced6e6189cf02b2de9bfcd7191f77cf9ff07f345"
        ]
    },
    {
        "repo_name": "FAForever/fa",
        "CVE_ID": "CVE-2022-4879",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "A vulnerability was found in Forged Alliance Forever up to 3746. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the component Vote Handler. The manipulation leads to improper authorization. Upgrading to version 3747 is able to address this issue. The patch is named 6880971bd3d73d942384aff62d53058c206ce644. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217555.",
        "URL": "https://github.com/FAForever/fa/pull/4398",
        "Tag": "['Patch']",
        "fix_commit_hash": "6880971bd3d73d942384aff62d53058c206ce644",
        "inducing_commit_hash_pyszz": [
            "ba20074d7cb38fbc769c1f3d4e5305a56084d75d"
        ],
        "inducing_commit_hash_pd": [
            "ba20074d7cb38fbc769c1f3d4e5305a56084d75d",
            "b1e44ebd48b5e7dd82d9007ec10f261a5ed5732e",
            "3030487bd255ad74c484a917e8c3977b58bfe90d",
            "740f918d3d5d1df05c6444ebc26227485e1e6405",
            "ce3da3a03745dcaa188b3715d979d1a2d5ed6d62"
        ],
        "matched": [
            "ba20074d7cb38fbc769c1f3d4e5305a56084d75d"
        ]
    },
    {
        "repo_name": "falcosecurity/falco",
        "CVE_ID": "CVE-2019-8339",
        "Problem_Type": "CWE-416",
        "Description": "An issue was discovered in Falco through 0.14.0. A missing indicator for insufficient resources allows local users to bypass the detection engine.",
        "URL": "https://github.com/falcosecurity/falco/pull/561",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bdda640da17bc86081e06a9a84506e804c45b1eb",
        "inducing_commit_hash_pyszz": [
            "79d408f47274190519f169ef082790985a945d15"
        ],
        "inducing_commit_hash_pd": [
            "7db8e0921c020d6f9bac3932189d4f7c0ce48470",
            "ba8036711616ee45ae05d5472ca1f7c53261bc09",
            "7a31c59fe443d9dfe553d20bf8e6c2c27571decb",
            "8641f3c958c01ef22a7edc8a2ef3ae3dd475e491",
            "79d408f47274190519f169ef082790985a945d15",
            "4c64295adcc696023edca57999f954f698925c93",
            "513cf2ed8be11d23b379c65404f27cf2270a35a7",
            "f4bb49f1f57bbaee05d0de70c2be1baf89b40e8d",
            "8b116c2ad1a354c6e57197e0e7ab17033bf106fa",
            "9d3392e9b96ad07a1a6697092578bd27e75a9310"
        ],
        "matched": [
            "79d408f47274190519f169ef082790985a945d15"
        ]
    },
    {
        "repo_name": "falcosecurity/falco",
        "CVE_ID": "CVE-2021-33505",
        "Problem_Type": "CWE-269",
        "Description": "A local malicious user can circumvent the Falco detection engine through 0.28.1 by running a program that alters arguments of system calls being executed. Issue is fixed in Falco versions >= 0.29.1.",
        "URL": "https://github.com/falcosecurity/falco/pull/1675",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d6690313a0bdb48ff5fcb94784b6dc8b3afe2445",
        "inducing_commit_hash_pyszz": [
            "abc79fb548f9d925ffdeffe65f3bd32b79ab70f4"
        ],
        "inducing_commit_hash_pd": [
            "abc79fb548f9d925ffdeffe65f3bd32b79ab70f4"
        ],
        "matched": [
            "abc79fb548f9d925ffdeffe65f3bd32b79ab70f4"
        ]
    },
    {
        "repo_name": "FasterXML/jackson-dataformats-text",
        "CVE_ID": "CVE-2023-3894",
        "Problem_Type": "CWE-787",
        "Description": "Those using jackson-dataformats-text to parse TOML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.\n",
        "URL": "https://github.com/FasterXML/jackson-dataformats-text/pull/398",
        "Tag": "['Patch']",
        "fix_commit_hash": "5dd5f740aedcf37adad7ffece460e75e54abb0ed",
        "inducing_commit_hash_pyszz": [
            "3c9905102dd42dfac9d77b8d55a7632d8a07643a"
        ],
        "inducing_commit_hash_pd": [
            "ba4f8edd47b42daf913447b50d20ae90b1c77759",
            "87fd10f64f2b09eb6f7f5ff4e403bf3d3e646049",
            "6efc5ffb8be316cbe009e2dc40fe24ebd405a8e7",
            "966e487e5bd34c783c0154297a27d51b891d19f5",
            "46e4ec83f8bfdeb766a537471df1a9cf67f79bd8",
            "21c8e232d10c0cded8a099483bf2baff7fc077e3",
            "652769391279d86d28dc371741af94db202cee6b",
            "6298205e364a412d08648ad2acef2886c67a91b0",
            "a89ba7f7f06611dd0bac826a128f5669f8aa223d",
            "923dfae00e7a10b849e99836d973d15f53d75793",
            "4647dfd4a5701309d7ebf4c97dab6bfb71386561",
            "f30ef405cbd8a396d81948d031e326f33345f4ce",
            "05be0f6e3b87e54fa0e1ecb62b59e42d544a8b7c",
            "c329c0d4a22b2f74f0948400aff3dd046d3eccbe"
        ],
        "matched": [
            "3c9905102dd42dfac9d77b8d55a7632d8a07643a"
        ]
    },
    {
        "repo_name": "fastify/csrf",
        "CVE_ID": "CVE-2021-29624",
        "Problem_Type": "CWE-352",
        "Description": "fastify-csrf is an open-source plugin helps developers protect their Fastify server against CSRF attacks. Versions of fastify-csrf prior to 3.1.0 have a \"double submit\" mechanism using cookies with an application deployed across multiple subdomains, e.g. \"heroku\"-style platform as a service. Version 3.1.0 of the fastify-csrf fixes it. the vulnerability. The user of the module would need to supply a `userInfo` when generating the CSRF token to fully implement the protection on their end. This is needed only for applications hosted on different subdomains.",
        "URL": "https://github.com/fastify/csrf/pull/2",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5882472cbe2e50aa9ede11d1875919a15ab60800",
        "inducing_commit_hash_pyszz": [
            "b2f3de60dd0f4e5b71a837ca52c86979bc983183"
        ],
        "inducing_commit_hash_pd": [
            "7542b9767c15241a2538b637c70a487e0e481379",
            "19245b55b2f9becef6a00b5c713da375209b11f0",
            "82541c87e4c6a38c8a37a35921bfcc8edd02c099",
            "b2f3de60dd0f4e5b71a837ca52c86979bc983183"
        ],
        "matched": [
            "b2f3de60dd0f4e5b71a837ca52c86979bc983183"
        ]
    },
    {
        "repo_name": "fastify/fastify-csrf",
        "CVE_ID": "CVE-2021-29624",
        "Problem_Type": "CWE-352",
        "Description": "fastify-csrf is an open-source plugin helps developers protect their Fastify server against CSRF attacks. Versions of fastify-csrf prior to 3.1.0 have a \"double submit\" mechanism using cookies with an application deployed across multiple subdomains, e.g. \"heroku\"-style platform as a service. Version 3.1.0 of the fastify-csrf fixes it. the vulnerability. The user of the module would need to supply a `userInfo` when generating the CSRF token to fully implement the protection on their end. This is needed only for applications hosted on different subdomains.",
        "URL": "https://github.com/fastify/fastify-csrf/pull/51",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f6b70422bb59292b7892a7fe8add26429b12a34e",
        "inducing_commit_hash_pyszz": [
            "3c9de36e9e73ce0eda9207f84f2ac0243e1f5253"
        ],
        "inducing_commit_hash_pd": [
            "b6456a9548b076ac6e580ad5dfad0ee1a2eee890",
            "3c9de36e9e73ce0eda9207f84f2ac0243e1f5253"
        ],
        "matched": [
            "3c9de36e9e73ce0eda9207f84f2ac0243e1f5253"
        ]
    },
    {
        "repo_name": "feathersjs/feathers",
        "CVE_ID": "CVE-2023-37899",
        "Problem_Type": "CWE-754",
        "Description": "Feathersjs is a framework for creating web APIs and real-time applications with TypeScript or JavaScript. Feathers socket handler did not catch invalid string conversion errors like `const message = ${{ toString: '' }}` which would cause the NodeJS process to crash when sending an unexpected Socket.io message like `socket.emit('find', { toString: '' })`.  A fix has been released in versions 5.0.8 and 4.5.18. Users are advised to upgrade. There is no known workaround for this vulnerability.",
        "URL": "https://github.com/feathersjs/feathers/pull/3242",
        "Tag": "['Patch']",
        "fix_commit_hash": "0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8",
        "inducing_commit_hash_pyszz": [
            "7969334ae9d3cfb4ae0e63564a99a18454482cb0"
        ],
        "inducing_commit_hash_pd": [
            "9a3b32482b94bd1e455d62902eaa5e07ad1542db",
            "9dd671301ae0463968ade0f6eb0c82356adcc89d",
            "ed9e9340c0e3a5cd17fcd4af17ab451de630d70d",
            "d465234d88a51126b51832033ebdec88015d2e01",
            "61b1056c09b9fe86386ade8eb7650a291f5fe5cf",
            "e83eebe1afd63c5a8c742478498e40f01241eeee",
            "7969334ae9d3cfb4ae0e63564a99a18454482cb0",
            "d568627de1b012cbd73eeaee3768d8e6a38617a6"
        ],
        "matched": [
            "7969334ae9d3cfb4ae0e63564a99a18454482cb0"
        ]
    },
    {
        "repo_name": "feathersjs/feathers",
        "CVE_ID": "CVE-2023-37899",
        "Problem_Type": "CWE-754",
        "Description": "Feathersjs is a framework for creating web APIs and real-time applications with TypeScript or JavaScript. Feathers socket handler did not catch invalid string conversion errors like `const message = ${{ toString: '' }}` which would cause the NodeJS process to crash when sending an unexpected Socket.io message like `socket.emit('find', { toString: '' })`.  A fix has been released in versions 5.0.8 and 4.5.18. Users are advised to upgrade. There is no known workaround for this vulnerability.",
        "URL": "https://github.com/feathersjs/feathers/pull/3241",
        "Tag": "['Patch']",
        "fix_commit_hash": "c397ab3a0cd184044ae4f73540549b30a396821c",
        "inducing_commit_hash_pyszz": [
            "17d80e0b8e61b8c5b51876209b7d6ff2fbdfdb1d"
        ],
        "inducing_commit_hash_pd": [
            "2e45efca4a8bfb4cb746c9880e7c6a11749e39dc"
        ],
        "matched": [
            "17d80e0b8e61b8c5b51876209b7d6ff2fbdfdb1d"
        ]
    },
    {
        "repo_name": "Finastra/finastra-nodejs-libs",
        "CVE_ID": "CVE-2022-31069",
        "Problem_Type": "CWE-200",
        "Description": "NestJS Proxy is a NestJS module to decorate and proxy calls. Prior to version 0.7.0, the nestjs-proxy library did not have a way to control when Authorization headers should should be forwarded for specific backend services configured by the application developer. This could have resulted in sensitive information such as OAuth bearer access tokens being inadvertently exposed to such services that should not see them. A new feature has been introduced in the patched version of nestjs-proxy that allows application developers to opt out of forwarding the Authorization headers on a per service basis using the `forwardToken` config setting. Developers are advised to review the README for this library on Github or NPM for further details on how this configuration can be applied. This issue has been fixed in version 0.7.0 of `@finastra/nestjs-proxy`. Users of `@ffdc/nestjs-proxy` are advised that this package has been deprecated and is no longer being maintained or receiving updates. Such users should update their package.json file to use `@finastra/nestjs-proxy` instead.",
        "URL": "https://github.com/Finastra/finastra-nodejs-libs/pull/231",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe",
        "inducing_commit_hash_pyszz": [
            "7b73da070a3faa5b31ddf991616ba59eaff3c584"
        ],
        "inducing_commit_hash_pd": [
            "7b73da070a3faa5b31ddf991616ba59eaff3c584",
            "db57ac9a2fdb2a7ff637d37acdc8ff462c2a13b7"
        ],
        "matched": [
            "7b73da070a3faa5b31ddf991616ba59eaff3c584"
        ]
    },
    {
        "repo_name": "Finastra/finastra-nodejs-libs",
        "CVE_ID": "CVE-2022-31070",
        "Problem_Type": "CWE-200",
        "Description": "NestJS Proxy is a NestJS module to decorate and proxy calls. Prior to version 0.7.0, the nestjs-proxy library did not have a way to block sensitive cookies (e.g. session cookies) from being forwarded to backend services configured by the application developer. This could have led to sensitive cookies being inadvertently exposed to such services that should not see them. The patched version now blocks cookies from being forwarded by default. However developers can configure an allow-list of cookie names by using the `allowedCookies` config setting. This issue has been fixed in version 0.7.0 of `@finastra/nestjs-proxy`. Users of `@ffdc/nestjs-proxy` are advised that this package has been deprecated and is no longer being maintained or receiving updates. Such users should update their package.json file to use `@finastra/nestjs-proxy` instead.",
        "URL": "https://github.com/Finastra/finastra-nodejs-libs/pull/232",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "90a7157a04297fce5050b9ba33e6d4653268b4a3",
        "inducing_commit_hash_pyszz": [
            "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe"
        ],
        "inducing_commit_hash_pd": [
            "fce3e7e02c682e9313532acb32eb8dd6c848128c",
            "6c8b326859265cf8547fb3ad7a05d5ccc7cda6ad",
            "4db6cda14829b4165b2524668040978455ddea98",
            "38d3c2a70dabbf02b93c6ab7c8195962c9f745f0",
            "ba1e3f889e54ab54accaf51d388f0e59b69dd3b6",
            "0fe10dfda27734483d3dbcd1b822a1ddef019aa3",
            "7c40144d2bb9f1c4bbcb19eba2d74a4d96eb853e",
            "fd5c3729afa8ec6a0c325f0a9bc78dbad8260dff",
            "1c2632180e179480ee8c6cc840b7d4cd39f8c55c",
            "b74334e52c0a9e711a1231b8f4a208d01007b6ce",
            "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe",
            "e2094676583dbf7ed0108a8fbd3dc3503c2f8f08"
        ],
        "matched": [
            "ebbe4f7bed6f15c2aac3d75a7bc70220e38db6fe"
        ]
    },
    {
        "repo_name": "Finastra/ssr-pages",
        "CVE_ID": "CVE-2022-24718",
        "Problem_Type": "CWE-22",
        "Description": "ssr-pages is an HTML page builder for the purpose of server-side rendering (SSR). In versions prior to 0.1.4, a path traversal issue can occur when providing untrusted input to the `svg` property as an argument to the `build(MessagePageOptions)` function. While there is no known workaround at this time, there is a patch in version 0.1.4.",
        "URL": "https://github.com/Finastra/ssr-pages/pull/1/commits/c3e4c563384ae3ba3892f37dd190218577620780",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3e4c563384ae3ba3892f37dd190218577620780",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "7005b5ce44548f54853aa266e71318b8016fa12f"
        ],
        "matched": [
            "7005b5ce44548f54853aa266e71318b8016fa12f"
        ]
    },
    {
        "repo_name": "firebase/firebase-js-sdk",
        "CVE_ID": "CVE-2020-7765",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "This affects the package @firebase/util before 0.3.4. This vulnerability relates to the deepExtend function within the DeepCopy.ts file. Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program.",
        "URL": "https://github.com/firebase/firebase-js-sdk/pull/4001",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9cf727fcc3d049551b16ae0698ac33dc2fe45ada",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "fd0728138d88c454f8e38a78f35d831d6365070c",
            "bc1f67c448804a28fa64e91611ea60398890bcaa",
            "7866e2235998de53458c11a063c0fc588d982ae1"
        ],
        "matched": [
            "fd0728138d88c454f8e38a78f35d831d6365070c"
        ]
    },
    {
        "repo_name": "firecracker-microvm/firecracker",
        "CVE_ID": "CVE-2020-27174",
        "Problem_Type": "CWE-401",
        "Description": "In Amazon AWS Firecracker before 0.21.3, and 0.22.x before 0.22.1, the serial console buffer can grow its memory usage without limit when data is sent to the standard input. This can result in a memory leak on the microVM emulation thread, possibly occupying more memory than intended on the host.",
        "URL": "https://github.com/firecracker-microvm/firecracker/pull/2179",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1c25f5c52142d9e6db56667446dae8075c1600ac",
        "inducing_commit_hash_pyszz": [
            "03dcffebd8edabf32ec0f8f9e02b7d206d7d7541"
        ],
        "inducing_commit_hash_pd": [
            "03dcffebd8edabf32ec0f8f9e02b7d206d7d7541"
        ],
        "matched": [
            "03dcffebd8edabf32ec0f8f9e02b7d206d7d7541"
        ]
    },
    {
        "repo_name": "fish-shell/fish-shell",
        "CVE_ID": "CVE-2022-20001",
        "Problem_Type": "CWE-74",
        "Description": "fish is a command line shell. fish version 3.1.0 through version 3.3.1 is vulnerable to arbitrary code execution. git repositories can contain per-repository configuration that change the behavior of git, including running arbitrary commands. When using the default configuration of fish, changing to a directory automatically runs `git` commands in order to display information about the current repository in the prompt. If an attacker can convince a user to change their current directory into one controlled by the attacker, such as on a shared file system or extracted archive, fish will run arbitrary commands under the attacker's control. This problem has been fixed in fish 3.4.0. Note that running git in these directories, including using the git tab completion, remains a potential trigger for this issue. As a workaround, remove the `fish_git_prompt` function from the prompt.",
        "URL": "https://github.com/fish-shell/fish-shell/pull/8589",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "37625053d424c1ab88de2b0c50c7fe71e1468e2c",
        "inducing_commit_hash_pyszz": [
            "f75cf5c16bf8fa43ba99180a8e4ba008d5ffc685"
        ],
        "inducing_commit_hash_pd": [
            "05ef157757c37db603b71bc9f755af31790d549a",
            "4186d840dbbb7e731944c571f7cb68a1bc421efd",
            "f75cf5c16bf8fa43ba99180a8e4ba008d5ffc685"
        ],
        "matched": [
            "f75cf5c16bf8fa43ba99180a8e4ba008d5ffc685"
        ]
    },
    {
        "repo_name": "flarum/sticky",
        "CVE_ID": "CVE-2021-21283",
        "Problem_Type": "CWE-79",
        "Description": "Flarum is an open source discussion platform for websites. The \"Flarum Sticky\" extension versions 0.1.0-beta.14 and 0.1.0-beta.15 has a cross-site scripting vulnerability. A change in release beta 14 of the Sticky extension caused the plain text content of the first post of a pinned discussion to be injected as HTML on the discussion list. The issue was discovered following an internal audit. Any HTML would be injected through the m.trust() helper. This resulted in an HTML injection where <script> tags would not be executed. However it was possible to run javascript from other HTML attributes, enabling a cross-site scripting (XSS) attack to be performed. Since the exploit only happens with the first post of a pinned discussion, an attacker would need the ability to pin their own discussion, or be able to edit a discussion that was previously pinned. On forums where all pinned posts are authored by your staff, you can be relatively certain the vulnerability has not been exploited. Forums where some user-created discussions were pinned can look at the first post edit date to find whether the vulnerability might have been exploited. Because Flarum doesn't store the post content history, you cannot be certain if a malicious edit was reverted. The fix will be available in version v0.1.0-beta.16 with Flarum beta 16. The fix has already been back-ported to Flarum beta 15 as version v0.1.0-beta.15.1 of the Sticky extension. Forum administrators can disable the Sticky extension until they are able to apply the update. The vulnerability cannot be exploited while the extension is disabled.",
        "URL": "https://github.com/flarum/sticky/pull/24",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7ebd30462bd405c4c0570b93a6d48710e6c3db19",
        "inducing_commit_hash_pyszz": [
            "6d626d3539f7552c78e0f95e9a105bdffda9ed09"
        ],
        "inducing_commit_hash_pd": [
            "6d626d3539f7552c78e0f95e9a105bdffda9ed09"
        ],
        "matched": [
            "6d626d3539f7552c78e0f95e9a105bdffda9ed09"
        ]
    },
    {
        "repo_name": "Flask-Middleware/flask-security",
        "CVE_ID": "CVE-2021-21241",
        "Problem_Type": "CWE-352",
        "Description": "The Python \"Flask-Security-Too\" package is used for adding security features to your Flask application. It is an is a independently maintained version of Flask-Security based on the 3.0.0 version of Flask-Security. In Flask-Security-Too from version 3.3.0 and before version 3.4.5, the /login and /change endpoints can return the authenticated user's authentication token in response to a GET request. Since GET requests aren't protected with a CSRF token, this could lead to a malicious 3rd party site acquiring the authentication token. Version 3.4.5 and version 4.0.0 are patched. As a workaround, if you aren't using authentication tokens - you can set the SECURITY_TOKEN_MAX_AGE to \"0\" (seconds) which should make the token unusable.",
        "URL": "https://github.com/Flask-Middleware/flask-security/pull/422",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c05afe837e83f20f59c0fb409ce1240341d1ec41",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flatpak/flatpak",
        "CVE_ID": "CVE-2021-21381",
        "Problem_Type": "CWE-74",
        "Description": "Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. In Flatpack since version 0.9.4 and before version 1.10.2 has a vulnerability in the \"file forwarding\" feature which can be used by an attacker to gain access to files that would not ordinarily be allowed by the app's permissions. By putting the special tokens `@@` and/or `@@u` in the Exec field of a Flatpak app's .desktop file, a malicious app publisher can trick flatpak into behaving as though the user had chosen to open a target file with their Flatpak app, which automatically makes that file available to the Flatpak app. This is fixed in version 1.10.2. A minimal solution is the first commit \"`Disallow @@ and @@U usage in desktop files`\". The follow-up commits \"`dir: Reserve the whole @@ prefix`\" and \"`dir: Refuse to export .desktop files with suspicious uses of @@ tokens`\" are recommended, but not strictly required. As a workaround, avoid installing Flatpak apps from untrusted sources, or check the contents of the exported `.desktop` files in `exports/share/applications/*.desktop` (typically `~/.local/share/flatpak/exports/share/applications/*.desktop` and `/var/lib/flatpak/exports/share/applications/*.desktop`) to make sure that literal filenames do not follow `@@` or `@@u`.",
        "URL": "https://github.com/flatpak/flatpak/pull/4156",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "46b3ede5241561c7d588951048c687c5075a3eac",
        "inducing_commit_hash_pyszz": [
            "652a28ffab67cb6cd7d12dc3a93979bcd3731c7f"
        ],
        "inducing_commit_hash_pd": [
            "652a28ffab67cb6cd7d12dc3a93979bcd3731c7f"
        ],
        "matched": [
            "652a28ffab67cb6cd7d12dc3a93979bcd3731c7f"
        ]
    },
    {
        "repo_name": "flipped-aurora/gin-vue-admin",
        "CVE_ID": "CVE-2021-44219",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gin-Vue-Admin before 2.4.6 mishandles a SQL database.",
        "URL": "https://github.com/flipped-aurora/gin-vue-admin/pull/811",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "99f3d4367a7d00148e1de7a16c153ddd4d39c3df",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "fluent/fluent-bit",
        "CVE_ID": "CVE-2021-46879",
        "Problem_Type": "CWE-787",
        "Description": "An issue was discovered in Treasure Data Fluent Bit 1.7.1, a wrong variable is used to get the msgpack data resulting in a heap overflow in flb_msgpack_gelf_value_ext. An attacker can craft a malicious file and tick the victim to open the file with the software, triggering a heap overflow and execute arbitrary code on the target system.",
        "URL": "https://github.com/fluent/fluent-bit/pull/3100",
        "Tag": "['Patch']",
        "fix_commit_hash": "9a3bd47ec6121492e2c5e37ca14f5827bb7d6db2",
        "inducing_commit_hash_pyszz": [
            "d195016836d800439ee74d76e00a945433545142"
        ],
        "inducing_commit_hash_pd": [
            "d195016836d800439ee74d76e00a945433545142"
        ],
        "matched": [
            "d195016836d800439ee74d76e00a945433545142"
        ]
    },
    {
        "repo_name": "FluidSynth/fluidsynth",
        "CVE_ID": "CVE-2021-21417",
        "Problem_Type": "CWE-416",
        "Description": "fluidsynth is a software synthesizer based on the SoundFont 2 specifications. A use after free violation was discovered in fluidsynth, that can be triggered when loading an invalid SoundFont file.",
        "URL": "https://github.com/FluidSynth/fluidsynth/pull/810",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "005719628aef0bd48dc7b2f860c7e4ca16b81044",
        "inducing_commit_hash_pyszz": [
            "b6bdb6b059e0ae4274fe36105976e0a812435e6a"
        ],
        "inducing_commit_hash_pd": [
            "879a14163a0629b53056b79947f4e70e617c58d0",
            "b6bdb6b059e0ae4274fe36105976e0a812435e6a"
        ],
        "matched": [
            "b6bdb6b059e0ae4274fe36105976e0a812435e6a"
        ]
    },
    {
        "repo_name": "flynn/noise",
        "CVE_ID": "CVE-2021-4239",
        "Problem_Type": "CWE-311",
        "Description": "The Noise protocol implementation suffers from weakened cryptographic security after encrypting 2^64 messages, and a potential denial of service attack. After 2^64 (~18.4 quintillion) messages are encrypted with the Encrypt function, the nonce counter will wrap around, causing multiple messages to be encrypted with the same key and nonce. In a separate issue, the Decrypt function increments the nonce state even when it fails to decrypt a message. If an attacker can provide an invalid input to the Decrypt function, this will cause the nonce state to desynchronize between the peers, resulting in a failure to encrypt all subsequent messages.",
        "URL": "https://github.com/flynn/noise/pull/44",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2499bf1bad239a8316c32932a993642350b3afdb",
        "inducing_commit_hash_pyszz": [
            "14af5e1fc86f8293637b4d486b7d94bb2291ad4a"
        ],
        "inducing_commit_hash_pd": [
            "14af5e1fc86f8293637b4d486b7d94bb2291ad4a"
        ],
        "matched": [
            "14af5e1fc86f8293637b4d486b7d94bb2291ad4a"
        ]
    },
    {
        "repo_name": "flyteorg/flyteadmin",
        "CVE_ID": "CVE-2022-39273",
        "Problem_Type": "CWE-798",
        "Description": "FlyteAdmin is the control plane for the data processing platform Flyte. Users who enable the default Flyte\u00c2\u2019s authorization server without changing the default clientid hashes will be exposed to the public internet. In an effort to make enabling authentication easier for Flyte administrators, the default configuration for Flyte Admin allows access for Flyte Propeller even after turning on authentication via a hardcoded hashed password. This password is also set on the default Flyte Propeller configmap in the various Flyte Helm charts. Users who enable auth but do not override this setting in Flyte Admin\u00c2\u2019s configuration may unbeknownst to them be allowing public traffic in by way of this default password with attackers effectively impersonating propeller. This only applies to users who have not specified the ExternalAuthorizationServer setting. Usage of an external auth server automatically turns off this default configuration and are not susceptible to this vulnerability. This issue has been addressed in version 1.1.44. Users should manually set the staticClients in the selfAuthServer section of their configuration if they intend to rely on Admin\u00c2\u2019s internal auth server. Again, users who use an external auth server are automatically protected from this vulnerability.",
        "URL": "https://github.com/flyteorg/flyteadmin/pull/478",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "281172edf55fe6800959238fc128964ead6d9101",
        "inducing_commit_hash_pyszz": [
            "2126d786f4649b67317558dee0ec6df7a932f596"
        ],
        "inducing_commit_hash_pd": [
            "d1c61c34f62d8ee51964f47877802d070dfa9e98",
            "611a85f0db7325457c714c0dcd689bf2c5d818e5"
        ],
        "matched": [
            "2126d786f4649b67317558dee0ec6df7a932f596"
        ]
    },
    {
        "repo_name": "flyteorg/flyteconsole",
        "CVE_ID": "CVE-2022-24856",
        "Problem_Type": "CWE-918",
        "Description": "FlyteConsole is the web user interface for the Flyte platform. FlyteConsole prior to version 0.52.0 is vulnerable to server-side request forgery (SSRF) when FlyteConsole is open to the general internet. An attacker can exploit any user of a vulnerable instance to access the internal metadata server or other unauthenticated URLs. Passing of headers to an unauthorized actor may occur. The patch for this issue deletes the entire `cors_proxy`, as this is not required for console anymore. A patch is available in FlyteConsole version 0.52.0. Disable FlyteConsole availability on the internet as a workaround.",
        "URL": "https://github.com/flyteorg/flyteconsole/pull/389",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "05b88ed2d2ecdb5d8a8404efea25414e57189709",
        "inducing_commit_hash_pyszz": [
            "05592e312fc12309ac70236839a7b86ca072a1b3"
        ],
        "inducing_commit_hash_pd": [
            "5f65ff8c4f9d4337985c667ecccc0206514347c0",
            "05592e312fc12309ac70236839a7b86ca072a1b3",
            "4b9f113b9ec03cc1e311c5da2dde825ea1998b6e",
            "5732fc1107806626ff4db21df27e7f63a8d00596",
            "1fc0a53e8308e1fa2f43ddb0a3d5ab2c1d4e2f85"
        ],
        "matched": [
            "05592e312fc12309ac70236839a7b86ca072a1b3"
        ]
    },
    {
        "repo_name": "fobybus/social-media-skeleton",
        "CVE_ID": "CVE-2023-39518",
        "Problem_Type": "CWE-79",
        "Description": "social-media-skeleton is an uncompleted social media project implemented using PHP, MySQL, CSS, JavaScript, and HTML. Versions 1.0.0 until 1.0.3 have a stored cross-site scripting vulnerability. The problem is patched in v1.0.3.\n",
        "URL": "https://github.com/fobybus/social-media-skeleton/pull/4",
        "Tag": "['Patch']",
        "fix_commit_hash": "6765d1109016e1f1d707ef47917927c7704e6428",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "a7c29927a4acd966698bbc683a1e4109e31890b9"
        ],
        "matched": [
            "a7c29927a4acd966698bbc683a1e4109e31890b9"
        ]
    },
    {
        "repo_name": "follow-redirects/follow-redirects",
        "CVE_ID": "CVE-2023-26159",
        "Problem_Type": "CWE-601",
        "Description": "Versions of the package follow-redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches.",
        "URL": "https://github.com/follow-redirects/follow-redirects/pull/236",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "7a6567e16dfa9ad18a70bfe91784c28653fbf19d",
        "inducing_commit_hash_pyszz": [
            "05629af696588b90d64e738bc2e809a97a5f92fc"
        ],
        "inducing_commit_hash_pd": [
            "37f4e7c5d0abb29021042d3a4ce3fd300d28180b",
            "449e895af819ff328329979b23ac644b026e467f",
            "fd19af60e4cb6522ccd6be62d3a6e52886847a3c",
            "1cba8e85fa73f563a439fe460cf028688e4358df",
            "fe6c46f454d0b020043fbedce249acc57279999c",
            "05629af696588b90d64e738bc2e809a97a5f92fc",
            "e30137cd37f5671290172634572b9507fa525c9c",
            "f98d981b03ca8a28aa5a903cf256ec6246fa507d",
            "31bd4590386cc662777616b1b9a205f010b94458"
        ],
        "matched": [
            "05629af696588b90d64e738bc2e809a97a5f92fc"
        ]
    },
    {
        "repo_name": "formers/former",
        "CVE_ID": "CVE-2019-15476",
        "Problem_Type": "CWE-79",
        "Description": "Former before 4.2.1 has XSS via a checkbox value.",
        "URL": "https://github.com/formers/former/pull/584",
        "Tag": "['Exploit', 'Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "81f0969426a4845108ca7c4a8b3cec6337bb56b4",
        "inducing_commit_hash_pyszz": [
            "4adb92c41a69421259f809750605e4da72d7bf9a"
        ],
        "inducing_commit_hash_pd": [
            "fa62bb2fabb5686fbb00cd63bf5598558051e6e4"
        ],
        "matched": [
            "4adb92c41a69421259f809750605e4da72d7bf9a"
        ]
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2020-27508",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In two-factor authentication, the system also sending 2fa secret key in response, which enables an intruder to breach the 2fa security.",
        "URL": "https://github.com/frappe/frappe/pull/11263",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "df7a57529541bf02d12c93fa90c7c9f1d1862a45",
        "inducing_commit_hash_pyszz": [
            "bc4d46a362497fbf4c021804502cbff7602cc81c"
        ],
        "inducing_commit_hash_pd": [
            "a8b526bfd14b66e26183b912b51ea40389588cfd",
            "bc4d46a362497fbf4c021804502cbff7602cc81c"
        ],
        "matched": [
            "bc4d46a362497fbf4c021804502cbff7602cc81c"
        ]
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2020-35175",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Frappe Framework 12 and 13 does not properly validate the HTTP method for the frappe.client API.",
        "URL": "https://github.com/frappe/frappe/pull/11237",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7101807e669ba8d76eeadacfb04895b4587e4b42",
        "inducing_commit_hash_pyszz": [
            "856cbfa675c413e4572b9741ada3078374992484"
        ],
        "inducing_commit_hash_pd": [
            "34dbc4ea8e3b3c562ed3b5baff53e6665504b0ec",
            "024ddfcc5b295417eb92b330057b93f79f6c3b64",
            "856cbfa675c413e4572b9741ada3078374992484",
            "1e19f3ddf436c64d40cf753451b7c3a907a4003c",
            "512fc3a5c2830e6571b1cdcd28845c78c0781331"
        ],
        "matched": [
            "856cbfa675c413e4572b9741ada3078374992484"
        ]
    },
    {
        "repo_name": "frappe/frappe",
        "CVE_ID": "CVE-2022-3988",
        "Problem_Type": "CWE-79",
        "Description": "A vulnerability was found in Frappe. It has been rated as problematic. Affected by this issue is some unknown functionality of the file frappe/templates/includes/navbar/navbar_search.html of the component Search. The manipulation of the argument q leads to cross site scripting. The attack may be launched remotely. The name of the patch is bfab7191543961c6cb77fe267063877c31b616ce. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-213560.",
        "URL": "https://github.com/frappe/frappe/pull/18847",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "bfab7191543961c6cb77fe267063877c31b616ce",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "1e7229c45f877cc63f947e07b86008b6226ecad4"
        ],
        "matched": [
            "1e7229c45f877cc63f947e07b86008b6226ecad4"
        ]
    },
    {
        "repo_name": "free5gc/udm",
        "CVE_ID": "CVE-2023-46324",
        "Problem_Type": "CWE-347",
        "Description": "pkg/suci/suci.go in free5GC udm before 1.2.0, when Go before 1.19 is used, allows an Invalid Curve Attack because it may compute a shared secret via an uncompressed public key that has not been validated. An attacker can send arbitrary SUCIs to the UDM, which tries to decrypt them via both its private key and the attacker's public key.",
        "URL": "https://github.com/free5gc/udm/pull/20",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5e1479cc686f058992557669b13fd3761a1b6024",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f91c29b9506d406c1bfa39b15b64d9f184fbc84b"
        ],
        "matched": [
            "f91c29b9506d406c1bfa39b15b64d9f184fbc84b"
        ]
    },
    {
        "repo_name": "freedomofpress/dangerzone",
        "CVE_ID": "CVE-2023-39342",
        "Problem_Type": "CWE-150",
        "Description": "Dangerzone is software for converting potentially dangerous PDFs, office documents, or images to safe PDFs. The Dangerzone CLI (`dangerzone-cli` command) logs output from the container where the file sanitization takes place, to the user's terminal. Prior to version 0.4.2, if the container is compromised and can return attacker-controlled strings, then the attacker may be able to spoof messages in the user's terminal or change the window title. Besides logging output from containers, it also logs the names of the files it sanitizes. If these files contain ANSI escape sequences, then the same issue applies. Dangerzone is predominantly a GUI application, so this issue should leave most of our users unaffected. Nevertheless, we always suggest updating to the newest version. This issue is fixed in Dangerzone 0.4.2.",
        "URL": "https://github.com/freedomofpress/dangerzone/pull/491",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6c374d8a7e994f796bfcbbed71b15602a81a39b7",
        "inducing_commit_hash_pyszz": [
            "ef41cab76e5649b6637c3d285eceb1dff3ff12a8"
        ],
        "inducing_commit_hash_pd": [
            "baeab9d7ebea0a70922276586a15bb8c649b8f93",
            "ef41cab76e5649b6637c3d285eceb1dff3ff12a8"
        ],
        "matched": [
            "ef41cab76e5649b6637c3d285eceb1dff3ff12a8"
        ]
    },
    {
        "repo_name": "FreeOpcUa/opcua-asyncio",
        "CVE_ID": "CVE-2023-26150",
        "Problem_Type": "CWE-287",
        "Description": "Versions of the package asyncua before 0.9.96 are vulnerable to Improper Authentication such that it is possible to access Address Space without encryption and authentication.\n\n**Note:**\n\nThis issue is a result of missing checks for services that require an active session.",
        "URL": "https://github.com/FreeOpcUa/opcua-asyncio/pull/1015",
        "Tag": "['Patch']",
        "fix_commit_hash": "2be7ce80df05de8d6c6ae1ebce6fa2bb7147844a",
        "inducing_commit_hash_pyszz": [
            "756616dafade3851dbc12e220632eda142033585"
        ],
        "inducing_commit_hash_pd": [
            "756616dafade3851dbc12e220632eda142033585"
        ],
        "matched": [
            "756616dafade3851dbc12e220632eda142033585"
        ]
    },
    {
        "repo_name": "FreeOpcUa/opcua-asyncio",
        "CVE_ID": "CVE-2023-26151",
        "Problem_Type": "CWE-835",
        "Description": "Versions of the package asyncua before 0.9.96 are vulnerable to Denial of Service (DoS) such that an attacker can send a malformed packet and as a result, the server will enter into an infinite loop and consume excessive memory.",
        "URL": "https://github.com/FreeOpcUa/opcua-asyncio/pull/1039",
        "Tag": "['Patch']",
        "fix_commit_hash": "f6603daa34a93a658f0e176cb0b9ee5a6643b262",
        "inducing_commit_hash_pyszz": [
            "cee4d4b8a248bac81fbfdaf55ccf991adda065aa"
        ],
        "inducing_commit_hash_pd": [
            "3a301ea75dc2bb076a7f90ba753f092eb015f0a6",
            "d1a275012803d9eab1c8ebcd687bf38fa26726d5",
            "d33e14834a678d5ddd5e9b5411c2d6472cec59ee",
            "59d6a136a220b2a61eca0fb904e52e8b5dc9f1ef",
            "0b1252a91010673260462bee84093cc1192e8889",
            "cee4d4b8a248bac81fbfdaf55ccf991adda065aa"
        ],
        "matched": [
            "cee4d4b8a248bac81fbfdaf55ccf991adda065aa"
        ]
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2018-1000852",
        "Problem_Type": "CWE-125",
        "Description": "FreeRDP FreeRDP 2.0.0-rc3 released version before commit 205c612820dac644d665b5bb1cdf437dc5ca01e3 contains a Other/Unknown vulnerability in channels/drdynvc/client/drdynvc_main.c, drdynvc_process_capability_request that can result in The RDP server can read the client's memory.. This attack appear to be exploitable via RDPClient must connect the rdp server with echo option. This vulnerability appears to have been fixed in after commit 205c612820dac644d665b5bb1cdf437dc5ca01e3.",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/4871/commits/baee520e3dd9be6511c45a14c5f5e77784de1471",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "baee520e3dd9be6511c45a14c5f5e77784de1471",
        "inducing_commit_hash_pyszz": [
            "a6a57e36193cf3690c2fd7d54ef4498733513de7"
        ],
        "inducing_commit_hash_pd": [
            "dc12641b233b6781d6f7b664711d3416bf7e36f6",
            "7f1d4222eb1a34496d3d39aac80543b0991d5ef9",
            "27a8e50e60b05ec51b36fde3222cdb1d6ba223b0",
            "a6a57e36193cf3690c2fd7d54ef4498733513de7",
            "f469e069dc8287f6fcfe0741961022e0cc50170f"
        ],
        "matched": [
            "a6a57e36193cf3690c2fd7d54ef4498733513de7"
        ]
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2020-11525",
        "Problem_Type": "CWE-125",
        "Description": "libfreerdp/cache/bitmap.c in FreeRDP versions > 1.0 through 2.0.0-rc4 has an Out of bounds read.",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/6019/commits/58dc36b3c883fd460199cedb6d30e58eba58298c",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "58dc36b3c883fd460199cedb6d30e58eba58298c",
        "inducing_commit_hash_pyszz": [
            "ac7d23b9a30b626c1b9c18cfe040063b3afffb34"
        ],
        "inducing_commit_hash_pd": [
            "edb218df905ca742ed059729ec8633258e74c45d",
            "72ca88f49c1b7f6678a66c09fa5fe5506623ed35"
        ],
        "matched": [
            "ac7d23b9a30b626c1b9c18cfe040063b3afffb34"
        ]
    },
    {
        "repo_name": "FreeRDP/FreeRDP",
        "CVE_ID": "CVE-2022-24882",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "FreeRDP is a free implementation of the Remote Desktop Protocol (RDP). In versions prior to 2.7.0, NT LAN Manager (NTLM) authentication does not properly abort when someone provides and empty password value. This issue affects FreeRDP based RDP Server implementations. RDP clients are not affected. The vulnerability is patched in FreeRDP 2.7.0. There are currently no known workarounds.",
        "URL": "https://github.com/FreeRDP/FreeRDP/pull/7750",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5249f61b7235becd602fd68ef6a2dc8efd21a6f7",
        "inducing_commit_hash_pyszz": [
            "f1d9faa7fc30ae42f722047550c489690ff87049"
        ],
        "inducing_commit_hash_pd": [
            "2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6",
            "f1d9faa7fc30ae42f722047550c489690ff87049",
            "19694b01106e2a1e0072e9f1b86306d9345cfc6b"
        ],
        "matched": [
            "f1d9faa7fc30ae42f722047550c489690ff87049"
        ]
    },
    {
        "repo_name": "FreshRSS/FreshRSS",
        "CVE_ID": "CVE-2022-23497",
        "Problem_Type": "CWE-200",
        "Description": "FreshRSS is a free, self-hostable RSS aggregator. User configuration files can be accessed by a remote user. In addition to user preferences, such configurations contain hashed passwords (brypt with cost 9, salted) of FreshRSS Web interface. If the API is used, the configuration might contain a hashed password (brypt with cost 9, salted) of the GReader API, and a hashed password (MD5 salted) of the Fever API. Users should update to version 1.20.2 or edge. Users unable to upgrade can apply the patch manually or delete the file `./FreshRSS/p/ext.php`.",
        "URL": "https://github.com/FreshRSS/FreshRSS/pull/4928",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ed578f224c4ab80ae6689c7fca3f9f7b12c13428",
        "inducing_commit_hash_pyszz": [
            "bed710b260e0032b65eda92d3c395c4f1c71308a"
        ],
        "inducing_commit_hash_pd": [
            "bed710b260e0032b65eda92d3c395c4f1c71308a"
        ],
        "matched": [
            "bed710b260e0032b65eda92d3c395c4f1c71308a"
        ]
    },
    {
        "repo_name": "friendica/friendica",
        "CVE_ID": "CVE-2021-30141",
        "Problem_Type": "CWE-401",
        "Description": "Module/Settings/UserExport.php in Friendica through 2021.01 allows settings/userexport to be used by anonymous users, as demonstrated by an attempted access to an array offset on a value of type null, and excessive memory consumption. NOTE: the vendor states \"the feature still requires a valid authentication cookie even if the route is accessible to non-logged users.",
        "URL": "https://github.com/friendica/friendica/pull/10113/commits/acbcc56754121ba080eac5b6fdf69e64ed7fe453",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "acbcc56754121ba080eac5b6fdf69e64ed7fe453",
        "inducing_commit_hash_pyszz": [
            "8f27715d8b864fb31bf96ba481f1a10c7d70659c"
        ],
        "inducing_commit_hash_pd": [
            "9b03e2a5644f65f8ab43d0832eb7f1efbe9db999",
            "8f27715d8b864fb31bf96ba481f1a10c7d70659c",
            "845ab4b76420845dc9f625b8cd5f79a28e0c5ce4",
            "e8bf74914b80884ccaf8d137366dea5d71215640",
            "b892db0cf3d12518b306940a37b139a2a4c3e14c",
            "2ed61194d5cbebdac3d66f1e385a1f928213d632",
            "46172b641df8c1b1c3e5608e4dff6c3f1db6e6ef",
            "955a84a2667e970e66f17aa7557f92cd881a17bd",
            "d3122c396ea2c90da43da53542acfe5575f1fc09",
            "1de3f186d79f3703850524c1d58c237be3eb25f3",
            "048b693fbfa6dcaf29e7dac48f9fd99902430a09"
        ],
        "matched": [
            "8f27715d8b864fb31bf96ba481f1a10c7d70659c"
        ]
    },
    {
        "repo_name": "FriendsOfFlarum/upload",
        "CVE_ID": "CVE-2022-30999",
        "Problem_Type": "CWE-79",
        "Description": "FriendsofFlarum (FoF) Upload is an extension that handles file uploads intelligently for your forum. If FoF Upload prior to version 1.2.3 is configured to allow the uploading of SVG files ('image/svg+xml'), navigating directly to an SVG file URI could execute arbitrary Javascript code decided by an attacker. This Javascript code could include the execution of HTTP web requests to Flarum, or any other web service. This could allow data to be leaked by an authenticated Flarum user, or, possibly, for data to be modified maliciously. This issue has been patched with v1.2.3, which now sanitizes uploaded SVG files. As a workaround, remove the ability for users to upload SVG files through FoF Upload.",
        "URL": "https://github.com/FriendsOfFlarum/upload/pull/318",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d1f0e4bae11ce12f4d1f6482b380e48f345a8dd3",
        "inducing_commit_hash_pyszz": [
            "c8a4a4399171019b5b5c21ed0bfc1206c785904f"
        ],
        "inducing_commit_hash_pd": [
            "430a12694bb75ffa475f828a072ebc72287cd5b4",
            "9bcc431dc129f4b0721ff0d081d1c38a9f2617d9",
            "c8a4a4399171019b5b5c21ed0bfc1206c785904f"
        ],
        "matched": [
            "c8a4a4399171019b5b5c21ed0bfc1206c785904f"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-46752",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. It mishandles malformed MP_REACH_NLRI data, leading to a crash.",
        "URL": "https://github.com/FRRouting/frr/pull/14645/commits/b08afc81c60607a4f736f418f2e3eb06087f1a35",
        "Tag": "['Patch']",
        "fix_commit_hash": "b08afc81c60607a4f736f418f2e3eb06087f1a35",
        "inducing_commit_hash_pyszz": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "inducing_commit_hash_pd": [
            "9b9df9892d3cea25e53cd8903b3c41fb318d2f04",
            "996c93142d3abfab0f6d6c800474e22a8cfbdbc5",
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "matched": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-46753",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur for a crafted BGP UPDATE message without mandatory attributes, e.g., one with only an unknown transit attribute.",
        "URL": "https://github.com/FRRouting/frr/pull/14645/commits/d8482bf011cb2b173e85b65b4bf3d5061250cdb9",
        "Tag": "['Patch']",
        "fix_commit_hash": "d8482bf011cb2b173e85b65b4bf3d5061250cdb9",
        "inducing_commit_hash_pyszz": [
            "11dbcdd35ccf9b9978a61f6f501ab9062c9e5687"
        ],
        "inducing_commit_hash_pd": [
            "67495ddb2e5b1ed267966dcae938c4a30081a75d",
            "11dbcdd35ccf9b9978a61f6f501ab9062c9e5687",
            "d62a17aedeb0eebdba98238874bb13d62c48dbf9",
            "718e3744195351130f4ce7dbe0613f4b3e23df93"
        ],
        "matched": [
            "11dbcdd35ccf9b9978a61f6f501ab9062c9e5687"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-47234",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when processing a crafted BGP UPDATE message with a MP_UNREACH_NLRI attribute and additional NLRI data (that lacks mandatory path attributes).",
        "URL": "https://github.com/FRRouting/frr/pull/14716/commits/c37119df45bbf4ef713bc10475af2ee06e12f3bf",
        "Tag": "['Patch']",
        "fix_commit_hash": "c37119df45bbf4ef713bc10475af2ee06e12f3bf",
        "inducing_commit_hash_pyszz": [
            "28ccc24d38df1d51ed8a563507e5d6f6171fdd38"
        ],
        "inducing_commit_hash_pd": [
            "67495ddb2e5b1ed267966dcae938c4a30081a75d",
            "404c82d569a3150eeabce1c6480afdcc58ba97f1",
            "28ccc24d38df1d51ed8a563507e5d6f6171fdd38"
        ],
        "matched": [
            "28ccc24d38df1d51ed8a563507e5d6f6171fdd38"
        ]
    },
    {
        "repo_name": "FRRouting/frr",
        "CVE_ID": "CVE-2023-47235",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when a malformed BGP UPDATE message with an EOR is processed, because the presence of EOR does not lead to a treat-as-withdraw outcome.",
        "URL": "https://github.com/FRRouting/frr/pull/14716/commits/6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
        "Tag": "['Patch']",
        "fix_commit_hash": "6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
        "inducing_commit_hash_pyszz": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "inducing_commit_hash_pd": [
            "67495ddb2e5b1ed267966dcae938c4a30081a75d",
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ],
        "matched": [
            "b6a171c7c010c3a5809ae620ff823ef3a439efb0"
        ]
    },
    {
        "repo_name": "funzoneq/freshdns",
        "CVE_ID": "CVE-2018-1000847",
        "Problem_Type": "CWE-79",
        "Description": "FreshDNS version 1.0.3 and prior contains a Cross Site Scripting (XSS) vulnerability in Account data form; Zone editor that can result in Execution of attacker's JavaScript code in victim's session. This attack appear to be exploitable via The attacker stores a specially crafted string as their Full Name in their account details. The victim (e.g. the administrator of the FreshDNS instance) opens the User List in the admin interface.. This vulnerability appears to have been fixed in 1.0.5 and later.",
        "URL": "https://github.com/funzoneq/freshdns/pull/6/commits/48b5ca812a89689fd2f32248875cedcba8c9014f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "48b5ca812a89689fd2f32248875cedcba8c9014f",
        "inducing_commit_hash_pyszz": [
            "f284b860d89bf980d054e241a393bd76868887fd"
        ],
        "inducing_commit_hash_pd": [
            "b973677fcab5b71ac08a0a29de53172264a9fcd8",
            "2f2d139dd74848ffbcda3704057dc7250237ec2c",
            "f284b860d89bf980d054e241a393bd76868887fd"
        ],
        "matched": [
            "f284b860d89bf980d054e241a393bd76868887fd"
        ]
    },
    {
        "repo_name": "fuzzymannerz/swmp",
        "CVE_ID": "CVE-2017-20185",
        "Problem_Type": "CWE-79",
        "Description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Fuzzy SWMP. It has been rated as problematic. This issue affects some unknown processing of the file swmp.php of the component GET Parameter Handler. The manipulation of the argument theme leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available. The identifier of the patch is 792bcab637cb8c3bd251d8fc8771512c5329a93e. It is recommended to apply a patch to fix this issue. The identifier VDB-230669 was assigned to this vulnerability. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
        "URL": "https://github.com/fuzzymannerz/swmp/pull/12",
        "Tag": "['Patch']",
        "fix_commit_hash": "792bcab637cb8c3bd251d8fc8771512c5329a93e",
        "inducing_commit_hash_pyszz": [
            "7c23067ab2bf0b4313ebf3f8cde952bc32abef9d"
        ],
        "inducing_commit_hash_pd": [
            "7c23067ab2bf0b4313ebf3f8cde952bc32abef9d"
        ],
        "matched": [
            "7c23067ab2bf0b4313ebf3f8cde952bc32abef9d"
        ]
    },
    {
        "repo_name": "gatsbyjs/gatsby",
        "CVE_ID": "CVE-2022-25863",
        "Problem_Type": "CWE-502",
        "Description": "The package gatsby-plugin-mdx before 2.14.1, from 3.0.0 and before 3.15.2 are vulnerable to Deserialization of Untrusted Data when passing input through to the gray-matter package, due to its default configurations that are missing input sanitization. Exploiting this vulnerability is possible when passing input in both webpack (MDX files in src/pages or MDX file imported as a component in frontend / React code) and data mode (querying MDX nodes via GraphQL). Workaround: If an older version of gatsby-plugin-mdx must be used, input passed into the plugin should be sanitized ahead of processing.",
        "URL": "https://github.com/gatsbyjs/gatsby/pull/35830",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3690fbb70cc4470f6f17595f59d83146a443ffb",
        "inducing_commit_hash_pyszz": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "inducing_commit_hash_pd": [
            "43f29d94f639eb7f64cc4e175fd5f04aff1d47ca",
            "5d39594c1d9b3562b318b5d299905c0078d74557",
            "5636389e8fa626c644e90abc14589e9961d98c68",
            "e6c8657d202fccce1c96b4f342f6c41168b49a48",
            "3c4069ffd724a350f11dcbbd1ee164e875c3f17e",
            "41d71e741b01e174796f792206465cbe08192031",
            "0a6c6eb40409ac92d30917e00f26a0bc4c9ca9e5",
            "7e431fd0c5f15f85e8b8aedff3b5b17d971c9c6e",
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "matched": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ]
    },
    {
        "repo_name": "gatsbyjs/gatsby",
        "CVE_ID": "CVE-2022-25863",
        "Problem_Type": "CWE-502",
        "Description": "The package gatsby-plugin-mdx before 2.14.1, from 3.0.0 and before 3.15.2 are vulnerable to Deserialization of Untrusted Data when passing input through to the gray-matter package, due to its default configurations that are missing input sanitization. Exploiting this vulnerability is possible when passing input in both webpack (MDX files in src/pages or MDX file imported as a component in frontend / React code) and data mode (querying MDX nodes via GraphQL). Workaround: If an older version of gatsby-plugin-mdx must be used, input passed into the plugin should be sanitized ahead of processing.",
        "URL": "https://github.com/gatsbyjs/gatsby/pull/35830/commits/f214eb0694c61e348b2751cecd1aace2046bc46e",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "b3690fbb70cc4470f6f17595f59d83146a443ffb",
        "inducing_commit_hash_pyszz": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "inducing_commit_hash_pd": [
            "43f29d94f639eb7f64cc4e175fd5f04aff1d47ca",
            "5d39594c1d9b3562b318b5d299905c0078d74557",
            "5636389e8fa626c644e90abc14589e9961d98c68",
            "e6c8657d202fccce1c96b4f342f6c41168b49a48",
            "3c4069ffd724a350f11dcbbd1ee164e875c3f17e",
            "41d71e741b01e174796f792206465cbe08192031",
            "0a6c6eb40409ac92d30917e00f26a0bc4c9ca9e5",
            "7e431fd0c5f15f85e8b8aedff3b5b17d971c9c6e",
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ],
        "matched": [
            "c8db78fad43294413b950c49205adcf3dbb6dd1e"
        ]
    },
    {
        "repo_name": "GENIVI/dlt-daemon",
        "CVE_ID": "CVE-2020-29394",
        "Problem_Type": "CWE-787",
        "Description": "A buffer overflow in the dlt_filter_load function in dlt_common.c from dlt-daemon through 2.18.5 (GENIVI Diagnostic Log and Trace) allows arbitrary code execution because fscanf is misused (no limit on the number of characters to be read in the format argument).",
        "URL": "https://github.com/GENIVI/dlt-daemon/pull/275",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "ff4f44c159df6f44b48bd38c9d2f104eb360be11",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "760fb8a4daba3e403376099ce38aca8f88d695d3"
        ],
        "matched": [
            "760fb8a4daba3e403376099ce38aca8f88d695d3"
        ]
    },
    {
        "repo_name": "GENIVI/dlt-daemon",
        "CVE_ID": "CVE-2020-29394",
        "Problem_Type": "CWE-787",
        "Description": "A buffer overflow in the dlt_filter_load function in dlt_common.c from dlt-daemon through 2.18.5 (GENIVI Diagnostic Log and Trace) allows arbitrary code execution because fscanf is misused (no limit on the number of characters to be read in the format argument).",
        "URL": "https://github.com/GENIVI/dlt-daemon/pull/288",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "43fda34be9c4c8311d9c7d6bdc2c23b04f155264",
        "inducing_commit_hash_pyszz": [
            "ff4f44c159df6f44b48bd38c9d2f104eb360be11"
        ],
        "inducing_commit_hash_pd": [
            "ff4f44c159df6f44b48bd38c9d2f104eb360be11"
        ],
        "matched": [
            "ff4f44c159df6f44b48bd38c9d2f104eb360be11"
        ]
    },
    {
        "repo_name": "geopython/OWSLib",
        "CVE_ID": "CVE-2023-27476",
        "Problem_Type": "CWE-611",
        "Description": "OWSLib is a Python package for client programming with Open Geospatial Consortium (OGC) web service interface standards, and their related content models. OWSLib's XML parser (which supports both `lxml` and `xml.etree`) does not disable entity resolution, and could lead to arbitrary file reads from an attacker-controlled XML payload. This affects all XML parsing in the codebase. This issue has been addressed in version 0.28.1. All users are advised to upgrade. The only known workaround is to patch the library manually. See `GHSA-8h9c-r582-mggc` for details.",
        "URL": "https://github.com/geopython/OWSLib/pull/863/commits/b92687702be9576c0681bb11cad21eb631b9122f",
        "Tag": "['Patch']",
        "fix_commit_hash": "d91267303a695d69e73fa71efa100a035852a063",
        "inducing_commit_hash_pyszz": [
            "953a1b5579f9cba066e7deb1cca5bce799e07225"
        ],
        "inducing_commit_hash_pd": [
            "53eea3d46eca21843c03d825029efd2bdb1a0492",
            "2ef838fa8140c708a038e032b195c6da033c1809",
            "a425f373a057978061f9b29016557bf87004bd91",
            "0b47dc8370f49dad701e6beee64a17ccb34cb33a",
            "52967c77142b106ce18143afefdb9fae78b50f3f",
            "d03f7cc971f44ff8b49df57c45140e79b4d81d8a",
            "ba7ad3159dcc65c631f7349e60961603e7a52129",
            "39cb2265b94aa521c1a9a76819bf6d7f3d27d96c",
            "4af976882335b047a09d45ddefa52956f979fc56",
            "ec52c444e49e50669a513a928c4c8c2e2363c173",
            "80784a10d357237acbd9a0149cdefff1ec6da1a0",
            "6b9aedb795d876bc0906ca7223d99b4da1d779de",
            "c7a59709074295ff8b90180915e5006d3e01bcb6",
            "6f40078e0624079e266e00181b09e76c7956e733",
            "953a1b5579f9cba066e7deb1cca5bce799e07225",
            "d6ec40cb7a7c021640c4f73f38a983e9a0eaffb5",
            "f805cd385f57305efb030716948a057101981f52",
            "66200494ab5921ab714ed267fc786aad5a26bd1c",
            "6140d1b13e3f3e142c7881f12fc4780691132426",
            "99bdc30dba9e0748ef3b997230fa2e15a24ce30e",
            "c234facbfb172441501fddaddcf01f1e74ee0e92"
        ],
        "matched": [
            "953a1b5579f9cba066e7deb1cca5bce799e07225"
        ]
    },
    {
        "repo_name": "getsentry/sentry-javascript",
        "CVE_ID": "CVE-2023-46729",
        "Problem_Type": "CWE-918",
        "Description": "sentry-javascript provides Sentry SDKs for JavaScript. An unsanitized input of Next.js SDK tunnel endpoint allows sending HTTP requests to arbitrary URLs and reflecting the response back to the user. This issue only affects users who have Next.js SDK tunneling feature enabled. The problem has been fixed in version 7.77.0.",
        "URL": "https://github.com/getsentry/sentry-javascript/pull/9415",
        "Tag": "['Patch']",
        "fix_commit_hash": "ddbda3c02c35aba8c5235e0cf07fc5bf656f81be",
        "inducing_commit_hash_pyszz": [
            "6e6e241fa007d679cd0b1c71dec498b32ee11b8e"
        ],
        "inducing_commit_hash_pd": [
            "6e6e241fa007d679cd0b1c71dec498b32ee11b8e"
        ],
        "matched": [
            "6e6e241fa007d679cd0b1c71dec498b32ee11b8e"
        ]
    },
    {
        "repo_name": "getsentry/sentry-javascript",
        "CVE_ID": "CVE-2023-50249",
        "Problem_Type": "CWE-1333",
        "Description": "Sentry-Javascript is official Sentry SDKs for JavaScript. A ReDoS (Regular expression Denial of Service) vulnerability has been identified in Sentry's Astro SDK 7.78.0-7.86.0. Under certain conditions, this vulnerability allows an attacker to cause excessive computation times on the server, leading to denial of service (DoS). This vulnerability has been patched in sentry/astro version 7.87.0.",
        "URL": "https://github.com/getsentry/sentry-javascript/pull/9815",
        "Tag": "['Patch']",
        "fix_commit_hash": "fe24eb5eefa9d27b14b2b6f9ebd1debca1c208fb",
        "inducing_commit_hash_pyszz": [
            "bfc63cb9c1b81f8e410f6e40dbef01fc52462b81"
        ],
        "inducing_commit_hash_pd": [
            "bfc63cb9c1b81f8e410f6e40dbef01fc52462b81",
            "61bcf73ef28b21a7ac190a0ff57349b1fcf8014d",
            "9a92e6be8e5552934fea2ea4798a5ca57f9aad7b"
        ],
        "matched": [
            "bfc63cb9c1b81f8e410f6e40dbef01fc52462b81"
        ]
    },
    {
        "repo_name": "getsentry/sentry-python",
        "CVE_ID": "CVE-2023-28117",
        "Problem_Type": "CWE-201",
        "Description": "Sentry SDK is the official Python SDK for Sentry, real-time crash reporting software. When using the Django integration of versions prior to 1.14.0 of the Sentry SDK in a specific configuration it is possible to leak sensitive cookies values, including the session cookie to Sentry. These sensitive cookies could then be used by someone with access to your Sentry issues to impersonate or escalate their privileges within your application.\n\nIn order for these sensitive values to be leaked, the Sentry SDK configuration must have `sendDefaultPII` set to `True`; one must use a custom name for either `SESSION_COOKIE_NAME` or `CSRF_COOKIE_NAME` in one's Django settings; and one must not be configured in one's organization or project settings to use Sentry's data scrubbing features to account for the custom cookie names.\n\nAs of version 1.14.0, the Django integration of the `sentry-sdk` will detect the custom cookie names based on one's Django settings and will remove the values from the payload before sending the data to Sentry. As a workaround, use the SDK's filtering mechanism to remove the cookies from the payload that is sent to Sentry. For error events, this can be done with the `before_send` callback method and for performance related events (transactions) one can use the `before_send_transaction` callback method. Those who want to handle filtering of these values on the server-side can also use Sentry's advanced data scrubbing feature to account for the custom cookie names. Look for the `$http.cookies`, `$http.headers`, `$request.cookies`, or `$request.headers` fields to target with a scrubbing rule.",
        "URL": "https://github.com/getsentry/sentry-python/pull/1842",
        "Tag": "['Patch']",
        "fix_commit_hash": "d5152331f58d86efd3283eec928989810aa21975",
        "inducing_commit_hash_pyszz": [
            "bf48bd0681c68239ee651224b59b9d8aee78f514"
        ],
        "inducing_commit_hash_pd": [
            "c0ef3d0bbb5b3ed6094010570730679bf9e06fd9",
            "673ebcf0f66cc44add71695eb33a69bdaf53de1f"
        ],
        "matched": [
            "bf48bd0681c68239ee651224b59b9d8aee78f514"
        ]
    },
    {
        "repo_name": "getsentry/sentry",
        "CVE_ID": "CVE-2023-36826",
        "Problem_Type": "CWE-863",
        "Description": "Sentry is an error tracking and performance monitoring platform. Starting in version 8.21.0 and prior to version 23.5.2, an authenticated user can download a debug or artifact bundle from arbitrary organizations and projects with a known bundle ID. The user does not need to be a member of the organization or have permissions on the project. A patch was issued in version 23.5.2 to ensure authorization checks are properly scoped on requests to retrieve debug or artifact bundles. Authenticated users who do not have the necessary permissions on the particular project are no longer able to download them. Sentry SaaS users do not need to take any action. Self-Hosted Sentry users should upgrade to version 23.5.2 or higher.",
        "URL": "https://github.com/getsentry/sentry/pull/49680",
        "Tag": "['Patch']",
        "fix_commit_hash": "e932b15435bf36239431eaa3790a6bcfa47046a9",
        "inducing_commit_hash_pyszz": [
            "a72576a1ba20041c85fc2d78c9108ec96031691d"
        ],
        "inducing_commit_hash_pd": [
            "3a8bcaa178a789e96cf57c8138de87b50da05776",
            "df398779b92539bc0a6db9815296993e73c340a5",
            "c3ea951c72ac423bd280f34530fe5d23c36284df",
            "95767d455b8004ec4b4c5026d84b64b6348e6d37",
            "4cf7d3da37f07bb84dc416eb13d31990ca56750a",
            "acc18a951c97c284f0691a671c43c083cf9c2cea",
            "a72576a1ba20041c85fc2d78c9108ec96031691d"
        ],
        "matched": [
            "a72576a1ba20041c85fc2d78c9108ec96031691d"
        ]
    },
    {
        "repo_name": "getsentry/sentry",
        "CVE_ID": "CVE-2023-36829",
        "Problem_Type": "CWE-697",
        "Description": "Sentry is an error tracking and performance monitoring platform. Starting in version 23.6.0 and prior to version 23.6.2, the Sentry API incorrectly returns the `access-control-allow-credentials: true` HTTP header if the `Origin` request header ends with the `system.base-hostname` option of Sentry installation. This only affects installations that have `system.base-hostname` option explicitly set, as it is empty by default. Impact is limited since recent versions of major browsers have cross-site cookie blocking enabled by default. However, this flaw could allow other multi-step attacks. The patch has been released in Sentry 23.6.2.",
        "URL": "https://github.com/getsentry/sentry/pull/52276",
        "Tag": "['Patch']",
        "fix_commit_hash": "ee44c6be35e5e464bc40637580f39867898acd8b",
        "inducing_commit_hash_pyszz": [
            "2ce7978b9cc81ca4c75b9286aa749b7e8e356191"
        ],
        "inducing_commit_hash_pd": [
            "2ce7978b9cc81ca4c75b9286aa749b7e8e356191"
        ],
        "matched": [
            "2ce7978b9cc81ca4c75b9286aa749b7e8e356191"
        ]
    },
    {
        "repo_name": "getsentry/sentry",
        "CVE_ID": "CVE-2023-39349",
        "Problem_Type": "CWE-287",
        "Description": "Sentry is an error tracking and performance monitoring platform. Starting in version 22.1.0 and prior to version 23.7.2, an attacker with access to a token with few or no scopes can query `/api/0/api-tokens/` for a list of all tokens created by a user, including tokens with greater scopes, and use those tokens in other requests. There is no evidence that the issue was exploited on `sentry.io`. For self-hosted users, it is advised to rotate user auth tokens. A fix is available in version 23.7.2 of `sentry` and `self-hosted`. There are no known workarounds.",
        "URL": "https://github.com/getsentry/sentry/pull/53850",
        "Tag": "['Patch']",
        "fix_commit_hash": "fad12c1150d1135edf9666ea72ca11bc110c1083",
        "inducing_commit_hash_pyszz": [
            "8075ed44bc19efb1234e2a1066b52caff1d583a2"
        ],
        "inducing_commit_hash_pd": [
            "8382802ee7ef0d379a48f21e217a7c2f2693a11b",
            "8075ed44bc19efb1234e2a1066b52caff1d583a2"
        ],
        "matched": [
            "8075ed44bc19efb1234e2a1066b52caff1d583a2"
        ]
    },
    {
        "repo_name": "getsentry/symbolicator",
        "CVE_ID": "CVE-2023-51451",
        "Problem_Type": "CWE-918",
        "Description": "Symbolicator is a service used in Sentry. Starting in Symbolicator version 0.3.3 and prior to version 21.12.1, an attacker could make Symbolicator send GET HTTP requests to arbitrary URLs with internal IP addresses by using an invalid protocol. The responses of those requests could be exposed via Symbolicator's API. In affected Sentry instances, the data could be exposed through the Sentry API and user interface if the attacker has a registered account. The issue has been fixed in Symbolicator release 23.12.1, Sentry self-hosted release 23.12.1, and has already been mitigated on sentry.io on December 18, 2023. If updating is not possible, some other mitigations are available. One may disable JS processing by toggling the option `Allow JavaScript Source Fetching` in `Organization Settings > Security & Privacy` and/or disable all untrusted public repositories under `Project Settings > Debug Files`. Alternatively, if JavaScript and native symbolication are not required, disable Symbolicator completely in `config.yml`.",
        "URL": "https://github.com/getsentry/symbolicator/pull/1343",
        "Tag": "['Patch']",
        "fix_commit_hash": "170b51d4d2e7565671f8ee7cd76da74ada46a065",
        "inducing_commit_hash_pyszz": [
            "9db2fb9197dd200d62aacebd8efef4df7678865a"
        ],
        "inducing_commit_hash_pd": [
            "9db2fb9197dd200d62aacebd8efef4df7678865a"
        ],
        "matched": [
            "9db2fb9197dd200d62aacebd8efef4df7678865a"
        ]
    },
    {
        "repo_name": "getzola/zola",
        "CVE_ID": "CVE-2023-40274",
        "Problem_Type": "CWE-22",
        "Description": "An issue was discovered in zola 0.13.0 through 0.17.2. The custom implementation of a web server, available via the \"zola serve\" command, allows directory traversal. The handle_request function, used by the server to process HTTP requests, does not account for sequences of special path control characters (../) in the URL when serving a file, which allows one to escape the webroot of the server and read arbitrary files from the filesystem.",
        "URL": "https://github.com/getzola/zola/pull/2258",
        "Tag": "['Patch']",
        "fix_commit_hash": "13a4d9d9cfd9b0dd17516357002843044eafc5de",
        "inducing_commit_hash_pyszz": [
            "908f16855a3a5bce0b10d6f1ddcc52064dafe409"
        ],
        "inducing_commit_hash_pd": [
            "908f16855a3a5bce0b10d6f1ddcc52064dafe409"
        ],
        "matched": [
            "908f16855a3a5bce0b10d6f1ddcc52064dafe409"
        ]
    },
    {
        "repo_name": "ghantoos/lshell",
        "CVE_ID": "CVE-2016-6903",
        "Problem_Type": "CWE-264",
        "Description": "lshell 0.9.16 allows remote authenticated users to break out of a limited shell and execute arbitrary commands.",
        "URL": "https://github.com/ghantoos/lshell/pull/153/commits/a686f71732a3d0f16df52ef46ab8a49ee0083c68",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a686f71732a3d0f16df52ef46ab8a49ee0083c68",
        "inducing_commit_hash_pyszz": [
            "e72dfcd1f258193f9aaea3591ecbdaed207661a0"
        ],
        "inducing_commit_hash_pd": [
            "e72dfcd1f258193f9aaea3591ecbdaed207661a0",
            "5c255fa4a12413143c7132fd36dc9fa8522c646c",
            "26e9e744772392f2fb103112106811c02999294c",
            "5335bb7d95c4e1047feae51ff520cd2d9e5a1056"
        ],
        "matched": [
            "e72dfcd1f258193f9aaea3591ecbdaed207661a0"
        ]
    },
    {
        "repo_name": "GilaCMS/gila",
        "CVE_ID": "CVE-2019-17535",
        "Problem_Type": "CWE-79",
        "Description": "Gila CMS through 1.11.4 allows blog-list.php XSS, in both the gila-blog and gila-mag themes, via the search parameter, a related issue to CVE-2019-9647.",
        "URL": "https://github.com/GilaCMS/gila/pull/48",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "3c8c5bee1875c2532f5f78d2ee70d96a11d3bf23",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "5c2c9104e5b24c0c9123d17f4d4267fdd2d4f9c0"
        ],
        "matched": [
            "5c2c9104e5b24c0c9123d17f4d4267fdd2d4f9c0"
        ]
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2020-36567",
        "Problem_Type": "CWE-116",
        "Description": "Unsanitized input in the default logger in github.com/gin-gonic/gin before v1.6.0 allows remote attackers to inject arbitrary log lines.",
        "URL": "https://github.com/gin-gonic/gin/pull/2237",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "5b4ee29a192b30646f7a182820ccec1ac33ccc6b",
        "inducing_commit_hash_pyszz": "-",
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2023-26125",
        "Problem_Type": "CWE-20",
        "Description": "Versions of the package github.com/gin-gonic/gin before 1.9.0 are vulnerable to Improper Input Validation by allowing an attacker to use a specially crafted request via the X-Forwarded-Prefix header, potentially leading to cache poisoning.\n\n**Note:** Although this issue does not pose a significant threat on its own it can serve as an input vector for other more impactful vulnerabilities. However, successful exploitation may depend on the server configuration and whether the header is used in the application logic.",
        "URL": "https://github.com/gin-gonic/gin/pull/3503",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "4cee78f5382d5245c3652e6c15fee715eec505c3",
        "inducing_commit_hash_pyszz": [
            "81ac7d55a09e34013225db0aeac6e70c1ae68928"
        ],
        "inducing_commit_hash_pd": [
            "81ac7d55a09e34013225db0aeac6e70c1ae68928"
        ],
        "matched": [
            "81ac7d55a09e34013225db0aeac6e70c1ae68928"
        ]
    },
    {
        "repo_name": "gin-gonic/gin",
        "CVE_ID": "CVE-2023-29401",
        "Problem_Type": "CWE-494",
        "Description": "The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of \"setup.bat&quot;;x=.txt\" will be sent as a file named \"setup.bat\". If the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.",
        "URL": "https://github.com/gin-gonic/gin/pull/3556",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2d4bbec941551479b1fdf1e54ece03e6e82a7e72",
        "inducing_commit_hash_pyszz": [
            "8860527de602b561500d68cb345c8b07de22805e"
        ],
        "inducing_commit_hash_pd": [
            "8860527de602b561500d68cb345c8b07de22805e"
        ],
        "matched": [
            "8860527de602b561500d68cb345c8b07de22805e"
        ]
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2023-0957",
        "Problem_Type": "CWE-346",
        "Description": "An issue was discovered in Gitpod versions prior to release-2022.11.2.16. There is a Cross-Site WebSocket Hijacking (CSWSH) vulnerability that allows attackers to make WebSocket connections to the Gitpod JSONRPC server using a victim\u00c2\u2019s credentials, because the Origin header is not restricted. This can lead to the extraction of data from workspaces, to a full takeover of the workspace.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/16405",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "0a7ca4c08afc83dc6e801198f8f979a6a7c67d1f",
        "inducing_commit_hash_pyszz": [
            "1a9094756a798e81397b97b0af4ca5f931a1cfdd"
        ],
        "inducing_commit_hash_pd": [
            "a470cdbfc21ba16546dcc8f6396dea0589c26f14",
            "9d1a82446d789c2275016e7fc8f7fa56921d1bc4",
            "e82fe80af9ba1950fb501c9da9cb9eab3fe3bdc3",
            "1a9094756a798e81397b97b0af4ca5f931a1cfdd",
            "7f3e1e4c50bb8a489b0471009b2b859c0e7e25ba"
        ],
        "matched": [
            "1a9094756a798e81397b97b0af4ca5f931a1cfdd"
        ]
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2023-0957",
        "Problem_Type": "CWE-346",
        "Description": "An issue was discovered in Gitpod versions prior to release-2022.11.2.16. There is a Cross-Site WebSocket Hijacking (CSWSH) vulnerability that allows attackers to make WebSocket connections to the Gitpod JSONRPC server using a victim\u00c2\u2019s credentials, because the Origin header is not restricted. This can lead to the extraction of data from workspaces, to a full takeover of the workspace.",
        "URL": "https://github.com/gitpod-io/gitpod/pull/16378",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "2c4390ac2673f9db8e5baee99fec100c1be1ac3b",
        "inducing_commit_hash_pyszz": [
            "448ab8c7831b9a76a1732c4f7bc5dec96145344e"
        ],
        "inducing_commit_hash_pd": [
            "9d83f65665b8c52aa7b96fbfdabcd948ba3123e0",
            "45f13cf8e9214db664adc23a418e53d92364fbb7",
            "757a1594c6e5f14a268833b75411e449637c9d40",
            "448ab8c7831b9a76a1732c4f7bc5dec96145344e",
            "24f7b609bf79b247d72d1841282639726bcd5891",
            "f66598c82c64558fe08c8beef1e2ebc3d4b79160"
        ],
        "matched": [
            "448ab8c7831b9a76a1732c4f7bc5dec96145344e"
        ]
    },
    {
        "repo_name": "gitpod-io/gitpod",
        "CVE_ID": "CVE-2023-32766",
        "Problem_Type": "CWE-79",
        "Description": "Gitpod before 2022.11.3 allows XSS because redirection can occur for some protocols outside of the trusted set of three (vscode: vscode-insiders: jetbrains-gateway:).",
        "URL": "https://github.com/gitpod-io/gitpod/pull/17559",
        "Tag": "['Patch']",
        "fix_commit_hash": "24ff8a4840f199a45163ac2b35c041d651734f1f",
        "inducing_commit_hash_pyszz": [
            "81c98f8f54040e4c25b7cecf5b8623abc94d4a7c"
        ],
        "inducing_commit_hash_pd": [
            "674ad1c978eea2417b3710e4d2278110144ca5dc"
        ],
        "matched": [
            "81c98f8f54040e4c25b7cecf5b8623abc94d4a7c"
        ]
    },
    {
        "repo_name": "GladysAssistant/Gladys",
        "CVE_ID": "CVE-2023-47440",
        "Problem_Type": "CWE-22",
        "Description": "Gladys Assistant v4.27.0 and prior is vulnerable to Directory Traversal. The patch of CVE-2023-43256 was found to be incomplete, allowing authenticated attackers to extract sensitive files in the host machine.",
        "URL": "https://github.com/GladysAssistant/Gladys/pull/1918/commits/4f56ba250ff9f46578f1afa6a97e62e74bad83b7",
        "Tag": "['Patch']",
        "fix_commit_hash": "f4d2228770baec73b229c7faf58e8bfeb6cc6a83",
        "inducing_commit_hash_pyszz": [
            "f27d0ea4689c3deca5739b5f9ed45a2ddbf00b7b"
        ],
        "inducing_commit_hash_pd": [
            "f27d0ea4689c3deca5739b5f9ed45a2ddbf00b7b"
        ],
        "matched": [
            "f27d0ea4689c3deca5739b5f9ed45a2ddbf00b7b"
        ]
    },
    {
        "repo_name": "glpi-project/glpi",
        "CVE_ID": "CVE-2019-1010310",
        "Problem_Type": "CWE-74",
        "Description": "GLPI GLPI Product 9.3.1 is affected by: Frame and Form tags Injection allowing admins to phish users by putting code in reminder description. The impact is: Admins can phish any user or group of users for credentials / credit cards. The component is: Tools > Reminder > Description .. Set the description to any iframe/form tags and apply. The attack vector is: The attacker puts a login form, the user fills it and clicks on submit .. the request is sent to the attacker domain saving the data. The fixed version is: 9.4.1.",
        "URL": "https://github.com/glpi-project/glpi/pull/5519",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "83259d80aefcb6df594a7309dfd8cd601e5efbed",
        "inducing_commit_hash_pyszz": [
            "3c04b731b55c8fe8e08ff4aa2dbb8ae2577e318e"
        ],
        "inducing_commit_hash_pd": [
            "3c04b731b55c8fe8e08ff4aa2dbb8ae2577e318e"
        ],
        "matched": [
            "3c04b731b55c8fe8e08ff4aa2dbb8ae2577e318e"
        ]
    },
    {
        "repo_name": "glpi-project/glpi",
        "CVE_ID": "CVE-2019-10231",
        "Problem_Type": "CWE-843",
        "Description": "Teclib GLPI before 9.4.1.1 is affected by a PHP type juggling vulnerability allowing bypass of authentication. This occurs in Auth::checkPassword() (inc/auth.class.php).",
        "URL": "https://github.com/glpi-project/glpi/pull/5520",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "7afbcc75eb0a2caa502114575f8155b1920c5c55",
        "inducing_commit_hash_pyszz": [
            "aba5c9eb387c2e94895a38a0e4b1e598fce771b0"
        ],
        "inducing_commit_hash_pd": [
            "5b2033cf7d6891682d8970af618e136bf2c59fef"
        ],
        "matched": [
            "aba5c9eb387c2e94895a38a0e4b1e598fce771b0"
        ]
    },
    {
        "repo_name": "glpi-project/glpi",
        "CVE_ID": "CVE-2019-10233",
        "Problem_Type": "CWE-203",
        "Description": "Teclib GLPI before 9.4.1.1 is affected by a timing attack associated with a cookie.",
        "URL": "https://github.com/glpi-project/glpi/pull/5562",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "26900a5e53a5ad347d20a947eb5f7e2b447fef9f",
        "inducing_commit_hash_pyszz": [
            "b8578c21db0e09729535707768ff12deb2360a88"
        ],
        "inducing_commit_hash_pd": [
            "b8578c21db0e09729535707768ff12deb2360a88",
            "069afae49032c1a4dd8ddf9a4cb425a320d6761a"
        ],
        "matched": [
            "b8578c21db0e09729535707768ff12deb2360a88"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2018-1000803",
        "Problem_Type": "CWE-200",
        "Description": "Gitea version prior to version 1.5.1 contains a CWE-200 vulnerability that can result in Exposure of users private email addresses. This attack appear to be exploitable via Watch a repository to receive email notifications. Emails received contain the other recipients even if they have the email set as private. This vulnerability appears to have been fixed in 1.5.1.",
        "URL": "https://github.com/go-gitea/gitea/pull/4664/files#diff-146e0c2b5bb1ea96c9fb73d509456e57",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "194a11eb110cd98fc2ba52861abf7770db6885a3",
        "inducing_commit_hash_pyszz": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "inducing_commit_hash_pd": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "matched": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2018-1000803",
        "Problem_Type": "CWE-200",
        "Description": "Gitea version prior to version 1.5.1 contains a CWE-200 vulnerability that can result in Exposure of users private email addresses. This attack appear to be exploitable via Watch a repository to receive email notifications. Emails received contain the other recipients even if they have the email set as private. This vulnerability appears to have been fixed in 1.5.1.",
        "URL": "https://github.com/go-gitea/gitea/pull/4664",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "194a11eb110cd98fc2ba52861abf7770db6885a3",
        "inducing_commit_hash_pyszz": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "inducing_commit_hash_pd": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ],
        "matched": [
            "240609432b84a8caa5ec4c99a916277952ef02d5"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2019-1000002",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Gitea version 1.6.2 and earlier contains a Incorrect Access Control vulnerability in Delete/Edit file functionallity that can result in the attacker deleting files outside the repository he/she has access to. This attack appears to be exploitable via the attacker must get write access to \"any\" repository including self-created ones.. This vulnerability appears to have been fixed in 1.6.3, 1.7.0-rc2.",
        "URL": "https://github.com/go-gitea/gitea/pull/5631",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fd1e8563f8713265df2e402e9387e0964efc42e2",
        "inducing_commit_hash_pyszz": [
            "181b3a8f0988ab729270279e6e12534cb52628cc"
        ],
        "inducing_commit_hash_pd": [
            "181b3a8f0988ab729270279e6e12534cb52628cc"
        ],
        "matched": [
            "181b3a8f0988ab729270279e6e12534cb52628cc"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2019-1010261",
        "Problem_Type": "CWE-79",
        "Description": "Gitea 1.7.0 and earlier is affected by: Cross Site Scripting (XSS). The impact is: Attacker is able to have victim execute arbitrary JS in browser. The component is: go-get URL generation - PR to fix: https://github.com/go-gitea/gitea/pull/5905. The attack vector is: victim must open a specifically crafted URL. The fixed version is: 1.7.1 and later.",
        "URL": "https://github.com/go-gitea/gitea/pull/5905",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "80098bd7526fed84cfb4fa48272be71541b37205",
        "inducing_commit_hash_pyszz": [
            "0d4c63fd70d0b255a9a17352cc47ec2b6ca13440"
        ],
        "inducing_commit_hash_pd": [
            "94da47271701401b6959bfd308d6c74fd30b22e2",
            "0d4c63fd70d0b255a9a17352cc47ec2b6ca13440"
        ],
        "matched": [
            "0d4c63fd70d0b255a9a17352cc47ec2b6ca13440"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2019-11576",
        "Problem_Type": "CWE-287",
        "Description": "Gitea before 1.8.0 allows 1FA for user accounts that have completed 2FA enrollment. If a user's credentials are known, then an attacker could send them to the API without requiring the 2FA one-time password.",
        "URL": "https://github.com/go-gitea/gitea/pull/6674",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "19ec2606e91610421a3e9cd87c94748ef07ca468",
        "inducing_commit_hash_pyszz": [
            "e47df0b301510a49b49fc43266f436b7d58a02b1"
        ],
        "inducing_commit_hash_pd": [
            "56dd430a10bf5281caf648344e4660fbdc5d4dee",
            "e47df0b301510a49b49fc43266f436b7d58a02b1",
            "514382e2ebfe6869268aeb919c1fa4d224687e13"
        ],
        "matched": [
            "e47df0b301510a49b49fc43266f436b7d58a02b1"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2020-13246",
        "Problem_Type": "CWE-667",
        "Description": "An issue was discovered in Gitea through 1.11.5. An attacker can trigger a deadlock by initiating a transfer of a repository's ownership from one organization to another.",
        "URL": "https://github.com/go-gitea/gitea/pull/11438",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c3d9a5f8464e0921fc4063d903ecf2063fa152fa",
        "inducing_commit_hash_pyszz": [
            "72aa5a20ecf8aa3f7c110fd51c37994d950e0ba8"
        ],
        "inducing_commit_hash_pd": [
            "1f01f53c53ea75634f981611635be49c69e1920b"
        ],
        "matched": [
            "72aa5a20ecf8aa3f7c110fd51c37994d950e0ba8"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-28378",
        "Problem_Type": "CWE-79",
        "Description": "Gitea 1.12.x and 1.13.x before 1.13.4 allows XSS via certain issue data in some situations.",
        "URL": "https://github.com/go-gitea/gitea/pull/14898",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f1da46622e2d43870f939c46f43518728baecfd3",
        "inducing_commit_hash_pyszz": [
            "d67e9b9629557df1e355f0a864792c194b3e8848"
        ],
        "inducing_commit_hash_pd": [
            "ffddf3f8a6ca5e3db46e5731d717a55eb58e858f",
            "4563eb873d3d46953aeb43a1cebf3389906b0b88",
            "7d7ab1eeae43d99fe329878ac9c8db5e45e2dee5"
        ],
        "matched": [
            "d67e9b9629557df1e355f0a864792c194b3e8848"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-29134",
        "Problem_Type": "CWE-22",
        "Description": "The avatar middleware in Gitea before 1.13.6 allows Directory Traversal via a crafted URL.",
        "URL": "https://github.com/go-gitea/gitea/pull/15125/files",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "151bedab524a0844758d48bcab5b44a099976c23",
        "inducing_commit_hash_pyszz": [
            "e846b712fc0667c0085cffcc52e4fe9a8fc3ad60"
        ],
        "inducing_commit_hash_pd": [
            "e846b712fc0667c0085cffcc52e4fe9a8fc3ad60"
        ],
        "matched": [
            "e846b712fc0667c0085cffcc52e4fe9a8fc3ad60"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45325",
        "Problem_Type": "CWE-918",
        "Description": "Server Side Request Forgery (SSRF) vulneraility exists in Gitea before 1.7.0 using the OpenID URL.",
        "URL": "https://github.com/go-gitea/gitea/pull/5705",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "2b36bdd4902aa7ee93e15eee961d6a8a4a26e81c",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "71d16f69ff9448e55f371ce8354d978f8dbe2cba"
        ],
        "matched": [
            "71d16f69ff9448e55f371ce8354d978f8dbe2cba"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45326",
        "Problem_Type": "CWE-352",
        "Description": "Cross Site Request Forgery (CSRF) vulnerability exists in Gitea before 1.5.2 via API routes.This can be dangerous especially with state altering POST requests.",
        "URL": "https://github.com/go-gitea/gitea/pull/4840",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e47df0b301510a49b49fc43266f436b7d58a02b1",
        "inducing_commit_hash_pyszz": [
            "d293a2b9d6722dffde7998c953c3087e47a38a83"
        ],
        "inducing_commit_hash_pd": [
            "57de1ff991a864c8adf669e3919247c555e7a75a",
            "dd758ad8dc76ef5c0baef095857d73707912a4ee",
            "695b10beddc640d333fd5864cb6edb03e540b344",
            "6a3c03762a37f593ec8101c2005836ca44683e1d",
            "e78786ef39526fac6705a831fc291c55f1ca091b",
            "735676267e48e6a57b250825e2e77edbb513e11d",
            "56dd430a10bf5281caf648344e4660fbdc5d4dee",
            "3ffedeab03a80e7345823d118042d17a3e3d9b52",
            "ce9b86082c4824917023b1bb480648d0cc56dd04",
            "4a8ee0b5ccbdc75bab29836a54db4e7af7b7ff3f",
            "c2346e44696e57c31f9765c32ee60b365a15c8f0",
            "c3b6383b3a91e476c5a6978a0fb355191271a51c",
            "49df677c475d6a20575b99b5af8323f65937dadb",
            "095fb9f2e32fe78acb9bc034f0e1d60922ff1e60",
            "e59adcde655aac0e8afd3249407c9a0a2b1b1d6b",
            "eae9154811b660bcf2333f349176af7ed96b5924",
            "469ab99e9a4e31c1e95ab37f363c26b62b782542",
            "69e2ab161109eef667cd22a96711e4a8ee9d01d2",
            "7c417bbb0d8f3213f34db50f62013e20492d044f",
            "f99489d5c522663cfc14b9b65539966844f3ee6b",
            "d293a2b9d6722dffde7998c953c3087e47a38a83",
            "ef78309b6535e4feff7b48d4b119180504616e13",
            "f64c232953d13043b262dc8da55acb3738e58d15",
            "08b124dd47e5be365ac843031ed3ea73d1fbc151",
            "7781e8cef2dfe73d71be7804f4c5a7c5f1995d31"
        ],
        "matched": [
            "d293a2b9d6722dffde7998c953c3087e47a38a83"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45327",
        "Problem_Type": "CWE-436",
        "Description": "Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. which could let a remote malisious user execute arbitrary code.",
        "URL": "https://github.com/go-gitea/gitea/pull/10465",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "e5944a9521102c4917399a6550a0756919527944",
        "inducing_commit_hash_pyszz": [
            "8eba27c79257c6bc68cefbdffbb36d3596e6d3ee"
        ],
        "inducing_commit_hash_pd": [
            "1aec1a2ddae3a3714d6a167d85fcc1c69413b660",
            "3fb1b6a608625067a76ba90f9855d48c4d6555bd",
            "8dd07c0ddd99ae626a1ec8c06f75f27fed51269f",
            "8eba27c79257c6bc68cefbdffbb36d3596e6d3ee",
            "0d1872ebe3f11c14f31f454ed8d719a22c0884d0",
            "659bc2814c4b6f23c6039e0c7dc962a40968cdb1",
            "f15fa9167ade8262bed437451585d319f12d1182",
            "7a9777ae36e6721d1d9bbb355a19b4ae12b3be43",
            "171b3598778a1ecd0a921c71ed6755bfef68f7f0",
            "d75013a0e88a1f46fd16f5ba9344ff17ed84cd37",
            "efea642d6cf419c9587d44b95ff2bc04e89f7bfe",
            "7cb5a15c9b7a2a118d756d15cb745743f207a318",
            "0e6b9ea786a77a4df4aa9fff1b96b9483bcdded5",
            "94da47271701401b6959bfd308d6c74fd30b22e2",
            "04be8c0de5295f57e06e152e56c481b29b1076e5",
            "ad5ec45dd63aa2563d113e6a9ce31180246aa5f2",
            "524885dd6502570dddf5c83f171ee74890dba5c4",
            "8606d9f5bc01fce90159c9bdef9989a31a865e38",
            "2d8c414f8c44e20619d6680b96044424ef6ebb2a",
            "06631ab91f5d84b48d6f71ac8eaf4df740ba0282",
            "6643647687aa2ba8a41f8f95d404407ff6106d8c"
        ],
        "matched": [
            "8eba27c79257c6bc68cefbdffbb36d3596e6d3ee"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45327",
        "Problem_Type": "CWE-436",
        "Description": "Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. which could let a remote malisious user execute arbitrary code.",
        "URL": "https://github.com/go-gitea/gitea/pull/10582",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0e2217bd2d8833f0bff84767f676fc93c84d4b9a",
        "inducing_commit_hash_pyszz": [
            "e6a03813d463bc0c624a3c40fb615cacc006e265"
        ],
        "inducing_commit_hash_pd": [
            "c58708d3eedb352bb277feb2c12bb1652a8a58b7",
            "5abd1d2a68b139af5046b0e1b69c1884eef4f3d1",
            "e6a03813d463bc0c624a3c40fb615cacc006e265"
        ],
        "matched": [
            "e6a03813d463bc0c624a3c40fb615cacc006e265"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45327",
        "Problem_Type": "CWE-436",
        "Description": "Gitea before 1.11.2 is affected by Trusting HTTP Permission Methods on the Server Side when referencing the vulnerable admin or user API. which could let a remote malisious user execute arbitrary code.",
        "URL": "https://github.com/go-gitea/gitea/pull/10462",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "c161bb013e091c0bcc524f07d50c028d9daf8cce",
        "inducing_commit_hash_pyszz": [
            "9ae4c17cb1fde0eaa1556e545a8871b6a70d2efa"
        ],
        "inducing_commit_hash_pd": [
            "b40496533bb67ac988cd89a67e70610fc895419f",
            "c58708d3eedb352bb277feb2c12bb1652a8a58b7",
            "7796c9e1223e8a99eb265adff0974d05bb594cfa",
            "951037c0ae66a9c4bddc0e2e6bbb01d754ae1f1c",
            "86fdba177ad82f3dcdfc237631fef4588042b9d6",
            "1f2e173a745da8e4b57f96b5561a3c10054d3b76",
            "5ae840872530e8d667dee611abe5307ee93e4dd4",
            "acaf5c96fe7f93440dfbd52dd60b4f1a5656d556",
            "3e05661d8d52315d6dbb601950df2354428ac119",
            "783b1967e257fdba2bd593d9f2108da2010b7448",
            "c0a899b15182fc717207dadb33a0d55024dce109",
            "9ae4c17cb1fde0eaa1556e545a8871b6a70d2efa",
            "7ca5f8f119593023809e6130db75154597c52426"
        ],
        "matched": [
            "9ae4c17cb1fde0eaa1556e545a8871b6a70d2efa"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45329",
        "Problem_Type": "CWE-79",
        "Description": "Cross Site Scripting (XSS) vulnerability exists in Gitea before 1.5.1 via the repository settings inside the external wiki/issue tracker URL field.",
        "URL": "https://github.com/go-gitea/gitea/pull/4710",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "92466129ec242536c71b66a8987d9b37e6bc0bce",
        "inducing_commit_hash_pyszz": [
            "f42ec6120e8a2830407027020b65391ebf8e7f59"
        ],
        "inducing_commit_hash_pd": [
            "f42ec6120e8a2830407027020b65391ebf8e7f59",
            "be5738243c2ab9e3bd21a0b3d581761d73007883"
        ],
        "matched": [
            "f42ec6120e8a2830407027020b65391ebf8e7f59"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2021-45331",
        "Problem_Type": "CWE-287",
        "Description": "An Authentication Bypass vulnerability exists in Gitea before 1.5.0, which could let a malicious user gain privileges. If captured, the TOTP code for the 2FA can be submitted correctly more than once.",
        "URL": "https://github.com/go-gitea/gitea/pull/3878",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "1e1ece8f3dce8ed9958f3bd5823c135d1c19eb49",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "f2e20c81b66e6a937ecdb686f8d1011371433365",
            "6dd096b7f08799ff27d9e34356fb1163ca10f388"
        ],
        "matched": [
            "f2e20c81b66e6a937ecdb686f8d1011371433365"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-30781",
        "Problem_Type": "CWE-116",
        "Description": "Gitea before 1.16.7 does not escape git fetch remote.",
        "URL": "https://github.com/go-gitea/gitea/pull/19487",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fe274c148bc516b63aa89ab1904d124e60903421",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "124b072f0b69650baff086b9688d198f5a6761af"
        ],
        "matched": [
            "124b072f0b69650baff086b9688d198f5a6761af"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-30781",
        "Problem_Type": "CWE-116",
        "Description": "Gitea before 1.16.7 does not escape git fetch remote.",
        "URL": "https://github.com/go-gitea/gitea/pull/19490",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "242f7f1a528af0b85ad0dd6fa88ed2d889b92385",
        "inducing_commit_hash_pyszz": [
            "f6067a8465e7762aea1561106cfee291409a0fd6"
        ],
        "inducing_commit_hash_pd": [
            "e3e44a59d01da3af2be3a830f4a90394e7af4ff4",
            "462284e2f5768cf04d71c7abd8c01eef20cff73d",
            "2b3e931cde3e3d70b69202164f35fc6f2c609ade",
            "fc3d0826096943b979717ed46c9a4cfd86e06106",
            "08069dc4656fa53ee5dd25189e15012cb4f8acb2",
            "f6067a8465e7762aea1561106cfee291409a0fd6"
        ],
        "matched": [
            "f6067a8465e7762aea1561106cfee291409a0fd6"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-38795",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Gitea through 1.17.1, repo cloning can occur in the migration function.",
        "URL": "https://github.com/go-gitea/gitea/pull/20892",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "9e8b1c663041e8b503d57df64dfbbf0b51a720f4",
        "inducing_commit_hash_pyszz": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ],
        "inducing_commit_hash_pd": [
            "6d69df28047bf7fd3e307391b484a93432615b90",
            "fd60ebfe14927657ff5cfa4e75f975eaadae65f1"
        ],
        "matched": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-38795",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "In Gitea through 1.17.1, repo cloning can occur in the migration function.",
        "URL": "https://github.com/go-gitea/gitea/pull/20869",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "6d3181406d87503dbd15e4a7c764c8963f13977f",
        "inducing_commit_hash_pyszz": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ],
        "inducing_commit_hash_pd": [
            "6d69df28047bf7fd3e307391b484a93432615b90",
            "fd60ebfe14927657ff5cfa4e75f975eaadae65f1"
        ],
        "matched": [
            "6d69df28047bf7fd3e307391b484a93432615b90"
        ]
    },
    {
        "repo_name": "go-gitea/gitea",
        "CVE_ID": "CVE-2022-42968",
        "Problem_Type": "CWE-88",
        "Description": "Gitea before 1.17.3 does not sanitize and escape refs in the git backend. Arguments to git commands are mishandled.",
        "URL": "https://github.com/go-gitea/gitea/pull/21463",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "cd48a007bb85ba071ed175a6376b9e392e2c49b6",
        "inducing_commit_hash_pyszz": [
            "34b5436ae1af2735546bb519a950eabf4990212d"
        ],
        "inducing_commit_hash_pd": [
            "3043eb36bfcd7ddf29202b958b91942826a8182b",
            "1fa96629461ac4229932b0a4526fc2f60c88ec51",
            "59d1cc49f1d7c63d25e2a139befc8c02b830ba09",
            "2f6aadffa8243736825564cd1ce32d0d5a1eb391",
            "34b5436ae1af2735546bb519a950eabf4990212d",
            "ee11974719528197241840dc245f7daf08ec5c0a",
            "26718a785ac49f17eab51ad0f5324d036b810f73",
            "e3c626834b34fae7728ee7869ed73ee4d1b26a26",
            "27b8eff96ba84d69d8902fbe62c52878aee5ce89",
            "124b072f0b69650baff086b9688d198f5a6761af",
            "c05a8abc762f868e67dd131d34f45218a0fb95ab"
        ],
        "matched": [
            "34b5436ae1af2735546bb519a950eabf4990212d"
        ]
    },
    {
        "repo_name": "go-macaron/csrf",
        "CVE_ID": "CVE-2018-25060",
        "Problem_Type": "CWE-311",
        "Description": "A vulnerability was found in Macaron csrf and classified as problematic. Affected by this issue is some unknown functionality of the file csrf.go. The manipulation of the argument Generate leads to sensitive cookie without secure attribute. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The patch is identified as dadd1711a617000b70e5e408a76531b73187031c. It is recommended to apply a patch to fix this issue. VDB-217058 is the identifier assigned to this vulnerability.",
        "URL": "https://github.com/go-macaron/csrf/pull/7",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "dadd1711a617000b70e5e408a76531b73187031c",
        "inducing_commit_hash_pyszz": [
            "4fd580b68d81e4691e6bceb4f4c7f23f091db865"
        ],
        "inducing_commit_hash_pd": [
            "4fd580b68d81e4691e6bceb4f4c7f23f091db865"
        ],
        "matched": [
            "4fd580b68d81e4691e6bceb4f4c7f23f091db865"
        ]
    },
    {
        "repo_name": "go-resty/resty",
        "CVE_ID": "CVE-2023-45286",
        "Problem_Type": "CWE-362",
        "Description": "A race condition in go-resty can result in HTTP request body disclosure across requests. This condition can be triggered by calling sync.Pool.Put with the same *bytes.Buffer more than once, when request retries are enabled and a retry occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP request body from an unrelated request, and go-resty will append the current HTTP request body to it, sending two bodies in one request. The sync.Pool in question is defined at package level scope, so a completely unrelated server could receive the request body.",
        "URL": "https://github.com/go-resty/resty/pull/745",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "577fed8730d79f583eb48dfc81674164e1fc471e",
        "inducing_commit_hash_pyszz": [
            "4604150f0fe9f3cdab26779f0c056d9aff1107ab"
        ],
        "inducing_commit_hash_pd": [
            "4604150f0fe9f3cdab26779f0c056d9aff1107ab"
        ],
        "matched": [
            "4604150f0fe9f3cdab26779f0c056d9aff1107ab"
        ]
    },
    {
        "repo_name": "goauthentik/authentik",
        "CVE_ID": "CVE-2023-48228",
        "Problem_Type": "CWE-287",
        "Description": "authentik is an open-source identity provider. When initialising a oauth2 flow with a `code_challenge` and `code_method` (thus requesting PKCE), the single sign-on provider (authentik) must check if there is a matching and existing `code_verifier` during the token step. Prior to versions 2023.10.4 and 2023.8.5, authentik checks if the contents of `code_verifier` is matching only when it is provided. When it is left out completely, authentik simply accepts the token request with out it; even when the flow was started with a `code_challenge`. authentik 2023.8.5 and 2023.10.4 fix this issue.",
        "URL": "https://github.com/goauthentik/authentik/pull/7666",
        "Tag": "['Patch']",
        "fix_commit_hash": "b88e39411c12e3f9e04125a7887f12354f760a14",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ],
        "matched": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ]
    },
    {
        "repo_name": "goauthentik/authentik",
        "CVE_ID": "CVE-2023-48228",
        "Problem_Type": "CWE-287",
        "Description": "authentik is an open-source identity provider. When initialising a oauth2 flow with a `code_challenge` and `code_method` (thus requesting PKCE), the single sign-on provider (authentik) must check if there is a matching and existing `code_verifier` during the token step. Prior to versions 2023.10.4 and 2023.8.5, authentik checks if the contents of `code_verifier` is matching only when it is provided. When it is left out completely, authentik simply accepts the token request with out it; even when the flow was started with a `code_challenge`. authentik 2023.8.5 and 2023.10.4 fix this issue.",
        "URL": "https://github.com/goauthentik/authentik/pull/7668",
        "Tag": "['Patch']",
        "fix_commit_hash": "6b9afed21f7c39f171a4a445654cfe415bba37d5",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ],
        "matched": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ]
    },
    {
        "repo_name": "goauthentik/authentik",
        "CVE_ID": "CVE-2023-48228",
        "Problem_Type": "CWE-287",
        "Description": "authentik is an open-source identity provider. When initialising a oauth2 flow with a `code_challenge` and `code_method` (thus requesting PKCE), the single sign-on provider (authentik) must check if there is a matching and existing `code_verifier` during the token step. Prior to versions 2023.10.4 and 2023.8.5, authentik checks if the contents of `code_verifier` is matching only when it is provided. When it is left out completely, authentik simply accepts the token request with out it; even when the flow was started with a `code_challenge`. authentik 2023.8.5 and 2023.10.4 fix this issue.",
        "URL": "https://github.com/goauthentik/authentik/pull/7669",
        "Tag": "['Patch']",
        "fix_commit_hash": "3af77ab3821fe9c7df8055ba5eade3d1ecea03a6",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ],
        "matched": [
            "c7a2410b1d2d029b7d9870f30aee6cfe59e9f499"
        ]
    },
    {
        "repo_name": "gocd/gocd",
        "CVE_ID": "CVE-2022-29182",
        "Problem_Type": "CWE-79",
        "Description": "GoCD is a continuous delivery server. GoCD versions 19.11.0 through 21.4.0 (inclusive) are vulnerable to a Document Object Model (DOM)-based cross-site scripting attack via a pipeline run's Stage Details > Graphs tab. It is possible for a malicious script on a attacker-hosted site to execute script that will run within the user's browser context and GoCD session via abuse of a messaging channel used for communication between with the parent page and the stage details graph's iframe. This could allow an attacker to steal a GoCD user's session cookies and/or execute malicious code in the user's context. This issue is fixed in GoCD 22.1.0. There are currently no known workarounds.",
        "URL": "https://github.com/gocd/gocd/pull/10190/commits/a256d05de1445e6c77843f098581fc6a66fe4477",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "a256d05de1445e6c77843f098581fc6a66fe4477",
        "inducing_commit_hash_pyszz": [
            "0a9c553e7a504ebdd9cec90df95c2f5bd96fd14f"
        ],
        "inducing_commit_hash_pd": [
            "0a9c553e7a504ebdd9cec90df95c2f5bd96fd14f"
        ],
        "matched": [
            "0a9c553e7a504ebdd9cec90df95c2f5bd96fd14f"
        ]
    },
    {
        "repo_name": "gocd/gocd",
        "CVE_ID": "CVE-2022-29183",
        "Problem_Type": "CWE-79",
        "Description": "GoCD is a continuous delivery server. GoCD versions 20.2.0 until 21.4.0 are vulnerable to reflected cross-site scripting via abuse of the pipeline comparison function's error handling to render arbitrary HTML into the returned page. This could allow an attacker to trick a victim into executing code which would allow the attacker to operate on, or gain control over the same resources as the victim had access to. This issue is fixed in GoCD 21.4.0. As a workaround, block access to `/go/compare/.*` prior to GoCD Server via a reverse proxy, web application firewall or equivalent, which would prevent use of the pipeline comparison function.",
        "URL": "https://github.com/gocd/gocd/pull/9829/commits/bda81084c0401234b168437cf35a63390e3064d1",
        "Tag": "['Patch']",
        "fix_commit_hash": "bda81084c0401234b168437cf35a63390e3064d1",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "73768b398d8796a71aea9ce046af3085f002af83"
        ],
        "matched": [
            "73768b398d8796a71aea9ce046af3085f002af83"
        ]
    },
    {
        "repo_name": "godotengine/godot",
        "CVE_ID": "CVE-2021-26826",
        "Problem_Type": "CWE-787",
        "Description": "A stack overflow issue exists in Godot Engine up to v3.2 and is caused by improper boundary checks when loading .TGA image files. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.",
        "URL": "https://github.com/godotengine/godot/pull/45701/commits/403e4fd08b0b212e96f53d926e6273e0745eaa5a",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "403e4fd08b0b212e96f53d926e6273e0745eaa5a",
        "inducing_commit_hash_pyszz": [
            "871ceeb0fe219072ae708d4d4397e8ae66873386"
        ],
        "inducing_commit_hash_pd": [
            "3205a92ad872f918c8322cdcd1434c231a1fd251",
            "871ceeb0fe219072ae708d4d4397e8ae66873386"
        ],
        "matched": [
            "871ceeb0fe219072ae708d4d4397e8ae66873386"
        ]
    },
    {
        "repo_name": "gofiber/fiber",
        "CVE_ID": "CVE-2020-15111",
        "Problem_Type": "CWE-74",
        "Description": "In Fiber before version 1.12.6, the filename that is given in c.Attachment() (https://docs.gofiber.io/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc. A possible workaround is to serialize the input before passing it to ctx.Attachment().",
        "URL": "https://github.com/gofiber/fiber/pull/579/commits/f698b5d5066cfe594102ae252cd58a1fe57cf56f",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f698b5d5066cfe594102ae252cd58a1fe57cf56f",
        "inducing_commit_hash_pyszz": [
            "caef8be9adec9438a3c0b81b0b04e5670daccd52"
        ],
        "inducing_commit_hash_pd": [
            "caef8be9adec9438a3c0b81b0b04e5670daccd52"
        ],
        "matched": [
            "caef8be9adec9438a3c0b81b0b04e5670daccd52"
        ]
    },
    {
        "repo_name": "gogs/gogs",
        "CVE_ID": "CVE-2020-14958",
        "Problem_Type": "CWE-281",
        "Description": "In Gogs 0.11.91, MakeEmailPrimary in models/user_mail.go lacks a \"not the owner of the email\" check.",
        "URL": "https://github.com/gogs/gogs/pull/5988",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "82ff0c5852f29daa5f95d965fd50665581e7ea3c",
        "inducing_commit_hash_pyszz": [
            "328c23c5d41e07e37476e217c7ff1d3baef26b61"
        ],
        "inducing_commit_hash_pd": [
            "52322ef62457541fb914f8e929b2dcd01915c8bc",
            "328c23c5d41e07e37476e217c7ff1d3baef26b61",
            "4d83fd4238e177d9327c760a5386bc53f25dedbb",
            "01c8df01ec0608f1f25b2f1444adabb98fa5ee8a"
        ],
        "matched": [
            "328c23c5d41e07e37476e217c7ff1d3baef26b61"
        ]
    },
    {
        "repo_name": "googleapis/google-oauth-java-client",
        "CVE_ID": "CVE-2021-22573",
        "Problem_Type": "CWE-347",
        "Description": "The vulnerability is that IDToken verifier does not verify if token is properly signed. Signature verification makes sure that the token's payload comes from valid provider, not from someone else. An attacker can provide a compromised token with custom payload. The token will pass the validation on the client side. We recommend upgrading to version 1.33.3 or above",
        "URL": "https://github.com/googleapis/google-oauth-java-client/pull/872",
        "Tag": "['Issue Tracking', 'Patch', 'Release Notes', 'Third Party Advisory']",
        "fix_commit_hash": "c634ad4e31cac322bb1aa8a9feb0569749011bf0",
        "inducing_commit_hash_pyszz": [
            "dd13030f8a4d9962eeaa0d66ef44000065ed9bd0"
        ],
        "inducing_commit_hash_pd": [
            "dd13030f8a4d9962eeaa0d66ef44000065ed9bd0"
        ],
        "matched": [
            "dd13030f8a4d9962eeaa0d66ef44000065ed9bd0"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18352",
        "Problem_Type": "CWE-79",
        "Description": "Error reporting within Rendertron 1.0.0 allows reflected Cross Site Scripting (XSS) from invalid URLs.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18353",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "Rendertron 1.0.0 includes an _ah/stop route to shutdown the Chrome instance responsible for serving render requests to all users. Visiting this route with a GET request allows any unauthorized remote attacker to disable the core service of the application.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18354",
        "Problem_Type": "CWE-22",
        "Description": "Rendertron 1.0.0 allows for alternative protocols such as 'file://' introducing a Local File Inclusion (LFI) bug where arbitrary files can be read by a remote attacker.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleChrome/rendertron",
        "CVE_ID": "CVE-2017-18355",
        "Problem_Type": "CWE-200",
        "Description": "Installed packages are exposed by node_modules in Rendertron 1.0.0, allowing remote attackers to read absolute paths on the server by examining the \"_where\" attribute of package.json files.",
        "URL": "https://github.com/GoogleChrome/rendertron/pull/88",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "324ac99732c943d7b16aead2fceaa8b31a458eaa",
        "inducing_commit_hash_pyszz": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ],
        "inducing_commit_hash_pd": [
            "f14d98fb0633a1cf30a630a401b35715e4402a4b",
            "cfca414e72bc9238e1b475a0d50bfd0f5a7d0413",
            "4a7c69527a5255d4cda537a7f0ccc58a9a4f50c5",
            "e377ecab451314a40b41b0d83ba8be67f1bae66b",
            "b903d68e739b5902a1b28da4ee1f0727b9622cd0",
            "51ab1b34751f01d1bc9e4d1fc16a2bd8b7d86567",
            "72cb264952d15c7a68034f27488c641e81be6029",
            "c2677971fe1e247a796dd97e0ed971e23f6f4780",
            "79339c70c2cbaa2f0ac8c188b3d26f384d1044c1",
            "31182c01413ff796341c41672ff84b8fa537eac8",
            "c3ec46a625e34191d4b4693b28cd9c33aa1ed424",
            "a9f3664fda44006e97cff5b8e76ebf91cac20a1a",
            "416bb85cac38707c3ee933af86bb03807ebbdb1c"
        ],
        "matched": [
            "72cb264952d15c7a68034f27488c641e81be6029"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/guest-oslogin",
        "CVE_ID": "CVE-2020-8903",
        "Problem_Type": "CWE-276",
        "Description": "A vulnerability in Google Cloud Platform's guest-oslogin versions between 20190304 and 20200507 allows a user that is only granted the role \"roles/compute.osLogin\" to escalate privileges to root. Using their membership to the \"adm\" group, users with this role are able to read the DHCP XID from the systemd journal. Using the DHCP XID, it is then possible to set the IP address and hostname of the instance to any value, which is then stored in /etc/hosts. An attacker can then point metadata.google.internal to an arbitrary IP address and impersonate the GCE metadata server which make it is possible to instruct the OS Login PAM module to grant administrative privileges. All images created after 2020-May-07 (20200507) are fixed, and if you cannot update, we recommend you edit /etc/group/security.conf and remove the \"adm\" user from the OS Login entry.",
        "URL": "https://github.com/GoogleCloudPlatform/guest-oslogin/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50b0fb7b5804c22ef9581e7dc91875801dfa5469",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ],
        "matched": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/guest-oslogin",
        "CVE_ID": "CVE-2020-8907",
        "Problem_Type": "CWE-276",
        "Description": "A vulnerability in Google Cloud Platform's guest-oslogin versions between 20190304 and 20200507 allows a user that is only granted the role \"roles/compute.osLogin\" to escalate privileges to root. Using their membership to the \"docker\" group, an attacker with this role is able to run docker and mount the host OS. Within docker, it is possible to modify the host OS filesystem and modify /etc/groups to gain administrative privileges. All images created after 2020-May-07 (20200507) are fixed, and if you cannot update, we recommend you edit /etc/group/security.conf and remove the \"docker\" user from the OS Login entry.",
        "URL": "https://github.com/GoogleCloudPlatform/guest-oslogin/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50b0fb7b5804c22ef9581e7dc91875801dfa5469",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ],
        "matched": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/guest-oslogin",
        "CVE_ID": "CVE-2020-8933",
        "Problem_Type": "CWE-276",
        "Description": "A vulnerability in Google Cloud Platform's guest-oslogin versions between 20190304 and 20200507 allows a user that is only granted the role \"roles/compute.osLogin\" to escalate privileges to root. Using the membership to the \"lxd\" group, an attacker can attach host devices and filesystems. Within an lxc container, it is possible to attach the host OS filesystem and modify /etc/sudoers to then gain administrative privileges. All images created after 2020-May-07 (20200507) are fixed, and if you cannot update, we recommend you edit /etc/group/security.conf and remove the \"lxd\" user from the OS Login entry.",
        "URL": "https://github.com/GoogleCloudPlatform/guest-oslogin/pull/29",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "50b0fb7b5804c22ef9581e7dc91875801dfa5469",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ],
        "matched": [
            "3ed6b848638b4a3ec7fc3336bf613b73c6cc66ff"
        ]
    },
    {
        "repo_name": "GoogleCloudPlatform/iot-device-sdk-embedded-c",
        "CVE_ID": "CVE-2021-22547",
        "Problem_Type": "CWE-120",
        "Description": "In IoT Devices SDK, there is an implementation of calloc() that doesn't have a length check. An attacker could pass in memory objects larger than the buffer and wrap around to have a smaller buffer than required, allowing the attacker access to the other parts of the heap. We recommend upgrading the Google Cloud IoT Device SDK for Embedded C used to 1.0.3 or greater.",
        "URL": "https://github.com/GoogleCloudPlatform/iot-device-sdk-embedded-c/pull/119",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "96018ab742975e1a4fc45857bb16140e52297041",
        "inducing_commit_hash_pyszz": [
            "87526f0080487e0f7f41d65cdb7710ba268055ac"
        ],
        "inducing_commit_hash_pd": [
            "87526f0080487e0f7f41d65cdb7710ba268055ac"
        ],
        "matched": [
            "87526f0080487e0f7f41d65cdb7710ba268055ac"
        ]
    },
    {
        "repo_name": "GoogleContainerTools/jib",
        "CVE_ID": "CVE-2022-25914",
        "Problem_Type": "NVD-CWE-noinfo",
        "Description": "The package com.google.cloud.tools:jib-core before 0.22.0 are vulnerable to Remote Code Execution (RCE) via the isDockerInstalled function, due to attempting to execute input.",
        "URL": "https://github.com/GoogleContainerTools/jib/pull/3744",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "67fa40bc2c484da0546333914ea07a89fe44eaaf",
        "inducing_commit_hash_pyszz": [
            "8e162a29f153e888e7d650f25caef0b927e7d29f"
        ],
        "inducing_commit_hash_pd": [
            "8e162a29f153e888e7d650f25caef0b927e7d29f",
            "a5caf17f037c48408888b11138306c6c2c92c376"
        ],
        "matched": [
            "8e162a29f153e888e7d650f25caef0b927e7d29f"
        ]
    },
    {
        "repo_name": "google/data-transfer-project",
        "CVE_ID": "CVE-2021-22572",
        "Problem_Type": "CWE-668",
        "Description": "On unix-like systems, the system temporary directory is shared between all users on that system. The root cause is File.createTempFile creates files in the the system temporary directory with world readable permissions. Any sensitive information written to theses files is visible to all other local users on unix-like systems. We recommend upgrading past commit https://github.com/google/data-transfer-project/pull/969",
        "URL": "https://github.com/google/data-transfer-project/pull/969",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "9ddcb02edb9c13d2713460e347f8b343c84aa2f4",
        "inducing_commit_hash_pyszz": [
            "17c212f58726a627c095933db97a485ded1881f9"
        ],
        "inducing_commit_hash_pd": [
            "17c212f58726a627c095933db97a485ded1881f9"
        ],
        "matched": [
            "17c212f58726a627c095933db97a485ded1881f9"
        ]
    },
    {
        "repo_name": "google/kctf",
        "CVE_ID": "CVE-2022-31055",
        "Problem_Type": "NVD-CWE-Other",
        "Description": "kCTF is a Kubernetes-based infrastructure for capture the flag (CTF) competitions. Prior to version 1.6.0, the kctf cluster set-src-ip-ranges was broken and allowed traffic from any IP. The problem has been patched in v1.6.0. As a workaround, those who want to test challenges privately can mark them as `public: false` and use `kctf chal debug port-forward` to connect.",
        "URL": "https://github.com/google/kctf/pull/371",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8cf050be974fcc2fd8aa136701f9a66f2b2a5202",
        "inducing_commit_hash_pyszz": [
            "9d747ee79c39c88d4b83f5bbb132e6f933dcebd4"
        ],
        "inducing_commit_hash_pd": [
            "9d747ee79c39c88d4b83f5bbb132e6f933dcebd4",
            "71ae5dca394266fe7480d0df8afd2b786bb346ee"
        ],
        "matched": [
            "9d747ee79c39c88d4b83f5bbb132e6f933dcebd4"
        ]
    },
    {
        "repo_name": "google/slo-generator",
        "CVE_ID": "CVE-2021-22557",
        "Problem_Type": "CWE-78",
        "Description": "SLO generator allows for loading of YAML files that if crafted in a specific format can allow for code execution within the context of the SLO Generator. We recommend upgrading SLO Generator past https://github.com/google/slo-generator/pull/173",
        "URL": "https://github.com/google/slo-generator/pull/173",
        "Tag": "['Exploit', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "36318beab1b85d14bb860e45bea186b184690d5d",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "51b956b85e7769725c46be3579cc51c4b02bd333"
        ],
        "matched": [
            "51b956b85e7769725c46be3579cc51c4b02bd333"
        ]
    }
]