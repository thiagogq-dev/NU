[{"repo_name": "denoland/deno", "CVE_ID": "CVE-2023-22499", "Problem_Type": "CWE-362", "Description": "Deno is a runtime for JavaScript and TypeScript that uses V8 and is built in Rust. Multi-threaded programs were able to spoof interactive permission prompt by rewriting the prompt to suggest that program is waiting on user confirmation to unrelated action. A malicious program could clear the terminal screen after permission prompt was shown and write a generic message. This situation impacts users who use Web Worker API and relied on interactive permission prompt. The reproduction is very timing sensitive and can\u00c2\u2019t be reliably reproduced on every try. This problem can not be exploited on systems that do not attach an interactive prompt (for example headless servers). The problem has been fixed in Deno v1.29.3; it is recommended all users update to this version. Users are advised to upgrade. Users unable to upgrade may run with --no-prompt flag to disable interactive permission prompts.", "URL": "https://github.com/denoland/deno/pull/17392", "Tag": "['Patch', 'Third Party Advisory']", "fix_commit_hash": "1b17985c5a438858b4cbe4e1e57cf000aeea0772", "inducing_commit_hash_pyszz": []}, {"repo_name": "denoland/deno", "CVE_ID": "CVE-2023-26103", "Problem_Type": "CWE-1333", "Description": "Versions of the package deno before 1.31.0 are vulnerable to Regular Expression Denial of Service (ReDoS) due to the upgradeWebSocket function, which contains regexes in the form of /s*,s*/, used for splitting the Connection/Upgrade header. A specially crafted Connection/Upgrade header can be used to significantly slow down a web socket server.\n\n", "URL": "https://github.com/denoland/deno/pull/17722", "Tag": "['Patch']", "fix_commit_hash": "cf06a7c7e672880e1b38598fe445e2c50b4a9d06", "inducing_commit_hash_pyszz": ["6268703487da02d66552d1e1a42858aa273def90"]}, {"repo_name": "denoland/deno", "CVE_ID": "CVE-2023-28445", "Problem_Type": "CWE-125", "Description": "Deno is a runtime for JavaScript and TypeScript that uses V8 and is built in Rust. Resizable ArrayBuffers passed to asynchronous functions that are shrunk during the asynchronous operation could result in an out-of-bound read/write. It is unlikely that this has been exploited in the wild, as the only version affected is Deno 1.32.0. Deno Deploy users are not affected. The problem has been resolved by disabling resizable ArrayBuffers temporarily in Deno 1.32.1. Deno 1.32.2 will re-enable resizable ArrayBuffers with a proper fix. As a workaround, run with `--v8-flags=--no-harmony-rab-gsab` to disable resizable ArrayBuffers.", "URL": "https://github.com/denoland/deno/pull/18395", "Tag": "['Patch', 'Vendor Advisory']", "fix_commit_hash": "09ddb35265f67a89383a8bd614224adb455d1e0c", "inducing_commit_hash_pyszz": []}]