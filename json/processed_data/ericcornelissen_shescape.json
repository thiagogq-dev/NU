[{"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2022-24725", "Problem_Type": "CWE-78", "Description": "Shescape is a shell escape package for JavaScript. An issue in versions 1.4.0 to 1.5.1 allows for exposure of the home directory on Unix systems when using Bash with the `escape` or `escapeAll` functions from the _shescape_ API with the `interpolation` option set to `true`. Other tested shells, Dash and Zsh, are not affected. Depending on how the output of _shescape_ is used, directory traversal may be possible in the application using _shescape_. The issue was patched in version 1.5.1. As a workaround, manually escape all instances of the tilde character (`~`) using `arg.replace(/~/g, \"\\\\~\")`.", "URL": "https://github.com/ericcornelissen/shescape/pull/170", "Tag": "['Patch', 'Third Party Advisory']", "fix_commit_hash": "413810c786687f73824313a45d4fe287e4957d3f", "inducing_commit_hash_pyszz": ["e0c928aabe97822bddb3da3624ab09e272c46488"]}, {"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2022-31179", "Problem_Type": "CWE-74", "Description": "Shescape is a simple shell escape package for JavaScript. Versions prior to 1.5.8 were found to be subject to code injection on windows. This impacts users that use Shescape (any API function) to escape arguments for cmd.exe on Windows An attacker can omit all arguments following their input by including a line feed character (`'\\n'`) in the payload. This bug has been patched in [v1.5.8] which you can upgrade to now. No further changes are required. Alternatively, line feed characters (`'\\n'`) can be stripped out manually or the user input can be made the last argument (this only limits the impact).", "URL": "https://github.com/ericcornelissen/shescape/pull/332", "Tag": "['Patch', 'Third Party Advisory']", "fix_commit_hash": "aceea7358f7222984e21260381ebc5ec4543b76f", "inducing_commit_hash_pyszz": ["10e1d0f64f38f97dac07d9a5ef1bd394393ed4b8"]}, {"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2022-31180", "Problem_Type": "NVD-CWE-Other", "Description": "Shescape is a simple shell escape package for JavaScript. Affected versions were found to have insufficient escaping of white space when interpolating output. This issue only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. The result is that if an attacker is able to include whitespace in their input they can: 1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace. 2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. 3. Invoke arbitrary commands by inserting a line feed character. 4. Invoke arbitrary commands by inserting a carriage return character. Behaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required. Behaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required. The best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations. Alternatively, users may strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.", "URL": "https://github.com/ericcornelissen/shescape/pull/322", "Tag": "['Patch', 'Third Party Advisory']", "fix_commit_hash": "021c350500d8947b7ccc31eb78c78602f786c36b", "inducing_commit_hash_pyszz": ["ccbb6c9dea5ea706fff7dac765f9004924399145"]}, {"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2022-31180", "Problem_Type": "NVD-CWE-Other", "Description": "Shescape is a simple shell escape package for JavaScript. Affected versions were found to have insufficient escaping of white space when interpolating output. This issue only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. The result is that if an attacker is able to include whitespace in their input they can: 1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace. 2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. 3. Invoke arbitrary commands by inserting a line feed character. 4. Invoke arbitrary commands by inserting a carriage return character. Behaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required. Behaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required. The best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations. Alternatively, users may strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.", "URL": "https://github.com/ericcornelissen/shescape/pull/324", "Tag": "['Patch', 'Third Party Advisory']", "fix_commit_hash": "994af9269c0b7ad07908b93566462a8889cd4ca6", "inducing_commit_hash_pyszz": ["3f81f7f406748582660deaf0edde77d240f44ce2"]}, {"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2022-36064", "Problem_Type": "CWE-1333", "Description": "Shescape is a shell escape package for JavaScript. An Inefficient Regular Expression Complexity vulnerability impacts users that use Shescape to escape arguments for the Unix shells `Bash` and `Dash`, or any not-officially-supported Unix shell; and/or using the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. An attacker can cause polynomial backtracking or quadratic runtime in terms of the input string length due to two Regular Expressions in Shescape that are vulnerable to Regular Expression Denial of Service (ReDoS). This bug has been patched in v1.5.10. For `Dash` only, this bug has been patched since v1.5.9. As a workaround, a maximum length can be enforced on input strings to Shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself.", "URL": "https://github.com/ericcornelissen/shescape/pull/373", "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']", "fix_commit_hash": "efc60194f4b9e34f148f757ed70c040122f38960", "inducing_commit_hash_pyszz": ["cf0a910e82bff1afec300416c756f3ddb8c7efa3"]}, {"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2023-35931", "Problem_Type": "CWE-526", "Description": "Shescape is a simple shell escape library for JavaScript. An attacker may be able to get read-only access to environment variables. This bug has been patched in version 1.7.1.\n\n\n", "URL": "https://github.com/ericcornelissen/shescape/pull/982", "Tag": "['Patch']", "fix_commit_hash": "d0fce70f987ac0d8331f93cb45d47e79436173ac", "inducing_commit_hash_pyszz": ["a0fe8af4dd5632d019bf56e4fd8936c3a6e0efb4"]}, {"repo_name": "ericcornelissen/shescape", "CVE_ID": "CVE-2023-40185", "Problem_Type": "CWE-150", "Description": "shescape is simple shell escape library for JavaScript. This may impact users that use Shescape on Windows in a threaded context. The vulnerability can result in Shescape escaping (or quoting) for the wrong shell, thus allowing attackers to bypass protections depending on the combination of expected and used shell. This bug has been patched in version 1.7.4.", "URL": "https://github.com/ericcornelissen/shescape/pull/1142", "Tag": "['Patch']", "fix_commit_hash": "0b976dab645abf45ffd85e74a8c6e51ee2f42d63", "inducing_commit_hash_pyszz": ["df9bfdeb1b7ee557ae98bf377ffd9e09b87fc2f2"]}]