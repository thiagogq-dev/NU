[
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2021-39193",
        "Problem_Type": "CWE-1284",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.",
        "URL": "https://github.com/paritytech/frontier/pull/465/commits/8a2b890a2fb477d5fedd0e4335b00623832849ae",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2021-39193",
        "Problem_Type": "CWE-1284",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.",
        "URL": "https://github.com/paritytech/frontier/pull/465",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2021-41138",
        "Problem_Type": "CWE-20",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. In the newly introduced signed Frontier-specific extrinsic for `pallet-ethereum`, a large part of transaction validation logic was only called in transaction pool validation, but not in block execution. Malicious validators can take advantage of this to put invalid transactions into a block. The attack is limited in that the signature is always validated, and the majority of the validation is done again in the subsequent `pallet-evm` execution logic. However, do note that a chain ID replay attack was possible. In addition, spamming attacks are of main concerns, while they are limited by Substrate block size limits and other factors. The issue is patched in commit `146bb48849e5393004be5c88beefe76fdf009aba`.",
        "URL": "https://github.com/paritytech/frontier/pull/497",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "334409cff422258d0c35d1ee50d0d78c2a627ae6",
        "inducing_commit_hash_pyszz": [
            "146bb48849e5393004be5c88beefe76fdf009aba"
        ],
        "inducing_commit_hash_pd": [
            "5164d393e3bd8b5e9cfc95311c01cd415957e923",
            "d37ded92b44aed14e8111de3078b87e24fd4eb96",
            "a6e2e3ff4945720f5d6b0a8637e3644f0c322df7",
            "0a8e696fdfb9ce73a7f99941a2f2ec22eefd4f38",
            "05a5b8bba116e65d9f188edf37451f3cb9d7bdaa",
            "146bb48849e5393004be5c88beefe76fdf009aba",
            "42de7729389beac65879147959396e90eb68c12e"
        ],
        "matched": [
            "146bb48849e5393004be5c88beefe76fdf009aba"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-21685",
        "Problem_Type": "CWE-191",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number `8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664`, a bug in Frontier's MODEXP precompile implementation can cause an integer underflow in certain conditions. This will cause a node crash for debug builds. For release builds (and production WebAssembly binaries), the impact is limited as it can only cause a normal EVM out-of-gas. Users who do not use MODEXP precompile in their runtime are not impacted. A patch is available in pull request #549.",
        "URL": "https://github.com/paritytech/frontier/pull/549",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664",
        "inducing_commit_hash_pyszz": [
            "63781eab342ac573a63ad03e2a5b4a068e9b1ec5"
        ],
        "inducing_commit_hash_pd": [
            "bcae5695242cc346aa26814b1160fe7e041854b3",
            "d37ded92b44aed14e8111de3078b87e24fd4eb96"
        ],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-31111",
        "Problem_Type": "CWE-670",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. In affected versions the truncation done when converting between EVM balance type and Substrate balance type was incorrectly implemented. This leads to possible discrepancy between appeared EVM transfer value and actual Substrate value transferred. It is recommended that an emergency upgrade to be planned and EVM execution temporarily paused in the mean time. The issue is patched in Frontier master branch commit fed5e0a9577c10bea021721e8c2c5c378e16bf66 and polkadot-v0.9.22 branch commit e3e427fa2e5d1200a784679f8015d4774cedc934. This vulnerability affects only EVM internal states, but not Substrate balance states or node. You can temporarily pause EVM execution (by setting up a Substrate `CallFilter` that disables `pallet-evm` and `pallet-ethereum` calls before the patch can be applied.",
        "URL": "https://github.com/paritytech/frontier/pull/753",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fed5e0a9577c10bea021721e8c2c5c378e16bf66",
        "inducing_commit_hash_pyszz": [
            "c2b56a8f3097826c85f23a16b744cec99335530d"
        ],
        "inducing_commit_hash_pd": [
            "88cf884d1e2b550ff1f2af3f0c0cf1a4e07bc0d5",
            "daf082f474c5a3caebd402b6b8c20f1427808402",
            "d37ded92b44aed14e8111de3078b87e24fd4eb96",
            "1490c01a31d80d4b71a50d2e358522adc9e0a23b",
            "c2b56a8f3097826c85f23a16b744cec99335530d",
            "4ad1dabd02b0998f7ad03da96575da994ce3b50b",
            "bdbabac2e30c1bd3ce0da2d2c53f1e9cc91018e7",
            "05a5b8bba116e65d9f188edf37451f3cb9d7bdaa",
            "96f2b50f7846d717a90381a40d095c41f5655563",
            "e4bf5ef3367bbc09ee0a6c9dd55535a769842439",
            "61c830012938b8e56f37e83641040375ed41f836",
            "42de7729389beac65879147959396e90eb68c12e"
        ],
        "matched": [
            "c2b56a8f3097826c85f23a16b744cec99335530d"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-36008",
        "Problem_Type": "CWE-190",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. A security issue was discovered affecting parsing of the RPC result of the exit reason in case of EVM reversion. In release build, this would cause the exit reason being incorrectly parsed and returned by RPC. In debug build, this would cause an overflow panic. No action is needed unless you have a bridge node that needs to distinguish different reversion exit reasons and you used RPC for this. There are currently no known workarounds.",
        "URL": "https://github.com/paritytech/frontier/pull/820",
        "Tag": "['Issue Tracking', 'Patch', 'Third Party Advisory']",
        "fix_commit_hash": "fff8cc43b7756ce3979a38fc473f38e6e24ac451",
        "inducing_commit_hash_pyszz": [
            "bfa4c7b2c39ec31fb35390565eb1c9f18f639343"
        ],
        "inducing_commit_hash_pd": [
            "24062a191603bd8491d86aac03ef97d7e02251c3"
        ],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2022-39242",
        "Problem_Type": "CWE-682",
        "Description": "Frontier is an Ethereum compatibility layer for Substrate. Prior to commit d3beddc6911a559a3ecc9b3f08e153dbe37a8658, the worst case weight was always accounted as the block weight for all cases. In case of large EVM gas refunds, this can lead to block spamming attacks -- the adversary can construct blocks with transactions that have large amount of refunds or unused gases with reverts, and as a result inflate up the chain gas prices. The impact of this issue is limited in that the spamming attack would still be costly for any adversary, and it has no ability to alter any chain state. This issue has been patched in commit d3beddc6911a559a3ecc9b3f08e153dbe37a8658. There are no known workarounds.",
        "URL": "https://github.com/paritytech/frontier/pull/851",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "d3beddc6911a559a3ecc9b3f08e153dbe37a8658",
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [
            "88cf884d1e2b550ff1f2af3f0c0cf1a4e07bc0d5"
        ],
        "matched": []
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2023-28431",
        "Problem_Type": "CWE-682",
        "Description": "Frontier is an Ethereum compatibility layer for Substrate. Frontier's `modexp` precompile uses `num-bigint` crate under the hood. In the implementation prior to pull request 1017, the cases for modulus being even and modulus being odd are treated separately. Odd modulus uses the fast Montgomery multiplication, and even modulus uses the slow plain power algorithm. This gas cost discrepancy was not accounted for in the `modexp` precompile, leading to possible denial of service attacks.\n\nNo fixes for `num-bigint` are currently available, and thus this issue is fixed in the short term by raising the gas costs for even modulus, and in the long term fixing it in `num-bigint` or switching to another modexp implementation. The short-term fix for Frontier is deployed at pull request 1017. There are no known workarounds aside from applying the fix.",
        "URL": "https://github.com/paritytech/frontier/pull/1017",
        "Tag": "['Patch']",
        "fix_commit_hash": "5af12e94d7dfc8a0208a290643a800f55de7b219",
        "inducing_commit_hash_pyszz": [
            "76ad4c8fe970e15fafcdd931fa00d8af237ec513"
        ],
        "inducing_commit_hash_pd": [
            "1ef659002e96ca63a9383d5b5c7aaa77cce4c9b2",
            "76ad4c8fe970e15fafcdd931fa00d8af237ec513",
            "dec050340508bc052a23806acae564b9a71384d0"
        ],
        "matched": [
            "76ad4c8fe970e15fafcdd931fa00d8af237ec513"
        ]
    },
    {
        "repo_name": "paritytech/frontier",
        "CVE_ID": "CVE-2023-45130",
        "Problem_Type": "CWE-770",
        "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit aea528198b3b226e0d20cce878551fd4c0e3d5d0, at the end of a contract execution, when opcode SUICIDE marks a contract to be deleted, the software uses `storage::remove_prefix` (now renamed to `storage::clear_prefix`) to remove all storages associated with it. This is a single IO primitive call passing the WebAssembly boundary. For large contracts, the call (without providing a `limit` parameter) can be slow. In addition, for parachains, all storages to be deleted will be part of the PoV, which easily exceed relay chain PoV size limit. On the other hand, Frontier's maintainers only charge a fixed cost for opcode SUICIDE. The maintainers consider the severity of this issue high, because an attacker can craft a contract with a lot of storage values on a parachain, and then call opcode SUICIDE on the contract. If the transaction makes into a parachain block, the parachain will then stall because the PoV size will exceed relay chain's limit. This is especially an issue for XCM transactions, because they can't be skipped. Commit aea528198b3b226e0d20cce878551fd4c0e3d5d0 contains a patch for this issue. For parachains, it's recommended to issue an emergency runtime upgrade as soon as possible. For standalone chains, the impact is less severe because the issue mainly affects PoV sizes. It's recommended to issue a normal runtime upgrade as soon as possible. There are no known workarounds.",
        "URL": "https://github.com/paritytech/frontier/pull/1212",
        "Tag": "['Patch', 'Vendor Advisory']",
        "fix_commit_hash": "aea528198b3b226e0d20cce878551fd4c0e3d5d0",
        "inducing_commit_hash_pyszz": [
            "cb041f1eb4f4acb7f9539d13d0b3e30a78b185a5"
        ],
        "inducing_commit_hash_pd": [
            "aa5e518923e9cfd1348cfb767a6b10b1acf8ecc1",
            "feec7ee566fc7ee3555df5b98e16f55138081b23"
        ],
        "matched": []
    }
]