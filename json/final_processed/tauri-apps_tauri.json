[
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2022-39215",
        "Problem_Type": "CWE-59",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. Due to missing canonicalization when `readDir` is called recursively, it was possible to display directory listings outside of the defined `fs` scope. This required a crafted symbolic link or junction folder inside an allowed path of the `fs` scope. No arbitrary file content could be leaked. The issue has been resolved in version 1.0.6 and the implementation now properly checks if the requested (sub) directory is a symbolic link outside of the defined `scope`. Users are advised to upgrade. Users unable to upgrade should disable the `readDir` endpoint in the `allowlist` inside the `tauri.conf.json`.",
        "URL": "https://github.com/tauri-apps/tauri/pull/5123",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4121c128e69b06c3eb5eea14dd2af4720afed49",
        "inducing_commit_hash_pyszz": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ],
        "inducing_commit_hash_pd": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1",
            "d6918efdaf386e0b1075d80430da8e807b10541f",
            "35468f68e58cfc54dbf9cdb908517fd36d7eec14",
            "dd1bffe91eec992c95616aa0321822c7c805128b",
            "060538331c138473159cf8fee0fcb7904ca33d3b"
        ],
        "matched": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2022-39215",
        "Problem_Type": "CWE-59",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. Due to missing canonicalization when `readDir` is called recursively, it was possible to display directory listings outside of the defined `fs` scope. This required a crafted symbolic link or junction folder inside an allowed path of the `fs` scope. No arbitrary file content could be leaked. The issue has been resolved in version 1.0.6 and the implementation now properly checks if the requested (sub) directory is a symbolic link outside of the defined `scope`. Users are advised to upgrade. Users unable to upgrade should disable the `readDir` endpoint in the `allowlist` inside the `tauri.conf.json`.",
        "URL": "https://github.com/tauri-apps/tauri/pull/5123/commits/1f9b9e8d26a2c915390323e161020bcb36d44678",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "f4121c128e69b06c3eb5eea14dd2af4720afed49",
        "inducing_commit_hash_pyszz": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ],
        "inducing_commit_hash_pd": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1",
            "d6918efdaf386e0b1075d80430da8e807b10541f",
            "35468f68e58cfc54dbf9cdb908517fd36d7eec14",
            "dd1bffe91eec992c95616aa0321822c7c805128b",
            "060538331c138473159cf8fee0fcb7904ca33d3b"
        ],
        "matched": [
            "34a402f9b559af377b276d73b800e5e8b7dacbb1"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2023-34460",
        "Problem_Type": "CWE-285",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. The 1.4.0 release includes a regression on the Filesystem scope check for dotfiles on Unix. Previously dotfiles were not implicitly allowed by the glob wildcard scopes (eg. `$HOME/*`), but a regression was introduced when a configuration option for this behavior was implemented. Only Tauri applications using wildcard scopes in the `fs` endpoint are affected. The regression has been patched on version 1.4.1.\n\n",
        "URL": "https://github.com/tauri-apps/tauri/pull/6969#discussion_r1232018347",
        "Tag": "['Issue Tracking', 'Patch']",
        "fix_commit_hash": "acc36fe1176cc8aa9063bde932abeb94796c5c72",
        "inducing_commit_hash_pyszz": [
            "72389b00d7b495ffd7750eb1e75a3b8537d07cf3"
        ],
        "inducing_commit_hash_pd": [
            "4de285c3967d32250d73acdd5d171a6fd332d2b3",
            "ae83d008f9e1b89bfc8dddaca42aa5c1fbc36f6d",
            "72389b00d7b495ffd7750eb1e75a3b8537d07cf3",
            "983ccb815b1cb094ac681c2b36c69ec16f123b4e",
            "f8a3becb287942db7f7b551b5db6aeb5a2e939ee",
            "2ca762d207030a892a6d128b519e150e2d733468",
            "8b807e09d6868f6bff8357f16d27b15bd1fccadd"
        ],
        "matched": [
            "72389b00d7b495ffd7750eb1e75a3b8537d07cf3"
        ]
    },
    {
        "repo_name": "tauri-apps/tauri",
        "CVE_ID": "CVE-2023-34460",
        "Problem_Type": "CWE-285",
        "Description": "Tauri is a framework for building binaries for all major desktop platforms. The 1.4.0 release includes a regression on the Filesystem scope check for dotfiles on Unix. Previously dotfiles were not implicitly allowed by the glob wildcard scopes (eg. `$HOME/*`), but a regression was introduced when a configuration option for this behavior was implemented. Only Tauri applications using wildcard scopes in the `fs` endpoint are affected. The regression has been patched on version 1.4.1.\n\n",
        "URL": "https://github.com/tauri-apps/tauri/pull/7227",
        "Tag": "['Patch']",
        "fix_commit_hash": "066c09a6ea06f42f550d090715e06beb65cd5564",
        "inducing_commit_hash_pyszz": [
            "acc36fe1176cc8aa9063bde932abeb94796c5c72"
        ],
        "inducing_commit_hash_pd": [
            "acc36fe1176cc8aa9063bde932abeb94796c5c72"
        ],
        "matched": [
            "acc36fe1176cc8aa9063bde932abeb94796c5c72"
        ]
    }
]