[
    {
        "repo_name": "flyteorg/flyteadmin",
        "CVE_ID": "CVE-2022-31145",
        "Problem_Type": "CWE-613",
        "Description": "FlyteAdmin is the control plane for Flyte responsible for managing entities and administering workflow executions. In versions 1.1.30 and prior, authenticated users using an external identity provider can continue to use Access Tokens and ID Tokens even after they expire. Users who use FlyteAdmin as the OAuth2 Authorization Server are unaffected by this issue. A patch is available on the `master` branch of the repository. As a workaround, rotating signing keys immediately will invalidate all open sessions and force all users to attempt to obtain new tokens. Those who use this workaround should continue to rotate keys until FlyteAdmin has been upgraded and hide FlyteAdmin deployment ingress URL from the internet.",
        "URL": "https://github.com/flyteorg/flyteadmin/pull/455",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": null,
        "inducing_commit_hash_pyszz": [],
        "inducing_commit_hash_pd": [],
        "matched": []
    },
    {
        "repo_name": "flyteorg/flyteadmin",
        "CVE_ID": "CVE-2022-39273",
        "Problem_Type": "CWE-798",
        "Description": "FlyteAdmin is the control plane for the data processing platform Flyte. Users who enable the default Flyte\u00c2\u2019s authorization server without changing the default clientid hashes will be exposed to the public internet. In an effort to make enabling authentication easier for Flyte administrators, the default configuration for Flyte Admin allows access for Flyte Propeller even after turning on authentication via a hardcoded hashed password. This password is also set on the default Flyte Propeller configmap in the various Flyte Helm charts. Users who enable auth but do not override this setting in Flyte Admin\u00c2\u2019s configuration may unbeknownst to them be allowing public traffic in by way of this default password with attackers effectively impersonating propeller. This only applies to users who have not specified the ExternalAuthorizationServer setting. Usage of an external auth server automatically turns off this default configuration and are not susceptible to this vulnerability. This issue has been addressed in version 1.1.44. Users should manually set the staticClients in the selfAuthServer section of their configuration if they intend to rely on Admin\u00c2\u2019s internal auth server. Again, users who use an external auth server are automatically protected from this vulnerability.",
        "URL": "https://github.com/flyteorg/flyteadmin/pull/478",
        "Tag": "['Patch', 'Third Party Advisory']",
        "fix_commit_hash": "281172edf55fe6800959238fc128964ead6d9101",
        "inducing_commit_hash_pyszz": [
            "2126d786f4649b67317558dee0ec6df7a932f596"
        ],
        "inducing_commit_hash_pd": [
            "d1c61c34f62d8ee51964f47877802d070dfa9e98",
            "611a85f0db7325457c714c0dcd689bf2c5d818e5"
        ],
        "matched": []
    }
]